What is the nationality of Aaron Burr?=Answer will be COUNTRY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp))
What was the nationality of Aaron Burr?=Answer will be COUNTRY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp))
Which country is the nationality of Aaron Burr?=Answer will be COUNTRY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp))
Which country was the nationality of Aaron Burr?=Answer will be COUNTRY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp))
What is the seating capacity of Da Vinci (restaurant)?=Answer will be NUMBER and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?objOfProp))
What was the seating capacity of Da Vinci (restaurant)?=Answer will be NUMBER and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?objOfProp))
What is the largest city of Tennessee?=Answer will be CITY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp))
What was the largest city of Tennessee?=Answer will be CITY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp))
Which city is the largest city of Tennessee?=Answer will be CITY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp))
Which city was the largest city of Tennessee?=Answer will be CITY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp))
What is the birth year of Adalbert of Magdeburg?=Answer will be YEAR and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp))
What was the birth year of Adalbert of Magdeburg?=Answer will be YEAR and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp))
Which person is the host of 60 Minutes?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))
Which person was the host of 60 Minutes?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))
Who is the host of 60 Minutes?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))
Who was the host of 60 Minutes?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))
Which agent is the developer of 386BSD?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))
Which agent was the developer of 386BSD?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))
Which agents are the developers of 386BSD?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))
Which agents were the developers of 386BSD?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))
Who are the developers of 386BSD?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))
Who is the developer of 386BSD?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))
Who was the developer of 386BSD?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))
Who were the developers of 386BSD?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))
Which person is the member of Alice in Chains?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))
Which person was the member of Alice in Chains?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))
Which persons are the members of Alice in Chains?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))
Which persons were the members of Alice in Chains?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))
Who are the members of Alice in Chains?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))
Who is the member of Alice in Chains?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))
Who was the member of Alice in Chains?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))
Who were the members of Alice in Chains?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))
Which person is the architect of Blackfriars Bridge?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))
Which person was the architect of Blackfriars Bridge?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))
Who is the architect of Blackfriars Bridge?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))
Who was the architect of Blackfriars Bridge?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))
What are the currencies of Abbasid Caliphate?=Answer will be CURRENCY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))
What is the currency of Abbasid Caliphate?=Answer will be CURRENCY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))
What was the currency of Abbasid Caliphate?=Answer will be CURRENCY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))
What were the currencies of Abbasid Caliphate?=Answer will be CURRENCY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))
Which currencies are the currencies of Abbasid Caliphate?=Answer will be CURRENCY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))
Which currencies were the currencies of Abbasid Caliphate?=Answer will be CURRENCY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))
Which currency is the currency of Abbasid Caliphate?=Answer will be CURRENCY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))
Which currency was the currency of Abbasid Caliphate?=Answer will be CURRENCY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))
What is the largest city in Tennessee?=Answer will be CITY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp))
What was the largest city in Tennessee?=Answer will be CITY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp))
Which city is the largest city in Tennessee?=Answer will be CITY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp))
Which city was the largest city in Tennessee?=Answer will be CITY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp))
What are the episodes of Anne of Green Gables?=Answer will be TELEVISIONEPISODE and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))
What is the episode of Anne of Green Gables?=Answer will be TELEVISIONEPISODE and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))
What was the episode of Anne of Green Gables?=Answer will be TELEVISIONEPISODE and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))
What were the episodes of Anne of Green Gables?=Answer will be TELEVISIONEPISODE and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))
Which television episode is the episode of Anne of Green Gables?=Answer will be TELEVISIONEPISODE and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))
Which television episode was the episode of Anne of Green Gables?=Answer will be TELEVISIONEPISODE and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))
Which television episodes are the episodes of Anne of Green Gables?=Answer will be TELEVISIONEPISODE and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))
Which television episodes were the episodes of Anne of Green Gables?=Answer will be TELEVISIONEPISODE and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))
What is the death date of Adrian and Natalia of Nicomedia?=Answer will be DATE and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp))
What was the death date of Adrian and Natalia of Nicomedia?=Answer will be DATE and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp))
Which person is the founder of Baen Books?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/founder> ?objOfProp))
Which person was the founder of Baen Books?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/founder> ?objOfProp))
Which persons are the founders of Baen Books?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/founder> ?objOfProp))
Which persons were the founders of Baen Books?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/founder> ?objOfProp))
Who are the founders of Baen Books?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/founder> ?objOfProp))
Who is the founder of Baen Books?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/founder> ?objOfProp))
Who was the founder of Baen Books?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/founder> ?objOfProp))
Who were the founders of Baen Books?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/founder> ?objOfProp))
What is the founding year of 3Com?=Answer will be YEAR and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?objOfProp))
What was the founding year of 3Com?=Answer will be YEAR and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?objOfProp))
What is the resting place of Alessandro Manzoni?=Answer will be LOCATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp))
What was the resting place of Alessandro Manzoni?=Answer will be LOCATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp))
Which place is the resting place of Alessandro Manzoni?=Answer will be LOCATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp))
Which place was the resting place of Alessandro Manzoni?=Answer will be LOCATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp))
Which person is the parent of Albrecht III Achilles, Elector of Brandenburg?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))
Which person was the parent of Albrecht III Achilles, Elector of Brandenburg?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))
Which persons are the parents of Albrecht III Achilles, Elector of Brandenburg?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))
Which persons were the parents of Albrecht III Achilles, Elector of Brandenburg?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))
Who are the parents of Albrecht III Achilles, Elector of Brandenburg?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))
Who is the parent of Albrecht III Achilles, Elector of Brandenburg?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))
Who was the parent of Albrecht III Achilles, Elector of Brandenburg?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))
Who were the parents of Albrecht III Achilles, Elector of Brandenburg?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))
Which person is the successor of 32X?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))
Which person was the successor of 32X?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))
Which persons are the successors of 32X?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))
Which persons were the successors of 32X?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))
Who are the successors of 32X?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))
Who is the successor of 32X?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))
Who was the successor of 32X?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))
Who were the successors of 32X?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))
Which person is the editor of 2600: The Hacker Quarterly?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))
Which person was the editor of 2600: The Hacker Quarterly?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))
Which persons are the editors of 2600: The Hacker Quarterly?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))
Which persons were the editors of 2600: The Hacker Quarterly?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))
Who are the editors of 2600: The Hacker Quarterly?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))
Who is the editor of 2600: The Hacker Quarterly?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))
Who was the editor of 2600: The Hacker Quarterly?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))
Who were the editors of 2600: The Hacker Quarterly?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))
Which person is the child of Aaron Burr?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))
Which person was the child of Aaron Burr?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))
Which persons are the children of Aaron Burr?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))
Which persons were the children of Aaron Burr?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))
Who are the children of Aaron Burr?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))
Who is the child of Aaron Burr?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))
Who was the child of Aaron Burr?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))
Who were the children of Aaron Burr?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))
What is the residence of Abraham de Moivre?=Answer will be LOCATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))
What was the residence of Abraham de Moivre?=Answer will be LOCATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))
Which place is the residence of Abraham de Moivre?=Answer will be LOCATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))
Which place was the residence of Abraham de Moivre?=Answer will be LOCATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))
Which person is the vice president of Carlos Menem?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))
Which person was the vice president of Carlos Menem?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))
Who is the vice president of Carlos Menem?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))
Who was the vice president of Carlos Menem?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))
What are the headquarters of Academy of Motion Picture Arts and Sciences?=Answer will be LOCATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp))
What is the headquarter of Academy of Motion Picture Arts and Sciences?=Answer will be LOCATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp))
What was the headquarter of Academy of Motion Picture Arts and Sciences?=Answer will be LOCATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp))
What were the headquarters of Academy of Motion Picture Arts and Sciences?=Answer will be LOCATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp))
Which populated place is the headquarter of Academy of Motion Picture Arts and Sciences?=Answer will be LOCATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp))
Which populated place was the headquarter of Academy of Motion Picture Arts and Sciences?=Answer will be LOCATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp))
Which populated places are the headquarters of Academy of Motion Picture Arts and Sciences?=Answer will be LOCATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp))
Which populated places were the headquarters of Academy of Motion Picture Arts and Sciences?=Answer will be LOCATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp))
What is the death place of Averroes?=Answer will be LOCATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))
What was the death place of Averroes?=Answer will be LOCATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))
Which place is the death place of Averroes?=Answer will be LOCATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))
Which place was the death place of Averroes?=Answer will be LOCATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))
What are the costs of 12 Monkeys?=Answer will be NUMBER and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp))
What is the cost of 12 Monkeys?=Answer will be NUMBER and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp))
What was the cost of 12 Monkeys?=Answer will be NUMBER and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp))
What were the costs of 12 Monkeys?=Answer will be NUMBER and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp))
What is the home stadium of Feyenoord?=Answer will be BUILDING and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ground> ?objOfProp))
What was the home stadium of Feyenoord?=Answer will be BUILDING and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ground> ?objOfProp))
Which building is the home stadium of Feyenoord?=Answer will be BUILDING and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ground> ?objOfProp))
Which building was the home stadium of Feyenoord?=Answer will be BUILDING and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ground> ?objOfProp))
What is the party of Aaron Burr?=Answer will be POLITICALPARTY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))
What was the party of Aaron Burr?=Answer will be POLITICALPARTY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))
Which political party is the party of Aaron Burr?=Answer will be POLITICALPARTY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))
Which political party was the party of Aaron Burr?=Answer will be POLITICALPARTY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))
What is the total area of Arab League?=Answer will be THING and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp))
What was the total area of Arab League?=Answer will be THING and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp))
Which person is the author of 1066 and All That?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))
Which person was the author of 1066 and All That?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))
Who is the author of 1066 and All That?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))
Who was the author of 1066 and All That?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))
What is the alter ego of Daredevil (Marvel Comics character)?=Answer will be THING and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/property/alterEgo> ?objOfProp))
What was the alter ego of Daredevil (Marvel Comics character)?=Answer will be THING and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/property/alterEgo> ?objOfProp))
What is the wine production of Dessert wine?=Answer will be WINEREGION and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?objOfProp))
What was the wine production of Dessert wine?=Answer will be WINEREGION and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?objOfProp))
Which wine region is the wine production of Dessert wine?=Answer will be WINEREGION and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?objOfProp))
Which wine region was the wine production of Dessert wine?=Answer will be WINEREGION and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?objOfProp))
Which person is the leader of Arab League?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leader> ?objOfProp))
Which person was the leader of Arab League?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leader> ?objOfProp))
Who is the leader of Arab League?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leader> ?objOfProp))
Who was the leader of Arab League?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leader> ?objOfProp))
What is the official language of Arab League?=Answer will be LANGUAGE and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))
What was the official language of Arab League?=Answer will be LANGUAGE and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))
Which language is the official language of Arab League?=Answer will be LANGUAGE and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))
Which language was the official language of Arab League?=Answer will be LANGUAGE and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))
What is the artistic movement of Abbie Hoffman?=Answer will be THING and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/movement> ?objOfProp))
What was the artistic movement of Abbie Hoffman?=Answer will be THING and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/movement> ?objOfProp))
What is the location of Hall Island (Arctic)?=Answer will be LOCATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))
What was the location of Hall Island (Arctic)?=Answer will be LOCATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))
Which place is the location of Hall Island (Arctic)?=Answer will be LOCATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))
Which place was the location of Hall Island (Arctic)?=Answer will be LOCATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))
Which musical artist is the music composer for 12 Monkeys?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))
Which musical artist was the music composer for 12 Monkeys?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))
Which musical artists are the music composers for 12 Monkeys?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))
Which musical artists were the music composers for 12 Monkeys?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))
Who are the music composers for 12 Monkeys?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))
Who is the music composer for 12 Monkeys?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))
Who was the music composer for 12 Monkeys?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))
Who were the music composers for 12 Monkeys?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))
Which person is the mayor of Saint-Cyprien, Pyrénées-Orientales?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp))
Which person was the mayor of Saint-Cyprien, Pyrénées-Orientales?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp))
Who is the mayor of Saint-Cyprien, Pyrénées-Orientales?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp))
Who was the mayor of Saint-Cyprien, Pyrénées-Orientales?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp))
What is the number of pages of 1066 and All That?=Answer will be NUMBER and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?objOfProp))
What was the number of pages of 1066 and All That?=Answer will be NUMBER and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?objOfProp))
What is the cause of death of Alan Rickman?=Answer will be THING and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp))
What was the cause of death of Alan Rickman?=Answer will be THING and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp))
Which person is the influencer of Abbie Hoffman?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))
Which person was the influencer of Abbie Hoffman?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))
Which persons are the influencers of Abbie Hoffman?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))
Which persons were the influencers of Abbie Hoffman?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))
Who are the influencers of Abbie Hoffman?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))
Who is the influencer of Abbie Hoffman?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))
Who was the influencer of Abbie Hoffman?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))
Who were the influencers of Abbie Hoffman?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))
What are the manufacturers of 32X?=Answer will be ORGANISATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/manufacturer> ?objOfProp))
What is the manufacturer of 32X?=Answer will be ORGANISATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/manufacturer> ?objOfProp))
What was the manufacturer of 32X?=Answer will be ORGANISATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/manufacturer> ?objOfProp))
What were the manufacturers of 32X?=Answer will be ORGANISATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/manufacturer> ?objOfProp))
Which organisation is the manufacturer of 32X?=Answer will be ORGANISATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/manufacturer> ?objOfProp))
Which organisation was the manufacturer of 32X?=Answer will be ORGANISATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/manufacturer> ?objOfProp))
Which organisations are the manufacturers of 32X?=Answer will be ORGANISATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/manufacturer> ?objOfProp))
Which organisations were the manufacturers of 32X?=Answer will be ORGANISATION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/manufacturer> ?objOfProp))
What is the programming language of 51-FORTH?=Answer will be PROGRAMMINGLANGUAGE and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp))
What was the programming language of 51-FORTH?=Answer will be PROGRAMMINGLANGUAGE and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp))
Which programming language is the programming language of 51-FORTH?=Answer will be PROGRAMMINGLANGUAGE and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp))
Which programming language was the programming language of 51-FORTH?=Answer will be PROGRAMMINGLANGUAGE and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp))
What are the producers of Arcade game?=Answer will be ORGANISATION and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))
What is the producer of Arcade game?=Answer will be ORGANISATION and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))
What was the producer of Arcade game?=Answer will be ORGANISATION and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))
What were the producers of Arcade game?=Answer will be ORGANISATION and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))
Which organisation is the producer of Arcade game?=Answer will be ORGANISATION and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))
Which organisation was the producer of Arcade game?=Answer will be ORGANISATION and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))
Which organisations are the producers of Arcade game?=Answer will be ORGANISATION and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))
Which organisations were the producers of Arcade game?=Answer will be ORGANISATION and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))
What is the wine region of Cabernet Sauvignon?=Answer will be WINEREGION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineRegion> ?objOfProp))
What was the wine region of Cabernet Sauvignon?=Answer will be WINEREGION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineRegion> ?objOfProp))
Which wine region is the wine region of Cabernet Sauvignon?=Answer will be WINEREGION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineRegion> ?objOfProp))
Which wine region was the wine region of Cabernet Sauvignon?=Answer will be WINEREGION and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineRegion> ?objOfProp))
What is the foundation place of Ad Lib, Inc.?=Answer will be CITY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?objOfProp))
What was the foundation place of Ad Lib, Inc.?=Answer will be CITY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?objOfProp))
Which city is the foundation place of Ad Lib, Inc.?=Answer will be CITY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?objOfProp))
Which city was the foundation place of Ad Lib, Inc.?=Answer will be CITY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?objOfProp))
What is the completion date of Backyard Blitz?=Answer will be DATE and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?objOfProp))
What was the completion date of Backyard Blitz?=Answer will be DATE and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?objOfProp))
Which agent is the creator of 60 Minutes?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))
Which agent was the creator of 60 Minutes?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))
Which agents are the creators of 60 Minutes?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))
Which agents were the creators of 60 Minutes?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))
Who are the creators of 60 Minutes?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))
Who is the creator of 60 Minutes?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))
Who was the creator of 60 Minutes?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))
Who were the creators of 60 Minutes?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))
What is the form of government of Abbasid Caliphate?=Answer will be GOVERNMENTTYPE and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))
What was the form of government of Abbasid Caliphate?=Answer will be GOVERNMENTTYPE and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))
Which Government Type is the form of government of Abbasid Caliphate?=Answer will be GOVERNMENTTYPE and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))
Which Government Type was the form of government of Abbasid Caliphate?=Answer will be GOVERNMENTTYPE and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))
What are the ingredients of Bangers and mash?=Answer will be THING and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))
What is the ingredient of Bangers and mash?=Answer will be THING and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))
What was the ingredient of Bangers and mash?=Answer will be THING and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))
What were the ingredients of Bangers and mash?=Answer will be THING and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))
What are the nicknames of Agricultural Marketing Act of 1929?=Answer will be THING and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))
What is the nickname of Agricultural Marketing Act of 1929?=Answer will be THING and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))
What was the nickname of Agricultural Marketing Act of 1929?=Answer will be THING and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))
What were the nicknames of Agricultural Marketing Act of 1929?=Answer will be THING and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))
What is the height of AMC Gremlin?=Answer will be NUMBER and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))
What was the height of AMC Gremlin?=Answer will be NUMBER and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))
What is the capital of Abbasid Caliphate?=Answer will be CITY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp))
What was the capital of Abbasid Caliphate?=Answer will be CITY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp))
Which city is the capital of Abbasid Caliphate?=Answer will be CITY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp))
Which city was the capital of Abbasid Caliphate?=Answer will be CITY and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp))
What is the wavelength of Violet (color)?=Answer will be NUMBER and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wavelength> ?objOfProp))
What was the wavelength of Violet (color)?=Answer will be NUMBER and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wavelength> ?objOfProp))
What is the number of locations of 7-Eleven?=Answer will be NUMBER and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfLocations> ?objOfProp))
What was the number of locations of 7-Eleven?=Answer will be NUMBER and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfLocations> ?objOfProp))
What is the population of Unorganized South West Cochrane District?=Answer will be NUMBER and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))
What was the population of Unorganized South West Cochrane District?=Answer will be NUMBER and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))
Which person is the doctoral supervisor of Abraham Robinson?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))
Which person was the doctoral supervisor of Abraham Robinson?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))
Which persons are the doctoral supervisors of Abraham Robinson?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))
Which persons were the doctoral supervisors of Abraham Robinson?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))
Who are the doctoral supervisors of Abraham Robinson?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))
Who is the doctoral supervisor of Abraham Robinson?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))
Who was the doctoral supervisor of Abraham Robinson?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))
Who were the doctoral supervisors of Abraham Robinson?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))
What is the time zone of Katanga Slum?=Answer will be TIMEZONE and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp))
What was the time zone of Katanga Slum?=Answer will be TIMEZONE and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp))
Which is the time zone of Katanga Slum?=Answer will be TIMEZONE and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp))
Which was the time zone of Katanga Slum?=Answer will be TIMEZONE and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp))
What is the elevation of Albula Alps?=Answer will be NUMBER and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/elevation> ?objOfProp))
What was the elevation of Albula Alps?=Answer will be NUMBER and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/elevation> ?objOfProp))
Which person is the wife of Aaron Burr?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))
Which person was the wife of Aaron Burr?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))
Who is the wife of Aaron Burr?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))
Who was the wife of Aaron Burr?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))
What is the dissolution date of Democratic Republic of Afghanistan?=Answer will be DATE and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp))
What was the dissolution date of Democratic Republic of Afghanistan?=Answer will be DATE and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp))
Which agent developed 386BSD?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))
Which agent develops 386BSD?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))
Who developed 386BSD?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))
Who develops 386BSD?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))
What starred Abbie Hoffman?=Answer will be FILM and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))
What stars Abbie Hoffman?=Answer will be FILM and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))
Which movie starred Abbie Hoffman?=Answer will be FILM and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))
Which movie stars Abbie Hoffman?=Answer will be FILM and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))
Which movies starred Abbie Hoffman?=Answer will be FILM and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))
Which agent published 1066 and All That?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))
Which agent publishes 1066 and All That?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))
Who published 1066 and All That?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))
Who publishes 1066 and All That?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))
Which person wins Henri Becquerel?=Answer will be PERSON and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))
Which person won Henri Becquerel?=Answer will be PERSON and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))
Who wins Henri Becquerel?=Answer will be PERSON and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))
Who won Henri Becquerel?=Answer will be PERSON and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))
Which person played Albus Dumbledore?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))
Which person plays Albus Dumbledore?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))
Who played Albus Dumbledore?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))
Who plays Albus Dumbledore?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))
What served Western Europe?=Answer will be AIRLINE and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?objOfProp))
What serves Western Europe?=Answer will be AIRLINE and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?objOfProp))
Which airline served Western Europe?=Answer will be AIRLINE and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?objOfProp))
Which airline serves Western Europe?=Answer will be AIRLINE and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?objOfProp))
Which architect designed Blackfriars Bridge?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))
Which architect designs Blackfriars Bridge?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))
Who designed Blackfriars Bridge?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))
Who designs Blackfriars Bridge?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))
Which person married Andrzej Wajda?=Answer will be PERSON and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))
Who married Andrzej Wajda?=Answer will be PERSON and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))
What crossed Amtrak?=Answer will be BRIDGE and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))
What crosses Amtrak?=Answer will be BRIDGE and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))
Which bridge crossed Amtrak?=Answer will be BRIDGE and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))
Which bridge crosses Amtrak?=Answer will be BRIDGE and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))
Which agent created 60 Minutes?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))
Who created 60 Minutes?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))
Which person discovered 2060 Chiron?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))
Which person discovers 2060 Chiron?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))
Who discovered 2060 Chiron?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))
Who discovers 2060 Chiron?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))
Which person writes 12 Monkeys?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))
Which person wrote 12 Monkeys?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))
Who writes 12 Monkeys?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))
Who wrote 12 Monkeys?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))
Which person painted Andalucia (album)?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/artist> ?objOfProp))
Which person paints Andalucia (album)?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/artist> ?objOfProp))
Who painted Andalucia (album)?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/artist> ?objOfProp))
Who paints Andalucia (album)?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/artist> ?objOfProp))
What operated Amtrak?=Answer will be ORGANISATION and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))
What operates Amtrak?=Answer will be ORGANISATION and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))
Which organisation operated Amtrak?=Answer will be ORGANISATION and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))
Which organisation operates Amtrak?=Answer will be ORGANISATION and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))
What exhibited Abraham Lincoln: The Head of State?=Answer will be MUSEUM and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))
What exhibits Abraham Lincoln: The Head of State?=Answer will be MUSEUM and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))
Which museum exhibited Abraham Lincoln: The Head of State?=Answer will be MUSEUM and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))
Which museum exhibits Abraham Lincoln: The Head of State?=Answer will be MUSEUM and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))
Which person directed 12 Monkeys?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))
Which person directs 12 Monkeys?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))
Who directed 12 Monkeys?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))
Who directs 12 Monkeys?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))
What is won by Adi Shamir?=Answer will be AWARD and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))
What was won by Adi Shamir?=Answer will be AWARD and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))
Which award is won by Adi Shamir?=Answer will be AWARD and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))
Which award was won by Adi Shamir?=Answer will be AWARD and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))
Which awards are won by Adi Shamir?=Answer will be AWARD and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))
Which awards were won by Adi Shamir?=Answer will be AWARD and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))
What is designed by Cass Gilbert?=Answer will be BUILDING and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))
What was designed by Cass Gilbert?=Answer will be BUILDING and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))
Which architectural structure is designed by Cass Gilbert?=Answer will be BUILDING and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))
Which architectural structure was designed by Cass Gilbert?=Answer will be BUILDING and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))
Which architectural structures are designed by Cass Gilbert?=Answer will be BUILDING and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))
Which architectural structures were designed by Cass Gilbert?=Answer will be BUILDING and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))
What is operated by PS Lady Elgin?=Answer will be LAUNCHPAD and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))
What was operated by PS Lady Elgin?=Answer will be LAUNCHPAD and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))
Which launch pad is operated by PS Lady Elgin?=Answer will be LAUNCHPAD and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))
Which launch pad was operated by PS Lady Elgin?=Answer will be LAUNCHPAD and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))
Which launch pads are operated by PS Lady Elgin?=Answer will be LAUNCHPAD and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))
Which launch pads were operated by PS Lady Elgin?=Answer will be LAUNCHPAD and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))
What is crossed by Blackfriars Bridge?=Answer will be RIVER and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))
What was crossed by Blackfriars Bridge?=Answer will be RIVER and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))
Which river is crossed by Blackfriars Bridge?=Answer will be RIVER and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))
Which river was crossed by Blackfriars Bridge?=Answer will be RIVER and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))
Which rivers are crossed by Blackfriars Bridge?=Answer will be RIVER and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))
Which rivers were crossed by Blackfriars Bridge?=Answer will be RIVER and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))
What is written by Arnold Bennett?=Answer will be BOOK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))
What was written by Arnold Bennett?=Answer will be BOOK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))
Which song is written by Arnold Bennett?=Answer will be SONG and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))
Which song was written by Arnold Bennett?=Answer will be SONG and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))
Which songs are written by Arnold Bennett?=Answer will be SONG and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))
Which songs were written by Arnold Bennett?=Answer will be SONG and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))
Which musical is written by Arnold Bennett?=Answer will be MUSICAL and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))
Which musical was written by Arnold Bennett?=Answer will be MUSICAL and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))
Which musicals are written by Arnold Bennett?=Answer will be MUSICAL and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))
Which musicals were written by Arnold Bennett?=Answer will be MUSICAL and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))
Which book is written by Arnold Bennett?=Answer will be BOOK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))
Which book was written by Arnold Bennett?=Answer will be BOOK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))
Which books are written by Arnold Bennett?=Answer will be BOOK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))
Which books were written by Arnold Bennett?=Answer will be BOOK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))
What is discovered by Albert George Wilson?=Answer will be LOCATION and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))
What was discovered by Albert George Wilson?=Answer will be LOCATION and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))
Which place is discovered by Albert George Wilson?=Answer will be LOCATION and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))
Which place was discovered by Albert George Wilson?=Answer will be LOCATION and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))
Which places are discovered by Albert George Wilson?=Answer will be LOCATION and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))
Which places were discovered by Albert George Wilson?=Answer will be LOCATION and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))
What is published by Activision?=Answer will be SOFTWARE and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))
What was published by Activision?=Answer will be SOFTWARE and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))
Which book is published by Activision?=Answer will be BOOK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))
Which book was published by Activision?=Answer will be BOOK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))
Which books are published by Activision?=Answer will be BOOK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))
Which books were published by Activision?=Answer will be BOOK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))
Which video game is published by Activision?=Answer will be SOFTWARE and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))
Which video game was published by Activision?=Answer will be SOFTWARE and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))
Which video games are published by Activision?=Answer will be SOFTWARE and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))
Which video games were published by Activision?=Answer will be SOFTWARE and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))
What is directed by Andrzej Wajda?=Answer will be FILM and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))
What was directed by Andrzej Wajda?=Answer will be FILM and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))
Which movie is directed by Andrzej Wajda?=Answer will be FILM and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))
Which movie was directed by Andrzej Wajda?=Answer will be FILM and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))
Which movies are directed by Andrzej Wajda?=Answer will be FILM and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))
Which movies were directed by Andrzej Wajda?=Answer will be FILM and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))
What is painted by Asia (band)?=Answer will be WORK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/artist> ?objOfProp))
What was painted by Asia (band)?=Answer will be WORK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/artist> ?objOfProp))
Which work is painted by Asia (band)?=Answer will be WORK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/artist> ?objOfProp))
Which work was painted by Asia (band)?=Answer will be WORK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/artist> ?objOfProp))
Which works are painted by Asia (band)?=Answer will be WORK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/artist> ?objOfProp))
Which works were painted by Asia (band)?=Answer will be WORK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/artist> ?objOfProp))
What is developed by Acorn Computers?=Answer will be WORK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))
What was developed by Acorn Computers?=Answer will be WORK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))
Which work is developed by Acorn Computers?=Answer will be WORK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))
Which work was developed by Acorn Computers?=Answer will be WORK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))
Which works are developed by Acorn Computers?=Answer will be WORK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))
Which works were developed by Acorn Computers?=Answer will be WORK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))
What is served by Silver City Airways?=Answer will be AIRPORT and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?objOfProp))
What was served by Silver City Airways?=Answer will be AIRPORT and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?objOfProp))
Which airport is served by Silver City Airways?=Answer will be AIRPORT and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?objOfProp))
Which airport was served by Silver City Airways?=Answer will be AIRPORT and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?objOfProp))
Which airports are served by Silver City Airways?=Answer will be AIRPORT and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?objOfProp))
Which airports were served by Silver City Airways?=Answer will be AIRPORT and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?objOfProp))
Which fictional character is played by Al Pacino?=Answer will be PERSON and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))
Which fictional character was played by Al Pacino?=Answer will be PERSON and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))
Which fictional characters are played by Al Pacino?=Answer will be PERSON and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))
Which fictional characters were played by Al Pacino?=Answer will be PERSON and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))
Who is played by Al Pacino?=Answer will be PERSON and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))
Who was played by Al Pacino?=Answer will be PERSON and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))
Which person is married to Aaron Burr?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))
Which person was married to Aaron Burr?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))
Which persons are married to Aaron Burr?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))
Which persons were married to Aaron Burr?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))
Who is married to Aaron Burr?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))
Who was married to Aaron Burr?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))
What is created by Barry Took?=Answer will be WORK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))
What was created by Barry Took?=Answer will be WORK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))
Which television show is created by Barry Took?=Answer will be TELEVISIONSHOW and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))
Which television show was created by Barry Took?=Answer will be TELEVISIONSHOW and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))
Which television shows are created by Barry Took?=Answer will be TELEVISIONSHOW and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))
Which television shows were created by Barry Took?=Answer will be TELEVISIONSHOW and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))
Which work is created by Barry Took?=Answer will be WORK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))
Which work was created by Barry Took?=Answer will be WORK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))
Which works are created by Barry Took?=Answer will be WORK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))
Which works were created by Barry Took?=Answer will be WORK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))
What is exhibited by Palace of Versailles?=Answer will be WORK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))
What was exhibited by Palace of Versailles?=Answer will be WORK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))
Which artwork is exhibited by Palace of Versailles?=Answer will be WORK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))
Which artwork was exhibited by Palace of Versailles?=Answer will be WORK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))
Which artworks are exhibited by Palace of Versailles?=Answer will be WORK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))
Which artworks were exhibited by Palace of Versailles?=Answer will be WORK and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))
Which actor starred in 12 Monkeys?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))
Which actor stars in 12 Monkeys?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))
Which actors starred in 12 Monkeys?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))
Who starred in 12 Monkeys?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))
Who stars in 12 Monkeys?=Answer will be PERSON and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))
What stands for Academy of Motion Picture Arts and Sciences?=Answer will be THING and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/abbreviation> ?objOfProp))
What flows through Article One of the United States Constitution?=Answer will be RIVER and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))
Which river flows through Article One of the United States Constitution?=Answer will be RIVER and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))
Which rivers flow through Article One of the United States Constitution?=Answer will be RIVER and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))
What flows through Gaza City?=Answer will be RIVER and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> ?objOfProp))
Which river flows through Gaza City?=Answer will be RIVER and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> ?objOfProp))
Which rivers flow through Gaza City?=Answer will be RIVER and can be found by running sparql for subjOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> ?objOfProp))
What grows in South Coast AVA?=Answer will be GRAPE and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/growingGrape> ?objOfProp))
Which grape grows in South Coast AVA?=Answer will be GRAPE and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/growingGrape> ?objOfProp))
Which grapes grow in South Coast AVA?=Answer will be GRAPE and can be found by running sparql for objOfProp (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/growingGrape> ?objOfProp))
