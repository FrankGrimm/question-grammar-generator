{
  "grammarEntries" : [ {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of A. J. Mohammad Ali", "Tell me the father of A. J. Mohammad Ali", "What is the father of A. J. Mohammad Ali?", "What was the father of A. J. Mohammad Ali?", "Which person is the father of A. J. Mohammad Ali?", "Which person was the father of A. J. Mohammad Ali?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._J._Mohammad_Ali> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Lu Ji (Gongji)", "Tell me the father of Lu Ji (Gongji)", "What is the father of Lu Ji (Gongji)?", "What was the father of Lu Ji (Gongji)?", "Which person is the father of Lu Ji (Gongji)?", "Which person was the father of Lu Ji (Gongji)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lu_Ji_(Gongji)> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Lu Jing", "Tell me the father of Lu Jing", "What is the father of Lu Jing?", "What was the father of Lu Jing?", "Which person is the father of Lu Jing?", "Which person was the father of Lu Jing?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lu_Jing> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Lu Kang (Three Kingdoms)", "Tell me the father of Lu Kang (Three Kingdoms)", "What is the father of Lu Kang (Three Kingdoms)?", "What was the father of Lu Kang (Three Kingdoms)?", "Which person is the father of Lu Kang (Three Kingdoms)?", "Which person was the father of Lu Kang (Three Kingdoms)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lu_Kang_(Three_Kingdoms)> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Lubna Khalid Al Qasimi", "Tell me the father of Lubna Khalid Al Qasimi", "What is the father of Lubna Khalid Al Qasimi?", "What was the father of Lubna Khalid Al Qasimi?", "Which person is the father of Lubna Khalid Al Qasimi?", "Which person was the father of Lubna Khalid Al Qasimi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lubna_Khalid_Al_Qasimi> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Luciana Genro", "Tell me the father of Luciana Genro", "What is the father of Luciana Genro?", "What was the father of Luciana Genro?", "Which person is the father of Luciana Genro?", "Which person was the father of Luciana Genro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luciana_Genro> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Lucius Fairchild", "Tell me the father of Lucius Fairchild", "What is the father of Lucius Fairchild?", "What was the father of Lucius Fairchild?", "Which person is the father of Lucius Fairchild?", "Which person was the father of Lucius Fairchild?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucius_Fairchild> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Lucius Quintus Cincinnatus Lamar", "Tell me the father of Lucius Quintus Cincinnatus Lamar", "What is the father of Lucius Quintus Cincinnatus Lamar?", "What was the father of Lucius Quintus Cincinnatus Lamar?", "Which person is the father of Lucius Quintus Cincinnatus Lamar?", "Which person was the father of Lucius Quintus Cincinnatus Lamar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucius_Quintus_Cincinnatus_Lamar> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Ludwig Adamovich Jr.", "Tell me the father of Ludwig Adamovich Jr.", "What is the father of Ludwig Adamovich Jr.?", "What was the father of Ludwig Adamovich Jr.?", "Which person is the father of Ludwig Adamovich Jr.?", "Which person was the father of Ludwig Adamovich Jr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ludwig_Adamovich_Jr.> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Luis A. Eguiguren", "Tell me the father of Luis A. Eguiguren", "What is the father of Luis A. Eguiguren?", "What was the father of Luis A. Eguiguren?", "Which person is the father of Luis A. Eguiguren?", "Which person was the father of Luis A. Eguiguren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luis_A._Eguiguren> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Luis Abinader", "Tell me the father of Luis Abinader", "What is the father of Luis Abinader?", "What was the father of Luis Abinader?", "Which person is the father of Luis Abinader?", "Which person was the father of Luis Abinader?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luis_Abinader> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Lü Ju", "Tell me the father of Lü Ju", "What is the father of Lü Ju?", "What was the father of Lü Ju?", "Which person is the father of Lü Ju?", "Which person was the father of Lü Ju?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lü_Ju> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Ma Chao", "Tell me the father of Ma Chao", "What is the father of Ma Chao?", "What was the father of Ma Chao?", "Which person is the father of Ma Chao?", "Which person was the father of Ma Chao?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ma_Chao> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Maci (politician)", "Tell me the father of Maci (politician)", "What is the father of Maci (politician)?", "What was the father of Maci (politician)?", "Which person is the father of Maci (politician)?", "Which person was the father of Maci (politician)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Maci_(politician)> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Madina Abilqasymova", "Tell me the father of Madina Abilqasymova", "What is the father of Madina Abilqasymova?", "What was the father of Madina Abilqasymova?", "Which person is the father of Madina Abilqasymova?", "Which person was the father of Madina Abilqasymova?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Madina_Abilqasymova> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Maeda Toshiie", "Tell me the father of Maeda Toshiie", "What is the father of Maeda Toshiie?", "What was the father of Maeda Toshiie?", "Which person is the father of Maeda Toshiie?", "Which person was the father of Maeda Toshiie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Maeda_Toshiie> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Maeda Toshinaga", "Tell me the father of Maeda Toshinaga", "What is the father of Maeda Toshinaga?", "What was the father of Maeda Toshinaga?", "Which person is the father of Maeda Toshinaga?", "Which person was the father of Maeda Toshinaga?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Maeda_Toshinaga> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Maeda Toshitsune", "Tell me the father of Maeda Toshitsune", "What is the father of Maeda Toshitsune?", "What was the father of Maeda Toshitsune?", "Which person is the father of Maeda Toshitsune?", "Which person was the father of Maeda Toshitsune?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Maeda_Toshitsune> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Mahendra Bishnoi", "Tell me the father of Mahendra Bishnoi", "What is the father of Mahendra Bishnoi?", "What was the father of Mahendra Bishnoi?", "Which person is the father of Mahendra Bishnoi?", "Which person was the father of Mahendra Bishnoi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mahendra_Bishnoi> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Mahendra Singh Yadav", "Tell me the father of Mahendra Singh Yadav", "What is the father of Mahendra Singh Yadav?", "What was the father of Mahendra Singh Yadav?", "Which person is the father of Mahendra Singh Yadav?", "Which person was the father of Mahendra Singh Yadav?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mahendra_Singh_Yadav> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Mahfuzur Rahaman", "Tell me the father of Mahfuzur Rahaman", "What is the father of Mahfuzur Rahaman?", "What was the father of Mahfuzur Rahaman?", "Which person is the father of Mahfuzur Rahaman?", "Which person was the father of Mahfuzur Rahaman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mahfuzur_Rahaman> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Mahi B. Chowdhury", "Tell me the father of Mahi B. Chowdhury", "What is the father of Mahi B. Chowdhury?", "What was the father of Mahi B. Chowdhury?", "Which person is the father of Mahi B. Chowdhury?", "Which person was the father of Mahi B. Chowdhury?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mahi_B._Chowdhury> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Mahjabeen Khaled", "Tell me the father of Mahjabeen Khaled", "What is the father of Mahjabeen Khaled?", "What was the father of Mahjabeen Khaled?", "Which person is the father of Mahjabeen Khaled?", "Which person was the father of Mahjabeen Khaled?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mahjabeen_Khaled> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Mahmood Madani", "Tell me the father of Mahmood Madani", "What is the father of Mahmood Madani?", "What was the father of Mahmood Madani?", "Which person is the father of Mahmood Madani?", "Which person was the father of Mahmood Madani?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mahmood_Madani> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Maksim Vučinić", "Tell me the father of Maksim Vučinić", "What is the father of Maksim Vučinić?", "What was the father of Maksim Vučinić?", "Which person is the father of Maksim Vučinić?", "Which person was the father of Maksim Vučinić?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Maksim_Vučinić> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Maktoum bin Rashid Al Maktoum", "Tell me the father of Maktoum bin Rashid Al Maktoum", "What is the father of Maktoum bin Rashid Al Maktoum?", "What was the father of Maktoum bin Rashid Al Maktoum?", "Which person is the father of Maktoum bin Rashid Al Maktoum?", "Which person was the father of Maktoum bin Rashid Al Maktoum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Maktoum_bin_Rashid_Al_Maktoum> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Caroline Le Couteur", "Tell me the father of Caroline Le Couteur", "What is the father of Caroline Le Couteur?", "What was the father of Caroline Le Couteur?", "Which person is the father of Caroline Le Couteur?", "Which person was the father of Caroline Le Couteur?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Caroline_Le_Couteur> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Uddhav Thackeray", "Tell me the father of Uddhav Thackeray", "What is the father of Uddhav Thackeray?", "What was the father of Uddhav Thackeray?", "Which person is the father of Uddhav Thackeray?", "Which person was the father of Uddhav Thackeray?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Uddhav_Thackeray> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Uesugi Harunori", "Tell me the father of Uesugi Harunori", "What is the father of Uesugi Harunori?", "What was the father of Uesugi Harunori?", "Which person is the father of Uesugi Harunori?", "Which person was the father of Uesugi Harunori?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Uesugi_Harunori> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Uesugi Kagekatsu", "Tell me the father of Uesugi Kagekatsu", "What is the father of Uesugi Kagekatsu?", "What was the father of Uesugi Kagekatsu?", "Which person is the father of Uesugi Kagekatsu?", "Which person was the father of Uesugi Kagekatsu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Uesugi_Kagekatsu> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Uesugi Narinori", "Tell me the father of Uesugi Narinori", "What is the father of Uesugi Narinori?", "What was the father of Uesugi Narinori?", "Which person is the father of Uesugi Narinori?", "Which person was the father of Uesugi Narinori?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Uesugi_Narinori> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Uesugi Tsunakatsu", "Tell me the father of Uesugi Tsunakatsu", "What is the father of Uesugi Tsunakatsu?", "What was the father of Uesugi Tsunakatsu?", "Which person is the father of Uesugi Tsunakatsu?", "Which person was the father of Uesugi Tsunakatsu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Uesugi_Tsunakatsu> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Uhuru Kenyatta", "Tell me the father of Uhuru Kenyatta", "What is the father of Uhuru Kenyatta?", "What was the father of Uhuru Kenyatta?", "Which person is the father of Uhuru Kenyatta?", "Which person was the father of Uhuru Kenyatta?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Uhuru_Kenyatta> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Ujir Singh Thapa", "Tell me the father of Ujir Singh Thapa", "What is the father of Ujir Singh Thapa?", "What was the father of Ujir Singh Thapa?", "Which person is the father of Ujir Singh Thapa?", "Which person was the father of Ujir Singh Thapa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ujir_Singh_Thapa> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Umesh Nandkumar Patel", "Tell me the father of Umesh Nandkumar Patel", "What is the father of Umesh Nandkumar Patel?", "What was the father of Umesh Nandkumar Patel?", "Which person is the father of Umesh Nandkumar Patel?", "Which person was the father of Umesh Nandkumar Patel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Umesh_Nandkumar_Patel> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of V. Parameswaran Nayar", "Tell me the father of V. Parameswaran Nayar", "What is the father of V. Parameswaran Nayar?", "What was the father of V. Parameswaran Nayar?", "Which person is the father of V. Parameswaran Nayar?", "Which person was the father of V. Parameswaran Nayar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/V._Parameswaran_Nayar> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Vahideh Taleghani", "Tell me the father of Vahideh Taleghani", "What is the father of Vahideh Taleghani?", "What was the father of Vahideh Taleghani?", "Which person is the father of Vahideh Taleghani?", "Which person was the father of Vahideh Taleghani?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Vahideh_Taleghani> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Varsha Gaikwad", "Tell me the father of Varsha Gaikwad", "What is the father of Varsha Gaikwad?", "What was the father of Varsha Gaikwad?", "Which person is the father of Varsha Gaikwad?", "Which person was the father of Varsha Gaikwad?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Varsha_Gaikwad> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Varun Gandhi", "Tell me the father of Varun Gandhi", "What is the father of Varun Gandhi?", "What was the father of Varun Gandhi?", "Which person is the father of Varun Gandhi?", "Which person was the father of Varun Gandhi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Varun_Gandhi> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Vasco Fernandes Coutinho, captain of Espírito Santo", "Tell me the father of Vasco Fernandes Coutinho, captain of Espírito Santo", "What is the father of Vasco Fernandes Coutinho, captain of Espírito Santo?", "What was the father of Vasco Fernandes Coutinho, captain of Espírito Santo?", "Which person is the father of Vasco Fernandes Coutinho, captain of Espírito Santo?", "Which person was the father of Vasco Fernandes Coutinho, captain of Espírito Santo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Vasco_Fernandes_Coutinho,_captain_of_Espírito_Santo> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Vasco da Gama", "Tell me the father of Vasco da Gama", "What is the father of Vasco da Gama?", "What was the father of Vasco da Gama?", "Which person is the father of Vasco da Gama?", "Which person was the father of Vasco da Gama?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Vasco_da_Gama> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Dal Singh (politician)", "Tell me the father of Dal Singh (politician)", "What is the father of Dal Singh (politician)?", "What was the father of Dal Singh (politician)?", "Which person is the father of Dal Singh (politician)?", "Which person was the father of Dal Singh (politician)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dal_Singh_(politician)> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Ukita Hideie", "Tell me the father of Ukita Hideie", "What is the father of Ukita Hideie?", "What was the father of Ukita Hideie?", "Which person is the father of Ukita Hideie?", "Which person was the father of Ukita Hideie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ukita_Hideie> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Han Chan Piet", "Tell me the father of Han Chan Piet", "What is the father of Han Chan Piet?", "What was the father of Han Chan Piet?", "Which person is the father of Han Chan Piet?", "Which person was the father of Han Chan Piet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Han_Chan_Piet> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Han Kik Ko", "Tell me the father of Han Kik Ko", "What is the father of Han Kik Ko?", "What was the father of Han Kik Ko?", "Which person is the father of Han Kik Ko?", "Which person was the father of Han Kik Ko?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Han_Kik_Ko> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Muhammad ibn Abi Hudhayfa", "Tell me the father of Muhammad ibn Abi Hudhayfa", "What is the father of Muhammad ibn Abi Hudhayfa?", "What was the father of Muhammad ibn Abi Hudhayfa?", "Which person is the father of Muhammad ibn Abi Hudhayfa?", "Which person was the father of Muhammad ibn Abi Hudhayfa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Muhammad_ibn_Abi_Hudhayfa> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Rida Khan", "Tell me the father of Rida Khan", "What is the father of Rida Khan?", "What was the father of Rida Khan?", "Which person is the father of Rida Khan?", "Which person was the father of Rida Khan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Rida_Khan> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Krishnarao Pant Pratinidhi", "Tell me the father of Krishnarao Pant Pratinidhi", "What is the father of Krishnarao Pant Pratinidhi?", "What was the father of Krishnarao Pant Pratinidhi?", "Which person is the father of Krishnarao Pant Pratinidhi?", "Which person was the father of Krishnarao Pant Pratinidhi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Krishnarao_Pant_Pratinidhi> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Majeed Ullah Khan Farhat", "Tell me the father of Majeed Ullah Khan Farhat", "What is the father of Majeed Ullah Khan Farhat?", "What was the father of Majeed Ullah Khan Farhat?", "Which person is the father of Majeed Ullah Khan Farhat?", "Which person was the father of Majeed Ullah Khan Farhat?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Majeed_Ullah_Khan_Farhat> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Mansur al-Atrash", "Tell me the father of Mansur al-Atrash", "What is the father of Mansur al-Atrash?", "What was the father of Mansur al-Atrash?", "Which person is the father of Mansur al-Atrash?", "Which person was the father of Mansur al-Atrash?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mansur_al-Atrash> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Minamoto no Yoritomo", "Tell me the father of Minamoto no Yoritomo", "What is the father of Minamoto no Yoritomo?", "What was the father of Minamoto no Yoritomo?", "Which person is the father of Minamoto no Yoritomo?", "Which person was the father of Minamoto no Yoritomo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Minamoto_no_Yoritomo> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Moinul Islam Khan", "Tell me the father of Moinul Islam Khan", "What is the father of Moinul Islam Khan?", "What was the father of Moinul Islam Khan?", "Which person is the father of Moinul Islam Khan?", "Which person was the father of Moinul Islam Khan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Moinul_Islam_Khan> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Sardar Riaz Mehmood Khan Mazari", "Tell me the father of Sardar Riaz Mehmood Khan Mazari", "What is the father of Sardar Riaz Mehmood Khan Mazari?", "What was the father of Sardar Riaz Mehmood Khan Mazari?", "Which person is the father of Sardar Riaz Mehmood Khan Mazari?", "Which person was the father of Sardar Riaz Mehmood Khan Mazari?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Sardar_Riaz_Mehmood_Khan_Mazari> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Bill Workman", "Tell me the father of Bill Workman", "What is the father of Bill Workman?", "What was the father of Bill Workman?", "Which person is the father of Bill Workman?", "Which person was the father of Bill Workman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Bill_Workman> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Billy McLean (politician)", "Tell me the father of Billy McLean (politician)", "What is the father of Billy McLean (politician)?", "What was the father of Billy McLean (politician)?", "Which person is the father of Billy McLean (politician)?", "Which person was the father of Billy McLean (politician)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Billy_McLean_(politician)> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Bimalendra Nidhi", "Tell me the father of Bimalendra Nidhi", "What is the father of Bimalendra Nidhi?", "What was the father of Bimalendra Nidhi?", "Which person is the father of Bimalendra Nidhi?", "Which person was the father of Bimalendra Nidhi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Bimalendra_Nidhi> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Bir Keshar Pande", "Tell me the father of Bir Keshar Pande", "What is the father of Bir Keshar Pande?", "What was the father of Bir Keshar Pande?", "Which person is the father of Bir Keshar Pande?", "Which person was the father of Bir Keshar Pande?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Bir_Keshar_Pande> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Blanche Cavendish, Countess of Burlington", "Tell me the father of Blanche Cavendish, Countess of Burlington", "What is the father of Blanche Cavendish, Countess of Burlington?", "What was the father of Blanche Cavendish, Countess of Burlington?", "Which person is the father of Blanche Cavendish, Countess of Burlington?", "Which person was the father of Blanche Cavendish, Countess of Burlington?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Blanche_Cavendish,_Countess_of_Burlington> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Boris Tadić", "Tell me the father of Boris Tadić", "What is the father of Boris Tadić?", "What was the father of Boris Tadić?", "Which person is the father of Boris Tadić?", "Which person was the father of Boris Tadić?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Boris_Tadić> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Abbasqoli Mo'tamad-dawla Javanshir", "Tell me the father of Abbasqoli Mo'tamad-dawla Javanshir", "What is the father of Abbasqoli Mo'tamad-dawla Javanshir?", "What was the father of Abbasqoli Mo'tamad-dawla Javanshir?", "Which person is the father of Abbasqoli Mo'tamad-dawla Javanshir?", "Which person was the father of Abbasqoli Mo'tamad-dawla Javanshir?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Abbasqoli_Mo'tamad-dawla_Javanshir> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Deepender Singh Hooda", "Tell me the father of Deepender Singh Hooda", "What is the father of Deepender Singh Hooda?", "What was the father of Deepender Singh Hooda?", "Which person is the father of Deepender Singh Hooda?", "Which person was the father of Deepender Singh Hooda?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Deepender_Singh_Hooda> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Derek Bok", "Tell me the father of Derek Bok", "What is the father of Derek Bok?", "What was the father of Derek Bok?", "Which person is the father of Derek Bok?", "Which person was the father of Derek Bok?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Derek_Bok> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Dharmendra Pradhan", "Tell me the father of Dharmendra Pradhan", "What is the father of Dharmendra Pradhan?", "What was the father of Dharmendra Pradhan?", "Which person is the father of Dharmendra Pradhan?", "Which person was the father of Dharmendra Pradhan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dharmendra_Pradhan> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Dhir Shamsher Rana", "Tell me the father of Dhir Shamsher Rana", "What is the father of Dhir Shamsher Rana?", "What was the father of Dhir Shamsher Rana?", "Which person is the father of Dhir Shamsher Rana?", "Which person was the father of Dhir Shamsher Rana?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dhir_Shamsher_Rana> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Dhiraj Deshmukh", "Tell me the father of Dhiraj Deshmukh", "What is the father of Dhiraj Deshmukh?", "What was the father of Dhiraj Deshmukh?", "Which person is the father of Dhiraj Deshmukh?", "Which person was the father of Dhiraj Deshmukh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dhiraj_Deshmukh> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Dhokal Singh Basnyat", "Tell me the father of Dhokal Singh Basnyat", "What is the father of Dhokal Singh Basnyat?", "What was the father of Dhokal Singh Basnyat?", "Which person is the father of Dhokal Singh Basnyat?", "Which person was the father of Dhokal Singh Basnyat?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dhokal_Singh_Basnyat> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Dido Harding", "Tell me the father of Dido Harding", "What is the father of Dido Harding?", "What was the father of Dido Harding?", "Which person is the father of Dido Harding?", "Which person was the father of Dido Harding?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dido_Harding> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Dilip Babasaheb Bhosale", "Tell me the father of Dilip Babasaheb Bhosale", "What is the father of Dilip Babasaheb Bhosale?", "What was the father of Dilip Babasaheb Bhosale?", "Which person is the father of Dilip Babasaheb Bhosale?", "Which person was the father of Dilip Babasaheb Bhosale?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dilip_Babasaheb_Bhosale> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Dipu Moni", "Tell me the father of Dipu Moni", "What is the father of Dipu Moni?", "What was the father of Dipu Moni?", "Which person is the father of Dipu Moni?", "Which person was the father of Dipu Moni?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dipu_Moni> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Dirk Gysbert van Breda", "Tell me the father of Dirk Gysbert van Breda", "What is the father of Dirk Gysbert van Breda?", "What was the father of Dirk Gysbert van Breda?", "Which person is the father of Dirk Gysbert van Breda?", "Which person was the father of Dirk Gysbert van Breda?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dirk_Gysbert_van_Breda> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Diya Kumari", "Tell me the father of Diya Kumari", "What is the father of Diya Kumari?", "What was the father of Diya Kumari?", "Which person is the father of Diya Kumari?", "Which person was the father of Diya Kumari?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Diya_Kumari> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Dominic Asquith", "Tell me the father of Dominic Asquith", "What is the father of Dominic Asquith?", "What was the father of Dominic Asquith?", "Which person is the father of Dominic Asquith?", "Which person was the father of Dominic Asquith?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dominic_Asquith> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Dominic Hubbard, 6th Baron Addington", "Tell me the father of Dominic Hubbard, 6th Baron Addington", "What is the father of Dominic Hubbard, 6th Baron Addington?", "What was the father of Dominic Hubbard, 6th Baron Addington?", "Which person is the father of Dominic Hubbard, 6th Baron Addington?", "Which person was the father of Dominic Hubbard, 6th Baron Addington?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dominic_Hubbard,_6th_Baron_Addington> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Gongsun Gong", "Tell me the father of Gongsun Gong", "What is the father of Gongsun Gong?", "What was the father of Gongsun Gong?", "Which person is the father of Gongsun Gong?", "Which person was the father of Gongsun Gong?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gongsun_Gong> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Gongsun Kang", "Tell me the father of Gongsun Kang", "What is the father of Gongsun Kang?", "What was the father of Gongsun Kang?", "Which person is the father of Gongsun Kang?", "Which person was the father of Gongsun Kang?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gongsun_Kang> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Gopal Sharan Nath Shahdeo", "Tell me the father of Gopal Sharan Nath Shahdeo", "What is the father of Gopal Sharan Nath Shahdeo?", "What was the father of Gopal Sharan Nath Shahdeo?", "Which person is the father of Gopal Sharan Nath Shahdeo?", "Which person was the father of Gopal Sharan Nath Shahdeo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gopal_Sharan_Nath_Shahdeo> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Gottfried Höch", "Tell me the father of Gottfried Höch", "What is the father of Gottfried Höch?", "What was the father of Gottfried Höch?", "Which person is the father of Gottfried Höch?", "Which person was the father of Gottfried Höch?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gottfried_Höch> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Govind Singh Thakur", "Tell me the father of Govind Singh Thakur", "What is the father of Govind Singh Thakur?", "What was the father of Govind Singh Thakur?", "Which person is the father of Govind Singh Thakur?", "Which person was the father of Govind Singh Thakur?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Govind_Singh_Thakur> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Grace Meng", "Tell me the father of Grace Meng", "What is the father of Grace Meng?", "What was the father of Grace Meng?", "Which person is the father of Grace Meng?", "Which person was the father of Grace Meng?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Grace_Meng> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Greta Neubauer", "Tell me the father of Greta Neubauer", "What is the father of Greta Neubauer?", "What was the father of Greta Neubauer?", "Which person is the father of Greta Neubauer?", "Which person was the father of Greta Neubauer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Greta_Neubauer> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Grigory Potemkin", "Tell me the father of Grigory Potemkin", "What is the father of Grigory Potemkin?", "What was the father of Grigory Potemkin?", "Which person is the father of Grigory Potemkin?", "Which person was the father of Grigory Potemkin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Grigory_Potemkin> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Gu Cheng (Three Kingdoms)", "Tell me the father of Gu Cheng (Three Kingdoms)", "What is the father of Gu Cheng (Three Kingdoms)?", "What was the father of Gu Cheng (Three Kingdoms)?", "Which person is the father of Gu Cheng (Three Kingdoms)?", "Which person was the father of Gu Cheng (Three Kingdoms)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gu_Cheng_(Three_Kingdoms)> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Gu Shao", "Tell me the father of Gu Shao", "What is the father of Gu Shao?", "What was the father of Gu Shao?", "Which person is the father of Gu Shao?", "Which person was the father of Gu Shao?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gu_Shao> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Gu Tan", "Tell me the father of Gu Tan", "What is the father of Gu Tan?", "What was the father of Gu Tan?", "Which person is the father of Gu Tan?", "Which person was the father of Gu Tan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gu_Tan> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Gulabrao Jedhe", "Tell me the father of Gulabrao Jedhe", "What is the father of Gulabrao Jedhe?", "What was the father of Gulabrao Jedhe?", "Which person is the father of Gulabrao Jedhe?", "Which person was the father of Gulabrao Jedhe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gulabrao_Jedhe> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Gulnara Karimova", "Tell me the father of Gulnara Karimova", "What is the father of Gulnara Karimova?", "What was the father of Gulnara Karimova?", "Which person is the father of Gulnara Karimova?", "Which person was the father of Gulnara Karimova?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gulnara_Karimova> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Khadga Shamsher Jang Bahadur Rana", "Tell me the father of Khadga Shamsher Jang Bahadur Rana", "What is the father of Khadga Shamsher Jang Bahadur Rana?", "What was the father of Khadga Shamsher Jang Bahadur Rana?", "Which person is the father of Khadga Shamsher Jang Bahadur Rana?", "Which person was the father of Khadga Shamsher Jang Bahadur Rana?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Khadga_Shamsher_Jang_Bahadur_Rana> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Khalifa bin Salman Al Khalifa", "Tell me the father of Khalifa bin Salman Al Khalifa", "What is the father of Khalifa bin Salman Al Khalifa?", "What was the father of Khalifa bin Salman Al Khalifa?", "Which person is the father of Khalifa bin Salman Al Khalifa?", "Which person was the father of Khalifa bin Salman Al Khalifa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Khalifa_bin_Salman_Al_Khalifa> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Khawaja Muhammad Asif", "Tell me the father of Khawaja Muhammad Asif", "What is the father of Khawaja Muhammad Asif?", "What was the father of Khawaja Muhammad Asif?", "Which person is the father of Khawaja Muhammad Asif?", "Which person was the father of Khawaja Muhammad Asif?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Khawaja_Muhammad_Asif> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Khurram Dastgir Khan", "Tell me the father of Khurram Dastgir Khan", "What is the father of Khurram Dastgir Khan?", "What was the father of Khurram Dastgir Khan?", "Which person is the father of Khurram Dastgir Khan?", "Which person was the father of Khurram Dastgir Khan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Khurram_Dastgir_Khan> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Khurshid Mahmud Kasuri", "Tell me the father of Khurshid Mahmud Kasuri", "What is the father of Khurshid Mahmud Kasuri?", "What was the father of Khurshid Mahmud Kasuri?", "Which person is the father of Khurshid Mahmud Kasuri?", "Which person was the father of Khurshid Mahmud Kasuri?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Khurshid_Mahmud_Kasuri> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Kikkawa Hiroie", "Tell me the father of Kikkawa Hiroie", "What is the father of Kikkawa Hiroie?", "What was the father of Kikkawa Hiroie?", "Which person is the father of Kikkawa Hiroie?", "Which person was the father of Kikkawa Hiroie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Kikkawa_Hiroie> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Kimbrough Stone", "Tell me the father of Kimbrough Stone", "What is the father of Kimbrough Stone?", "What was the father of Kimbrough Stone?", "Which person is the father of Kimbrough Stone?", "Which person was the father of Kimbrough Stone?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Kimbrough_Stone> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Kiran Shamsher Rana", "Tell me the father of Kiran Shamsher Rana", "What is the father of Kiran Shamsher Rana?", "What was the father of Kiran Shamsher Rana?", "Which person is the father of Kiran Shamsher Rana?", "Which person was the father of Kiran Shamsher Rana?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Kiran_Shamsher_Rana> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Kirti Azad", "Tell me the father of Kirti Azad", "What is the father of Kirti Azad?", "What was the father of Kirti Azad?", "Which person is the father of Kirti Azad?", "Which person was the father of Kirti Azad?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Kirti_Azad> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Kirtiman Singh Basnyat", "Tell me the father of Kirtiman Singh Basnyat", "What is the father of Kirtiman Singh Basnyat?", "What was the father of Kirtiman Singh Basnyat?", "Which person is the father of Kirtiman Singh Basnyat?", "Which person was the father of Kirtiman Singh Basnyat?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Kirtiman_Singh_Basnyat> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Kiuchi Kyō", "Tell me the father of Kiuchi Kyō", "What is the father of Kiuchi Kyō?", "What was the father of Kiuchi Kyō?", "Which person is the father of Kiuchi Kyō?", "Which person was the father of Kiuchi Kyō?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Kiuchi_Kyō> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Kolusu Parthasarathy", "Tell me the father of Kolusu Parthasarathy", "What is the father of Kolusu Parthasarathy?", "What was the father of Kolusu Parthasarathy?", "Which person is the father of Kolusu Parthasarathy?", "Which person was the father of Kolusu Parthasarathy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Kolusu_Parthasarathy> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Preston Love Jr.", "Tell me the father of Preston Love Jr.", "What is the father of Preston Love Jr.?", "What was the father of Preston Love Jr.?", "Which person is the father of Preston Love Jr.?", "Which person was the father of Preston Love Jr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Preston_Love_Jr.> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of Prince Dmitri Alexandrovich of Russia", "Tell me the father of Prince Dmitri Alexandrovich of Russia", "What is the father of Prince Dmitri Alexandrovich of Russia?", "What was the father of Prince Dmitri Alexandrovich of Russia?", "Which person is the father of Prince Dmitri Alexandrovich of Russia?", "Which person was the father of Prince Dmitri Alexandrovich of Russia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Prince_Dmitri_Alexandrovich_of_Russia> <http://dbpedia.org/ontology/father> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of 2013 Hialeah shooting", "Tell me the death place of 2013 Hialeah shooting", "What is the death place of 2013 Hialeah shooting?", "What was the death place of 2013 Hialeah shooting?", "Which place is the death place of 2013 Hialeah shooting?", "Which place was the death place of 2013 Hialeah shooting?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Hialeah_shooting> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of 2013 Santa Monica shooting", "Tell me the death place of 2013 Santa Monica shooting", "What is the death place of 2013 Santa Monica shooting?", "What was the death place of 2013 Santa Monica shooting?", "Which place is the death place of 2013 Santa Monica shooting?", "Which place was the death place of 2013 Santa Monica shooting?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Santa_Monica_shooting> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of 2014 Fort Hood shooting", "Tell me the death place of 2014 Fort Hood shooting", "What is the death place of 2014 Fort Hood shooting?", "What was the death place of 2014 Fort Hood shooting?", "Which place is the death place of 2014 Fort Hood shooting?", "Which place was the death place of 2014 Fort Hood shooting?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2014_Fort_Hood_shooting> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of 2014 Isla Vista killings", "Tell me the death place of 2014 Isla Vista killings", "What is the death place of 2014 Isla Vista killings?", "What was the death place of 2014 Isla Vista killings?", "Which place is the death place of 2014 Isla Vista killings?", "Which place was the death place of 2014 Isla Vista killings?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2014_Isla_Vista_killings> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of 2014 Las Vegas shootings", "Tell me the death place of 2014 Las Vegas shootings", "What is the death place of 2014 Las Vegas shootings?", "What was the death place of 2014 Las Vegas shootings?", "Which place is the death place of 2014 Las Vegas shootings?", "Which place was the death place of 2014 Las Vegas shootings?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2014_Las_Vegas_shootings> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of 2014 Queens hatchet attack", "Tell me the death place of 2014 Queens hatchet attack", "What is the death place of 2014 Queens hatchet attack?", "What was the death place of 2014 Queens hatchet attack?", "Which place is the death place of 2014 Queens hatchet attack?", "Which place was the death place of 2014 Queens hatchet attack?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2014_Queens_hatchet_attack> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of 2014 killings of NYPD officers", "Tell me the death place of 2014 killings of NYPD officers", "What is the death place of 2014 killings of NYPD officers?", "What was the death place of 2014 killings of NYPD officers?", "Which place is the death place of 2014 killings of NYPD officers?", "Which place was the death place of 2014 killings of NYPD officers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2014_killings_of_NYPD_officers> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of 2014 shootings at Parliament Hill, Ottawa", "Tell me the death place of 2014 shootings at Parliament Hill, Ottawa", "What is the death place of 2014 shootings at Parliament Hill, Ottawa?", "What was the death place of 2014 shootings at Parliament Hill, Ottawa?", "Which place is the death place of 2014 shootings at Parliament Hill, Ottawa?", "Which place was the death place of 2014 shootings at Parliament Hill, Ottawa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2014_shootings_at_Parliament_Hill,_Ottawa> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of 2015 Chattanooga shootings", "Tell me the death place of 2015 Chattanooga shootings", "What is the death place of 2015 Chattanooga shootings?", "What was the death place of 2015 Chattanooga shootings?", "Which place is the death place of 2015 Chattanooga shootings?", "Which place was the death place of 2015 Chattanooga shootings?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2015_Chattanooga_shootings> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of 2015 Lafayette shooting", "Tell me the death place of 2015 Lafayette shooting", "What is the death place of 2015 Lafayette shooting?", "What was the death place of 2015 Lafayette shooting?", "Which place is the death place of 2015 Lafayette shooting?", "Which place was the death place of 2015 Lafayette shooting?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2015_Lafayette_shooting> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of 2015 Parramatta shooting", "Tell me the death place of 2015 Parramatta shooting", "What is the death place of 2015 Parramatta shooting?", "What was the death place of 2015 Parramatta shooting?", "Which place is the death place of 2015 Parramatta shooting?", "Which place was the death place of 2015 Parramatta shooting?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2015_Parramatta_shooting> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of 2015 Sousse attacks", "Tell me the death place of 2015 Sousse attacks", "What is the death place of 2015 Sousse attacks?", "What was the death place of 2015 Sousse attacks?", "Which place is the death place of 2015 Sousse attacks?", "Which place was the death place of 2015 Sousse attacks?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2015_Sousse_attacks> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of 2015 Tyrone shooting", "Tell me the death place of 2015 Tyrone shooting", "What is the death place of 2015 Tyrone shooting?", "What was the death place of 2015 Tyrone shooting?", "Which place is the death place of 2015 Tyrone shooting?", "Which place was the death place of 2015 Tyrone shooting?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2015_Tyrone_shooting> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of 2016 Berlin truck attack", "Tell me the death place of 2016 Berlin truck attack", "What is the death place of 2016 Berlin truck attack?", "What was the death place of 2016 Berlin truck attack?", "Which place is the death place of 2016 Berlin truck attack?", "Which place was the death place of 2016 Berlin truck attack?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2016_Berlin_truck_attack> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of 2016 Munich shooting", "Tell me the death place of 2016 Munich shooting", "What is the death place of 2016 Munich shooting?", "What was the death place of 2016 Munich shooting?", "Which place is the death place of 2016 Munich shooting?", "Which place was the death place of 2016 Munich shooting?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2016_Munich_shooting> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of 2016 UCLA shooting", "Tell me the death place of 2016 UCLA shooting", "What is the death place of 2016 UCLA shooting?", "What was the death place of 2016 UCLA shooting?", "Which place is the death place of 2016 UCLA shooting?", "Which place was the death place of 2016 UCLA shooting?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2016_UCLA_shooting> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of 2016 shooting of Baton Rouge police officers", "Tell me the death place of 2016 shooting of Baton Rouge police officers", "What is the death place of 2016 shooting of Baton Rouge police officers?", "What was the death place of 2016 shooting of Baton Rouge police officers?", "Which place is the death place of 2016 shooting of Baton Rouge police officers?", "Which place was the death place of 2016 shooting of Baton Rouge police officers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2016_shooting_of_Baton_Rouge_police_officers> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of 2016 shooting of Dallas police officers", "Tell me the death place of 2016 shooting of Dallas police officers", "What is the death place of 2016 shooting of Dallas police officers?", "What was the death place of 2016 shooting of Dallas police officers?", "Which place is the death place of 2016 shooting of Dallas police officers?", "Which place was the death place of 2016 shooting of Dallas police officers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2016_shooting_of_Dallas_police_officers> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of 2017 Resorts World Manila attack", "Tell me the death place of 2017 Resorts World Manila attack", "What is the death place of 2017 Resorts World Manila attack?", "What was the death place of 2017 Resorts World Manila attack?", "Which place is the death place of 2017 Resorts World Manila attack?", "Which place was the death place of 2017 Resorts World Manila attack?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2017_Resorts_World_Manila_attack> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A.L. Monsohn Lithography", "Tell me the death place of A.L. Monsohn Lithography", "What is the death place of A.L. Monsohn Lithography?", "What was the death place of A.L. Monsohn Lithography?", "Which place is the death place of A.L. Monsohn Lithography?", "Which place was the death place of A.L. Monsohn Lithography?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A.L._Monsohn_Lithography> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A.M. Parkin", "Tell me the death place of A.M. Parkin", "What is the death place of A.M. Parkin?", "What was the death place of A.M. Parkin?", "Which place is the death place of A.M. Parkin?", "Which place was the death place of A.M. Parkin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A.M._Parkin> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. A. H. Tuttle", "Tell me the death place of A. A. H. Tuttle", "What is the death place of A. A. H. Tuttle?", "What was the death place of A. A. H. Tuttle?", "Which place is the death place of A. A. H. Tuttle?", "Which place was the death place of A. A. H. Tuttle?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._A._H._Tuttle> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. B. Colton", "Tell me the death place of A. B. Colton", "What is the death place of A. B. Colton?", "What was the death place of A. B. Colton?", "Which place is the death place of A. B. Colton?", "Which place was the death place of A. B. Colton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._B._Colton> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. B. Guthrie Jr.", "Tell me the death place of A. B. Guthrie Jr.", "What is the death place of A. B. Guthrie Jr.?", "What was the death place of A. B. Guthrie Jr.?", "Which place is the death place of A. B. Guthrie Jr.?", "Which place was the death place of A. B. Guthrie Jr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._B._Guthrie_Jr.> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. B. Imeson", "Tell me the death place of A. B. Imeson", "What is the death place of A. B. Imeson?", "What was the death place of A. B. Imeson?", "Which place is the death place of A. B. Imeson?", "Which place was the death place of A. B. Imeson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._B._Imeson> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. B. Lull", "Tell me the death place of A. B. Lull", "What is the death place of A. B. Lull?", "What was the death place of A. B. Lull?", "Which place is the death place of A. B. Lull?", "Which place was the death place of A. B. Lull?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._B._Lull> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. Bernard Ackerman", "Tell me the death place of A. Bernard Ackerman", "What is the death place of A. Bernard Ackerman?", "What was the death place of A. Bernard Ackerman?", "Which place is the death place of A. Bernard Ackerman?", "Which place was the death place of A. Bernard Ackerman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Bernard_Ackerman> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. C. Lyons", "Tell me the death place of A. C. Lyons", "What is the death place of A. C. Lyons?", "What was the death place of A. C. Lyons?", "Which place is the death place of A. C. Lyons?", "Which place was the death place of A. C. Lyons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._C._Lyons> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. Duncan Carse", "Tell me the death place of A. Duncan Carse", "What is the death place of A. Duncan Carse?", "What was the death place of A. Duncan Carse?", "Which place is the death place of A. Duncan Carse?", "Which place was the death place of A. Duncan Carse?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Duncan_Carse> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. E. Coleby", "Tell me the death place of A. E. Coleby", "What is the death place of A. E. Coleby?", "What was the death place of A. E. Coleby?", "Which place is the death place of A. E. Coleby?", "Which place was the death place of A. E. Coleby?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._E._Coleby> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. Gordon Wetmore", "Tell me the death place of A. Gordon Wetmore", "What is the death place of A. Gordon Wetmore?", "What was the death place of A. Gordon Wetmore?", "Which place is the death place of A. Gordon Wetmore?", "Which place was the death place of A. Gordon Wetmore?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Gordon_Wetmore> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. H. Hornby", "Tell me the death place of A. H. Hornby", "What is the death place of A. H. Hornby?", "What was the death place of A. H. Hornby?", "Which place is the death place of A. H. Hornby?", "Which place was the death place of A. H. Hornby?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._H._Hornby> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. K. Brohi", "Tell me the death place of A. K. Brohi", "What is the death place of A. K. Brohi?", "What was the death place of A. K. Brohi?", "Which place is the death place of A. K. Brohi?", "Which place was the death place of A. K. Brohi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._K._Brohi> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. K. Veerasami", "Tell me the death place of A. K. Veerasami", "What is the death place of A. K. Veerasami?", "What was the death place of A. K. Veerasami?", "Which place is the death place of A. K. Veerasami?", "Which place was the death place of A. K. Veerasami?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._K._Veerasami> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. L. Narayan", "Tell me the death place of A. L. Narayan", "What is the death place of A. L. Narayan?", "What was the death place of A. L. Narayan?", "Which place is the death place of A. L. Narayan?", "Which place was the death place of A. L. Narayan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._L._Narayan> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. L. Raghavan", "Tell me the death place of A. L. Raghavan", "What is the death place of A. L. Raghavan?", "What was the death place of A. L. Raghavan?", "Which place is the death place of A. L. Raghavan?", "Which place was the death place of A. L. Raghavan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._L._Raghavan> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. Lakshmanaswami Mudaliar", "Tell me the death place of A. Lakshmanaswami Mudaliar", "What is the death place of A. Lakshmanaswami Mudaliar?", "What was the death place of A. Lakshmanaswami Mudaliar?", "Which place is the death place of A. Lakshmanaswami Mudaliar?", "Which place was the death place of A. Lakshmanaswami Mudaliar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Lakshmanaswami_Mudaliar> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. N. Gopal", "Tell me the death place of A. N. Gopal", "What is the death place of A. N. Gopal?", "What was the death place of A. N. Gopal?", "Which place is the death place of A. N. Gopal?", "Which place was the death place of A. N. Gopal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._N._Gopal> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. P. Mda", "Tell me the death place of A. P. Mda", "What is the death place of A. P. Mda?", "What was the death place of A. P. Mda?", "Which place is the death place of A. P. Mda?", "Which place was the death place of A. P. Mda?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._P._Mda> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. Q. M. Jainul Abedin", "Tell me the death place of A. Q. M. Jainul Abedin", "What is the death place of A. Q. M. Jainul Abedin?", "What was the death place of A. Q. M. Jainul Abedin?", "Which place is the death place of A. Q. M. Jainul Abedin?", "Which place was the death place of A. Q. M. Jainul Abedin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Q._M._Jainul_Abedin> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. R. Krishnashastry", "Tell me the death place of A. R. Krishnashastry", "What is the death place of A. R. Krishnashastry?", "What was the death place of A. R. Krishnashastry?", "Which place is the death place of A. R. Krishnashastry?", "Which place was the death place of A. R. Krishnashastry?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._R._Krishnashastry> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. R. Manu", "Tell me the death place of A. R. Manu", "What is the death place of A. R. Manu?", "What was the death place of A. R. Manu?", "Which place is the death place of A. R. Manu?", "Which place was the death place of A. R. Manu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._R._Manu> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. R. Sahu Khan", "Tell me the death place of A. R. Sahu Khan", "What is the death place of A. R. Sahu Khan?", "What was the death place of A. R. Sahu Khan?", "Which place is the death place of A. R. Sahu Khan?", "Which place was the death place of A. R. Sahu Khan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._R._Sahu_Khan> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. Rangaswami Iyengar", "Tell me the death place of A. Rangaswami Iyengar", "What is the death place of A. Rangaswami Iyengar?", "What was the death place of A. Rangaswami Iyengar?", "Which place is the death place of A. Rangaswami Iyengar?", "Which place was the death place of A. Rangaswami Iyengar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Rangaswami_Iyengar> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. S. Baylinson", "Tell me the death place of A. S. Baylinson", "What is the death place of A. S. Baylinson?", "What was the death place of A. S. Baylinson?", "Which place is the death place of A. S. Baylinson?", "Which place was the death place of A. S. Baylinson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._S._Baylinson> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. S. Rao", "Tell me the death place of A. S. Rao", "What is the death place of A. S. Rao?", "What was the death place of A. S. Rao?", "Which place is the death place of A. S. Rao?", "Which place was the death place of A. S. Rao?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._S._Rao> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. S. W. Rosenbach", "Tell me the death place of A. S. W. Rosenbach", "What is the death place of A. S. W. Rosenbach?", "What was the death place of A. S. W. Rosenbach?", "Which place is the death place of A. S. W. Rosenbach?", "Which place was the death place of A. S. W. Rosenbach?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._S._W._Rosenbach> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. Subbarayalu Reddiar", "Tell me the death place of A. Subbarayalu Reddiar", "What is the death place of A. Subbarayalu Reddiar?", "What was the death place of A. Subbarayalu Reddiar?", "Which place is the death place of A. Subbarayalu Reddiar?", "Which place was the death place of A. Subbarayalu Reddiar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Subbarayalu_Reddiar> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. T. Hill", "Tell me the death place of A. T. Hill", "What is the death place of A. T. Hill?", "What was the death place of A. T. Hill?", "Which place is the death place of A. T. Hill?", "Which place was the death place of A. T. Hill?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._T._Hill> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. T. M. Wilson", "Tell me the death place of A. T. M. Wilson", "What is the death place of A. T. M. Wilson?", "What was the death place of A. T. M. Wilson?", "Which place is the death place of A. T. M. Wilson?", "Which place was the death place of A. T. M. Wilson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._T._M._Wilson> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. V. Bramble", "Tell me the death place of A. V. Bramble", "What is the death place of A. V. Bramble?", "What was the death place of A. V. Bramble?", "Which place is the death place of A. V. Bramble?", "Which place was the death place of A. V. Bramble?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._V._Bramble> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. Veerappan", "Tell me the death place of A. Veerappan", "What is the death place of A. Veerappan?", "What was the death place of A. Veerappan?", "Which place is the death place of A. Veerappan?", "Which place was the death place of A. Veerappan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Veerappan> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. W. Baskcomb", "Tell me the death place of A. W. Baskcomb", "What is the death place of A. W. Baskcomb?", "What was the death place of A. W. Baskcomb?", "Which place is the death place of A. W. Baskcomb?", "Which place was the death place of A. W. Baskcomb?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._W._Baskcomb> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of A. W. Martin", "Tell me the death place of A. W. Martin", "What is the death place of A. W. Martin?", "What was the death place of A. W. Martin?", "Which place is the death place of A. W. Martin?", "Which place was the death place of A. W. Martin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._W._Martin> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of ABM Abul Kashem", "Tell me the death place of ABM Abul Kashem", "What is the death place of ABM Abul Kashem?", "What was the death place of ABM Abul Kashem?", "Which place is the death place of ABM Abul Kashem?", "Which place was the death place of ABM Abul Kashem?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ABM_Abul_Kashem> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of AKM Gouach Uddin", "Tell me the death place of AKM Gouach Uddin", "What is the death place of AKM Gouach Uddin?", "What was the death place of AKM Gouach Uddin?", "Which place is the death place of AKM Gouach Uddin?", "Which place was the death place of AKM Gouach Uddin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AKM_Gouach_Uddin> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Love Gantt", "Tell me the death place of Love Gantt", "What is the death place of Love Gantt?", "What was the death place of Love Gantt?", "Which place is the death place of Love Gantt?", "Which place was the death place of Love Gantt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Gantt> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lovebug Starski", "Tell me the death place of Lovebug Starski", "What is the death place of Lovebug Starski?", "What was the death place of Lovebug Starski?", "Which place is the death place of Lovebug Starski?", "Which place was the death place of Lovebug Starski?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lovebug_Starski> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lovelace Watkins", "Tell me the death place of Lovelace Watkins", "What is the death place of Lovelace Watkins?", "What was the death place of Lovelace Watkins?", "Which place is the death place of Lovelace Watkins?", "Which place was the death place of Lovelace Watkins?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lovelace_Watkins> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lovell Coleman", "Tell me the death place of Lovell Coleman", "What is the death place of Lovell Coleman?", "What was the death place of Lovell Coleman?", "Which place is the death place of Lovell Coleman?", "Which place was the death place of Lovell Coleman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lovell_Coleman> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lovell Rousseau", "Tell me the death place of Lovell Rousseau", "What is the death place of Lovell Rousseau?", "What was the death place of Lovell Rousseau?", "Which place is the death place of Lovell Rousseau?", "Which place was the death place of Lovell Rousseau?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lovell_Rousseau> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lovell Wooldridge", "Tell me the death place of Lovell Wooldridge", "What is the death place of Lovell Wooldridge?", "What was the death place of Lovell Wooldridge?", "Which place is the death place of Lovell Wooldridge?", "Which place was the death place of Lovell Wooldridge?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lovell_Wooldridge> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Loveman Noa", "Tell me the death place of Loveman Noa", "What is the death place of Loveman Noa?", "What was the death place of Loveman Noa?", "Which place is the death place of Loveman Noa?", "Which place was the death place of Loveman Noa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loveman_Noa> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lovick Pierce Thomas, I", "Tell me the death place of Lovick Pierce Thomas, I", "What is the death place of Lovick Pierce Thomas, I?", "What was the death place of Lovick Pierce Thomas, I?", "Which place is the death place of Lovick Pierce Thomas, I?", "Which place was the death place of Lovick Pierce Thomas, I?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lovick_Pierce_Thomas,_I> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lovie Austin", "Tell me the death place of Lovie Austin", "What is the death place of Lovie Austin?", "What was the death place of Lovie Austin?", "Which place is the death place of Lovie Austin?", "Which place was the death place of Lovie Austin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lovie_Austin> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lovie Lee", "Tell me the death place of Lovie Lee", "What is the death place of Lovie Lee?", "What was the death place of Lovie Lee?", "Which place is the death place of Lovie Lee?", "Which place was the death place of Lovie Lee?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lovie_Lee> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lowdon Heller", "Tell me the death place of Lowdon Heller", "What is the death place of Lowdon Heller?", "What was the death place of Lowdon Heller?", "Which place is the death place of Lowdon Heller?", "Which place was the death place of Lowdon Heller?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lowdon_Heller> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lowell A. Reed Jr.", "Tell me the death place of Lowell A. Reed Jr.", "What is the death place of Lowell A. Reed Jr.?", "What was the death place of Lowell A. Reed Jr.?", "Which place is the death place of Lowell A. Reed Jr.?", "Which place was the death place of Lowell A. Reed Jr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lowell_A._Reed_Jr.> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lowell Blair Nesbitt", "Tell me the death place of Lowell Blair Nesbitt", "What is the death place of Lowell Blair Nesbitt?", "What was the death place of Lowell Blair Nesbitt?", "Which place is the death place of Lowell Blair Nesbitt?", "Which place was the death place of Lowell Blair Nesbitt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lowell_Blair_Nesbitt> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lowell Fulson", "Tell me the death place of Lowell Fulson", "What is the death place of Lowell Fulson?", "What was the death place of Lowell Fulson?", "Which place is the death place of Lowell Fulson?", "Which place was the death place of Lowell Fulson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lowell_Fulson> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lowell Galloway", "Tell me the death place of Lowell Galloway", "What is the death place of Lowell Galloway?", "What was the death place of Lowell Galloway?", "Which place is the death place of Lowell Galloway?", "Which place was the death place of Lowell Galloway?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lowell_Galloway> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lowell George", "Tell me the death place of Lowell George", "What is the death place of Lowell George?", "What was the death place of Lowell George?", "Which place is the death place of Lowell George?", "Which place was the death place of Lowell George?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lowell_George> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lowell Gilmore", "Tell me the death place of Lowell Gilmore", "What is the death place of Lowell Gilmore?", "What was the death place of Lowell Gilmore?", "Which place is the death place of Lowell Gilmore?", "Which place was the death place of Lowell Gilmore?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lowell_Gilmore> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lowell Johnston", "Tell me the death place of Lowell Johnston", "What is the death place of Lowell Johnston?", "What was the death place of Lowell Johnston?", "Which place is the death place of Lowell Johnston?", "Which place was the death place of Lowell Johnston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lowell_Johnston> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lowell K. Bridwell", "Tell me the death place of Lowell K. Bridwell", "What is the death place of Lowell K. Bridwell?", "What was the death place of Lowell K. Bridwell?", "Which place is the death place of Lowell K. Bridwell?", "Which place was the death place of Lowell K. Bridwell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lowell_K._Bridwell> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lowell Lee Andrews", "Tell me the death place of Lowell Lee Andrews", "What is the death place of Lowell Lee Andrews?", "What was the death place of Lowell Lee Andrews?", "Which place is the death place of Lowell Lee Andrews?", "Which place was the death place of Lowell Lee Andrews?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lowell_Lee_Andrews> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lowell Peterson", "Tell me the death place of Lowell Peterson", "What is the death place of Lowell Peterson?", "What was the death place of Lowell Peterson?", "Which place is the death place of Lowell Peterson?", "Which place was the death place of Lowell Peterson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lowell_Peterson> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lowell Reed", "Tell me the death place of Lowell Reed", "What is the death place of Lowell Reed?", "What was the death place of Lowell Reed?", "Which place is the death place of Lowell Reed?", "Which place was the death place of Lowell Reed?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lowell_Reed> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lowell Sherman", "Tell me the death place of Lowell Sherman", "What is the death place of Lowell Sherman?", "What was the death place of Lowell Sherman?", "Which place is the death place of Lowell Sherman?", "Which place was the death place of Lowell Sherman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lowell_Sherman> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lowell Stockman", "Tell me the death place of Lowell Stockman", "What is the death place of Lowell Stockman?", "What was the death place of Lowell Stockman?", "Which place is the death place of Lowell Stockman?", "Which place was the death place of Lowell Stockman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lowell_Stockman> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lowell Thomas", "Tell me the death place of Lowell Thomas", "What is the death place of Lowell Thomas?", "What was the death place of Lowell Thomas?", "Which place is the death place of Lowell Thomas?", "Which place was the death place of Lowell Thomas?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lowell_Thomas> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lowell Thomas Jr.", "Tell me the death place of Lowell Thomas Jr.", "What is the death place of Lowell Thomas Jr.?", "What was the death place of Lowell Thomas Jr.?", "Which place is the death place of Lowell Thomas Jr.?", "Which place was the death place of Lowell Thomas Jr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lowell_Thomas_Jr.> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lowrie Warrener", "Tell me the death place of Lowrie Warrener", "What is the death place of Lowrie Warrener?", "What was the death place of Lowrie Warrener?", "Which place is the death place of Lowrie Warrener?", "Which place was the death place of Lowrie Warrener?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lowrie_Warrener> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Loy Allen Bowlin", "Tell me the death place of Loy Allen Bowlin", "What is the death place of Loy Allen Bowlin?", "What was the death place of Loy Allen Bowlin?", "Which place is the death place of Loy Allen Bowlin?", "Which place was the death place of Loy Allen Bowlin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loy_Allen_Bowlin> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Loy Hanning", "Tell me the death place of Loy Hanning", "What is the death place of Loy Hanning?", "What was the death place of Loy Hanning?", "Which place is the death place of Loy Hanning?", "Which place was the death place of Loy Hanning?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loy_Hanning> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Loy W. Henderson", "Tell me the death place of Loy W. Henderson", "What is the death place of Loy W. Henderson?", "What was the death place of Loy W. Henderson?", "Which place is the death place of Loy W. Henderson?", "Which place was the death place of Loy W. Henderson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loy_W._Henderson> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Loyal Blaine Aldrich", "Tell me the death place of Loyal Blaine Aldrich", "What is the death place of Loyal Blaine Aldrich?", "What was the death place of Loyal Blaine Aldrich?", "Which place is the death place of Loyal Blaine Aldrich?", "Which place was the death place of Loyal Blaine Aldrich?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loyal_Blaine_Aldrich> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Loyal Edwin Knappen", "Tell me the death place of Loyal Edwin Knappen", "What is the death place of Loyal Edwin Knappen?", "What was the death place of Loyal Edwin Knappen?", "Which place is the death place of Loyal Edwin Knappen?", "Which place was the death place of Loyal Edwin Knappen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loyal_Edwin_Knappen> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Loyal Griggs", "Tell me the death place of Loyal Griggs", "What is the death place of Loyal Griggs?", "What was the death place of Loyal Griggs?", "Which place is the death place of Loyal Griggs?", "Which place was the death place of Loyal Griggs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loyal_Griggs> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Loyce Houlton", "Tell me the death place of Loyce Houlton", "What is the death place of Loyce Houlton?", "What was the death place of Loyce Houlton?", "Which place is the death place of Loyce Houlton?", "Which place was the death place of Loyce Houlton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loyce_Houlton> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Loyd Arms", "Tell me the death place of Loyd Arms", "What is the death place of Loyd Arms?", "What was the death place of Loyd Arms?", "Which place is the death place of Loyd Arms?", "Which place was the death place of Loyd Arms?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loyd_Arms> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Loyd Christopher", "Tell me the death place of Loyd Christopher", "What is the death place of Loyd Christopher?", "What was the death place of Loyd Christopher?", "Which place is the death place of Loyd Christopher?", "Which place was the death place of Loyd Christopher?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loyd_Christopher> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Loyd Jowers", "Tell me the death place of Loyd Jowers", "What is the death place of Loyd Jowers?", "What was the death place of Loyd Jowers?", "Which place is the death place of Loyd Jowers?", "Which place was the death place of Loyd Jowers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loyd_Jowers> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Loye H. Miller", "Tell me the death place of Loye H. Miller", "What is the death place of Loye H. Miller?", "What was the death place of Loye H. Miller?", "Which place is the death place of Loye H. Miller?", "Which place was the death place of Loye H. Miller?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loye_H._Miller> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Loyola O'Connor", "Tell me the death place of Loyola O'Connor", "What is the death place of Loyola O'Connor?", "What was the death place of Loyola O'Connor?", "Which place is the death place of Loyola O'Connor?", "Which place was the death place of Loyola O'Connor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loyola_O'Connor> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Loyola de Palacio", "Tell me the death place of Loyola de Palacio", "What is the death place of Loyola de Palacio?", "What was the death place of Loyola de Palacio?", "Which place is the death place of Loyola de Palacio?", "Which place was the death place of Loyola de Palacio?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loyola_de_Palacio> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Loïc Bouvard", "Tell me the death place of Loïc Bouvard", "What is the death place of Loïc Bouvard?", "What was the death place of Loïc Bouvard?", "Which place is the death place of Loïc Bouvard?", "Which place was the death place of Loïc Bouvard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loïc_Bouvard> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Loïc Leferme", "Tell me the death place of Loïc Leferme", "What is the death place of Loïc Leferme?", "What was the death place of Loïc Leferme?", "Which place is the death place of Loïc Leferme?", "Which place was the death place of Loïc Leferme?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loïc_Leferme> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lu'ay al-Atassi", "Tell me the death place of Lu'ay al-Atassi", "What is the death place of Lu'ay al-Atassi?", "What was the death place of Lu'ay al-Atassi?", "Which place is the death place of Lu'ay al-Atassi?", "Which place was the death place of Lu'ay al-Atassi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lu'ay_al-Atassi> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of Lu Ann Meredith", "Tell me the death place of Lu Ann Meredith", "What is the death place of Lu Ann Meredith?", "What was the death place of Lu Ann Meredith?", "Which place is the death place of Lu Ann Meredith?", "Which place was the death place of Lu Ann Meredith?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lu_Ann_Meredith> <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed 1943: The Battle of Midway?", "What develops 1943: The Battle of Midway?", "Which agent developed 1943: The Battle of Midway?", "Which agent develops 1943: The Battle of Midway?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1943:_The_Battle_of_Midway> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed 2014 FIFA World Cup Brazil (video game)?", "What develops 2014 FIFA World Cup Brazil (video game)?", "Which agent developed 2014 FIFA World Cup Brazil (video game)?", "Which agent develops 2014 FIFA World Cup Brazil (video game)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2014_FIFA_World_Cup_Brazil_(video_game)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed 750cc Grand Prix?", "What develops 750cc Grand Prix?", "Which agent developed 750cc Grand Prix?", "Which agent develops 750cc Grand Prix?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/750cc_Grand_Prix> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed 7 Mages?", "What develops 7 Mages?", "Which agent developed 7 Mages?", "Which agent develops 7 Mages?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/7_Mages> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed 7 dní a 7 nocí?", "What develops 7 dní a 7 nocí?", "Which agent developed 7 dní a 7 nocí?", "Which agent develops 7 dní a 7 nocí?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/7_dní_a_7_nocí> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed 8-Bit Armies?", "What develops 8-Bit Armies?", "Which agent developed 8-Bit Armies?", "Which agent develops 8-Bit Armies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/8-Bit_Armies> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed 8-Bit Hordes?", "What develops 8-Bit Hordes?", "Which agent developed 8-Bit Hordes?", "Which agent develops 8-Bit Hordes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/8-Bit_Hordes> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed 8-Bit Rebellion!?", "What develops 8-Bit Rebellion!?", "Which agent developed 8-Bit Rebellion!?", "Which agent develops 8-Bit Rebellion!?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/8-Bit_Rebellion!> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed 8Realms?", "What develops 8Realms?", "Which agent developed 8Realms?", "Which agent develops 8Realms?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/8Realms> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed 9:05?", "What develops 9:05?", "Which agent developed 9:05?", "Which agent develops 9:05?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/9:05> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed 9 Elefants?", "What develops 9 Elefants?", "Which agent developed 9 Elefants?", "Which agent develops 9 Elefants?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/9_Elefants> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed A320 Airbus (video game)?", "What develops A320 Airbus (video game)?", "Which agent developed A320 Airbus (video game)?", "Which agent develops A320 Airbus (video game)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A320_Airbus_(video_game)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed ABC Sports Indy Racing?", "What develops ABC Sports Indy Racing?", "Which agent developed ABC Sports Indy Racing?", "Which agent develops ABC Sports Indy Racing?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ABC_Sports_Indy_Racing> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed ABPA Backgammon?", "What develops ABPA Backgammon?", "Which agent developed ABPA Backgammon?", "Which agent develops ABPA Backgammon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ABPA_Backgammon> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed ACD/ChemSketch?", "What develops ACD/ChemSketch?", "Which agent developed ACD/ChemSketch?", "Which agent develops ACD/ChemSketch?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ACD/ChemSketch> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed ACIS?", "What develops ACIS?", "Which agent developed ACIS?", "Which agent develops ACIS?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ACIS> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed AD&D Masterpiece Collection?", "What develops AD&D Masterpiece Collection?", "Which agent developed AD&D Masterpiece Collection?", "Which agent develops AD&D Masterpiece Collection?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AD&D_Masterpiece_Collection> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed ADO.NET?", "What develops ADO.NET?", "Which agent developed ADO.NET?", "Which agent develops ADO.NET?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ADO.NET> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed ADX (file format)?", "What develops ADX (file format)?", "Which agent developed ADX (file format)?", "Which agent develops ADX (file format)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ADX_(file_format)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed AFL Evolution?", "What develops AFL Evolution?", "Which agent developed AFL Evolution?", "Which agent develops AFL Evolution?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AFL_Evolution> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed AFL Live 2?", "What develops AFL Live 2?", "Which agent developed AFL Live 2?", "Which agent develops AFL Live 2?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AFL_Live_2> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed AGON?", "What develops AGON?", "Which agent developed AGON?", "Which agent develops AGON?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AGON> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed AIMMS?", "What develops AIMMS?", "Which agent developed AIMMS?", "Which agent develops AIMMS?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AIMMS> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed AIM Phoneline?", "What develops AIM Phoneline?", "Which agent developed AIM Phoneline?", "Which agent develops AIM Phoneline?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AIM_Phoneline> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed AI War: Fleet Command?", "What develops AI War: Fleet Command?", "Which agent developed AI War: Fleet Command?", "Which agent develops AI War: Fleet Command?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AI_War:_Fleet_Command> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed ALL-IN-1?", "What develops ALL-IN-1?", "Which agent developed ALL-IN-1?", "Which agent develops ALL-IN-1?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ALL-IN-1> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed ALTRAN?", "What develops ALTRAN?", "Which agent developed ALTRAN?", "Which agent develops ALTRAN?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ALTRAN> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed AMAP?", "What develops AMAP?", "Which agent developed AMAP?", "Which agent develops AMAP?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AMAP> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed AMD 700 chipset series?", "What develops AMD 700 chipset series?", "Which agent developed AMD 700 chipset series?", "Which agent develops AMD 700 chipset series?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AMD_700_chipset_series> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed AMD CodeAnalyst?", "What develops AMD CodeAnalyst?", "Which agent developed AMD CodeAnalyst?", "Which agent develops AMD CodeAnalyst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AMD_CodeAnalyst> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed AMPHORA?", "What develops AMPHORA?", "Which agent developed AMPHORA?", "Which agent develops AMPHORA?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AMPHORA> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed ANGLE (software)?", "What develops ANGLE (software)?", "Which agent developed ANGLE (software)?", "Which agent develops ANGLE (software)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ANGLE_(software)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed ANTIGONE?", "What develops ANTIGONE?", "Which agent developed ANTIGONE?", "Which agent develops ANTIGONE?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ANTIGONE> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed APB (1987 video game)?", "What develops APB (1987 video game)?", "Which agent developed APB (1987 video game)?", "Which agent develops APB (1987 video game)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/APB_(1987_video_game)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed AQUA@home?", "What develops AQUA@home?", "Which agent developed AQUA@home?", "Which agent develops AQUA@home?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AQUA@home> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed LovePlus?", "What develops LovePlus?", "Which agent developed LovePlus?", "Which agent develops LovePlus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/LovePlus> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Love & Destroy?", "What develops Love & Destroy?", "Which agent developed Love & Destroy?", "Which agent develops Love & Destroy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_&_Destroy> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Love & Lies?", "What develops Love & Lies?", "Which agent developed Love & Lies?", "Which agent develops Love & Lies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_&_Lies> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Love Alarm?", "What develops Love Alarm?", "Which agent developed Love Alarm?", "Which agent develops Love Alarm?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Alarm> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Love Boat: The Next Wave?", "What develops Love Boat: The Next Wave?", "Which agent developed Love Boat: The Next Wave?", "Which agent develops Love Boat: The Next Wave?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Boat:_The_Next_Wave> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Love Live! School Idol Festival?", "What develops Love Live! School Idol Festival?", "Which agent developed Love Live! School Idol Festival?", "Which agent develops Love Live! School Idol Festival?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Live!_School_Idol_Festival> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Love Me India?", "What develops Love Me India?", "Which agent developed Love Me India?", "Which agent develops Love Me India?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Me_India> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Love Story (video game)?", "What develops Love Story (video game)?", "Which agent developed Love Story (video game)?", "Which agent develops Love Story (video game)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Story_(video_game)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Love and Berry: Dress Up and Dance!?", "What develops Love and Berry: Dress Up and Dance!?", "Which agent developed Love and Berry: Dress Up and Dance!?", "Which agent develops Love and Berry: Dress Up and Dance!?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_and_Berry:_Dress_Up_and_Dance!> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Love in the Moonlight?", "What develops Love in the Moonlight?", "Which agent developed Love in the Moonlight?", "Which agent develops Love in the Moonlight?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_in_the_Moonlight> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lovebooks Presents?", "What develops Lovebooks Presents?", "Which agent developed Lovebooks Presents?", "Which agent develops Lovebooks Presents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lovebooks_Presents> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lovecraft Country (TV series)?", "What develops Lovecraft Country (TV series)?", "Which agent developed Lovecraft Country (TV series)?", "Which agent develops Lovecraft Country (TV series)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lovecraft_Country_(TV_series)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Low G Man: The Low Gravity Man?", "What develops Low G Man: The Low Gravity Man?", "Which agent developed Low G Man: The Low Gravity Man?", "Which agent develops Low G Man: The Low Gravity Man?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Low_G_Man:_The_Low_Gravity_Man> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lucha Libre AAA: Héroes del Ring?", "What develops Lucha Libre AAA: Héroes del Ring?", "Which agent developed Lucha Libre AAA: Héroes del Ring?", "Which agent develops Lucha Libre AAA: Héroes del Ring?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucha_Libre_AAA:_Héroes_del_Ring> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lucidchart?", "What develops Lucidchart?", "Which agent developed Lucidchart?", "Which agent develops Lucidchart?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucidchart> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lucidity (video game)?", "What develops Lucidity (video game)?", "Which agent developed Lucidity (video game)?", "Which agent develops Lucidity (video game)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucidity_(video_game)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lucidpress?", "What develops Lucidpress?", "Which agent developed Lucidpress?", "Which agent develops Lucidpress?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucidpress> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lucienne's Quest?", "What develops Lucienne's Quest?", "Which agent developed Lucienne's Quest?", "Which agent develops Lucienne's Quest?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucienne's_Quest> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lucifer (TV series)?", "What develops Lucifer (TV series)?", "Which agent developed Lucifer (TV series)?", "Which agent develops Lucifer (TV series)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucifer_(TV_series)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lucifox?", "What develops Lucifox?", "Which agent developed Lucifox?", "Which agent develops Lucifox?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucifox> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lucius (video game)?", "What develops Lucius (video game)?", "Which agent developed Lucius (video game)?", "Which agent develops Lucius (video game)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucius_(video_game)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lucky & Wild?", "What develops Lucky & Wild?", "Which agent developed Lucky & Wild?", "Which agent develops Lucky & Wild?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucky_&_Wild> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lucky 7 (TV series)?", "What develops Lucky 7 (TV series)?", "Which agent developed Lucky 7 (TV series)?", "Which agent develops Lucky 7 (TV series)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucky_7_(TV_series)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lucky Dime Caper?", "What develops Lucky Dime Caper?", "Which agent developed Lucky Dime Caper?", "Which agent develops Lucky Dime Caper?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucky_Dime_Caper> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lufia: Curse of the Sinistrals?", "What develops Lufia: Curse of the Sinistrals?", "Which agent developed Lufia: Curse of the Sinistrals?", "Which agent develops Lufia: Curse of the Sinistrals?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lufia:_Curse_of_the_Sinistrals> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lufia: The Legend Returns?", "What develops Lufia: The Legend Returns?", "Which agent developed Lufia: The Legend Returns?", "Which agent develops Lufia: The Legend Returns?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lufia:_The_Legend_Returns> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lufia & the Fortress of Doom?", "What develops Lufia & the Fortress of Doom?", "Which agent developed Lufia & the Fortress of Doom?", "Which agent develops Lufia & the Fortress of Doom?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lufia_&_the_Fortress_of_Doom> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lufia II: Rise of the Sinistrals?", "What develops Lufia II: Rise of the Sinistrals?", "Which agent developed Lufia II: Rise of the Sinistrals?", "Which agent develops Lufia II: Rise of the Sinistrals?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lufia_II:_Rise_of_the_Sinistrals> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Luftrausers?", "What develops Luftrausers?", "Which agent developed Luftrausers?", "Which agent develops Luftrausers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luftrausers> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Luigi's Mansion?", "What develops Luigi's Mansion?", "Which agent developed Luigi's Mansion?", "Which agent develops Luigi's Mansion?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luigi's_Mansion> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Luigi's Mansion: Dark Moon?", "What develops Luigi's Mansion: Dark Moon?", "Which agent developed Luigi's Mansion: Dark Moon?", "Which agent develops Luigi's Mansion: Dark Moon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luigi's_Mansion:_Dark_Moon> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Luigi's Mansion 3?", "What develops Luigi's Mansion 3?", "Which agent developed Luigi's Mansion 3?", "Which agent develops Luigi's Mansion 3?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luigi's_Mansion_3> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lula: The Sexy Empire?", "What develops Lula: The Sexy Empire?", "Which agent developed Lula: The Sexy Empire?", "Which agent develops Lula: The Sexy Empire?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lula:_The_Sexy_Empire> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lula (series)?", "What develops Lula (series)?", "Which agent developed Lula (series)?", "Which agent develops Lula (series)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lula_(series)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lula 3D?", "What develops Lula 3D?", "Which agent developed Lula 3D?", "Which agent develops Lula 3D?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lula_3D> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lumen (software)?", "What develops Lumen (software)?", "Which agent developed Lumen (software)?", "Which agent develops Lumen (software)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lumen_(software)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lumiere (skyscraper)?", "What develops Lumiere (skyscraper)?", "Which agent developed Lumiere (skyscraper)?", "Which agent develops Lumiere (skyscraper)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lumiere_(skyscraper)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lumines: Electronic Symphony?", "What develops Lumines: Electronic Symphony?", "Which agent developed Lumines: Electronic Symphony?", "Which agent develops Lumines: Electronic Symphony?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lumines:_Electronic_Symphony> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lumines: Puzzle Fusion?", "What develops Lumines: Puzzle Fusion?", "Which agent developed Lumines: Puzzle Fusion?", "Which agent develops Lumines: Puzzle Fusion?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lumines:_Puzzle_Fusion> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lumines II?", "What develops Lumines II?", "Which agent developed Lumines II?", "Which agent develops Lumines II?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lumines_II> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lumines Live!?", "What develops Lumines Live!?", "Which agent developed Lumines Live!?", "Which agent develops Lumines Live!?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lumines_Live!> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lumines Supernova?", "What develops Lumines Supernova?", "Which agent developed Lumines Supernova?", "Which agent develops Lumines Supernova?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lumines_Supernova> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Luminous Arc?", "What develops Luminous Arc?", "Which agent developed Luminous Arc?", "Which agent develops Luminous Arc?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luminous_Arc> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Luminous Arc 2?", "What develops Luminous Arc 2?", "Which agent developed Luminous Arc 2?", "Which agent develops Luminous Arc 2?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luminous_Arc_2> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Luminous Arc 3?", "What develops Luminous Arc 3?", "Which agent developed Luminous Arc 3?", "Which agent develops Luminous Arc 3?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luminous_Arc_3> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Luminous Arc Infinity?", "What develops Luminous Arc Infinity?", "Which agent developed Luminous Arc Infinity?", "Which agent develops Luminous Arc Infinity?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luminous_Arc_Infinity> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Luminous Engine?", "What develops Luminous Engine?", "Which agent developed Luminous Engine?", "Which agent develops Luminous Engine?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luminous_Engine> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Luna Online?", "What develops Luna Online?", "Which agent developed Luna Online?", "Which agent develops Luna Online?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luna_Online> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lunacy (video game)?", "What develops Lunacy (video game)?", "Which agent developed Lunacy (video game)?", "Which agent develops Lunacy (video game)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lunacy_(video_game)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lunar: Eternal Blue?", "What develops Lunar: Eternal Blue?", "Which agent developed Lunar: Eternal Blue?", "Which agent develops Lunar: Eternal Blue?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lunar:_Eternal_Blue> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lunar: Sanposuru Gakuen?", "What develops Lunar: Sanposuru Gakuen?", "Which agent developed Lunar: Sanposuru Gakuen?", "Which agent develops Lunar: Sanposuru Gakuen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lunar:_Sanposuru_Gakuen> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lunar: Silver Star Harmony?", "What develops Lunar: Silver Star Harmony?", "Which agent developed Lunar: Silver Star Harmony?", "Which agent develops Lunar: Silver Star Harmony?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lunar:_Silver_Star_Harmony> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lunar: Silver Star Story Complete?", "What develops Lunar: Silver Star Story Complete?", "Which agent developed Lunar: Silver Star Story Complete?", "Which agent develops Lunar: Silver Star Story Complete?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lunar:_Silver_Star_Story_Complete> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lunar: The Silver Star?", "What develops Lunar: The Silver Star?", "Which agent developed Lunar: The Silver Star?", "Which agent develops Lunar: The Silver Star?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lunar:_The_Silver_Star> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lunar Jetman?", "What develops Lunar Jetman?", "Which agent developed Lunar Jetman?", "Which agent develops Lunar Jetman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lunar_Jetman> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lunar Knights?", "What develops Lunar Knights?", "Which agent developed Lunar Knights?", "Which agent develops Lunar Knights?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lunar_Knights> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lunar Lander (1979 video game)?", "What develops Lunar Lander (1979 video game)?", "Which agent developed Lunar Lander (1979 video game)?", "Which agent develops Lunar Lander (1979 video game)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lunar_Lander_(1979_video_game)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lunar Pool?", "What develops Lunar Pool?", "Which agent developed Lunar Pool?", "Which agent develops Lunar Pool?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lunar_Pool> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lunch Break (Philippine TV program)?", "What develops Lunch Break (Philippine TV program)?", "Which agent developed Lunch Break (Philippine TV program)?", "Which agent develops Lunch Break (Philippine TV program)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lunch_Break_(Philippine_TV_program)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lunicus?", "What develops Lunicus?", "Which agent developed Lunicus?", "Which agent develops Lunicus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lunicus> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lupin (Philippine TV series)?", "What develops Lupin (Philippine TV series)?", "Which agent developed Lupin (Philippine TV series)?", "Which agent develops Lupin (Philippine TV series)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lupin_(Philippine_TV_series)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lupin the 3rd: Treasure of the Sorcerer King?", "What develops Lupin the 3rd: Treasure of the Sorcerer King?", "Which agent developed Lupin the 3rd: Treasure of the Sorcerer King?", "Which agent develops Lupin the 3rd: Treasure of the Sorcerer King?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lupin_the_3rd:_Treasure_of_the_Sorcerer_King> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lupin the Third: Lupin Is Dead, Zenigata Is in Love?", "What develops Lupin the Third: Lupin Is Dead, Zenigata Is in Love?", "Which agent developed Lupin the Third: Lupin Is Dead, Zenigata Is in Love?", "Which agent develops Lupin the Third: Lupin Is Dead, Zenigata Is in Love?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lupin_the_Third:_Lupin_Is_Dead,_Zenigata_Is_in_Love> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Lutris?", "What develops Lutris?", "Which agent developed Lutris?", "Which agent develops Lutris?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lutris> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#develop",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed Luxor: Quest for the Afterlife?", "What develops Luxor: Quest for the Afterlife?", "Which agent developed Luxor: Quest for the Afterlife?", "Which agent develops Luxor: Quest for the Afterlife?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luxor:_Quest_for_the_Afterlife> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Lucas Johnson?", "What playes Lucas Johnson?", "Which person played Lucas Johnson?", "Which person playes Lucas Johnson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucas_Johnson> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Lucky Spencer?", "What playes Lucky Spencer?", "Which person played Lucky Spencer?", "Which person playes Lucky Spencer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucky_Spencer> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Lucy Barker?", "What playes Lucy Barker?", "Which person played Lucy Barker?", "Which person playes Lucy Barker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_Barker> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Lucy Coe?", "What playes Lucy Coe?", "Which person played Lucy Coe?", "Which person playes Lucy Coe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_Coe> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Luka Kovač?", "What playes Luka Kovač?", "Which person played Luka Kovač?", "Which person playes Luka Kovač?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luka_Kovač> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Luke Snyder?", "What playes Luke Snyder?", "Which person played Luke Snyder?", "Which person playes Luke Snyder?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luke_Snyder> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Macy Alexander?", "What playes Macy Alexander?", "Which person played Macy Alexander?", "Which person playes Macy Alexander?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Macy_Alexander> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Maggie Astoni?", "What playes Maggie Astoni?", "Which person played Maggie Astoni?", "Which person playes Maggie Astoni?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Maggie_Astoni> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Mai Shiranui?", "What playes Mai Shiranui?", "Which person played Mai Shiranui?", "Which person playes Mai Shiranui?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mai_Shiranui> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Maleficent?", "What playes Maleficent?", "Which person played Maleficent?", "Which person playes Maleficent?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Maleficent> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Carrie White?", "What playes Carrie White?", "Which person played Carrie White?", "Which person playes Carrie White?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Carrie_White> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Casey Novak?", "What playes Casey Novak?", "Which person played Casey Novak?", "Which person playes Casey Novak?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Casey_Novak> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Cassian Andor?", "What playes Cassian Andor?", "Which person played Cassian Andor?", "Which person playes Cassian Andor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Cassian_Andor> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Cordelia Gray?", "What playes Cordelia Gray?", "Which person played Cordelia Gray?", "Which person playes Cordelia Gray?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Cordelia_Gray> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Ursula (The Little Mermaid)?", "What playes Ursula (The Little Mermaid)?", "Which person played Ursula (The Little Mermaid)?", "Which person playes Ursula (The Little Mermaid)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ursula_(The_Little_Mermaid)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Valerie Grant?", "What playes Valerie Grant?", "Which person played Valerie Grant?", "Which person playes Valerie Grant?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Valerie_Grant> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Veronica Mars (character)?", "What playes Veronica Mars (character)?", "Which person played Veronica Mars (character)?", "Which person playes Veronica Mars (character)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Veronica_Mars_(character)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Curly Watts?", "What playes Curly Watts?", "Which person played Curly Watts?", "Which person playes Curly Watts?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Curly_Watts> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played D'Hoffryn?", "What playes D'Hoffryn?", "Which person played D'Hoffryn?", "Which person playes D'Hoffryn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/D'Hoffryn> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Damian Spinelli?", "What playes Damian Spinelli?", "Which person played Damian Spinelli?", "Which person playes Damian Spinelli?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Damian_Spinelli> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played First Evil?", "What playes First Evil?", "Which person played First Evil?", "Which person playes First Evil?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/First_Evil> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Frank Booth (Blue Velvet)?", "What playes Frank Booth (Blue Velvet)?", "Which person played Frank Booth (Blue Velvet)?", "Which person playes Frank Booth (Blue Velvet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Frank_Booth_(Blue_Velvet)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Hannah Baxter?", "What playes Hannah Baxter?", "Which person played Hannah Baxter?", "Which person playes Hannah Baxter?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Hannah_Baxter> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played List of Chaos Walking characters?", "What playes List of Chaos Walking characters?", "Which person played List of Chaos Walking characters?", "Which person playes List of Chaos Walking characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Chaos_Walking_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played List of Community characters?", "What playes List of Community characters?", "Which person played List of Community characters?", "Which person playes List of Community characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Community_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played List of Emmerdale characters (2004)?", "What playes List of Emmerdale characters (2004)?", "Which person played List of Emmerdale characters (2004)?", "Which person playes List of Emmerdale characters (2004)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Emmerdale_characters_(2004)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played List of My Family characters?", "What playes List of My Family characters?", "Which person played List of My Family characters?", "Which person playes List of My Family characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_My_Family_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played List of Neighbours characters (1990)?", "What playes List of Neighbours characters (1990)?", "Which person played List of Neighbours characters (1990)?", "Which person playes List of Neighbours characters (1990)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Neighbours_characters_(1990)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played List of New Tricks characters?", "What playes List of New Tricks characters?", "Which person played List of New Tricks characters?", "Which person playes List of New Tricks characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_New_Tricks_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played List of Shortland Street characters (1993)?", "What playes List of Shortland Street characters (1993)?", "Which person played List of Shortland Street characters (1993)?", "Which person playes List of Shortland Street characters (1993)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Shortland_Street_characters_(1993)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Professor Bobo?", "What playes Professor Bobo?", "Which person played Professor Bobo?", "Which person playes Professor Bobo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Professor_Bobo> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played The Blue Racer?", "What playes The Blue Racer?", "Which person played The Blue Racer?", "Which person playes The Blue Racer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Blue_Racer> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played The Bride (Kill Bill)?", "What playes The Bride (Kill Bill)?", "Which person played The Bride (Kill Bill)?", "Which person playes The Bride (Kill Bill)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Bride_(Kill_Bill)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Petya Rostov?", "What playes Petya Rostov?", "Which person played Petya Rostov?", "Which person playes Petya Rostov?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Petya_Rostov> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Ronald McDonald?", "What playes Ronald McDonald?", "Which person played Ronald McDonald?", "Which person playes Ronald McDonald?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ronald_McDonald> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Rudy Huxtable?", "What playes Rudy Huxtable?", "Which person played Rudy Huxtable?", "Which person playes Rudy Huxtable?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Rudy_Huxtable> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Samantha Jones (Sex and the City)?", "What playes Samantha Jones (Sex and the City)?", "Which person played Samantha Jones (Sex and the City)?", "Which person playes Samantha Jones (Sex and the City)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Samantha_Jones_(Sex_and_the_City)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Savely Govorkov?", "What playes Savely Govorkov?", "Which person played Savely Govorkov?", "Which person playes Savely Govorkov?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Savely_Govorkov> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Scarecrow (Oz)?", "What playes Scarecrow (Oz)?", "Which person played Scarecrow (Oz)?", "Which person playes Scarecrow (Oz)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Scarecrow_(Oz)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Scott Hunter (Home and Away)?", "What playes Scott Hunter (Home and Away)?", "Which person played Scott Hunter (Home and Away)?", "Which person playes Scott Hunter (Home and Away)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Scott_Hunter_(Home_and_Away)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Scotty Wandell?", "What playes Scotty Wandell?", "Which person played Scotty Wandell?", "Which person playes Scotty Wandell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Scotty_Wandell> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played George Smiley?", "What playes George Smiley?", "Which person played George Smiley?", "Which person playes George Smiley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/George_Smiley> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Patty Hewes?", "What playes Patty Hewes?", "Which person played Patty Hewes?", "Which person playes Patty Hewes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Patty_Hewes> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Ste Hay?", "What playes Ste Hay?", "Which person played Ste Hay?", "Which person playes Ste Hay?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ste_Hay> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Justus Ward?", "What playes Justus Ward?", "Which person played Justus Ward?", "Which person playes Justus Ward?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Justus_Ward> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Jake Hanson?", "What playes Jake Hanson?", "Which person played Jake Hanson?", "Which person playes Jake Hanson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Jake_Hanson> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Sybil Fawlty?", "What playes Sybil Fawlty?", "Which person played Sybil Fawlty?", "Which person playes Sybil Fawlty?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Sybil_Fawlty> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Natalie Barnes?", "What playes Natalie Barnes?", "Which person played Natalie Barnes?", "Which person playes Natalie Barnes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Natalie_Barnes> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Vinnie Kruse?", "What playes Vinnie Kruse?", "Which person played Vinnie Kruse?", "Which person playes Vinnie Kruse?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Vinnie_Kruse> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Mindy Lewis?", "What playes Mindy Lewis?", "Which person played Mindy Lewis?", "Which person playes Mindy Lewis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mindy_Lewis> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Professor Chronotis?", "What playes Professor Chronotis?", "Which person played Professor Chronotis?", "Which person playes Professor Chronotis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Professor_Chronotis> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Olenna Tyrell?", "What playes Olenna Tyrell?", "Which person played Olenna Tyrell?", "Which person playes Olenna Tyrell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Olenna_Tyrell> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Billie Jackson?", "What playes Billie Jackson?", "Which person played Billie Jackson?", "Which person playes Billie Jackson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Billie_Jackson> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Billie Reed?", "What playes Billie Reed?", "Which person played Billie Reed?", "Which person playes Billie Reed?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Billie_Reed> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Billy (Black Christmas)?", "What playes Billy (Black Christmas)?", "Which person played Billy (Black Christmas)?", "Which person playes Billy (Black Christmas)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Billy_(Black_Christmas)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Billy Abbott?", "What playes Billy Abbott?", "Which person played Billy Abbott?", "Which person playes Billy Abbott?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Billy_Abbott> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Billy Cranston?", "What playes Billy Cranston?", "Which person played Billy Cranston?", "Which person playes Billy Cranston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Billy_Cranston> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Blanche Hunt?", "What playes Blanche Hunt?", "Which person played Blanche Hunt?", "Which person playes Blanche Hunt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Blanche_Hunt> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Bob Hughes?", "What playes Bob Hughes?", "Which person played Bob Hughes?", "Which person playes Bob Hughes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Bob_Hughes> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Boba Fett?", "What playes Boba Fett?", "Which person played Boba Fett?", "Which person playes Boba Fett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Boba_Fett> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Bowser (character)?", "What playes Bowser (character)?", "Which person played Bowser (character)?", "Which person playes Bowser (character)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Bowser_(character)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Brad Carlton?", "What playes Brad Carlton?", "Which person played Brad Carlton?", "Which person playes Brad Carlton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Brad_Carlton> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Denise Fox?", "What playes Denise Fox?", "Which person played Denise Fox?", "Which person playes Denise Fox?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Denise_Fox> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Desdemona?", "What playes Desdemona?", "Which person played Desdemona?", "Which person playes Desdemona?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Desdemona> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Dominique Deveraux?", "What playes Dominique Deveraux?", "Which person played Dominique Deveraux?", "Which person playes Dominique Deveraux?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dominique_Deveraux> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Domino Vitali?", "What playes Domino Vitali?", "Which person played Domino Vitali?", "Which person playes Domino Vitali?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Domino_Vitali> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Andy Sipowicz?", "What playes Andy Sipowicz?", "Which person played Andy Sipowicz?", "Which person playes Andy Sipowicz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Andy_Sipowicz> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Angelique Bouchard Collins?", "What playes Angelique Bouchard Collins?", "Which person played Angelique Bouchard Collins?", "Which person playes Angelique Bouchard Collins?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Angelique_Bouchard_Collins> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Glenda Mitchell?", "What playes Glenda Mitchell?", "Which person played Glenda Mitchell?", "Which person playes Glenda Mitchell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Glenda_Mitchell> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Kevin Fisher (The Young and the Restless)?", "What playes Kevin Fisher (The Young and the Restless)?", "Which person played Kevin Fisher (The Young and the Restless)?", "Which person playes Kevin Fisher (The Young and the Restless)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Kevin_Fisher_(The_Young_and_the_Restless)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Kiki Jerome?", "What playes Kiki Jerome?", "Which person played Kiki Jerome?", "Which person playes Kiki Jerome?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Kiki_Jerome> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played King Ezekiel?", "What playes King Ezekiel?", "Which person played King Ezekiel?", "Which person playes King Ezekiel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/King_Ezekiel> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Kirby Anders?", "What playes Kirby Anders?", "Which person played Kirby Anders?", "Which person playes Kirby Anders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Kirby_Anders> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Kiriti Roy?", "What playes Kiriti Roy?", "Which person played Kiriti Roy?", "Which person playes Kiriti Roy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Kiriti_Roy> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Princess Leia?", "What playes Princess Leia?", "Which person played Princess Leia?", "Which person playes Princess Leia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Princess_Leia> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Rachel Gannon?", "What playes Rachel Gannon?", "Which person played Rachel Gannon?", "Which person playes Rachel Gannon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Rachel_Gannon> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played List of Andromeda characters?", "What playes List of Andromeda characters?", "Which person played List of Andromeda characters?", "Which person playes List of Andromeda characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Andromeda_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played List of Coronation Street characters (1969)?", "What playes List of Coronation Street characters (1969)?", "Which person played List of Coronation Street characters (1969)?", "Which person playes List of Coronation Street characters (1969)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Coronation_Street_characters_(1969)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played List of ER characters?", "What playes List of ER characters?", "Which person played List of ER characters?", "Which person playes List of ER characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_ER_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played List of EastEnders characters (2006)?", "What playes List of EastEnders characters (2006)?", "Which person played List of EastEnders characters (2006)?", "Which person playes List of EastEnders characters (2006)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_EastEnders_characters_(2006)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played List of EastEnders characters (2007)?", "What playes List of EastEnders characters (2007)?", "Which person played List of EastEnders characters (2007)?", "Which person playes List of EastEnders characters (2007)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_EastEnders_characters_(2007)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played List of Emmerdale characters (2006)?", "What playes List of Emmerdale characters (2006)?", "Which person played List of Emmerdale characters (2006)?", "Which person playes List of Emmerdale characters (2006)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Emmerdale_characters_(2006)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played List of Hollyoaks characters (2009)?", "What playes List of Hollyoaks characters (2009)?", "Which person played List of Hollyoaks characters (2009)?", "Which person playes List of Hollyoaks characters (2009)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Hollyoaks_characters_(2009)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played List of Neighbours characters (2008)?", "What playes List of Neighbours characters (2008)?", "Which person played List of Neighbours characters (2008)?", "Which person playes List of Neighbours characters (2008)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Neighbours_characters_(2008)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played List of Primeval characters?", "What playes List of Primeval characters?", "Which person played List of Primeval characters?", "Which person playes List of Primeval characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Primeval_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played List of The Inbetweeners characters?", "What playes List of The Inbetweeners characters?", "Which person played List of The Inbetweeners characters?", "Which person playes List of The Inbetweeners characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_The_Inbetweeners_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played General Hux?", "What playes General Hux?", "Which person played General Hux?", "Which person playes General Hux?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/General_Hux> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played List of A Series of Unfortunate Events characters?", "What playes List of A Series of Unfortunate Events characters?", "Which person played List of A Series of Unfortunate Events characters?", "Which person playes List of A Series of Unfortunate Events characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_A_Series_of_Unfortunate_Events_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played List of Coronation Street characters (2002)?", "What playes List of Coronation Street characters (2002)?", "Which person played List of Coronation Street characters (2002)?", "Which person playes List of Coronation Street characters (2002)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Coronation_Street_characters_(2002)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played List of EastEnders characters (2016)?", "What playes List of EastEnders characters (2016)?", "Which person played List of EastEnders characters (2016)?", "Which person playes List of EastEnders characters (2016)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_EastEnders_characters_(2016)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played List of Emmerdale characters (2007)?", "What playes List of Emmerdale characters (2007)?", "Which person played List of Emmerdale characters (2007)?", "Which person playes List of Emmerdale characters (2007)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Emmerdale_characters_(2007)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played List of Hollyoaks characters (2013)?", "What playes List of Hollyoaks characters (2013)?", "Which person played List of Hollyoaks characters (2013)?", "Which person playes List of Hollyoaks characters (2013)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Hollyoaks_characters_(2013)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played List of Hollyoaks characters (2015)?", "What playes List of Hollyoaks characters (2015)?", "Which person played List of Hollyoaks characters (2015)?", "Which person playes List of Hollyoaks characters (2015)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Hollyoaks_characters_(2015)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played List of Star Trek: Voyager characters?", "What playes List of Star Trek: Voyager characters?", "Which person played List of Star Trek: Voyager characters?", "Which person playes List of Star Trek: Voyager characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Star_Trek:_Voyager_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played List of The Shield characters?", "What playes List of The Shield characters?", "Which person played List of The Shield characters?", "Which person playes List of The Shield characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_The_Shield_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Norman Bates?", "What playes Norman Bates?", "Which person played Norman Bates?", "Which person playes Norman Bates?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Norman_Bates> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Tony Gordon?", "What playes Tony Gordon?", "Which person played Tony Gordon?", "Which person playes Tony Gordon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Tony_Gordon> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Glinda the Good Witch?", "What playes Glinda the Good Witch?", "Which person played Glinda the Good Witch?", "Which person playes Glinda the Good Witch?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Glinda_the_Good_Witch> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Grandmama (The Addams Family)?", "What playes Grandmama (The Addams Family)?", "Which person played Grandmama (The Addams Family)?", "Which person playes Grandmama (The Addams Family)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Grandmama_(The_Addams_Family)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#play",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played Gyp Rosetti?", "What playes Gyp Rosetti?", "Which person played Gyp Rosetti?", "Which person playes Gyp Rosetti?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gyp_Rosetti> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Alun Armstrong (actor)?", "What was played by Alun Armstrong (actor)?", "Which fictional character is played by Alun Armstrong (actor)?", "Which fictional character was played by Alun Armstrong (actor)?", "Which fictional characters are played by Alun Armstrong (actor)?", "Which fictional characters were played by Alun Armstrong (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Alun_Armstrong_(actor)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Luca Zingaretti?", "What was played by Luca Zingaretti?", "Which fictional character is played by Luca Zingaretti?", "Which fictional character was played by Luca Zingaretti?", "Which fictional characters are played by Luca Zingaretti?", "Which fictional characters were played by Luca Zingaretti?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luca_Zingaretti>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucas Black?", "What was played by Lucas Black?", "Which fictional character is played by Lucas Black?", "Which fictional character was played by Lucas Black?", "Which fictional characters are played by Lucas Black?", "Which fictional characters were played by Lucas Black?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucas_Black>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucas Grabeel?", "What was played by Lucas Grabeel?", "Which fictional character is played by Lucas Grabeel?", "Which fictional character was played by Lucas Grabeel?", "Which fictional characters are played by Lucas Grabeel?", "Which fictional characters were played by Lucas Grabeel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucas_Grabeel>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucas Jade Zumann?", "What was played by Lucas Jade Zumann?", "Which fictional character is played by Lucas Jade Zumann?", "Which fictional character was played by Lucas Jade Zumann?", "Which fictional characters are played by Lucas Jade Zumann?", "Which fictional characters were played by Lucas Jade Zumann?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucas_Jade_Zumann>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucas Steele?", "What was played by Lucas Steele?", "Which fictional character is played by Lucas Steele?", "Which fictional character was played by Lucas Steele?", "Which fictional characters are played by Lucas Steele?", "Which fictional characters were played by Lucas Steele?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucas_Steele>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucas Till?", "What was played by Lucas Till?", "Which fictional character is played by Lucas Till?", "Which fictional character was played by Lucas Till?", "Which fictional characters are played by Lucas Till?", "Which fictional characters were played by Lucas Till?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucas_Till>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucian Msamati?", "What was played by Lucian Msamati?", "Which fictional character is played by Lucian Msamati?", "Which fictional character was played by Lucian Msamati?", "Which fictional characters are played by Lucian Msamati?", "Which fictional characters were played by Lucian Msamati?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucian_Msamati>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Luciana Carro?", "What was played by Luciana Carro?", "Which fictional character is played by Luciana Carro?", "Which fictional character was played by Luciana Carro?", "Which fictional characters are played by Luciana Carro?", "Which fictional characters were played by Luciana Carro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luciana_Carro>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Luciano Cáceres?", "What was played by Luciano Cáceres?", "Which fictional character is played by Luciano Cáceres?", "Which fictional character was played by Luciano Cáceres?", "Which fictional characters are played by Luciano Cáceres?", "Which fictional characters were played by Luciano Cáceres?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luciano_Cáceres>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucien Laviscount?", "What was played by Lucien Laviscount?", "Which fictional character is played by Lucien Laviscount?", "Which fictional character was played by Lucien Laviscount?", "Which fictional characters are played by Lucien Laviscount?", "Which fictional characters were played by Lucien Laviscount?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucien_Laviscount>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucille Ball?", "What was played by Lucille Ball?", "Which fictional character is played by Lucille Ball?", "Which fictional character was played by Lucille Ball?", "Which fictional characters are played by Lucille Ball?", "Which fictional characters were played by Lucille Ball?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucille_Ball>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucille Wall?", "What was played by Lucille Wall?", "Which fictional character is played by Lucille Wall?", "Which fictional character was played by Lucille Wall?", "Which fictional characters are played by Lucille Wall?", "Which fictional characters were played by Lucille Wall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucille_Wall>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucinda Dryzek?", "What was played by Lucinda Dryzek?", "Which fictional character is played by Lucinda Dryzek?", "Which fictional character was played by Lucinda Dryzek?", "Which fictional characters are played by Lucinda Dryzek?", "Which fictional characters were played by Lucinda Dryzek?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucinda_Dryzek>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucy-Jo Hudson?", "What was played by Lucy-Jo Hudson?", "Which fictional character is played by Lucy-Jo Hudson?", "Which fictional character was played by Lucy-Jo Hudson?", "Which fictional characters are played by Lucy-Jo Hudson?", "Which fictional characters were played by Lucy-Jo Hudson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy-Jo_Hudson>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucy Benjamin?", "What was played by Lucy Benjamin?", "Which fictional character is played by Lucy Benjamin?", "Which fictional character was played by Lucy Benjamin?", "Which fictional characters are played by Lucy Benjamin?", "Which fictional characters were played by Lucy Benjamin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Benjamin>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucy Brown?", "What was played by Lucy Brown?", "Which fictional character is played by Lucy Brown?", "Which fictional character was played by Lucy Brown?", "Which fictional characters are played by Lucy Brown?", "Which fictional characters were played by Lucy Brown?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Brown>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucy Davis?", "What was played by Lucy Davis?", "Which fictional character is played by Lucy Davis?", "Which fictional character was played by Lucy Davis?", "Which fictional characters are played by Lucy Davis?", "Which fictional characters were played by Lucy Davis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Davis>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucy DeCoutere?", "What was played by Lucy DeCoutere?", "Which fictional character is played by Lucy DeCoutere?", "Which fictional character was played by Lucy DeCoutere?", "Which fictional characters are played by Lucy DeCoutere?", "Which fictional characters were played by Lucy DeCoutere?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_DeCoutere>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucy Deakins?", "What was played by Lucy Deakins?", "Which fictional character is played by Lucy Deakins?", "Which fictional character was played by Lucy Deakins?", "Which fictional characters are played by Lucy Deakins?", "Which fictional characters were played by Lucy Deakins?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Deakins>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucy Dixon?", "What was played by Lucy Dixon?", "Which fictional character is played by Lucy Dixon?", "Which fictional character was played by Lucy Dixon?", "Which fictional characters are played by Lucy Dixon?", "Which fictional characters were played by Lucy Dixon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Dixon>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucy Durack?", "What was played by Lucy Durack?", "Which fictional character is played by Lucy Durack?", "Which fictional character was played by Lucy Durack?", "Which fictional characters are played by Lucy Durack?", "Which fictional characters were played by Lucy Durack?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Durack>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucy Evans?", "What was played by Lucy Evans?", "Which fictional character is played by Lucy Evans?", "Which fictional character was played by Lucy Evans?", "Which fictional characters are played by Lucy Evans?", "Which fictional characters were played by Lucy Evans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Evans>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucy Fallon?", "What was played by Lucy Fallon?", "Which fictional character is played by Lucy Fallon?", "Which fictional character was played by Lucy Fallon?", "Which fictional characters are played by Lucy Fallon?", "Which fictional characters were played by Lucy Fallon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Fallon>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucy Gaskell?", "What was played by Lucy Gaskell?", "Which fictional character is played by Lucy Gaskell?", "Which fictional character was played by Lucy Gaskell?", "Which fictional characters are played by Lucy Gaskell?", "Which fictional characters were played by Lucy Gaskell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Gaskell>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucy Griffiths (actress, born 1986)?", "What was played by Lucy Griffiths (actress, born 1986)?", "Which fictional character is played by Lucy Griffiths (actress, born 1986)?", "Which fictional character was played by Lucy Griffiths (actress, born 1986)?", "Which fictional characters are played by Lucy Griffiths (actress, born 1986)?", "Which fictional characters were played by Lucy Griffiths (actress, born 1986)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Griffiths_(actress,_born_1986)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucy Hale?", "What was played by Lucy Hale?", "Which fictional character is played by Lucy Hale?", "Which fictional character was played by Lucy Hale?", "Which fictional characters are played by Lucy Hale?", "Which fictional characters were played by Lucy Hale?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Hale>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucy Lawless?", "What was played by Lucy Lawless?", "Which fictional character is played by Lucy Lawless?", "Which fictional character was played by Lucy Lawless?", "Which fictional characters are played by Lucy Lawless?", "Which fictional characters were played by Lucy Lawless?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Lawless>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucy Liu?", "What was played by Lucy Liu?", "Which fictional character is played by Lucy Liu?", "Which fictional character was played by Lucy Liu?", "Which fictional characters are played by Lucy Liu?", "Which fictional characters were played by Lucy Liu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Liu>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucy Pargeter?", "What was played by Lucy Pargeter?", "Which fictional character is played by Lucy Pargeter?", "Which fictional character was played by Lucy Pargeter?", "Which fictional characters are played by Lucy Pargeter?", "Which fictional characters were played by Lucy Pargeter?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Pargeter>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lucy Speed?", "What was played by Lucy Speed?", "Which fictional character is played by Lucy Speed?", "Which fictional character was played by Lucy Speed?", "Which fictional characters are played by Lucy Speed?", "Which fictional characters were played by Lucy Speed?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Speed>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Ludi Lin?", "What was played by Ludi Lin?", "Which fictional character is played by Ludi Lin?", "Which fictional character was played by Ludi Lin?", "Which fictional characters are played by Ludi Lin?", "Which fictional characters were played by Ludi Lin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ludi_Lin>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Ludivine Sagnier?", "What was played by Ludivine Sagnier?", "Which fictional character is played by Ludivine Sagnier?", "Which fictional character was played by Ludivine Sagnier?", "Which fictional characters are played by Ludivine Sagnier?", "Which fictional characters were played by Ludivine Sagnier?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ludivine_Sagnier>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Luisa Bradshaw-White?", "What was played by Luisa Bradshaw-White?", "Which fictional character is played by Luisa Bradshaw-White?", "Which fictional character was played by Luisa Bradshaw-White?", "Which fictional characters are played by Luisa Bradshaw-White?", "Which fictional characters were played by Luisa Bradshaw-White?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luisa_Bradshaw-White>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Luke Bracey?", "What was played by Luke Bracey?", "Which fictional character is played by Luke Bracey?", "Which fictional character was played by Luke Bracey?", "Which fictional characters are played by Luke Bracey?", "Which fictional characters were played by Luke Bracey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Bracey>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Luke Evans?", "What was played by Luke Evans?", "Which fictional character is played by Luke Evans?", "Which fictional character was played by Luke Evans?", "Which fictional characters are played by Luke Evans?", "Which fictional characters were played by Luke Evans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Evans>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Luke Jacobz?", "What was played by Luke Jacobz?", "Which fictional character is played by Luke Jacobz?", "Which fictional character was played by Luke Jacobz?", "Which fictional characters are played by Luke Jacobz?", "Which fictional characters were played by Luke Jacobz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Jacobz>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Luke Jerdy?", "What was played by Luke Jerdy?", "Which fictional character is played by Luke Jerdy?", "Which fictional character was played by Luke Jerdy?", "Which fictional characters are played by Luke Jerdy?", "Which fictional characters were played by Luke Jerdy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Jerdy>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Luke Kleintank?", "What was played by Luke Kleintank?", "Which fictional character is played by Luke Kleintank?", "Which fictional character was played by Luke Kleintank?", "Which fictional characters are played by Luke Kleintank?", "Which fictional characters were played by Luke Kleintank?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Kleintank>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Luke Macfarlane?", "What was played by Luke Macfarlane?", "Which fictional character is played by Luke Macfarlane?", "Which fictional character was played by Luke Macfarlane?", "Which fictional characters are played by Luke Macfarlane?", "Which fictional characters were played by Luke Macfarlane?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Macfarlane>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Luke Mitchell?", "What was played by Luke Mitchell?", "Which fictional character is played by Luke Mitchell?", "Which fictional character was played by Luke Mitchell?", "Which fictional characters are played by Luke Mitchell?", "Which fictional characters were played by Luke Mitchell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Mitchell>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Luke Pasqualino?", "What was played by Luke Pasqualino?", "Which fictional character is played by Luke Pasqualino?", "Which fictional character was played by Luke Pasqualino?", "Which fictional characters are played by Luke Pasqualino?", "Which fictional characters were played by Luke Pasqualino?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Pasqualino>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Luke Pegler?", "What was played by Luke Pegler?", "Which fictional character is played by Luke Pegler?", "Which fictional character was played by Luke Pegler?", "Which fictional characters are played by Luke Pegler?", "Which fictional characters were played by Luke Pegler?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Pegler>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Luke Perry?", "What was played by Luke Perry?", "Which fictional character is played by Luke Perry?", "Which fictional character was played by Luke Perry?", "Which fictional characters are played by Luke Perry?", "Which fictional characters were played by Luke Perry?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Perry>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Luke Roberts (actor)?", "What was played by Luke Roberts (actor)?", "Which fictional character is played by Luke Roberts (actor)?", "Which fictional character was played by Luke Roberts (actor)?", "Which fictional characters are played by Luke Roberts (actor)?", "Which fictional characters were played by Luke Roberts (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Roberts_(actor)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Luke Roskell?", "What was played by Luke Roskell?", "Which fictional character is played by Luke Roskell?", "Which fictional character was played by Luke Roskell?", "Which fictional characters are played by Luke Roskell?", "Which fictional characters were played by Luke Roskell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Roskell>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Luke Tarsitano?", "What was played by Luke Tarsitano?", "Which fictional character is played by Luke Tarsitano?", "Which fictional character was played by Luke Tarsitano?", "Which fictional characters are played by Luke Tarsitano?", "Which fictional characters were played by Luke Tarsitano?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Tarsitano>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Luke Tittensor?", "What was played by Luke Tittensor?", "Which fictional character is played by Luke Tittensor?", "Which fictional character was played by Luke Tittensor?", "Which fictional characters are played by Luke Tittensor?", "Which fictional characters were played by Luke Tittensor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Tittensor>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Luke Youngblood?", "What was played by Luke Youngblood?", "Which fictional character is played by Luke Youngblood?", "Which fictional character was played by Luke Youngblood?", "Which fictional characters are played by Luke Youngblood?", "Which fictional characters were played by Luke Youngblood?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Youngblood>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lulu (singer)?", "What was played by Lulu (singer)?", "Which fictional character is played by Lulu (singer)?", "Which fictional character was played by Lulu (singer)?", "Which fictional characters are played by Lulu (singer)?", "Which fictional characters were played by Lulu (singer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lulu_(singer)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lupita Nyong'o?", "What was played by Lupita Nyong'o?", "Which fictional character is played by Lupita Nyong'o?", "Which fictional character was played by Lupita Nyong'o?", "Which fictional characters are played by Lupita Nyong'o?", "Which fictional characters were played by Lupita Nyong'o?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lupita_Nyong'o>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lydia Lloyd-Henry?", "What was played by Lydia Lloyd-Henry?", "Which fictional character is played by Lydia Lloyd-Henry?", "Which fictional character was played by Lydia Lloyd-Henry?", "Which fictional characters are played by Lydia Lloyd-Henry?", "Which fictional characters were played by Lydia Lloyd-Henry?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lydia_Lloyd-Henry>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lydia Wilson?", "What was played by Lydia Wilson?", "Which fictional character is played by Lydia Wilson?", "Which fictional character was played by Lydia Wilson?", "Which fictional characters are played by Lydia Wilson?", "Which fictional characters were played by Lydia Wilson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lydia_Wilson>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lyn Collingwood?", "What was played by Lyn Collingwood?", "Which fictional character is played by Lyn Collingwood?", "Which fictional character was played by Lyn Collingwood?", "Which fictional characters are played by Lyn Collingwood?", "Which fictional characters were played by Lyn Collingwood?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lyn_Collingwood>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lyn Paul?", "What was played by Lyn Paul?", "Which fictional character is played by Lyn Paul?", "Which fictional character was played by Lyn Paul?", "Which fictional characters are played by Lyn Paul?", "Which fictional characters were played by Lyn Paul?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lyn_Paul>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lynda Baron?", "What was played by Lynda Baron?", "Which fictional character is played by Lynda Baron?", "Which fictional character was played by Lynda Baron?", "Which fictional characters are played by Lynda Baron?", "Which fictional characters were played by Lynda Baron?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynda_Baron>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lyndon Ogbourne?", "What was played by Lyndon Ogbourne?", "Which fictional character is played by Lyndon Ogbourne?", "Which fictional character was played by Lyndon Ogbourne?", "Which fictional characters are played by Lyndon Ogbourne?", "Which fictional characters were played by Lyndon Ogbourne?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lyndon_Ogbourne>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lyndsy Fonseca?", "What was played by Lyndsy Fonseca?", "Which fictional character is played by Lyndsy Fonseca?", "Which fictional character was played by Lyndsy Fonseca?", "Which fictional characters are played by Lyndsy Fonseca?", "Which fictional characters were played by Lyndsy Fonseca?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lyndsy_Fonseca>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lynn Dalby?", "What was played by Lynn Dalby?", "Which fictional character is played by Lynn Dalby?", "Which fictional character was played by Lynn Dalby?", "Which fictional characters are played by Lynn Dalby?", "Which fictional characters were played by Lynn Dalby?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynn_Dalby>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lynn Farleigh?", "What was played by Lynn Farleigh?", "Which fictional character is played by Lynn Farleigh?", "Which fictional character was played by Lynn Farleigh?", "Which fictional characters are played by Lynn Farleigh?", "Which fictional characters were played by Lynn Farleigh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynn_Farleigh>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lynn Herring?", "What was played by Lynn Herring?", "Which fictional character is played by Lynn Herring?", "Which fictional character was played by Lynn Herring?", "Which fictional characters are played by Lynn Herring?", "Which fictional characters were played by Lynn Herring?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynn_Herring>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lynn Redgrave?", "What was played by Lynn Redgrave?", "Which fictional character is played by Lynn Redgrave?", "Which fictional character was played by Lynn Redgrave?", "Which fictional characters are played by Lynn Redgrave?", "Which fictional characters were played by Lynn Redgrave?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynn_Redgrave>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lynne Carol?", "What was played by Lynne Carol?", "Which fictional character is played by Lynne Carol?", "Which fictional character was played by Lynne Carol?", "Which fictional characters are played by Lynne Carol?", "Which fictional characters were played by Lynne Carol?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynne_Carol>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lynne McGranger?", "What was played by Lynne McGranger?", "Which fictional character is played by Lynne McGranger?", "Which fictional character was played by Lynne McGranger?", "Which fictional characters are played by Lynne McGranger?", "Which fictional characters were played by Lynne McGranger?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynne_McGranger>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lynne Miller?", "What was played by Lynne Miller?", "Which fictional character is played by Lynne Miller?", "Which fictional character was played by Lynne Miller?", "Which fictional characters are played by Lynne Miller?", "Which fictional characters were played by Lynne Miller?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynne_Miller>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lynne Perrie?", "What was played by Lynne Perrie?", "Which fictional character is played by Lynne Perrie?", "Which fictional character was played by Lynne Perrie?", "Which fictional characters are played by Lynne Perrie?", "Which fictional characters were played by Lynne Perrie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynne_Perrie>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lynnie Greene?", "What was played by Lynnie Greene?", "Which fictional character is played by Lynnie Greene?", "Which fictional character was played by Lynnie Greene?", "Which fictional characters are played by Lynnie Greene?", "Which fictional characters were played by Lynnie Greene?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynnie_Greene>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lynsey Bartilson?", "What was played by Lynsey Bartilson?", "Which fictional character is played by Lynsey Bartilson?", "Which fictional character was played by Lynsey Bartilson?", "Which fictional characters are played by Lynsey Bartilson?", "Which fictional characters were played by Lynsey Bartilson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynsey_Bartilson>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Lysette Anthony?", "What was played by Lysette Anthony?", "Which fictional character is played by Lysette Anthony?", "Which fictional character was played by Lysette Anthony?", "Which fictional characters are played by Lysette Anthony?", "Which fictional characters were played by Lysette Anthony?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lysette_Anthony>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by M'fundo Morrison?", "What was played by M'fundo Morrison?", "Which fictional character is played by M'fundo Morrison?", "Which fictional character was played by M'fundo Morrison?", "Which fictional characters are played by M'fundo Morrison?", "Which fictional characters were played by M'fundo Morrison?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/M'fundo_Morrison>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by M*A*S*H (TV series)?", "What was played by M*A*S*H (TV series)?", "Which fictional character is played by M*A*S*H (TV series)?", "Which fictional character was played by M*A*S*H (TV series)?", "Which fictional characters are played by M*A*S*H (TV series)?", "Which fictional characters were played by M*A*S*H (TV series)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/M*A*S*H_(TV_series)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by M. C. Gainey?", "What was played by M. C. Gainey?", "Which fictional character is played by M. C. Gainey?", "Which fictional character was played by M. C. Gainey?", "Which fictional characters are played by M. C. Gainey?", "Which fictional characters were played by M. C. Gainey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/M._C._Gainey>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by M. Pokora?", "What was played by M. Pokora?", "Which fictional character is played by M. Pokora?", "Which fictional character was played by M. Pokora?", "Which fictional characters are played by M. Pokora?", "Which fictional characters were played by M. Pokora?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/M._Pokora>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by MASH (film)?", "What was played by MASH (film)?", "Which fictional character is played by MASH (film)?", "Which fictional character was played by MASH (film)?", "Which fictional characters are played by MASH (film)?", "Which fictional characters were played by MASH (film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/MASH_(film)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Mabel Ballin?", "What was played by Mabel Ballin?", "Which fictional character is played by Mabel Ballin?", "Which fictional character was played by Mabel Ballin?", "Which fictional characters are played by Mabel Ballin?", "Which fictional characters were played by Mabel Ballin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mabel_Ballin>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Mabel King?", "What was played by Mabel King?", "Which fictional character is played by Mabel King?", "Which fictional character was played by Mabel King?", "Which fictional characters are played by Mabel King?", "Which fictional characters were played by Mabel King?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mabel_King>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by MacDonald Carey?", "What was played by MacDonald Carey?", "Which fictional character is played by MacDonald Carey?", "Which fictional character was played by MacDonald Carey?", "Which fictional characters are played by MacDonald Carey?", "Which fictional characters were played by MacDonald Carey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/MacDonald_Carey>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by MacKenzie Mauzy?", "What was played by MacKenzie Mauzy?", "Which fictional character is played by MacKenzie Mauzy?", "Which fictional character was played by MacKenzie Mauzy?", "Which fictional characters are played by MacKenzie Mauzy?", "Which fictional characters were played by MacKenzie Mauzy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/MacKenzie_Mauzy>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Macdonald Carey?", "What was played by Macdonald Carey?", "Which fictional character is played by Macdonald Carey?", "Which fictional character was played by Macdonald Carey?", "Which fictional characters are played by Macdonald Carey?", "Which fictional characters were played by Macdonald Carey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Macdonald_Carey>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Machiko Soga?", "What was played by Machiko Soga?", "Which fictional character is played by Machiko Soga?", "Which fictional character was played by Machiko Soga?", "Which fictional characters are played by Machiko Soga?", "Which fictional characters were played by Machiko Soga?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Machiko_Soga>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Mackenyu?", "What was played by Mackenyu?", "Which fictional character is played by Mackenyu?", "Which fictional character was played by Mackenyu?", "Which fictional characters are played by Mackenyu?", "Which fictional characters were played by Mackenyu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mackenyu>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Mackenzie Astin?", "What was played by Mackenzie Astin?", "Which fictional character is played by Mackenzie Astin?", "Which fictional character was played by Mackenzie Astin?", "Which fictional characters are played by Mackenzie Astin?", "Which fictional characters were played by Mackenzie Astin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mackenzie_Astin>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Mackenzie Crook?", "What was played by Mackenzie Crook?", "Which fictional character is played by Mackenzie Crook?", "Which fictional character was played by Mackenzie Crook?", "Which fictional characters are played by Mackenzie Crook?", "Which fictional characters were played by Mackenzie Crook?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mackenzie_Crook>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Mad Max 2?", "What was played by Mad Max 2?", "Which fictional character is played by Mad Max 2?", "Which fictional character was played by Mad Max 2?", "Which fictional characters are played by Mad Max 2?", "Which fictional characters were played by Mad Max 2?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mad_Max_2>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Mad Max Beyond Thunderdome?", "What was played by Mad Max Beyond Thunderdome?", "Which fictional character is played by Mad Max Beyond Thunderdome?", "Which fictional character was played by Mad Max Beyond Thunderdome?", "Which fictional characters are played by Mad Max Beyond Thunderdome?", "Which fictional characters were played by Mad Max Beyond Thunderdome?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mad_Max_Beyond_Thunderdome>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Maddison Brown?", "What was played by Maddison Brown?", "Which fictional character is played by Maddison Brown?", "Which fictional character was played by Maddison Brown?", "Which fictional characters are played by Maddison Brown?", "Which fictional characters were played by Maddison Brown?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Maddison_Brown>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Maddy Hill?", "What was played by Maddy Hill?", "Which fictional character is played by Maddy Hill?", "Which fictional character was played by Maddy Hill?", "Which fictional characters are played by Maddy Hill?", "Which fictional characters were played by Maddy Hill?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Maddy_Hill>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Madelaine Petsch?", "What was played by Madelaine Petsch?", "Which fictional character is played by Madelaine Petsch?", "Which fictional character was played by Madelaine Petsch?", "Which fictional characters are played by Madelaine Petsch?", "Which fictional characters were played by Madelaine Petsch?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madelaine_Petsch>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Madeleine Howard?", "What was played by Madeleine Howard?", "Which fictional character is played by Madeleine Howard?", "Which fictional character was played by Madeleine Howard?", "Which fictional characters are played by Madeleine Howard?", "Which fictional characters were played by Madeleine Howard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madeleine_Howard>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Madeleine West?", "What was played by Madeleine West?", "Which fictional character is played by Madeleine West?", "Which fictional character was played by Madeleine West?", "Which fictional characters are played by Madeleine West?", "Which fictional characters were played by Madeleine West?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madeleine_West>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Madeline Duggan?", "What was played by Madeline Duggan?", "Which fictional character is played by Madeline Duggan?", "Which fictional character was played by Madeline Duggan?", "Which fictional characters are played by Madeline Duggan?", "Which fictional characters were played by Madeline Duggan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madeline_Duggan>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Madeline Kahn?", "What was played by Madeline Kahn?", "Which fictional character is played by Madeline Kahn?", "Which fictional character was played by Madeline Kahn?", "Which fictional characters are played by Madeline Kahn?", "Which fictional characters were played by Madeline Kahn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madeline_Kahn>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Madge Hindle?", "What was played by Madge Hindle?", "Which fictional character is played by Madge Hindle?", "Which fictional character was played by Madge Hindle?", "Which fictional characters are played by Madge Hindle?", "Which fictional characters were played by Madge Hindle?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madge_Hindle>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Madge Kennedy?", "What was played by Madge Kennedy?", "Which fictional character is played by Madge Kennedy?", "Which fictional character was played by Madge Kennedy?", "Which fictional characters are played by Madge Kennedy?", "Which fictional characters were played by Madge Kennedy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madge_Kennedy>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Madhuri Dixit?", "What was played by Madhuri Dixit?", "Which fictional character is played by Madhuri Dixit?", "Which fictional character was played by Madhuri Dixit?", "Which fictional characters are played by Madhuri Dixit?", "Which fictional characters were played by Madhuri Dixit?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madhuri_Dixit>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Madison Davenport?", "What was played by Madison Davenport?", "Which fictional character is played by Madison Davenport?", "Which fictional character was played by Madison Davenport?", "Which fictional characters are played by Madison Davenport?", "Which fictional characters were played by Madison Davenport?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madison_Davenport>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Madison Lintz?", "What was played by Madison Lintz?", "Which fictional character is played by Madison Lintz?", "Which fictional character was played by Madison Lintz?", "Which fictional characters are played by Madison Lintz?", "Which fictional characters were played by Madison Lintz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madison_Lintz>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Madison Square Garden?", "What was played by Madison Square Garden?", "Which fictional character is played by Madison Square Garden?", "Which fictional character was played by Madison Square Garden?", "Which fictional characters are played by Madison Square Garden?", "Which fictional characters were played by Madison Square Garden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madison_Square_Garden>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Mads Mikkelsen?", "What was played by Mads Mikkelsen?", "Which fictional character is played by Mads Mikkelsen?", "Which fictional character was played by Mads Mikkelsen?", "Which fictional characters are played by Mads Mikkelsen?", "Which fictional characters were played by Mads Mikkelsen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mads_Mikkelsen>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#played",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by Mae Clarke?", "What was played by Mae Clarke?", "Which fictional character is played by Mae Clarke?", "Which fictional character was played by Mae Clarke?", "Which fictional characters are played by Mae Clarke?", "Which fictional characters were played by Mae Clarke?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mae_Clarke>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by OpenLink Software?", "What was developed by OpenLink Software?", "Which work is developed by OpenLink Software?", "Which work was developed by OpenLink Software?", "Which works are developed by OpenLink Software?", "Which works were developed by OpenLink Software?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/OpenLink_Software>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by 5th Cell?", "What was developed by 5th Cell?", "Which work is developed by 5th Cell?", "Which work was developed by 5th Cell?", "Which works are developed by 5th Cell?", "Which works were developed by 5th Cell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/5th_Cell>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by 7th Level?", "What was developed by 7th Level?", "Which work is developed by 7th Level?", "Which work was developed by 7th Level?", "Which works are developed by 7th Level?", "Which works were developed by 7th Level?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/7th_Level>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by 7th Sky Entertainment?", "What was developed by 7th Sky Entertainment?", "Which work is developed by 7th Sky Entertainment?", "Which work was developed by 7th Sky Entertainment?", "Which works are developed by 7th Sky Entertainment?", "Which works were developed by 7th Sky Entertainment?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/7th_Sky_Entertainment>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by 989 Studios?", "What was developed by 989 Studios?", "Which work is developed by 989 Studios?", "Which work was developed by 989 Studios?", "Which works are developed by 989 Studios?", "Which works were developed by 989 Studios?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/989_Studios>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by A2A Simulations?", "What was developed by A2A Simulations?", "Which work is developed by A2A Simulations?", "Which work was developed by A2A Simulations?", "Which works are developed by A2A Simulations?", "Which works were developed by A2A Simulations?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/A2A_Simulations>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by ABS-CBN News and Current Affairs?", "What was developed by ABS-CBN News and Current Affairs?", "Which work is developed by ABS-CBN News and Current Affairs?", "Which work was developed by ABS-CBN News and Current Affairs?", "Which works are developed by ABS-CBN News and Current Affairs?", "Which works were developed by ABS-CBN News and Current Affairs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/ABS-CBN_News_and_Current_Affairs>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by ADK (company)?", "What was developed by ADK (company)?", "Which work is developed by ADK (company)?", "Which work was developed by ADK (company)?", "Which works are developed by ADK (company)?", "Which works were developed by ADK (company)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/ADK_(company)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by AH-Software?", "What was developed by AH-Software?", "Which work is developed by AH-Software?", "Which work was developed by AH-Software?", "Which works are developed by AH-Software?", "Which works were developed by AH-Software?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/AH-Software>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by AIG/Lincoln?", "What was developed by AIG/Lincoln?", "Which work is developed by AIG/Lincoln?", "Which work was developed by AIG/Lincoln?", "Which works are developed by AIG/Lincoln?", "Which works were developed by AIG/Lincoln?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/AIG/Lincoln>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by ALcot?", "What was developed by ALcot?", "Which work is developed by ALcot?", "Which work was developed by ALcot?", "Which works are developed by ALcot?", "Which works were developed by ALcot?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/ALcot>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by ANSI C?", "What was developed by ANSI C?", "Which work is developed by ANSI C?", "Which work was developed by ANSI C?", "Which works are developed by ANSI C?", "Which works were developed by ANSI C?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/ANSI_C>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Luc Bernard?", "What was developed by Luc Bernard?", "Which work is developed by Luc Bernard?", "Which work was developed by Luc Bernard?", "Which works are developed by Luc Bernard?", "Which works were developed by Luc Bernard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Luc_Bernard>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by LucasArts?", "What was developed by LucasArts?", "Which work is developed by LucasArts?", "Which work was developed by LucasArts?", "Which works are developed by LucasArts?", "Which works were developed by LucasArts?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/LucasArts>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Lucas Learning?", "What was developed by Lucas Learning?", "Which work is developed by Lucas Learning?", "Which work was developed by Lucas Learning?", "Which works are developed by Lucas Learning?", "Which works were developed by Lucas Learning?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Lucas_Learning>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Lucas Pope?", "What was developed by Lucas Pope?", "Which work is developed by Lucas Pope?", "Which work was developed by Lucas Pope?", "Which works are developed by Lucas Pope?", "Which works were developed by Lucas Pope?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Lucas_Pope>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Lucee?", "What was developed by Lucee?", "Which work is developed by Lucee?", "Which work was developed by Lucee?", "Which works are developed by Lucee?", "Which works were developed by Lucee?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Lucee>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Lucid Games?", "What was developed by Lucid Games?", "Which work is developed by Lucid Games?", "Which work was developed by Lucid Games?", "Which works are developed by Lucid Games?", "Which works were developed by Lucid Games?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Lucid_Games>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Lucy Cousins?", "What was developed by Lucy Cousins?", "Which work is developed by Lucy Cousins?", "Which work was developed by Lucy Cousins?", "Which works are developed by Lucy Cousins?", "Which works were developed by Lucy Cousins?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Lucy_Cousins>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Ludwig Maximilian University of Munich?", "What was developed by Ludwig Maximilian University of Munich?", "Which work is developed by Ludwig Maximilian University of Munich?", "Which work was developed by Ludwig Maximilian University of Munich?", "Which works are developed by Ludwig Maximilian University of Munich?", "Which works were developed by Ludwig Maximilian University of Munich?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Ludwig_Maximilian_University_of_Munich>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Luiz Fernando Carvalho?", "What was developed by Luiz Fernando Carvalho?", "Which work is developed by Luiz Fernando Carvalho?", "Which work was developed by Luiz Fernando Carvalho?", "Which works are developed by Luiz Fernando Carvalho?", "Which works were developed by Luiz Fernando Carvalho?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Luiz_Fernando_Carvalho>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Luke Davies?", "What was developed by Luke Davies?", "Which work is developed by Luke Davies?", "Which work was developed by Luke Davies?", "Which works are developed by Luke Davies?", "Which works were developed by Luke Davies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Luke_Davies>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Luke Pearson?", "What was developed by Luke Pearson?", "Which work is developed by Luke Pearson?", "Which work was developed by Luke Pearson?", "Which works are developed by Luke Pearson?", "Which works were developed by Luke Pearson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Luke_Pearson>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Luminous Productions?", "What was developed by Luminous Productions?", "Which work is developed by Luminous Productions?", "Which work was developed by Luminous Productions?", "Which works are developed by Luminous Productions?", "Which works were developed by Luminous Productions?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Luminous_Productions>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Lund University?", "What was developed by Lund University?", "Which work is developed by Lund University?", "Which work was developed by Lund University?", "Which works are developed by Lund University?", "Which works were developed by Lund University?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Lund_University>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Lycos?", "What was developed by Lycos?", "Which work is developed by Lycos?", "Which work was developed by Lycos?", "Which works are developed by Lycos?", "Which works were developed by Lycos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Lycos>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Lynne Jolitz?", "What was developed by Lynne Jolitz?", "Which work is developed by Lynne Jolitz?", "Which work was developed by Lynne Jolitz?", "Which works are developed by Lynne Jolitz?", "Which works were developed by Lynne Jolitz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Lynne_Jolitz>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by László Németh?", "What was developed by László Németh?", "Which work is developed by László Németh?", "Which work was developed by László Németh?", "Which works are developed by László Németh?", "Which works were developed by László Németh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/László_Németh>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by M-Net?", "What was developed by M-Net?", "Which work is developed by M-Net?", "Which work was developed by M-Net?", "Which works are developed by M-Net?", "Which works were developed by M-Net?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/M-Net>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by M.A. Fortin?", "What was developed by M.A. Fortin?", "Which work is developed by M.A. Fortin?", "Which work was developed by M.A. Fortin?", "Which works are developed by M.A. Fortin?", "Which works were developed by M.A. Fortin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/M.A._Fortin>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by M2 (game developer)?", "What was developed by M2 (game developer)?", "Which work is developed by M2 (game developer)?", "Which work was developed by M2 (game developer)?", "Which works are developed by M2 (game developer)?", "Which works were developed by M2 (game developer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/M2_(game_developer)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MAG Interactive?", "What was developed by MAG Interactive?", "Which work is developed by MAG Interactive?", "Which work was developed by MAG Interactive?", "Which works are developed by MAG Interactive?", "Which works were developed by MAG Interactive?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MAG_Interactive>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MAXON Computer GmbH?", "What was developed by MAXON Computer GmbH?", "Which work is developed by MAXON Computer GmbH?", "Which work was developed by MAXON Computer GmbH?", "Which works are developed by MAXON Computer GmbH?", "Which works were developed by MAXON Computer GmbH?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MAXON_Computer_GmbH>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MC2-Microïds?", "What was developed by MC2-Microïds?", "Which work is developed by MC2-Microïds?", "Which work was developed by MC2-Microïds?", "Which works are developed by MC2-Microïds?", "Which works were developed by MC2-Microïds?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MC2-Microïds>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MC2 France?", "What was developed by MC2 France?", "Which work is developed by MC2 France?", "Which work was developed by MC2 France?", "Which works are developed by MC2 France?", "Which works were developed by MC2 France?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MC2_France>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MD Productions?", "What was developed by MD Productions?", "Which work is developed by MD Productions?", "Which work was developed by MD Productions?", "Which works are developed by MD Productions?", "Which works were developed by MD Productions?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MD_Productions>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MECC?", "What was developed by MECC?", "Which work is developed by MECC?", "Which work was developed by MECC?", "Which works are developed by MECC?", "Which works were developed by MECC?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MECC>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MGM Resorts International?", "What was developed by MGM Resorts International?", "Which work is developed by MGM Resorts International?", "Which work was developed by MGM Resorts International?", "Which works are developed by MGM Resorts International?", "Which works were developed by MGM Resorts International?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MGM_Resorts_International>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MGM Television?", "What was developed by MGM Television?", "Which work is developed by MGM Television?", "Which work was developed by MGM Television?", "Which works are developed by MGM Television?", "Which works were developed by MGM Television?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MGM_Television>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MIPS Technologies?", "What was developed by MIPS Technologies?", "Which work is developed by MIPS Technologies?", "Which work was developed by MIPS Technologies?", "Which works are developed by MIPS Technologies?", "Which works were developed by MIPS Technologies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MIPS_Technologies>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MIT?", "What was developed by MIT?", "Which work is developed by MIT?", "Which work was developed by MIT?", "Which works are developed by MIT?", "Which works were developed by MIT?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MIT>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MIT Computer Science and Artificial Intelligence Laboratory?", "What was developed by MIT Computer Science and Artificial Intelligence Laboratory?", "Which work is developed by MIT Computer Science and Artificial Intelligence Laboratory?", "Which work was developed by MIT Computer Science and Artificial Intelligence Laboratory?", "Which works are developed by MIT Computer Science and Artificial Intelligence Laboratory?", "Which works were developed by MIT Computer Science and Artificial Intelligence Laboratory?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MIT_Computer_Science_and_Artificial_Intelligence_Laboratory>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MIT Media Lab?", "What was developed by MIT Media Lab?", "Which work is developed by MIT Media Lab?", "Which work was developed by MIT Media Lab?", "Which works are developed by MIT Media Lab?", "Which works were developed by MIT Media Lab?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MIT_Media_Lab>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MLB Network?", "What was developed by MLB Network?", "Which work is developed by MLB Network?", "Which work was developed by MLB Network?", "Which works are developed by MLB Network?", "Which works were developed by MLB Network?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MLB_Network>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MOL (company)?", "What was developed by MOL (company)?", "Which work is developed by MOL (company)?", "Which work was developed by MOL (company)?", "Which works are developed by MOL (company)?", "Which works were developed by MOL (company)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MOL_(company)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MPL Communications?", "What was developed by MPL Communications?", "Which work is developed by MPL Communications?", "Which work was developed by MPL Communications?", "Which works are developed by MPL Communications?", "Which works were developed by MPL Communications?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MPL_Communications>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MS-DOS?", "What was developed by MS-DOS?", "Which work is developed by MS-DOS?", "Which work was developed by MS-DOS?", "Which works are developed by MS-DOS?", "Which works were developed by MS-DOS?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MS-DOS>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MSP360?", "What was developed by MSP360?", "Which work is developed by MSP360?", "Which work was developed by MSP360?", "Which works are developed by MSP360?", "Which works were developed by MSP360?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MSP360>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MSX2?", "What was developed by MSX2?", "Which work is developed by MSX2?", "Which work was developed by MSX2?", "Which works are developed by MSX2?", "Which works were developed by MSX2?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MSX2>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MTO (video game company)?", "What was developed by MTO (video game company)?", "Which work is developed by MTO (video game company)?", "Which work was developed by MTO (video game company)?", "Which works are developed by MTO (video game company)?", "Which works were developed by MTO (video game company)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MTO_(video_game_company)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MTR Corporation?", "What was developed by MTR Corporation?", "Which work is developed by MTR Corporation?", "Which work was developed by MTR Corporation?", "Which works are developed by MTR Corporation?", "Which works were developed by MTR Corporation?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MTR_Corporation>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MTV?", "What was developed by MTV?", "Which work is developed by MTV?", "Which work was developed by MTV?", "Which works are developed by MTV?", "Which works were developed by MTV?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MTV>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MVRDV?", "What was developed by MVRDV?", "Which work is developed by MVRDV?", "Which work was developed by MVRDV?", "Which works are developed by MVRDV?", "Which works were developed by MVRDV?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MVRDV>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Mabrouk El Mechri?", "What was developed by Mabrouk El Mechri?", "Which work is developed by Mabrouk El Mechri?", "Which work was developed by Mabrouk El Mechri?", "Which works are developed by Mabrouk El Mechri?", "Which works were developed by Mabrouk El Mechri?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mabrouk_El_Mechri>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MacPlay?", "What was developed by MacPlay?", "Which work is developed by MacPlay?", "Which work was developed by MacPlay?", "Which works are developed by MacPlay?", "Which works were developed by MacPlay?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MacPlay>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MacSoft?", "What was developed by MacSoft?", "Which work is developed by MacSoft?", "Which work was developed by MacSoft?", "Which works are developed by MacSoft?", "Which works were developed by MacSoft?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MacSoft>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Mac OS X?", "What was developed by Mac OS X?", "Which work is developed by Mac OS X?", "Which work was developed by Mac OS X?", "Which works are developed by Mac OS X?", "Which works were developed by Mac OS X?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mac_OS_X>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Macedonian Radio Television?", "What was developed by Macedonian Radio Television?", "Which work is developed by Macedonian Radio Television?", "Which work was developed by Macedonian Radio Television?", "Which works are developed by Macedonian Radio Television?", "Which works were developed by Macedonian Radio Television?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Macedonian_Radio_Television>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MachineGames?", "What was developed by MachineGames?", "Which work is developed by MachineGames?", "Which work was developed by MachineGames?", "Which works are developed by MachineGames?", "Which works were developed by MachineGames?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MachineGames>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Machine Shop co.?", "What was developed by Machine Shop co.?", "Which work is developed by Machine Shop co.?", "Which work was developed by Machine Shop co.?", "Which works are developed by Machine Shop co.?", "Which works were developed by Machine Shop co.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Machine_Shop_co.>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Machine Zone?", "What was developed by Machine Zone?", "Which work is developed by Machine Zone?", "Which work was developed by Machine Zone?", "Which works are developed by Machine Zone?", "Which works were developed by Machine Zone?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Machine_Zone>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Maciej Stachowiak?", "What was developed by Maciej Stachowiak?", "Which work is developed by Maciej Stachowiak?", "Which work was developed by Maciej Stachowiak?", "Which works are developed by Maciej Stachowiak?", "Which works were developed by Maciej Stachowiak?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Maciej_Stachowiak>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Mackinac Center for Public Policy?", "What was developed by Mackinac Center for Public Policy?", "Which work is developed by Mackinac Center for Public Policy?", "Which work was developed by Mackinac Center for Public Policy?", "Which works are developed by Mackinac Center for Public Policy?", "Which works were developed by Mackinac Center for Public Policy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mackinac_Center_for_Public_Policy>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Macromedia?", "What was developed by Macromedia?", "Which work is developed by Macromedia?", "Which work was developed by Macromedia?", "Which works are developed by Macromedia?", "Which works were developed by Macromedia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Macromedia>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Macrospace?", "What was developed by Macrospace?", "Which work is developed by Macrospace?", "Which work was developed by Macrospace?", "Which works are developed by Macrospace?", "Which works were developed by Macrospace?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Macrospace>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Mad Catz?", "What was developed by Mad Catz?", "Which work is developed by Mad Catz?", "Which work was developed by Mad Catz?", "Which works are developed by Mad Catz?", "Which works were developed by Mad Catz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mad_Catz>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Mad Doc Software?", "What was developed by Mad Doc Software?", "Which work is developed by Mad Doc Software?", "Which work was developed by Mad Doc Software?", "Which works are developed by Mad Doc Software?", "Which works were developed by Mad Doc Software?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mad_Doc_Software>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Madfinger Games?", "What was developed by Madfinger Games?", "Which work is developed by Madfinger Games?", "Which work was developed by Madfinger Games?", "Which works are developed by Madfinger Games?", "Which works were developed by Madfinger Games?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Madfinger_Games>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Maemo?", "What was developed by Maemo?", "Which work is developed by Maemo?", "Which work was developed by Maemo?", "Which works are developed by Maemo?", "Which works were developed by Maemo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Maemo>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Mages (company)?", "What was developed by Mages (company)?", "Which work is developed by Mages (company)?", "Which work was developed by Mages (company)?", "Which works are developed by Mages (company)?", "Which works were developed by Mages (company)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mages_(company)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Magix Software?", "What was developed by Magix Software?", "Which work is developed by Magix Software?", "Which work was developed by Magix Software?", "Which works are developed by Magix Software?", "Which works were developed by Magix Software?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Magix_Software>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Magix Software GmbH?", "What was developed by Magix Software GmbH?", "Which work is developed by Magix Software GmbH?", "Which work was developed by Magix Software GmbH?", "Which works are developed by Magix Software GmbH?", "Which works were developed by Magix Software GmbH?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Magix_Software_GmbH>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Magnavox?", "What was developed by Magnavox?", "Which work is developed by Magnavox?", "Which work was developed by Magnavox?", "Which works are developed by Magnavox?", "Which works were developed by Magnavox?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Magnavox>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Magnus Manske?", "What was developed by Magnus Manske?", "Which work is developed by Magnus Manske?", "Which work was developed by Magnus Manske?", "Which works are developed by Magnus Manske?", "Which works were developed by Magnus Manske?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Magnus_Manske>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Mainsoft?", "What was developed by Mainsoft?", "Which work is developed by Mainsoft?", "Which work was developed by Mainsoft?", "Which works are developed by Mainsoft?", "Which works were developed by Mainsoft?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mainsoft>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Mainz?", "What was developed by Mainz?", "Which work is developed by Mainz?", "Which work was developed by Mainz?", "Which works are developed by Mainz?", "Which works were developed by Mainz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mainz>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Majesco Entertainment?", "What was developed by Majesco Entertainment?", "Which work is developed by Majesco Entertainment?", "Which work was developed by Majesco Entertainment?", "Which works are developed by Majesco Entertainment?", "Which works were developed by Majesco Entertainment?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Majesco_Entertainment>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Mak Wilson?", "What was developed by Mak Wilson?", "Which work is developed by Mak Wilson?", "Which work was developed by Mak Wilson?", "Which works are developed by Mak Wilson?", "Which works were developed by Mak Wilson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mak_Wilson>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Malaysian Highway Authority?", "What was developed by Malaysian Highway Authority?", "Which work is developed by Malaysian Highway Authority?", "Which work was developed by Malaysian Highway Authority?", "Which works are developed by Malaysian Highway Authority?", "Which works were developed by Malaysian Highway Authority?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Malaysian_Highway_Authority>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Malaysian Public Works Department?", "What was developed by Malaysian Public Works Department?", "Which work is developed by Malaysian Public Works Department?", "Which work was developed by Malaysian Public Works Department?", "Which works are developed by Malaysian Public Works Department?", "Which works were developed by Malaysian Public Works Department?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Malaysian_Public_Works_Department>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Malibu Comics?", "What was developed by Malibu Comics?", "Which work is developed by Malibu Comics?", "Which work was developed by Malibu Comics?", "Which works are developed by Malibu Comics?", "Which works were developed by Malibu Comics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Malibu_Comics>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Caroli Group?", "What was developed by Caroli Group?", "Which work is developed by Caroli Group?", "Which work was developed by Caroli Group?", "Which works are developed by Caroli Group?", "Which works were developed by Caroli Group?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Caroli_Group>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Caroline Dries?", "What was developed by Caroline Dries?", "Which work is developed by Caroline Dries?", "Which work was developed by Caroline Dries?", "Which works are developed by Caroline Dries?", "Which works were developed by Caroline Dries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Caroline_Dries>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Carry Lab?", "What was developed by Carry Lab?", "Which work is developed by Carry Lab?", "Which work was developed by Carry Lab?", "Which works are developed by Carry Lab?", "Which works were developed by Carry Lab?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Carry_Lab>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Carter Covington?", "What was developed by Carter Covington?", "Which work is developed by Carter Covington?", "Which work was developed by Carter Covington?", "Which works are developed by Carter Covington?", "Which works were developed by Carter Covington?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Carter_Covington>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Castaway Entertainment?", "What was developed by Castaway Entertainment?", "Which work is developed by Castaway Entertainment?", "Which work was developed by Castaway Entertainment?", "Which works are developed by Castaway Entertainment?", "Which works were developed by Castaway Entertainment?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Castaway_Entertainment>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Bandai Namco Games?", "What was developed by Bandai Namco Games?", "Which work is developed by Bandai Namco Games?", "Which work was developed by Bandai Namco Games?", "Which works are developed by Bandai Namco Games?", "Which works were developed by Bandai Namco Games?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Bandai_Namco_Games>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Behdad Sami Interactive?", "What was developed by Behdad Sami Interactive?", "Which work is developed by Behdad Sami Interactive?", "Which work was developed by Behdad Sami Interactive?", "Which works are developed by Behdad Sami Interactive?", "Which works were developed by Behdad Sami Interactive?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Behdad_Sami_Interactive>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Behold Studios?", "What was developed by Behold Studios?", "Which work is developed by Behold Studios?", "Which work was developed by Behold Studios?", "Which works are developed by Behold Studios?", "Which works were developed by Behold Studios?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Behold_Studios>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Ben Richards?", "What was developed by Ben Richards?", "Which work is developed by Ben Richards?", "Which work was developed by Ben Richards?", "Which works are developed by Ben Richards?", "Which works were developed by Ben Richards?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Ben_Richards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Boeing Computer Services Co.?", "What was developed by Boeing Computer Services Co.?", "Which work is developed by Boeing Computer Services Co.?", "Which work was developed by Boeing Computer Services Co.?", "Which works are developed by Boeing Computer Services Co.?", "Which works were developed by Boeing Computer Services Co.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Boeing_Computer_Services_Co.>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Boinx?", "What was developed by Boinx?", "Which work is developed by Boinx?", "Which work was developed by Boinx?", "Which works are developed by Boinx?", "Which works were developed by Boinx?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Boinx>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Constantin Sotiropoulos?", "What was developed by Constantin Sotiropoulos?", "Which work is developed by Constantin Sotiropoulos?", "Which work was developed by Constantin Sotiropoulos?", "Which works are developed by Constantin Sotiropoulos?", "Which works were developed by Constantin Sotiropoulos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Constantin_Sotiropoulos>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Contrail (company)?", "What was developed by Contrail (company)?", "Which work is developed by Contrail (company)?", "Which work was developed by Contrail (company)?", "Which works are developed by Contrail (company)?", "Which works were developed by Contrail (company)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Contrail_(company)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Control Data Corporation?", "What was developed by Control Data Corporation?", "Which work is developed by Control Data Corporation?", "Which work was developed by Control Data Corporation?", "Which works are developed by Control Data Corporation?", "Which works were developed by Control Data Corporation?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Control_Data_Corporation>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Convergent Technologies?", "What was developed by Convergent Technologies?", "Which work is developed by Convergent Technologies?", "Which work was developed by Convergent Technologies?", "Which works are developed by Convergent Technologies?", "Which works were developed by Convergent Technologies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Convergent_Technologies>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Cooking Mama Limited?", "What was developed by Cooking Mama Limited?", "Which work is developed by Cooking Mama Limited?", "Which work was developed by Cooking Mama Limited?", "Which works are developed by Cooking Mama Limited?", "Which works were developed by Cooking Mama Limited?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Cooking_Mama_Limited>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Cope-Com?", "What was developed by Cope-Com?", "Which work is developed by Cope-Com?", "Which work was developed by Cope-Com?", "Which works are developed by Cope-Com?", "Which works were developed by Cope-Com?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Cope-Com>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Coresoft?", "What was developed by Coresoft?", "Which work is developed by Coresoft?", "Which work was developed by Coresoft?", "Which works are developed by Coresoft?", "Which works were developed by Coresoft?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Coresoft>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#developed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Corinne Brinkerhoff?", "What was developed by Corinne Brinkerhoff?", "Which work is developed by Corinne Brinkerhoff?", "Which work was developed by Corinne Brinkerhoff?", "Which works are developed by Corinne Brinkerhoff?", "Which works were developed by Corinne Brinkerhoff?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Corinne_Brinkerhoff>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 1920 (film) released?", "When were the 1920 (film) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1920_(film)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 1945 (Gingrich and Forstchen novel) released?", "When were the 1945 (Gingrich and Forstchen novel) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1945_(Gingrich_and_Forstchen_novel)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 1958 (film) released?", "When were the 1958 (film) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1958_(film)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 1959 (John Anderson song) released?", "When were the 1959 (John Anderson song) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1959_(John_Anderson_song)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 2013 Viña del Mar International Song Festival released?", "When were the 2013 Viña del Mar International Song Festival released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Viña_del_Mar_International_Song_Festival> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 2014 FIFA World Cup Brazil (video game) released?", "When were the 2014 FIFA World Cup Brazil (video game) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2014_FIFA_World_Cup_Brazil_(video_game)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 2015 Idol Star Athletics Basketball Futsal Archery Championships released?", "When were the 2015 Idol Star Athletics Basketball Futsal Archery Championships released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2015_Idol_Star_Athletics_Basketball_Futsal_Archery_Championships> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 2015 Idol Star Athletics Ssireum Basketball Futsal Archery Championships released?", "When were the 2015 Idol Star Athletics Ssireum Basketball Futsal Archery Championships released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2015_Idol_Star_Athletics_Ssireum_Basketball_Futsal_Archery_Championships> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 2015 Viña del Mar International Song Festival released?", "When were the 2015 Viña del Mar International Song Festival released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2015_Viña_del_Mar_International_Song_Festival> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 2016 Idol Star Athletics Rhythmic Gymnastics Futsal Archery Championships released?", "When were the 2016 Idol Star Athletics Rhythmic Gymnastics Futsal Archery Championships released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2016_Idol_Star_Athletics_Rhythmic_Gymnastics_Futsal_Archery_Championships> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 2016 Idol Star Athletics Ssireum Futsal Archery Championships released?", "When were the 2016 Idol Star Athletics Ssireum Futsal Archery Championships released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2016_Idol_Star_Athletics_Ssireum_Futsal_Archery_Championships> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 2016 Viña del Mar International Song Festival released?", "When were the 2016 Viña del Mar International Song Festival released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2016_Viña_del_Mar_International_Song_Festival> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 2017 Idol Star Athletics Archery Rhythmic Gymnastics Aerobics Championships released?", "When were the 2017 Idol Star Athletics Archery Rhythmic Gymnastics Aerobics Championships released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2017_Idol_Star_Athletics_Archery_Rhythmic_Gymnastics_Aerobics_Championships> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 2017 KBS Song Festival released?", "When were the 2017 KBS Song Festival released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2017_KBS_Song_Festival> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 2017 Viña del Mar International Song Festival released?", "When were the 2017 Viña del Mar International Song Festival released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2017_Viña_del_Mar_International_Song_Festival> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 5 O'Clock (Nonchalant song) released?", "When were the 5 O'Clock (Nonchalant song) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/5_O'Clock_(Nonchalant_song)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 5 Rebbecca's released?", "When were the 5 Rebbecca's released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/5_Rebbecca's> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 5 Star (Yo Gotti song) released?", "When were the 5 Star (Yo Gotti song) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/5_Star_(Yo_Gotti_song)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 5 minutes avec toi released?", "When were the 5 minutes avec toi released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/5_minutes_avec_toi> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 6-5=2 (2014 film) released?", "When were the 6-5=2 (2014 film) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/6-5=2_(2014_film)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 600,000 Francs a Month (1926 film) released?", "When were the 600,000 Francs a Month (1926 film) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/600,000_Francs_a_Month_(1926_film)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 600,000 Francs a Month (1933 film) released?", "When were the 600,000 Francs a Month (1933 film) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/600,000_Francs_a_Month_(1933_film)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 6180 the moon released?", "When were the 6180 the moon released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/6180_the_moon> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 61 Garpar Lane released?", "When were the 61 Garpar Lane released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/61_Garpar_Lane> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 64 Mayam released?", "When were the 64 Mayam released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/64_Mayam> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 66 (Lil Yachty song) released?", "When were the 66 (Lil Yachty song) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/66_(Lil_Yachty_song)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 6 Feet Underground released?", "When were the 6 Feet Underground released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/6_Feet_Underground> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 6 Minutes of Pleasure released?", "When were the 6 Minutes of Pleasure released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/6_Minutes_of_Pleasure> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 6 Words released?", "When were the 6 Words released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/6_Words> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 7554 released?", "When were the 7554 released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/7554> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 77 Rue Chalgrin released?", "When were the 77 Rue Chalgrin released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/77_Rue_Chalgrin> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 787 (song) released?", "When were the 787 (song) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/787_(song)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 7 Mages released?", "When were the 7 Mages released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/7_Mages> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 7 Minutes (song) released?", "When were the 7 Minutes (song) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/7_Minutes_(song)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 7 Rooms of Gloom released?", "When were the 7 Rooms of Gloom released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/7_Rooms_of_Gloom> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 7 Weeks released?", "When were the 7 Weeks released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/7_Weeks> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 8-Bit Armies released?", "When were the 8-Bit Armies released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/8-Bit_Armies> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 8-Bit Hordes released?", "When were the 8-Bit Hordes released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/8-Bit_Hordes> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 8-Bit Rebellion! released?", "When were the 8-Bit Rebellion! released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/8-Bit_Rebellion!> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 80's Ladies (song) released?", "When were the 80's Ladies (song) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/80's_Ladies_(song)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 808 (Blaque song) released?", "When were the 808 (Blaque song) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/808_(Blaque_song)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 80 Million Women Want–? released?", "When were the 80 Million Women Want–? released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/80_Million_Women_Want–%3F> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 8Realms released?", "When were the 8Realms released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/8Realms> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 8th of November (song) released?", "When were the 8th of November (song) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/8th_of_November_(song)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 90 Days (film) released?", "When were the 90 Days (film) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/90_Days_(film)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 911 Operator (video game) released?", "When were the 911 Operator (video game) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/911_Operator_(video_game)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 93 Million Miles released?", "When were the 93 Million Miles released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/93_Million_Miles> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 99.9% Sure (I've Never Been Here Before) released?", "When were the 99.9% Sure (I've Never Been Here Before) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/99.9%25_Sure_(I've_Never_Been_Here_Before)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 999-9999 released?", "When were the 999-9999 released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/999-9999> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 999: What's Your Emergency? released?", "When were the 999: What's Your Emergency? released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/999:_What's_Your_Emergency%3F> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 99 (song) released?", "When were the 99 (song) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/99_(song)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 99 Bricks Wizard Academy released?", "When were the 99 Bricks Wizard Academy released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/99_Bricks_Wizard_Academy> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 99 Percenters released?", "When were the 99 Percenters released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/99_Percenters> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 9: The Last Resort released?", "When were the 9: The Last Resort released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/9:_The_Last_Resort> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 9 Crimes released?", "When were the 9 Crimes released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/9_Crimes> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 9 Elefants released?", "When were the 9 Elefants released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/9_Elefants> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 9 Nelalu released?", "When were the 9 Nelalu released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/9_Nelalu> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 9 Shots released?", "When were the 9 Shots released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/9_Shots> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 9 millimeter released?", "When were the 9 millimeter released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/9_millimeter> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the 9th Inning released?", "When were the 9th Inning released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/9th_Inning> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the A+E (song) released?", "When were the A+E (song) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A+E_(song)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the A-Haunting We Will Go (1942 film) released?", "When were the A-Haunting We Will Go (1942 film) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A-Haunting_We_Will_Go_(1942_film)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the A-Haunting We Will Go (1966 film) released?", "When were the A-Haunting We Will Go (1966 film) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A-Haunting_We_Will_Go_(1966_film)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the A-Yo (Method Man & Redman song) released?", "When were the A-Yo (Method Man & Redman song) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A-Yo_(Method_Man_&_Redman_song)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the A.D.I.D.A.S. (Korn song) released?", "When were the A.D.I.D.A.S. (Korn song) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A.D.I.D.A.S._(Korn_song)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the A.D. 2044 released?", "When were the A.D. 2044 released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A.D._2044> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the A.M. 180 released?", "When were the A.M. 180 released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A.M._180> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the A/k/a Tommy Chong released?", "When were the A/k/a Tommy Chong released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A/k/a_Tommy_Chong> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the ABCD (film) released?", "When were the ABCD (film) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ABCD_(film)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the ABC (The Jackson 5 song) released?", "When were the ABC (The Jackson 5 song) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ABC_(The_Jackson_5_song)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the ADHD (Blood Red Shoes song) released?", "When were the ADHD (Blood Red Shoes song) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ADHD_(Blood_Red_Shoes_song)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the AFL Evolution released?", "When were the AFL Evolution released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AFL_Evolution> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the AFL Live 2 released?", "When were the AFL Live 2 released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AFL_Live_2> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the AFR (film) released?", "When were the AFR (film) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AFR_(film)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the AI Freaks Me Out released?", "When were the AI Freaks Me Out released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AI_Freaks_Me_Out> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the AI Superpowers released?", "When were the AI Superpowers released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AI_Superpowers> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the AI War: Fleet Command released?", "When were the AI War: Fleet Command released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AI_War:_Fleet_Command> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the AKA Cartoon Network released?", "When were the AKA Cartoon Network released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AKA_Cartoon_Network> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the AOV (song) released?", "When were the AOV (song) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AOV_(song)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the APOX released?", "When were the APOX released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/APOX> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the Love, Peace And Happiness released?", "When were the Love, Peace And Happiness released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love,_Peace_And_Happiness> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the Love, Sidney released?", "When were the Love, Sidney released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love,_Sidney> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the Love, Timeless released?", "When were the Love, Timeless released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love,_Timeless> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the Love-Hate-Sex-Pain released?", "When were the Love-Hate-Sex-Pain released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love-Hate-Sex-Pain> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the Love/Hate (TV series) released?", "When were the Love/Hate (TV series) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love/Hate_(TV_series)> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the Love2Clutch released?", "When were the Love2Clutch released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love2Clutch> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the LoveGame released?", "When were the LoveGame released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/LoveGame> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the LoveHate Thing released?", "When were the LoveHate Thing released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/LoveHate_Thing> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the LovePlus released?", "When were the LovePlus released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/LovePlus> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the LoveStoned released?", "When were the LoveStoned released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/LoveStoned> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the LoveWave released?", "When were the LoveWave released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/LoveWave> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the Love & Destroy released?", "When were the Love & Destroy released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_&_Destroy> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the Love & Girls released?", "When were the Love & Girls released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_&_Girls> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the Love & Hip Hop: Atlanta released?", "When were the Love & Hip Hop: Atlanta released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_&_Hip_Hop:_Atlanta> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the Love & Hip Hop: Hollywood released?", "When were the Love & Hip Hop: Hollywood released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_&_Hip_Hop:_Hollywood> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the Love & Hip Hop: Miami released?", "When were the Love & Hip Hop: Miami released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_&_Hip_Hop:_Miami> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the Love & Hip Hop: New York released?", "When were the Love & Hip Hop: New York released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_&_Hip_Hop:_New_York> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the Love & History released?", "When were the Love & History released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_&_History> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the Love & Lies released?", "When were the Love & Lies released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_&_Lies> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_complete_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SONG",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the Love & Money released?", "When were the Love & Money released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_&_Money> <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 0003-03-03?", "What were released on 0003-03-03?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"0003-03-03\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 0006-04-01?", "What were released on 0006-04-01?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"0006-04-01\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 0023-12-21?", "What were released on 0023-12-21?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"0023-12-21\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1557-05-23?", "What were released on 1557-05-23?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1557-05-23\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1578-12-02?", "What were released on 1578-12-02?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1578-12-02\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1688-11-10?", "What were released on 1688-11-10?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1688-11-10\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1719-04-25?", "What were released on 1719-04-25?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1719-04-25\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1726-10-28?", "What were released on 1726-10-28?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1726-10-28\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1728-03-16?", "What were released on 1728-03-16?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1728-03-16\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1729-10-08?", "What were released on 1729-10-08?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1729-10-08\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1741-04-04?", "What were released on 1741-04-04?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1741-04-04\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1748-11-21?", "What were released on 1748-11-21?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1748-11-21\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1749-02-28?", "What were released on 1749-02-28?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1749-02-28\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1755-04-15?", "What were released on 1755-04-15?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1755-04-15\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1766-12-14?", "What were released on 1766-12-14?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1766-12-14\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1767-03-31?", "What were released on 1767-03-31?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1767-03-31\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1771-06-17?", "What were released on 1771-06-17?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1771-06-17\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1781-09-24?", "What were released on 1781-09-24?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1781-09-24\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1782-03-23?", "What were released on 1782-03-23?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1782-03-23\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1785-01-30?", "What were released on 1785-01-30?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1785-01-30\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1788-02-10?", "What were released on 1788-02-10?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1788-02-10\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1791-08-03?", "What were released on 1791-08-03?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1791-08-03\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1794-05-08?", "What were released on 1794-05-08?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1794-05-08\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1813-01-28?", "What were released on 1813-01-28?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1813-01-28\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1819-06-23?", "What were released on 1819-06-23?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1819-06-23\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1823-11-17?", "What were released on 1823-11-17?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1823-11-17\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1831-12-01?", "What were released on 1831-12-01?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1831-12-01\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1838-10-02?", "What were released on 1838-10-02?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1838-10-02\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1842-10-19?", "What were released on 1842-10-19?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1842-10-19\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1843-05-16?", "What were released on 1843-05-16?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1843-05-16\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1843-10-16?", "What were released on 1843-10-16?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1843-10-16\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1843-11-10?", "What were released on 1843-11-10?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1843-11-10\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1843-12-06?", "What were released on 1843-12-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1843-12-06\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1844-03-05?", "What were released on 1844-03-05?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1844-03-05\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1844-06-08?", "What were released on 1844-06-08?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1844-06-08\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1844-06-13?", "What were released on 1844-06-13?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1844-06-13\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1844-06-17?", "What were released on 1844-06-17?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1844-06-17\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1844-08-31?", "What were released on 1844-08-31?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1844-08-31\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1845-04-30?", "What were released on 1845-04-30?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1845-04-30\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1845-12-20?", "What were released on 1845-12-20?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1845-12-20\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1847-10-16?", "What were released on 1847-10-16?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1847-10-16\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1848-12-19?", "What were released on 1848-12-19?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1848-12-19\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1851-10-18?", "What were released on 1851-10-18?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1851-10-18\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1851-11-14?", "What were released on 1851-11-14?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1851-11-14\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1855-01-05?", "What were released on 1855-01-05?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1855-01-05\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1855-07-04?", "What were released on 1855-07-04?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1855-07-04\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1856-12-27?", "What were released on 1856-12-27?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1856-12-27\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1859-11-26?", "What were released on 1859-11-26?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1859-11-26\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1860-05-10?", "What were released on 1860-05-10?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1860-05-10\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1864-11-25?", "What were released on 1864-11-25?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1864-11-25\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1865-05-15?", "What were released on 1865-05-15?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1865-05-15\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1865-11-26?", "What were released on 1865-11-26?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1865-11-26\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1866-12-01?", "What were released on 1866-12-01?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1866-12-01\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1868-01-30?", "What were released on 1868-01-30?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1868-01-30\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1868-05-05?", "What were released on 1868-05-05?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1868-05-05\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1871-02-24?", "What were released on 1871-02-24?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1871-02-24\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1871-12-27?", "What were released on 1871-12-27?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1871-12-27\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1873-01-30?", "What were released on 1873-01-30?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1873-01-30\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1873-07-19?", "What were released on 1873-07-19?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1873-07-19\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1875-11-20?", "What were released on 1875-11-20?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1875-11-20\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1876-03-29?", "What were released on 1876-03-29?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1876-03-29\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1877-05-05?", "What were released on 1877-05-05?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1877-05-05\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1877-11-24?", "What were released on 1877-11-24?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1877-11-24\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1878-05-29?", "What were released on 1878-05-29?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1878-05-29\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1878-09-18?", "What were released on 1878-09-18?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1878-09-18\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1878-10-12?", "What were released on 1878-10-12?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1878-10-12\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1878-12-15?", "What were released on 1878-12-15?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1878-12-15\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1879-10-04?", "What were released on 1879-10-04?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1879-10-04\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1879-12-10?", "What were released on 1879-12-10?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1879-12-10\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1880-02-07?", "What were released on 1880-02-07?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1880-02-07\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1880-11-12?", "What were released on 1880-11-12?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1880-11-12\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1880-12-01?", "What were released on 1880-12-01?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1880-12-01\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1881-10-29?", "What were released on 1881-10-29?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1881-10-29\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1881-11-16?", "What were released on 1881-11-16?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1881-11-16\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1884-09-05?", "What were released on 1884-09-05?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1884-09-05\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1884-12-10?", "What were released on 1884-12-10?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1884-12-10\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1885-11-01?", "What were released on 1885-11-01?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1885-11-01\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1886-01-05?", "What were released on 1886-01-05?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1886-01-05\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1886-02-16?", "What were released on 1886-02-16?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1886-02-16\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1886-10-22?", "What were released on 1886-10-22?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1886-10-22\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1888-05-08?", "What were released on 1888-05-08?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1888-05-08\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1888-06-05?", "What were released on 1888-06-05?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1888-06-05\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1888-09-03?", "What were released on 1888-09-03?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1888-09-03\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1888-09-29?", "What were released on 1888-09-29?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1888-09-29\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1888-10-14?", "What were released on 1888-10-14?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1888-10-14\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1888-11-10?", "What were released on 1888-11-10?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1888-11-10\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1889-12-09?", "What were released on 1889-12-09?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1889-12-09\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1890-06-07?", "What were released on 1890-06-07?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1890-06-07\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1890-06-28?", "What were released on 1890-06-28?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1890-06-28\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1893-01-10?", "What were released on 1893-01-10?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1893-01-10\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1893-06-02?", "What were released on 1893-06-02?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1893-06-02\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1894-06-09?", "What were released on 1894-06-09?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1894-06-09\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1895-03-22?", "What were released on 1895-03-22?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1895-03-22\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1895-05-15?", "What were released on 1895-05-15?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1895-05-15\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1895-06-10?", "What were released on 1895-06-10?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1895-06-10\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1895-06-12?", "What were released on 1895-06-12?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1895-06-12\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1895-06-18?", "What were released on 1895-06-18?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1895-06-18\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1895-08-28?", "What were released on 1895-08-28?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1895-08-28\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1896-01-28?", "What were released on 1896-01-28?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1896-01-28\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DATE",
    "returnType" : "SONG",
    "frameType" : "IPP",
    "sentences" : [ "What was released on 1896-02-20?", "What were released on 1896-02-20?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> \"1896-02-20\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Luxembourg (canton) located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Luxembourg_(canton)> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Luxembourg_(canton)> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Luxembourg_(canton)> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Luxembourg City located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Luxembourg_City> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Luxembourg_City> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Luxembourg_City> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Luzon Strait located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Luzon_Strait> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Luzon_Strait> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Luzon_Strait> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Madiromirafy located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Madiromirafy> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Madiromirafy> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Madiromirafy> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Madirovalo located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Madirovalo> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Madirovalo> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Madirovalo> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Maevaranohely located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Maevaranohely> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Maevaranohely> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Maevaranohely> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Maevatanana located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Maevatanana> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Maevatanana> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Maevatanana> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Maevatanana (district) located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Maevatanana_(district)> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Maevatanana_(district)> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Maevatanana_(district)> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Maevatanana II located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Maevatanana_II> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Maevatanana_II> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Maevatanana_II> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mafaijijo located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mafaijijo> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mafaijijo> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mafaijijo> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahabako located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahabako> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahabako> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahabako> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahabe located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahabe> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahabe> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahabe> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahabo, Betroka located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahabo,_Betroka> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahabo,_Betroka> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahabo,_Betroka> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahabo, Vohipeno located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahabo,_Vohipeno> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahabo,_Vohipeno> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahabo,_Vohipeno> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahabo (district) located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahabo_(district)> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahabo_(district)> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahabo_(district)> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahabo Mananivo located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahabo_Mananivo> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahabo_Mananivo> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahabo_Mananivo> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahaboboka located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahaboboka> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahaboboka> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahaboboka> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahaditra located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahaditra> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahaditra> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahaditra> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahadrodroka located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahadrodroka> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahadrodroka> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahadrodroka> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahaela located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahaela> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahaela> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahaela> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahafasa Centre located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahafasa_Centre> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahafasa_Centre> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahafasa_Centre> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahaiza located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahaiza> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahaiza> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahaiza> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahajamba Usine located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahajamba_Usine> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahajamba_Usine> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahajamba_Usine> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahajanga located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahajanga> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahajanga> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahajanga> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahajanga II (district) located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahajanga_II_(district)> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahajanga_II_(district)> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahajanga_II_(district)> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahajanga Province located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahajanga_Province> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahajanga_Province> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahajanga_Province> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahalaza-Fanimana located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahalaza-Fanimana> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahalaza-Fanimana> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahalaza-Fanimana> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahalina located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahalina> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahalina> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahalina> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahaly located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahaly> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahaly> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahaly> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahamaibe located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahamaibe> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahamaibe> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahamaibe> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahambo located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahambo> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahambo> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahambo> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahanoro located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahanoro> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahanoro> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahanoro> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahanoro (district) located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahanoro_(district)> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahanoro_(district)> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahanoro_(district)> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahasoa located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahasoa> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahasoa> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahasoa> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahasoa Est located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahasoa_Est> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahasoa_Est> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahasoa_Est> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahasoabe, Fianarantsoa II located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahasoabe,_Fianarantsoa_II> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahasoabe,_Fianarantsoa_II> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahasoabe,_Fianarantsoa_II> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahasoabe, Vohipeno located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahasoabe,_Vohipeno> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahasoabe,_Vohipeno> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahasoabe,_Vohipeno> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahasolo located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahasolo> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahasolo> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahasolo> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahatalaky located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahatalaky> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahatalaky> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahatalaky> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahatsara Iefaka located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahatsara_Iefaka> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahatsara_Iefaka> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahatsara_Iefaka> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahatsara Sud located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahatsara_Sud> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahatsara_Sud> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahatsara_Sud> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahatsinjo, Maevatanana located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahatsinjo,_Maevatanana> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahatsinjo,_Maevatanana> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahatsinjo,_Maevatanana> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahatsinjo, Vondrozo located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahatsinjo,_Vondrozo> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahatsinjo,_Vondrozo> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahatsinjo,_Vondrozo> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahatsinjo Est located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahatsinjo_Est> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahatsinjo_Est> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahatsinjo_Est> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahatsinjony located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahatsinjony> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahatsinjony> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahatsinjony> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahavanona located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahavanona> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahavanona> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahavanona> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahavelo, Farafangana located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahavelo,_Farafangana> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahavelo,_Farafangana> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahavelo,_Farafangana> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahavelo, Vondrozo located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahavelo,_Vondrozo> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahavelo,_Vondrozo> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahavelo,_Vondrozo> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahavelona located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahavelona> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahavelona> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahavelona> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahavelona, Soavinandriana located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahavelona,_Soavinandriana> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahavelona,_Soavinandriana> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahavelona,_Soavinandriana> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahavoky Nord located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahavoky_Nord> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahavoky_Nord> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahavoky_Nord> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahazina Ambohipierenana located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahazina_Ambohipierenana> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahazina_Ambohipierenana> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahazina_Ambohipierenana> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahazoarivo, Fandriana located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahazoarivo,_Fandriana> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahazoarivo,_Fandriana> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahazoarivo,_Fandriana> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahazoarivo, Fianarantsoa II located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahazoarivo,_Fianarantsoa_II> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahazoarivo,_Fianarantsoa_II> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahazoarivo,_Fianarantsoa_II> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahazoarivo, Vohipeno located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahazoarivo,_Vohipeno> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahazoarivo,_Vohipeno> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahazoarivo,_Vohipeno> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahazoarivo, Vondrozo located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahazoarivo,_Vondrozo> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahazoarivo,_Vondrozo> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahazoarivo,_Vondrozo> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahazoma located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahazoma> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahazoma> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahazoma> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mahazony located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mahazony> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mahazony> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mahazony> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Maheriraty located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Maheriraty> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Maheriraty> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Maheriraty> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Maherivaratra located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Maherivaratra> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Maherivaratra> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Maherivaratra> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Maintinandry located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Maintinandry> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Maintinandry> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Maintinandry> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Maintirano located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Maintirano> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Maintirano> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Maintirano> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Maintirano District located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Maintirano_District> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Maintirano_District> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Maintirano_District> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Maintsokely located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Maintsokely> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Maintsokely> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Maintsokely> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Malaimbandy located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Malaimbandy> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Malaimbandy> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Malaimbandy> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Consthum located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Consthum> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Consthum> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Consthum> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Useldange located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Useldange> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Useldange> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Useldange> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Vakinankaratra located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Vakinankaratra> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Vakinankaratra> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Vakinankaratra> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Valabetokana located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Valabetokana> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Valabetokana> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Valabetokana> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Vallée de l'Ernz located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Vallée_de_l'Ernz> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Vallée_de_l'Ernz> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Vallée_de_l'Ernz> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Vangaindrano (district) located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Vangaindrano_(district)> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Vangaindrano_(district)> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Vangaindrano_(district)> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Vanono located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Vanono> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Vanono> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Vanono> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Vasiana located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Vasiana> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Vasiana> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Vasiana> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Vatana, Madagascar located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Vatana,_Madagascar> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Vatana,_Madagascar> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Vatana,_Madagascar> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Vatanato located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Vatanato> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Vatanato> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Vatanato> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Vatohandrina located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Vatohandrina> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Vatohandrina> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Vatohandrina> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Vatolatsaka located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Vatolatsaka> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Vatolatsaka> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Vatolatsaka> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Vatomandry located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Vatomandry> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Vatomandry> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Vatomandry> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Vatomandry (district) located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Vatomandry_(district)> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Vatomandry_(district)> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Vatomandry_(district)> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Vatovavy-Fitovinany located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Vatovavy-Fitovinany> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Vatovavy-Fitovinany> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Vatovavy-Fitovinany> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Vavatenina located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Vavatenina> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Vavatenina> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Vavatenina> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Vavatenina District located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Vavatenina_District> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Vavatenina_District> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Vavatenina_District> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Veromanga located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Veromanga> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Veromanga> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Veromanga> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Folschette located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Folschette> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Folschette> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Folschette> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Khodoriv located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Khodoriv> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Khodoriv> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Khodoriv> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Bissen located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Bissen> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Bissen> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Bissen> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Biwer located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Biwer> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Biwer> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Biwer> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Boanamary located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Boanamary> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Boanamary> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Boanamary> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Bobakindro located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Bobakindro> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Bobakindro> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Bobakindro> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Bobasakoa located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Bobasakoa> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Bobasakoa> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Bobasakoa> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Boeny located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Boeny> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Boeny> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Boeny> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Bongolava located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Bongolava> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Bongolava> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Bongolava> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Boriziny-Vaovao (district) located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Boriziny-Vaovao_(district)> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Boriziny-Vaovao_(district)> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Boriziny-Vaovao_(district)> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Borynia, Turka Raion located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Borynia,_Turka_Raion> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Borynia,_Turka_Raion> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Borynia,_Turka_Raion> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Boulaide located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Boulaide> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Boulaide> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Boulaide> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Bourscheid, Luxembourg located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Bourscheid,_Luxembourg> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Bourscheid,_Luxembourg> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Bourscheid,_Luxembourg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Bous, Luxembourg located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Bous,_Luxembourg> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Bous,_Luxembourg> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Bous,_Luxembourg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Diana Region located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Diana_Region> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Diana_Region> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Diana_Region> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Didy located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Didy> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Didy> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Didy> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Diekirch located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Diekirch> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Diekirch> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Diekirch> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Lu Jing", "Tell me the father of the father of Lu Jing", "What is the father of the father of Lu Jing?", "What was the father of the father of Lu Jing?", "Which person is the father of the father of Lu Jing?", "Which person was the father of the father of Lu Jing?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lu_Jing> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Maeda Toshinaga", "Tell me the father of the father of Maeda Toshinaga", "What is the father of the father of Maeda Toshinaga?", "What was the father of the father of Maeda Toshinaga?", "Which person is the father of the father of Maeda Toshinaga?", "Which person was the father of the father of Maeda Toshinaga?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maeda_Toshinaga> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Maeda Toshitsune", "Tell me the father of the father of Maeda Toshitsune", "What is the father of the father of Maeda Toshitsune?", "What was the father of the father of Maeda Toshitsune?", "Which person is the father of the father of Maeda Toshitsune?", "Which person was the father of the father of Maeda Toshitsune?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maeda_Toshitsune> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Mahi B. Chowdhury", "Tell me the father of the father of Mahi B. Chowdhury", "What is the father of the father of Mahi B. Chowdhury?", "What was the father of the father of Mahi B. Chowdhury?", "Which person is the father of the father of Mahi B. Chowdhury?", "Which person was the father of the father of Mahi B. Chowdhury?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mahi_B._Chowdhury> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Uddhav Thackeray", "Tell me the father of the father of Uddhav Thackeray", "What is the father of the father of Uddhav Thackeray?", "What was the father of the father of Uddhav Thackeray?", "Which person is the father of the father of Uddhav Thackeray?", "Which person was the father of the father of Uddhav Thackeray?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Uddhav_Thackeray> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Ujir Singh Thapa", "Tell me the father of the father of Ujir Singh Thapa", "What is the father of the father of Ujir Singh Thapa?", "What was the father of the father of Ujir Singh Thapa?", "Which person is the father of the father of Ujir Singh Thapa?", "Which person was the father of the father of Ujir Singh Thapa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ujir_Singh_Thapa> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Han Chan Piet", "Tell me the father of the father of Han Chan Piet", "What is the father of the father of Han Chan Piet?", "What was the father of the father of Han Chan Piet?", "Which person is the father of the father of Han Chan Piet?", "Which person was the father of the father of Han Chan Piet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Han_Chan_Piet> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Han Kik Ko", "Tell me the father of the father of Han Kik Ko", "What is the father of the father of Han Kik Ko?", "What was the father of the father of Han Kik Ko?", "Which person is the father of the father of Han Kik Ko?", "Which person was the father of the father of Han Kik Ko?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Han_Kik_Ko> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Deepender Singh Hooda", "Tell me the father of the father of Deepender Singh Hooda", "What is the father of the father of Deepender Singh Hooda?", "What was the father of the father of Deepender Singh Hooda?", "Which person is the father of the father of Deepender Singh Hooda?", "Which person was the father of the father of Deepender Singh Hooda?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Deepender_Singh_Hooda> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Dhir Shamsher Rana", "Tell me the father of the father of Dhir Shamsher Rana", "What is the father of the father of Dhir Shamsher Rana?", "What was the father of the father of Dhir Shamsher Rana?", "Which person is the father of the father of Dhir Shamsher Rana?", "Which person was the father of the father of Dhir Shamsher Rana?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dhir_Shamsher_Rana> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Gu Cheng (Three Kingdoms)", "Tell me the father of the father of Gu Cheng (Three Kingdoms)", "What is the father of the father of Gu Cheng (Three Kingdoms)?", "What was the father of the father of Gu Cheng (Three Kingdoms)?", "Which person is the father of the father of Gu Cheng (Three Kingdoms)?", "Which person was the father of the father of Gu Cheng (Three Kingdoms)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gu_Cheng_(Three_Kingdoms)> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Gu Tan", "Tell me the father of the father of Gu Tan", "What is the father of the father of Gu Tan?", "What was the father of the father of Gu Tan?", "Which person is the father of the father of Gu Tan?", "Which person was the father of the father of Gu Tan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gu_Tan> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Khadga Shamsher Jang Bahadur Rana", "Tell me the father of the father of Khadga Shamsher Jang Bahadur Rana", "What is the father of the father of Khadga Shamsher Jang Bahadur Rana?", "What was the father of the father of Khadga Shamsher Jang Bahadur Rana?", "Which person is the father of the father of Khadga Shamsher Jang Bahadur Rana?", "Which person was the father of the father of Khadga Shamsher Jang Bahadur Rana?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Khadga_Shamsher_Jang_Bahadur_Rana> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Ajay Singh Chautala", "Tell me the father of the father of Ajay Singh Chautala", "What is the father of the father of Ajay Singh Chautala?", "What was the father of the father of Ajay Singh Chautala?", "Which person is the father of the father of Ajay Singh Chautala?", "Which person was the father of the father of Ajay Singh Chautala?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ajay_Singh_Chautala> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Alexander Baring, 6th Baron Ashburton", "Tell me the father of the father of Alexander Baring, 6th Baron Ashburton", "What is the father of the father of Alexander Baring, 6th Baron Ashburton?", "What was the father of the father of Alexander Baring, 6th Baron Ashburton?", "Which person is the father of the father of Alexander Baring, 6th Baron Ashburton?", "Which person was the father of the father of Alexander Baring, 6th Baron Ashburton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alexander_Baring,_6th_Baron_Ashburton> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Alfred Lamb (Australian politician)", "Tell me the father of the father of Alfred Lamb (Australian politician)", "What is the father of the father of Alfred Lamb (Australian politician)?", "What was the father of the father of Alfred Lamb (Australian politician)?", "Which person is the father of the father of Alfred Lamb (Australian politician)?", "Which person was the father of the father of Alfred Lamb (Australian politician)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alfred_Lamb_(Australian_politician)> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Chen Qun", "Tell me the father of the father of Chen Qun", "What is the father of the father of Chen Qun?", "What was the father of the father of Chen Qun?", "Which person is the father of the father of Chen Qun?", "Which person was the father of the father of Chen Qun?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chen_Qun> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Chen Tai", "Tell me the father of the father of Chen Tai", "What is the father of the father of Chen Tai?", "What was the father of the father of Chen Tai?", "Which person is the father of the father of Chen Tai?", "Which person was the father of the father of Chen Tai?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chen_Tai> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Niwa Nagahiro", "Tell me the father of the father of Niwa Nagahiro", "What is the father of the father of Niwa Nagahiro?", "What was the father of the father of Niwa Nagahiro?", "Which person is the father of the father of Niwa Nagahiro?", "Which person was the father of the father of Niwa Nagahiro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Niwa_Nagahiro> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Niwa Nagakuni", "Tell me the father of the father of Niwa Nagakuni", "What is the father of the father of Niwa Nagakuni?", "What was the father of the father of Niwa Nagakuni?", "Which person is the father of the father of Niwa Nagakuni?", "Which person was the father of the father of Niwa Nagakuni?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Niwa_Nagakuni> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Niwa Nagatomi", "Tell me the father of the father of Niwa Nagatomi", "What is the father of the father of Niwa Nagatomi?", "What was the father of the father of Niwa Nagatomi?", "Which person is the father of the father of Niwa Nagatomi?", "Which person was the father of the father of Niwa Nagatomi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Niwa_Nagatomi> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Oda Nobukatsu", "Tell me the father of the father of Oda Nobukatsu", "What is the father of the father of Oda Nobukatsu?", "What was the father of the father of Oda Nobukatsu?", "Which person is the father of the father of Oda Nobukatsu?", "Which person was the father of the father of Oda Nobukatsu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Oda_Nobukatsu> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Chaudhry Farrukh Altaf", "Tell me the father of the father of Chaudhry Farrukh Altaf", "What is the father of the father of Chaudhry Farrukh Altaf?", "What was the father of the father of Chaudhry Farrukh Altaf?", "Which person is the father of the father of Chaudhry Farrukh Altaf?", "Which person was the father of the father of Chaudhry Farrukh Altaf?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chaudhry_Farrukh_Altaf> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Richard Byron, 2nd Baron Byron", "Tell me the father of the father of Richard Byron, 2nd Baron Byron", "What is the father of the father of Richard Byron, 2nd Baron Byron?", "What was the father of the father of Richard Byron, 2nd Baron Byron?", "Which person is the father of the father of Richard Byron, 2nd Baron Byron?", "Which person was the father of the father of Richard Byron, 2nd Baron Byron?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Richard_Byron,_2nd_Baron_Byron> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Bakhtawar Singh Thapa", "Tell me the father of the father of Bakhtawar Singh Thapa", "What is the father of the father of Bakhtawar Singh Thapa?", "What was the father of the father of Bakhtawar Singh Thapa?", "Which person is the father of the father of Bakhtawar Singh Thapa?", "Which person was the father of the father of Bakhtawar Singh Thapa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bakhtawar_Singh_Thapa> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Choe Hang (military official)", "Tell me the father of the father of Choe Hang (military official)", "What is the father of the father of Choe Hang (military official)?", "What was the father of the father of Choe Hang (military official)?", "Which person is the father of the father of Choe Hang (military official)?", "Which person was the father of the father of Choe Hang (military official)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Choe_Hang_(military_official)> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Choe U", "Tell me the father of the father of Choe U", "What is the father of the father of Choe U?", "What was the father of the father of Choe U?", "Which person is the father of the father of Choe U?", "Which person was the father of the father of Choe U?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Choe_U> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Choe Ui", "Tell me the father of the father of Choe Ui", "What is the father of the father of Choe Ui?", "What was the father of the father of Choe Ui?", "Which person is the father of the father of Choe Ui?", "Which person was the father of the father of Choe Ui?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Choe_Ui> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of George Beauclerk, 3rd Duke of St Albans", "Tell me the father of the father of George Beauclerk, 3rd Duke of St Albans", "What is the father of the father of George Beauclerk, 3rd Duke of St Albans?", "What was the father of the father of George Beauclerk, 3rd Duke of St Albans?", "Which person is the father of the father of George Beauclerk, 3rd Duke of St Albans?", "Which person was the father of the father of George Beauclerk, 3rd Duke of St Albans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/George_Beauclerk,_3rd_Duke_of_St_Albans> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Bal Narsingh Kunwar", "Tell me the father of the father of Bal Narsingh Kunwar", "What is the father of the father of Bal Narsingh Kunwar?", "What was the father of the father of Bal Narsingh Kunwar?", "Which person is the father of the father of Bal Narsingh Kunwar?", "Which person was the father of the father of Bal Narsingh Kunwar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bal_Narsingh_Kunwar> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Bhimsen Thapa", "Tell me the father of the father of Bhimsen Thapa", "What is the father of the father of Bhimsen Thapa?", "What was the father of the father of Bhimsen Thapa?", "Which person is the father of the father of Bhimsen Thapa?", "Which person was the father of the father of Bhimsen Thapa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bhimsen_Thapa> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Bill Green IV", "Tell me the father of the father of Bill Green IV", "What is the father of the father of Bill Green IV?", "What was the father of the father of Bill Green IV?", "Which person is the father of the father of Bill Green IV?", "Which person was the father of the father of Bill Green IV?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bill_Green_IV> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Karbir Pande", "Tell me the father of the father of Karbir Pande", "What is the father of the father of Karbir Pande?", "What was the father of the father of Karbir Pande?", "Which person is the father of the father of Karbir Pande?", "Which person was the father of the father of Karbir Pande?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Karbir_Pande> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Bir Shumsher Jang Bahadur Rana", "Tell me the father of the father of Bir Shumsher Jang Bahadur Rana", "What is the father of the father of Bir Shumsher Jang Bahadur Rana?", "What was the father of the father of Bir Shumsher Jang Bahadur Rana?", "Which person is the father of the father of Bir Shumsher Jang Bahadur Rana?", "Which person was the father of the father of Bir Shumsher Jang Bahadur Rana?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bir_Shumsher_Jang_Bahadur_Rana> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Mizuno Tadahiro", "Tell me the father of the father of Mizuno Tadahiro", "What is the father of the father of Mizuno Tadahiro?", "What was the father of the father of Mizuno Tadahiro?", "Which person is the father of the father of Mizuno Tadahiro?", "Which person was the father of the father of Mizuno Tadahiro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mizuno_Tadahiro> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Sadat Mansoor Naderi", "Tell me the father of the father of Sadat Mansoor Naderi", "What is the father of the father of Sadat Mansoor Naderi?", "What was the father of the father of Sadat Mansoor Naderi?", "Which person is the father of the father of Sadat Mansoor Naderi?", "Which person was the father of the father of Sadat Mansoor Naderi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sadat_Mansoor_Naderi> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Sambhaji Angre", "Tell me the father of the father of Sambhaji Angre", "What is the father of the father of Sambhaji Angre?", "What was the father of the father of Sambhaji Angre?", "Which person is the father of the father of Sambhaji Angre?", "Which person was the father of the father of Sambhaji Angre?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sambhaji_Angre> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Chandroji Angre", "Tell me the father of the father of Chandroji Angre", "What is the father of the father of Chandroji Angre?", "What was the father of the father of Chandroji Angre?", "Which person is the father of the father of Chandroji Angre?", "Which person was the father of the father of Chandroji Angre?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chandroji_Angre> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Chaophraya Thiphakorawong", "Tell me the father of the father of Chaophraya Thiphakorawong", "What is the father of the father of Chaophraya Thiphakorawong?", "What was the father of the father of Chaophraya Thiphakorawong?", "Which person is the father of the father of Chaophraya Thiphakorawong?", "Which person was the father of the father of Chaophraya Thiphakorawong?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chaophraya_Thiphakorawong> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Soero Adinegoro", "Tell me the father of the father of Soero Adinegoro", "What is the father of the father of Soero Adinegoro?", "What was the father of the father of Soero Adinegoro?", "Which person is the father of the father of Soero Adinegoro?", "Which person was the father of the father of Soero Adinegoro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Soero_Adinegoro> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Somdet Chaophraya Sri Suriwongse", "Tell me the father of the father of Somdet Chaophraya Sri Suriwongse", "What is the father of the father of Somdet Chaophraya Sri Suriwongse?", "What was the father of the father of Somdet Chaophraya Sri Suriwongse?", "Which person is the father of the father of Somdet Chaophraya Sri Suriwongse?", "Which person was the father of the father of Somdet Chaophraya Sri Suriwongse?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Somdet_Chaophraya_Sri_Suriwongse> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Dushyant Chautala", "Tell me the father of the father of Dushyant Chautala", "What is the father of the father of Dushyant Chautala?", "What was the father of the father of Dushyant Chautala?", "Which person is the father of the father of Dushyant Chautala?", "Which person was the father of the father of Dushyant Chautala?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dushyant_Chautala> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Francis Needham, 4th Earl of Kilmorey", "Tell me the father of the father of Francis Needham, 4th Earl of Kilmorey", "What is the father of the father of Francis Needham, 4th Earl of Kilmorey?", "What was the father of the father of Francis Needham, 4th Earl of Kilmorey?", "Which person is the father of the father of Francis Needham, 4th Earl of Kilmorey?", "Which person was the father of the father of Francis Needham, 4th Earl of Kilmorey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Francis_Needham,_4th_Earl_of_Kilmorey> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Huan Shiqian", "Tell me the father of the father of Huan Shiqian", "What is the father of the father of Huan Shiqian?", "What was the father of the father of Huan Shiqian?", "Which person is the father of the father of Huan Shiqian?", "Which person was the father of the father of Huan Shiqian?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Huan_Shiqian> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Jam Kamal Khan", "Tell me the father of the father of Jam Kamal Khan", "What is the father of the father of Jam Kamal Khan?", "What was the father of the father of Jam Kamal Khan?", "Which person is the father of the father of Jam Kamal Khan?", "Which person was the father of the father of Jam Kamal Khan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jam_Kamal_Khan> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Samuel Whitbread (Liberal politician)", "Tell me the father of the father of Samuel Whitbread (Liberal politician)", "What is the father of the father of Samuel Whitbread (Liberal politician)?", "What was the father of the father of Samuel Whitbread (Liberal politician)?", "Which person is the father of the father of Samuel Whitbread (Liberal politician)?", "Which person was the father of the father of Samuel Whitbread (Liberal politician)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Samuel_Whitbread_(Liberal_politician)> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Sandy Street", "Tell me the father of the father of Sandy Street", "What is the father of the father of Sandy Street?", "What was the father of the father of Sandy Street?", "Which person is the father of the father of Sandy Street?", "Which person was the father of the father of Sandy Street?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sandy_Street> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Satake Yoshiatsu", "Tell me the father of the father of Satake Yoshiatsu", "What is the father of the father of Satake Yoshiatsu?", "What was the father of the father of Satake Yoshiatsu?", "Which person is the father of the father of Satake Yoshiatsu?", "Which person was the father of the father of Satake Yoshiatsu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Satake_Yoshiatsu> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Satake Yoshichika", "Tell me the father of the father of Satake Yoshichika", "What is the father of the father of Satake Yoshichika?", "What was the father of the father of Satake Yoshichika?", "Which person is the father of the father of Satake Yoshichika?", "Which person was the father of the father of Satake Yoshichika?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Satake_Yoshichika> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Satake Yoshihiro", "Tell me the father of the father of Satake Yoshihiro", "What is the father of the father of Satake Yoshihiro?", "What was the father of the father of Satake Yoshihiro?", "Which person is the father of the father of Satake Yoshihiro?", "Which person was the father of the father of Satake Yoshihiro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Satake_Yoshihiro> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Satake Yoshimasa (1775-1815)", "Tell me the father of the father of Satake Yoshimasa (1775-1815)", "What is the father of the father of Satake Yoshimasa (1775-1815)?", "What was the father of the father of Satake Yoshimasa (1775-1815)?", "Which person is the father of the father of Satake Yoshimasa (1775-1815)?", "Which person was the father of the father of Satake Yoshimasa (1775-1815)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Satake_Yoshimasa_(1775-1815)> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Satake Yoshitada (1695-1715)", "Tell me the father of the father of Satake Yoshitada (1695-1715)", "What is the father of the father of Satake Yoshitada (1695-1715)?", "What was the father of the father of Satake Yoshitada (1695-1715)?", "Which person is the father of the father of Satake Yoshitada (1695-1715)?", "Which person was the father of the father of Satake Yoshitada (1695-1715)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Satake_Yoshitada_(1695-1715)> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Satake Yoshizumi", "Tell me the father of the father of Satake Yoshizumi", "What is the father of the father of Satake Yoshizumi?", "What was the father of the father of Satake Yoshizumi?", "Which person is the father of the father of Satake Yoshizumi?", "Which person was the father of the father of Satake Yoshizumi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Satake_Yoshizumi> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Sayed Jafar Naderi", "Tell me the father of the father of Sayed Jafar Naderi", "What is the father of the father of Sayed Jafar Naderi?", "What was the father of the father of Sayed Jafar Naderi?", "Which person is the father of the father of Sayed Jafar Naderi?", "Which person was the father of the father of Sayed Jafar Naderi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sayed_Jafar_Naderi> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Makhdoom Jamil Zaman", "Tell me the father of the father of Makhdoom Jamil Zaman", "What is the father of the father of Makhdoom Jamil Zaman?", "What was the father of the father of Makhdoom Jamil Zaman?", "Which person is the father of the father of Makhdoom Jamil Zaman?", "Which person was the father of the father of Makhdoom Jamil Zaman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Makhdoom_Jamil_Zaman> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Amin (Qing dynasty)", "Tell me the father of the father of Amin (Qing dynasty)", "What is the father of the father of Amin (Qing dynasty)?", "What was the father of the father of Amin (Qing dynasty)?", "Which person is the father of the father of Amin (Qing dynasty)?", "Which person was the father of the father of Amin (Qing dynasty)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Amin_(Qing_dynasty)> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Archibald Acheson, 6th Earl of Gosford", "Tell me the father of the father of Archibald Acheson, 6th Earl of Gosford", "What is the father of the father of Archibald Acheson, 6th Earl of Gosford?", "What was the father of the father of Archibald Acheson, 6th Earl of Gosford?", "Which person is the father of the father of Archibald Acheson, 6th Earl of Gosford?", "Which person was the father of the father of Archibald Acheson, 6th Earl of Gosford?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Archibald_Acheson,_6th_Earl_of_Gosford> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Arthur MacArthur III", "Tell me the father of the father of Arthur MacArthur III", "What is the father of the father of Arthur MacArthur III?", "What was the father of the father of Arthur MacArthur III?", "Which person is the father of the father of Arthur MacArthur III?", "Which person was the father of the father of Arthur MacArthur III?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Arthur_MacArthur_III> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Ove Bjelke", "Tell me the father of the father of Ove Bjelke", "What is the father of the father of Ove Bjelke?", "What was the father of the father of Ove Bjelke?", "Which person is the father of the father of Ove Bjelke?", "Which person was the father of the father of Ove Bjelke?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ove_Bjelke> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Ranabir Singh Thapa", "Tell me the father of the father of Ranabir Singh Thapa", "What is the father of the father of Ranabir Singh Thapa?", "What was the father of the father of Ranabir Singh Thapa?", "Which person is the father of the father of Ranabir Singh Thapa?", "Which person was the father of the father of Ranabir Singh Thapa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ranabir_Singh_Thapa> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Aaditya Thackeray", "Tell me the father of the father of Aaditya Thackeray", "What is the father of the father of Aaditya Thackeray?", "What was the father of the father of Aaditya Thackeray?", "Which person is the father of the father of Aaditya Thackeray?", "Which person was the father of the father of Aaditya Thackeray?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Aaditya_Thackeray> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Abd al-Malik ibn Salih", "Tell me the father of the father of Abd al-Malik ibn Salih", "What is the father of the father of Abd al-Malik ibn Salih?", "What was the father of the father of Abd al-Malik ibn Salih?", "Which person is the father of the father of Abd al-Malik ibn Salih?", "Which person was the father of the father of Abd al-Malik ibn Salih?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Abd_al-Malik_ibn_Salih> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Abhay Singh Chautala", "Tell me the father of the father of Abhay Singh Chautala", "What is the father of the father of Abhay Singh Chautala?", "What was the father of the father of Abhay Singh Chautala?", "Which person is the father of the father of Abhay Singh Chautala?", "Which person was the father of the father of Abhay Singh Chautala?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Abhay_Singh_Chautala> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Ahmed Al-Fahad Al-Ahmed Al-Sabah", "Tell me the father of the father of Ahmed Al-Fahad Al-Ahmed Al-Sabah", "What is the father of the father of Ahmed Al-Fahad Al-Ahmed Al-Sabah?", "What was the father of the father of Ahmed Al-Fahad Al-Ahmed Al-Sabah?", "Which person is the father of the father of Ahmed Al-Fahad Al-Ahmed Al-Sabah?", "Which person was the father of the father of Ahmed Al-Fahad Al-Ahmed Al-Sabah?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ahmed_Al-Fahad_Al-Ahmed_Al-Sabah> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Al-Fadl ibn Salih", "Tell me the father of the father of Al-Fadl ibn Salih", "What is the father of the father of Al-Fadl ibn Salih?", "What was the father of the father of Al-Fadl ibn Salih?", "Which person is the father of the father of Al-Fadl ibn Salih?", "Which person was the father of the father of Al-Fadl ibn Salih?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Al-Fadl_ibn_Salih> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of William Byron, 3rd Baron Byron", "Tell me the father of the father of William Byron, 3rd Baron Byron", "What is the father of the father of William Byron, 3rd Baron Byron?", "What was the father of the father of William Byron, 3rd Baron Byron?", "Which person is the father of the father of William Byron, 3rd Baron Byron?", "Which person was the father of the father of William Byron, 3rd Baron Byron?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/William_Byron,_3rd_Baron_Byron> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of William Byron, 4th Baron Byron", "Tell me the father of the father of William Byron, 4th Baron Byron", "What is the father of the father of William Byron, 4th Baron Byron?", "What was the father of the father of William Byron, 4th Baron Byron?", "Which person is the father of the father of William Byron, 4th Baron Byron?", "Which person was the father of the father of William Byron, 4th Baron Byron?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/William_Byron,_4th_Baron_Byron> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Zhuge Shang", "Tell me the father of the father of Zhuge Shang", "What is the father of the father of Zhuge Shang?", "What was the father of the father of Zhuge Shang?", "Which person is the father of the father of Zhuge Shang?", "Which person was the father of the father of Zhuge Shang?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Zhuge_Shang> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Ali Mirza Safavi", "Tell me the father of the father of Ali Mirza Safavi", "What is the father of the father of Ali Mirza Safavi?", "What was the father of the father of Ali Mirza Safavi?", "Which person is the father of the father of Ali Mirza Safavi?", "Which person was the father of the father of Ali Mirza Safavi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ali_Mirza_Safavi> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Ali Zahid", "Tell me the father of the father of Ali Zahid", "What is the father of the father of Ali Zahid?", "What was the father of the father of Ali Zahid?", "Which person is the father of the father of Ali Zahid?", "Which person was the father of the father of Ali Zahid?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ali_Zahid> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Date Chikamune", "Tell me the father of the father of Date Chikamune", "What is the father of the father of Date Chikamune?", "What was the father of the father of Date Chikamune?", "Which person is the father of the father of Date Chikamune?", "Which person was the father of the father of Date Chikamune?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Date_Chikamune> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Date Munemoto", "Tell me the father of the father of Date Munemoto", "What is the father of the father of Date Munemoto?", "What was the father of the father of Date Munemoto?", "Which person is the father of the father of Date Munemoto?", "Which person was the father of the father of Date Munemoto?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Date_Munemoto> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Date Narimune", "Tell me the father of the father of Date Narimune", "What is the father of the father of Date Narimune?", "What was the father of the father of Date Narimune?", "Which person is the father of the father of Date Narimune?", "Which person was the father of the father of Date Narimune?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Date_Narimune> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Date Narimura", "Tell me the father of the father of Date Narimura", "What is the father of the father of Date Narimura?", "What was the father of the father of Date Narimura?", "Which person is the father of the father of Date Narimura?", "Which person was the father of the father of Date Narimura?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Date_Narimura> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Date Shigemura", "Tell me the father of the father of Date Shigemura", "What is the father of the father of Date Shigemura?", "What was the father of the father of Date Shigemura?", "Which person is the father of the father of Date Shigemura?", "Which person was the father of the father of Date Shigemura?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Date_Shigemura> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Date Tadamune", "Tell me the father of the father of Date Tadamune", "What is the father of the father of Date Tadamune?", "What was the father of the father of Date Tadamune?", "Which person is the father of the father of Date Tadamune?", "Which person was the father of the father of Date Tadamune?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Date_Tadamune> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Date Tsunamune", "Tell me the father of the father of Date Tsunamune", "What is the father of the father of Date Tsunamune?", "What was the father of the father of Date Tsunamune?", "Which person is the father of the father of Date Tsunamune?", "Which person was the father of the father of Date Tsunamune?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Date_Tsunamune> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Date Tsunamura", "Tell me the father of the father of Date Tsunamura", "What is the father of the father of Date Tsunamura?", "What was the father of the father of Date Tsunamura?", "Which person is the father of the father of Date Tsunamura?", "Which person was the father of the father of Date Tsunamura?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Date_Tsunamura> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Date Yoshikuni", "Tell me the father of the father of Date Yoshikuni", "What is the father of the father of Date Yoshikuni?", "What was the father of the father of Date Yoshikuni?", "Which person is the father of the father of Date Yoshikuni?", "Which person was the father of the father of Date Yoshikuni?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Date_Yoshikuni> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Asad Mehmood", "Tell me the father of the father of Asad Mehmood", "What is the father of the father of Asad Mehmood?", "What was the father of the father of Asad Mehmood?", "Which person is the father of the father of Asad Mehmood?", "Which person was the father of the father of Asad Mehmood?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Asad_Mehmood> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Robert Todd Lincoln", "Tell me the father of the father of Robert Todd Lincoln", "What is the father of the father of Robert Todd Lincoln?", "What was the father of the father of Robert Todd Lincoln?", "Which person is the father of the father of Robert Todd Lincoln?", "Which person was the father of the father of Robert Todd Lincoln?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Robert_Todd_Lincoln> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Sima Liang", "Tell me the father of the father of Sima Liang", "What is the father of the father of Sima Liang?", "What was the father of the father of Sima Liang?", "Which person is the father of the father of Sima Liang?", "Which person was the father of the father of Sima Liang?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sima_Liang> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Tanvir Shakil Joy", "Tell me the father of the father of Tanvir Shakil Joy", "What is the father of the father of Tanvir Shakil Joy?", "What was the father of the father of Tanvir Shakil Joy?", "Which person is the father of the father of Tanvir Shakil Joy?", "Which person was the father of the father of Tanvir Shakil Joy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tanvir_Shakil_Joy> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Walter J. Kohler Jr.", "Tell me the father of the father of Walter J. Kohler Jr.", "What is the father of the father of Walter J. Kohler Jr.?", "What was the father of the father of Walter J. Kohler Jr.?", "Which person is the father of the father of Walter J. Kohler Jr.?", "Which person was the father of the father of Walter J. Kohler Jr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Walter_J._Kohler_Jr.> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Walter Lamb", "Tell me the father of the father of Walter Lamb", "What is the father of the father of Walter Lamb?", "What was the father of the father of Walter Lamb?", "Which person is the father of the father of Walter Lamb?", "Which person was the father of the father of Walter Lamb?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Walter_Lamb> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Farkhunda Zahra Naderi", "Tell me the father of the father of Farkhunda Zahra Naderi", "What is the father of the father of Farkhunda Zahra Naderi?", "What was the father of the father of Farkhunda Zahra Naderi?", "Which person is the father of the father of Farkhunda Zahra Naderi?", "Which person was the father of the father of Farkhunda Zahra Naderi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Farkhunda_Zahra_Naderi> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Nanbu Toshiyuki", "Tell me the father of the father of Nanbu Toshiyuki", "What is the father of the father of Nanbu Toshiyuki?", "What was the father of the father of Nanbu Toshiyuki?", "Which person is the father of the father of Nanbu Toshiyuki?", "Which person was the father of the father of Nanbu Toshiyuki?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nanbu_Toshiyuki> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Pratik Prakashbapu Patil", "Tell me the father of the father of Pratik Prakashbapu Patil", "What is the father of the father of Pratik Prakashbapu Patil?", "What was the father of the father of Pratik Prakashbapu Patil?", "Which person is the father of the father of Pratik Prakashbapu Patil?", "Which person was the father of the father of Pratik Prakashbapu Patil?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Pratik_Prakashbapu_Patil> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Sun Ce", "Tell me the father of the father of Sun Ce", "What is the father of the father of Sun Ce?", "What was the father of the father of Sun Ce?", "Which person is the father of the father of Sun Ce?", "Which person was the father of the father of Sun Ce?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sun_Ce> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Sun Yi", "Tell me the father of the father of Sun Yi", "What is the father of the father of Sun Yi?", "What was the father of the father of Sun Yi?", "Which person is the father of the father of Sun Yi?", "Which person was the father of the father of Sun Yi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sun_Yi> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of William Byron, 5th Baron Byron", "Tell me the father of the father of William Byron, 5th Baron Byron", "What is the father of the father of William Byron, 5th Baron Byron?", "What was the father of the father of William Byron, 5th Baron Byron?", "Which person is the father of the father of William Byron, 5th Baron Byron?", "Which person was the father of the father of William Byron, 5th Baron Byron?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/William_Byron,_5th_Baron_Byron> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of William Henry Harrison III", "Tell me the father of the father of William Henry Harrison III", "What is the father of the father of William Henry Harrison III?", "What was the father of the father of William Henry Harrison III?", "Which person is the father of the father of William Henry Harrison III?", "Which person was the father of the father of William Henry Harrison III?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/William_Henry_Harrison_III> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of William Milliken", "Tell me the father of the father of William Milliken", "What is the father of the father of William Milliken?", "What was the father of the father of William Milliken?", "Which person is the father of the father of William Milliken?", "Which person was the father of the father of William Milliken?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/William_Milliken> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Serniabat Sadiq Abdullah", "Tell me the father of the father of Serniabat Sadiq Abdullah", "What is the father of the father of Serniabat Sadiq Abdullah?", "What was the father of the father of Serniabat Sadiq Abdullah?", "Which person is the father of the father of Serniabat Sadiq Abdullah?", "Which person was the father of the father of Serniabat Sadiq Abdullah?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Serniabat_Sadiq_Abdullah> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Edward Lamb (politician)", "Tell me the father of the father of Edward Lamb (politician)", "What is the father of the father of Edward Lamb (politician)?", "What was the father of the father of Edward Lamb (politician)?", "Which person is the father of the father of Edward Lamb (politician)?", "Which person was the father of the father of Edward Lamb (politician)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Edward_Lamb_(politician)> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Joseph Hopkinson", "Tell me the father of the father of Joseph Hopkinson", "What is the father of the father of Joseph Hopkinson?", "What was the father of the father of Joseph Hopkinson?", "Which person is the father of the father of Joseph Hopkinson?", "Which person was the father of the father of Joseph Hopkinson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joseph_Hopkinson> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Mathabarsingh Thapa", "Tell me the father of the father of Mathabarsingh Thapa", "What is the father of the father of Mathabarsingh Thapa?", "What was the father of the father of Mathabarsingh Thapa?", "Which person is the father of the father of Mathabarsingh Thapa?", "Which person was the father of the father of Mathabarsingh Thapa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mathabarsingh_Thapa> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Yashwant Ambedkar", "Tell me the father of the father of Yashwant Ambedkar", "What is the father of the father of Yashwant Ambedkar?", "What was the father of the father of Yashwant Ambedkar?", "Which person is the father of the father of Yashwant Ambedkar?", "Which person was the father of the father of Yashwant Ambedkar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Yashwant_Ambedkar> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Isma'il ibn Salih ibn Ali al-Hashimi", "Tell me the father of the father of Isma'il ibn Salih ibn Ali al-Hashimi", "What is the father of the father of Isma'il ibn Salih ibn Ali al-Hashimi?", "What was the father of the father of Isma'il ibn Salih ibn Ali al-Hashimi?", "Which person is the father of the father of Isma'il ibn Salih ibn Ali al-Hashimi?", "Which person was the father of the father of Isma'il ibn Salih ibn Ali al-Hashimi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Isma'il_ibn_Salih_ibn_Ali_al-Hashimi> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "14",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the father of the father of Kirtiman Singh Basnyat", "Tell me the father of the father of Kirtiman Singh Basnyat", "What is the father of the father of Kirtiman Singh Basnyat?", "What was the father of the father of Kirtiman Singh Basnyat?", "Which person is the father of the father of Kirtiman Singh Basnyat?", "Which person was the father of the father of Kirtiman Singh Basnyat?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/father> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kirtiman_Singh_Basnyat> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Lu Ji (Gongji)", "Tell me the death place of the father of Lu Ji (Gongji)", "What is the death place of the father of Lu Ji (Gongji)?", "What was the death place of the father of Lu Ji (Gongji)?", "Which place is the death place of the father of Lu Ji (Gongji)?", "Which place was the death place of the father of Lu Ji (Gongji)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lu_Ji_(Gongji)> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Lu Kang (Three Kingdoms)", "Tell me the death place of the father of Lu Kang (Three Kingdoms)", "What is the death place of the father of Lu Kang (Three Kingdoms)?", "What was the death place of the father of Lu Kang (Three Kingdoms)?", "Which place is the death place of the father of Lu Kang (Three Kingdoms)?", "Which place was the death place of the father of Lu Kang (Three Kingdoms)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lu_Kang_(Three_Kingdoms)> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Lucius Fairchild", "Tell me the death place of the father of Lucius Fairchild", "What is the death place of the father of Lucius Fairchild?", "What was the death place of the father of Lucius Fairchild?", "Which place is the death place of the father of Lucius Fairchild?", "Which place was the death place of the father of Lucius Fairchild?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucius_Fairchild> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Ma Chao", "Tell me the death place of the father of Ma Chao", "What is the death place of the father of Ma Chao?", "What was the death place of the father of Ma Chao?", "Which place is the death place of the father of Ma Chao?", "Which place was the death place of the father of Ma Chao?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ma_Chao> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Mahfuzur Rahaman", "Tell me the death place of the father of Mahfuzur Rahaman", "What is the death place of the father of Mahfuzur Rahaman?", "What was the death place of the father of Mahfuzur Rahaman?", "Which place is the death place of the father of Mahfuzur Rahaman?", "Which place was the death place of the father of Mahfuzur Rahaman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mahfuzur_Rahaman> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Maksim Vučinić", "Tell me the death place of the father of Maksim Vučinić", "What is the death place of the father of Maksim Vučinić?", "What was the death place of the father of Maksim Vučinić?", "Which place is the death place of the father of Maksim Vučinić?", "Which place was the death place of the father of Maksim Vučinić?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maksim_Vučinić> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Maktoum bin Rashid Al Maktoum", "Tell me the death place of the father of Maktoum bin Rashid Al Maktoum", "What is the death place of the father of Maktoum bin Rashid Al Maktoum?", "What was the death place of the father of Maktoum bin Rashid Al Maktoum?", "Which place is the death place of the father of Maktoum bin Rashid Al Maktoum?", "Which place was the death place of the father of Maktoum bin Rashid Al Maktoum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maktoum_bin_Rashid_Al_Maktoum> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Caroline Le Couteur", "Tell me the death place of the father of Caroline Le Couteur", "What is the death place of the father of Caroline Le Couteur?", "What was the death place of the father of Caroline Le Couteur?", "Which place is the death place of the father of Caroline Le Couteur?", "Which place was the death place of the father of Caroline Le Couteur?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Caroline_Le_Couteur> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Uddhav Thackeray", "Tell me the death place of the father of Uddhav Thackeray", "What is the death place of the father of Uddhav Thackeray?", "What was the death place of the father of Uddhav Thackeray?", "Which place is the death place of the father of Uddhav Thackeray?", "Which place was the death place of the father of Uddhav Thackeray?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Uddhav_Thackeray> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Ujir Singh Thapa", "Tell me the death place of the father of Ujir Singh Thapa", "What is the death place of the father of Ujir Singh Thapa?", "What was the death place of the father of Ujir Singh Thapa?", "Which place is the death place of the father of Ujir Singh Thapa?", "Which place was the death place of the father of Ujir Singh Thapa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ujir_Singh_Thapa> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Umesh Nandkumar Patel", "Tell me the death place of the father of Umesh Nandkumar Patel", "What is the death place of the father of Umesh Nandkumar Patel?", "What was the death place of the father of Umesh Nandkumar Patel?", "Which place is the death place of the father of Umesh Nandkumar Patel?", "Which place was the death place of the father of Umesh Nandkumar Patel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Umesh_Nandkumar_Patel> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Vahideh Taleghani", "Tell me the death place of the father of Vahideh Taleghani", "What is the death place of the father of Vahideh Taleghani?", "What was the death place of the father of Vahideh Taleghani?", "Which place is the death place of the father of Vahideh Taleghani?", "Which place was the death place of the father of Vahideh Taleghani?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Vahideh_Taleghani> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Varun Gandhi", "Tell me the death place of the father of Varun Gandhi", "What is the death place of the father of Varun Gandhi?", "What was the death place of the father of Varun Gandhi?", "Which place is the death place of the father of Varun Gandhi?", "Which place was the death place of the father of Varun Gandhi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Varun_Gandhi> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Vasco Fernandes Coutinho, captain of Espírito Santo", "Tell me the death place of the father of Vasco Fernandes Coutinho, captain of Espírito Santo", "What is the death place of the father of Vasco Fernandes Coutinho, captain of Espírito Santo?", "What was the death place of the father of Vasco Fernandes Coutinho, captain of Espírito Santo?", "Which place is the death place of the father of Vasco Fernandes Coutinho, captain of Espírito Santo?", "Which place was the death place of the father of Vasco Fernandes Coutinho, captain of Espírito Santo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Vasco_Fernandes_Coutinho,_captain_of_Espírito_Santo> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Ukita Hideie", "Tell me the death place of the father of Ukita Hideie", "What is the death place of the father of Ukita Hideie?", "What was the death place of the father of Ukita Hideie?", "Which place is the death place of the father of Ukita Hideie?", "Which place was the death place of the father of Ukita Hideie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ukita_Hideie> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Han Chan Piet", "Tell me the death place of the father of Han Chan Piet", "What is the death place of the father of Han Chan Piet?", "What was the death place of the father of Han Chan Piet?", "Which place is the death place of the father of Han Chan Piet?", "Which place was the death place of the father of Han Chan Piet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Han_Chan_Piet> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Han Kik Ko", "Tell me the death place of the father of Han Kik Ko", "What is the death place of the father of Han Kik Ko?", "What was the death place of the father of Han Kik Ko?", "Which place is the death place of the father of Han Kik Ko?", "Which place was the death place of the father of Han Kik Ko?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Han_Kik_Ko> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Mansur al-Atrash", "Tell me the death place of the father of Mansur al-Atrash", "What is the death place of the father of Mansur al-Atrash?", "What was the death place of the father of Mansur al-Atrash?", "Which place is the death place of the father of Mansur al-Atrash?", "Which place was the death place of the father of Mansur al-Atrash?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mansur_al-Atrash> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Moinul Islam Khan", "Tell me the death place of the father of Moinul Islam Khan", "What is the death place of the father of Moinul Islam Khan?", "What was the death place of the father of Moinul Islam Khan?", "Which place is the death place of the father of Moinul Islam Khan?", "Which place was the death place of the father of Moinul Islam Khan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Moinul_Islam_Khan> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Bill Workman", "Tell me the death place of the father of Bill Workman", "What is the death place of the father of Bill Workman?", "What was the death place of the father of Bill Workman?", "Which place is the death place of the father of Bill Workman?", "Which place was the death place of the father of Bill Workman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bill_Workman> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Bimalendra Nidhi", "Tell me the death place of the father of Bimalendra Nidhi", "What is the death place of the father of Bimalendra Nidhi?", "What was the death place of the father of Bimalendra Nidhi?", "Which place is the death place of the father of Bimalendra Nidhi?", "Which place was the death place of the father of Bimalendra Nidhi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bimalendra_Nidhi> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Blanche Cavendish, Countess of Burlington", "Tell me the death place of the father of Blanche Cavendish, Countess of Burlington", "What is the death place of the father of Blanche Cavendish, Countess of Burlington?", "What was the death place of the father of Blanche Cavendish, Countess of Burlington?", "Which place is the death place of the father of Blanche Cavendish, Countess of Burlington?", "Which place was the death place of the father of Blanche Cavendish, Countess of Burlington?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Blanche_Cavendish,_Countess_of_Burlington> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Abbasqoli Mo'tamad-dawla Javanshir", "Tell me the death place of the father of Abbasqoli Mo'tamad-dawla Javanshir", "What is the death place of the father of Abbasqoli Mo'tamad-dawla Javanshir?", "What was the death place of the father of Abbasqoli Mo'tamad-dawla Javanshir?", "Which place is the death place of the father of Abbasqoli Mo'tamad-dawla Javanshir?", "Which place was the death place of the father of Abbasqoli Mo'tamad-dawla Javanshir?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Abbasqoli_Mo'tamad-dawla_Javanshir> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Dhir Shamsher Rana", "Tell me the death place of the father of Dhir Shamsher Rana", "What is the death place of the father of Dhir Shamsher Rana?", "What was the death place of the father of Dhir Shamsher Rana?", "Which place is the death place of the father of Dhir Shamsher Rana?", "Which place was the death place of the father of Dhir Shamsher Rana?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dhir_Shamsher_Rana> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Dhiraj Deshmukh", "Tell me the death place of the father of Dhiraj Deshmukh", "What is the death place of the father of Dhiraj Deshmukh?", "What was the death place of the father of Dhiraj Deshmukh?", "Which place is the death place of the father of Dhiraj Deshmukh?", "Which place was the death place of the father of Dhiraj Deshmukh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dhiraj_Deshmukh> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Dilip Babasaheb Bhosale", "Tell me the death place of the father of Dilip Babasaheb Bhosale", "What is the death place of the father of Dilip Babasaheb Bhosale?", "What was the death place of the father of Dilip Babasaheb Bhosale?", "Which place is the death place of the father of Dilip Babasaheb Bhosale?", "Which place was the death place of the father of Dilip Babasaheb Bhosale?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dilip_Babasaheb_Bhosale> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Dirk Gysbert van Breda", "Tell me the death place of the father of Dirk Gysbert van Breda", "What is the death place of the father of Dirk Gysbert van Breda?", "What was the death place of the father of Dirk Gysbert van Breda?", "Which place is the death place of the father of Dirk Gysbert van Breda?", "Which place was the death place of the father of Dirk Gysbert van Breda?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dirk_Gysbert_van_Breda> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Gu Shao", "Tell me the death place of the father of Gu Shao", "What is the death place of the father of Gu Shao?", "What was the death place of the father of Gu Shao?", "Which place is the death place of the father of Gu Shao?", "Which place was the death place of the father of Gu Shao?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gu_Shao> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Gulnara Karimova", "Tell me the death place of the father of Gulnara Karimova", "What is the death place of the father of Gulnara Karimova?", "What was the death place of the father of Gulnara Karimova?", "Which place is the death place of the father of Gulnara Karimova?", "Which place was the death place of the father of Gulnara Karimova?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gulnara_Karimova> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Khadga Shamsher Jang Bahadur Rana", "Tell me the death place of the father of Khadga Shamsher Jang Bahadur Rana", "What is the death place of the father of Khadga Shamsher Jang Bahadur Rana?", "What was the death place of the father of Khadga Shamsher Jang Bahadur Rana?", "Which place is the death place of the father of Khadga Shamsher Jang Bahadur Rana?", "Which place was the death place of the father of Khadga Shamsher Jang Bahadur Rana?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Khadga_Shamsher_Jang_Bahadur_Rana> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Kimbrough Stone", "Tell me the death place of the father of Kimbrough Stone", "What is the death place of the father of Kimbrough Stone?", "What was the death place of the father of Kimbrough Stone?", "Which place is the death place of the father of Kimbrough Stone?", "Which place was the death place of the father of Kimbrough Stone?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kimbrough_Stone> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Prince Raj", "Tell me the death place of the father of Prince Raj", "What is the death place of the father of Prince Raj?", "What was the death place of the father of Prince Raj?", "Which place is the death place of the father of Prince Raj?", "Which place was the death place of the father of Prince Raj?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Prince_Raj> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Qin Lang", "Tell me the death place of the father of Qin Lang", "What is the death place of the father of Qin Lang?", "What was the death place of the father of Qin Lang?", "Which place is the death place of the father of Qin Lang?", "Which place was the death place of the father of Qin Lang?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Qin_Lang> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Qubad Talabani", "Tell me the death place of the father of Qubad Talabani", "What is the death place of the father of Qubad Talabani?", "What was the death place of the father of Qubad Talabani?", "Which place is the death place of the father of Qubad Talabani?", "Which place was the death place of the father of Qubad Talabani?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Qubad_Talabani> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Selima Rahman", "Tell me the death place of the father of Selima Rahman", "What is the death place of the father of Selima Rahman?", "What was the death place of the father of Selima Rahman?", "Which place is the death place of the father of Selima Rahman?", "Which place was the death place of the father of Selima Rahman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Selima_Rahman> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Ajay Arjun Singh", "Tell me the death place of the father of Ajay Arjun Singh", "What is the death place of the father of Ajay Arjun Singh?", "What was the death place of the father of Ajay Arjun Singh?", "Which place is the death place of the father of Ajay Arjun Singh?", "Which place was the death place of the father of Ajay Arjun Singh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ajay_Arjun_Singh> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Ajit Singh (politician)", "Tell me the death place of the father of Ajit Singh (politician)", "What is the death place of the father of Ajit Singh (politician)?", "What was the death place of the father of Ajit Singh (politician)?", "Which place is the death place of the father of Ajit Singh (politician)?", "Which place was the death place of the father of Ajit Singh (politician)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ajit_Singh_(politician)> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Akbaruddin Owaisi", "Tell me the death place of the father of Akbaruddin Owaisi", "What is the death place of the father of Akbaruddin Owaisi?", "What was the death place of the father of Akbaruddin Owaisi?", "Which place is the death place of the father of Akbaruddin Owaisi?", "Which place was the death place of the father of Akbaruddin Owaisi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Akbaruddin_Owaisi> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Alexander Akerman", "Tell me the death place of the father of Alexander Akerman", "What is the death place of the father of Alexander Akerman?", "What was the death place of the father of Alexander Akerman?", "Which place is the death place of the father of Alexander Akerman?", "Which place was the death place of the father of Alexander Akerman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alexander_Akerman> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Alexander Baring, 6th Baron Ashburton", "Tell me the death place of the father of Alexander Baring, 6th Baron Ashburton", "What is the death place of the father of Alexander Baring, 6th Baron Ashburton?", "What was the death place of the father of Alexander Baring, 6th Baron Ashburton?", "Which place is the death place of the father of Alexander Baring, 6th Baron Ashburton?", "Which place was the death place of the father of Alexander Baring, 6th Baron Ashburton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alexander_Baring,_6th_Baron_Ashburton> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Alexander Bogoridi", "Tell me the death place of the father of Alexander Bogoridi", "What is the death place of the father of Alexander Bogoridi?", "What was the death place of the father of Alexander Bogoridi?", "Which place is the death place of the father of Alexander Bogoridi?", "Which place was the death place of the father of Alexander Bogoridi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alexander_Bogoridi> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Alexander W. Stow", "Tell me the death place of the father of Alexander W. Stow", "What is the death place of the father of Alexander W. Stow?", "What was the death place of the father of Alexander W. Stow?", "Which place is the death place of the father of Alexander W. Stow?", "Which place was the death place of the father of Alexander W. Stow?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alexander_W._Stow> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Alfred Conkling Coxe Jr.", "Tell me the death place of the father of Alfred Conkling Coxe Jr.", "What is the death place of the father of Alfred Conkling Coxe Jr.?", "What was the death place of the father of Alfred Conkling Coxe Jr.?", "Which place is the death place of the father of Alfred Conkling Coxe Jr.?", "Which place was the death place of the father of Alfred Conkling Coxe Jr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alfred_Conkling_Coxe_Jr.> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Alfred Józef Potocki", "Tell me the death place of the father of Alfred Józef Potocki", "What is the death place of the father of Alfred Józef Potocki?", "What was the death place of the father of Alfred Józef Potocki?", "Which place is the death place of the father of Alfred Józef Potocki?", "Which place was the death place of the father of Alfred Józef Potocki?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alfred_Józef_Potocki> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Alfred Lamb (Australian politician)", "Tell me the death place of the father of Alfred Lamb (Australian politician)", "What is the death place of the father of Alfred Lamb (Australian politician)?", "What was the death place of the father of Alfred Lamb (Australian politician)?", "Which place is the death place of the father of Alfred Lamb (Australian politician)?", "Which place was the death place of the father of Alfred Lamb (Australian politician)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alfred_Lamb_(Australian_politician)> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Alphonso Taft", "Tell me the death place of the father of Alphonso Taft", "What is the death place of the father of Alphonso Taft?", "What was the death place of the father of Alphonso Taft?", "Which place is the death place of the father of Alphonso Taft?", "Which place was the death place of the father of Alphonso Taft?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alphonso_Taft> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Chandrika Roy", "Tell me the death place of the father of Chandrika Roy", "What is the death place of the father of Chandrika Roy?", "What was the death place of the father of Chandrika Roy?", "Which place is the death place of the father of Chandrika Roy?", "Which place was the death place of the father of Chandrika Roy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chandrika_Roy> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Charilaos Trikoupis", "Tell me the death place of the father of Charilaos Trikoupis", "What is the death place of the father of Charilaos Trikoupis?", "What was the death place of the father of Charilaos Trikoupis?", "Which place is the death place of the father of Charilaos Trikoupis?", "Which place was the death place of the father of Charilaos Trikoupis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charilaos_Trikoupis> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Charles Beauclerk, 2nd Duke of St Albans", "Tell me the death place of the father of Charles Beauclerk, 2nd Duke of St Albans", "What is the death place of the father of Charles Beauclerk, 2nd Duke of St Albans?", "What was the death place of the father of Charles Beauclerk, 2nd Duke of St Albans?", "Which place is the death place of the father of Charles Beauclerk, 2nd Duke of St Albans?", "Which place was the death place of the father of Charles Beauclerk, 2nd Duke of St Albans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charles_Beauclerk,_2nd_Duke_of_St_Albans> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Charles D. Drake", "Tell me the death place of the father of Charles D. Drake", "What is the death place of the father of Charles D. Drake?", "What was the death place of the father of Charles D. Drake?", "Which place is the death place of the father of Charles D. Drake?", "Which place was the death place of the father of Charles D. Drake?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charles_D._Drake> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Charles D. Parker", "Tell me the death place of the father of Charles D. Parker", "What is the death place of the father of Charles D. Parker?", "What was the death place of the father of Charles D. Parker?", "Which place is the death place of the father of Charles D. Parker?", "Which place was the death place of the father of Charles D. Parker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charles_D._Parker> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Charles Holland Duell", "Tell me the death place of the father of Charles Holland Duell", "What is the death place of the father of Charles Holland Duell?", "What was the death place of the father of Charles Holland Duell?", "Which place is the death place of the father of Charles Holland Duell?", "Which place was the death place of the father of Charles Holland Duell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charles_Holland_Duell> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Charles Spencer Francis", "Tell me the death place of the father of Charles Spencer Francis", "What is the death place of the father of Charles Spencer Francis?", "What was the death place of the father of Charles Spencer Francis?", "Which place is the death place of the father of Charles Spencer Francis?", "Which place was the death place of the father of Charles Spencer Francis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charles_Spencer_Francis> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Charles Taylor Sherman", "Tell me the death place of the father of Charles Taylor Sherman", "What is the death place of the father of Charles Taylor Sherman?", "What was the death place of the father of Charles Taylor Sherman?", "Which place is the death place of the father of Charles Taylor Sherman?", "Which place was the death place of the father of Charles Taylor Sherman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charles_Taylor_Sherman> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Chaudhry Aamir Sultan Cheema", "Tell me the death place of the father of Chaudhry Aamir Sultan Cheema", "What is the death place of the father of Chaudhry Aamir Sultan Cheema?", "What was the death place of the father of Chaudhry Aamir Sultan Cheema?", "Which place is the death place of the father of Chaudhry Aamir Sultan Cheema?", "Which place was the death place of the father of Chaudhry Aamir Sultan Cheema?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chaudhry_Aamir_Sultan_Cheema> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Chen Biao", "Tell me the death place of the father of Chen Biao", "What is the death place of the father of Chen Biao?", "What was the death place of the father of Chen Biao?", "Which place is the death place of the father of Chen Biao?", "Which place was the death place of the father of Chen Biao?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chen_Biao> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Chen Li-an", "Tell me the death place of the father of Chen Li-an", "What is the death place of the father of Chen Li-an?", "What was the death place of the father of Chen Li-an?", "Which place is the death place of the father of Chen Li-an?", "Which place was the death place of the father of Chen Li-an?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chen_Li-an> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Chen Tai", "Tell me the death place of the father of Chen Tai", "What is the death place of the father of Chen Tai?", "What was the death place of the father of Chen Tai?", "Which place is the death place of the father of Chen Tai?", "Which place was the death place of the father of Chen Tai?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chen_Tai> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Chiang Hsiao-yen", "Tell me the death place of the father of Chiang Hsiao-yen", "What is the death place of the father of Chiang Hsiao-yen?", "What was the death place of the father of Chiang Hsiao-yen?", "Which place is the death place of the father of Chiang Hsiao-yen?", "Which place was the death place of the father of Chiang Hsiao-yen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chiang_Hsiao-yen> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Fletcher Webster", "Tell me the death place of the father of Fletcher Webster", "What is the death place of the father of Fletcher Webster?", "What was the death place of the father of Fletcher Webster?", "Which place is the death place of the father of Fletcher Webster?", "Which place was the death place of the father of Fletcher Webster?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Fletcher_Webster> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Florence Norman", "Tell me the death place of the father of Florence Norman", "What is the death place of the father of Florence Norman?", "What was the death place of the father of Florence Norman?", "Which place is the death place of the father of Florence Norman?", "Which place was the death place of the father of Florence Norman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Florence_Norman> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Nikolas Papadopoulos", "Tell me the death place of the father of Nikolas Papadopoulos", "What is the death place of the father of Nikolas Papadopoulos?", "What was the death place of the father of Nikolas Papadopoulos?", "Which place is the death place of the father of Nikolas Papadopoulos?", "Which place was the death place of the father of Nikolas Papadopoulos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nikolas_Papadopoulos> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Niwa Nagahiro", "Tell me the death place of the father of Niwa Nagahiro", "What is the death place of the father of Niwa Nagahiro?", "What was the death place of the father of Niwa Nagahiro?", "Which place is the death place of the father of Niwa Nagahiro?", "Which place was the death place of the father of Niwa Nagahiro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Niwa_Nagahiro> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Oda Nobukatsu", "Tell me the death place of the father of Oda Nobukatsu", "What is the death place of the father of Oda Nobukatsu?", "What was the death place of the father of Oda Nobukatsu?", "Which place is the death place of the father of Oda Nobukatsu?", "Which place was the death place of the father of Oda Nobukatsu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Oda_Nobukatsu> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Chaudhry Farrukh Altaf", "Tell me the death place of the father of Chaudhry Farrukh Altaf", "What is the death place of the father of Chaudhry Farrukh Altaf?", "What was the death place of the father of Chaudhry Farrukh Altaf?", "Which place is the death place of the father of Chaudhry Farrukh Altaf?", "Which place was the death place of the father of Chaudhry Farrukh Altaf?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chaudhry_Farrukh_Altaf> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Edgar Gerhart", "Tell me the death place of the father of Edgar Gerhart", "What is the death place of the father of Edgar Gerhart?", "What was the death place of the father of Edgar Gerhart?", "Which place is the death place of the father of Edgar Gerhart?", "Which place was the death place of the father of Edgar Gerhart?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Edgar_Gerhart> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Fazal Rahimtoola", "Tell me the death place of the father of Fazal Rahimtoola", "What is the death place of the father of Fazal Rahimtoola?", "What was the death place of the father of Fazal Rahimtoola?", "Which place is the death place of the father of Fazal Rahimtoola?", "Which place was the death place of the father of Fazal Rahimtoola?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Fazal_Rahimtoola> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Habib Rahimtoola", "Tell me the death place of the father of Habib Rahimtoola", "What is the death place of the father of Habib Rahimtoola?", "What was the death place of the father of Habib Rahimtoola?", "Which place is the death place of the father of Habib Rahimtoola?", "Which place was the death place of the father of Habib Rahimtoola?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Habib_Rahimtoola> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Richard Byron, 2nd Baron Byron", "Tell me the death place of the father of Richard Byron, 2nd Baron Byron", "What is the death place of the father of Richard Byron, 2nd Baron Byron?", "What was the death place of the father of Richard Byron, 2nd Baron Byron?", "Which place is the death place of the father of Richard Byron, 2nd Baron Byron?", "Which place was the death place of the father of Richard Byron, 2nd Baron Byron?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Richard_Byron,_2nd_Baron_Byron> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Avss Amarnath Gudivada", "Tell me the death place of the father of Avss Amarnath Gudivada", "What is the death place of the father of Avss Amarnath Gudivada?", "What was the death place of the father of Avss Amarnath Gudivada?", "Which place is the death place of the father of Avss Amarnath Gudivada?", "Which place was the death place of the father of Avss Amarnath Gudivada?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Avss_Amarnath_Gudivada> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Awais Leghari", "Tell me the death place of the father of Awais Leghari", "What is the death place of the father of Awais Leghari?", "What was the death place of the father of Awais Leghari?", "Which place is the death place of the father of Awais Leghari?", "Which place was the death place of the father of Awais Leghari?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Awais_Leghari> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Azam Taleghani", "Tell me the death place of the father of Azam Taleghani", "What is the death place of the father of Azam Taleghani?", "What was the death place of the father of Azam Taleghani?", "Which place is the death place of the father of Azam Taleghani?", "Which place was the death place of the father of Azam Taleghani?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Azam_Taleghani> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Bafel Talabani", "Tell me the death place of the father of Bafel Talabani", "What is the death place of the father of Bafel Talabani?", "What was the death place of the father of Bafel Talabani?", "Which place is the death place of the father of Bafel Talabani?", "Which place was the death place of the father of Bafel Talabani?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bafel_Talabani> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Baji Rao I", "Tell me the death place of the father of Baji Rao I", "What is the death place of the father of Baji Rao I?", "What was the death place of the father of Baji Rao I?", "Which place is the death place of the father of Baji Rao I?", "Which place was the death place of the father of Baji Rao I?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Baji_Rao_I> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Bakhtawar Singh Thapa", "Tell me the death place of the father of Bakhtawar Singh Thapa", "What is the death place of the father of Bakhtawar Singh Thapa?", "What was the death place of the father of Bakhtawar Singh Thapa?", "Which place is the death place of the father of Bakhtawar Singh Thapa?", "Which place was the death place of the father of Bakhtawar Singh Thapa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bakhtawar_Singh_Thapa> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Bao Xun", "Tell me the death place of the father of Bao Xun", "What is the death place of the father of Bao Xun?", "What was the death place of the father of Bao Xun?", "Which place is the death place of the father of Bao Xun?", "Which place was the death place of the father of Bao Xun?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bao_Xun> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Bas de Gaay Fortman", "Tell me the death place of the father of Bas de Gaay Fortman", "What is the death place of the father of Bas de Gaay Fortman?", "What was the death place of the father of Bas de Gaay Fortman?", "Which place is the death place of the father of Bas de Gaay Fortman?", "Which place was the death place of the father of Bas de Gaay Fortman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bas_de_Gaay_Fortman> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Basil Hamilton-Temple-Blackwood, 4th Marquess of Dufferin and Ava", "Tell me the death place of the father of Basil Hamilton-Temple-Blackwood, 4th Marquess of Dufferin and Ava", "What is the death place of the father of Basil Hamilton-Temple-Blackwood, 4th Marquess of Dufferin and Ava?", "What was the death place of the father of Basil Hamilton-Temple-Blackwood, 4th Marquess of Dufferin and Ava?", "Which place is the death place of the father of Basil Hamilton-Temple-Blackwood, 4th Marquess of Dufferin and Ava?", "Which place was the death place of the father of Basil Hamilton-Temple-Blackwood, 4th Marquess of Dufferin and Ava?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Basil_Hamilton-Temple-Blackwood,_4th_Marquess_of_Dufferin_and_Ava> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Liu Cong (Han dynasty)", "Tell me the death place of the father of Liu Cong (Han dynasty)", "What is the death place of the father of Liu Cong (Han dynasty)?", "What was the death place of the father of Liu Cong (Han dynasty)?", "Which place is the death place of the father of Liu Cong (Han dynasty)?", "Which place was the death place of the father of Liu Cong (Han dynasty)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Liu_Cong_(Han_dynasty)> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Liu Ji (Three Kingdoms)", "Tell me the death place of the father of Liu Ji (Three Kingdoms)", "What is the death place of the father of Liu Ji (Three Kingdoms)?", "What was the death place of the father of Liu Ji (Three Kingdoms)?", "Which place is the death place of the father of Liu Ji (Three Kingdoms)?", "Which place was the death place of the father of Liu Ji (Three Kingdoms)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Liu_Ji_(Three_Kingdoms)> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Liu Qi (Liu Biao's son)", "Tell me the death place of the father of Liu Qi (Liu Biao's son)", "What is the death place of the father of Liu Qi (Liu Biao's son)?", "What was the death place of the father of Liu Qi (Liu Biao's son)?", "Which place is the death place of the father of Liu Qi (Liu Biao's son)?", "Which place was the death place of the father of Liu Qi (Liu Biao's son)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Liu_Qi_(Liu_Biao's_son)> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Liu Yong (Qing dynasty)", "Tell me the death place of the father of Liu Yong (Qing dynasty)", "What is the death place of the father of Liu Yong (Qing dynasty)?", "What was the death place of the father of Liu Yong (Qing dynasty)?", "Which place is the death place of the father of Liu Yong (Qing dynasty)?", "Which place was the death place of the father of Liu Yong (Qing dynasty)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Liu_Yong_(Qing_dynasty)> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Liu Zhang (warlord)", "Tell me the death place of the father of Liu Zhang (warlord)", "What is the death place of the father of Liu Zhang (warlord)?", "What was the death place of the father of Liu Zhang (warlord)?", "Which place is the death place of the father of Liu Zhang (warlord)?", "Which place was the death place of the father of Liu Zhang (warlord)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Liu_Zhang_(warlord)> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Lola Karimova-Tillyaeva", "Tell me the death place of the father of Lola Karimova-Tillyaeva", "What is the death place of the father of Lola Karimova-Tillyaeva?", "What was the death place of the father of Lola Karimova-Tillyaeva?", "Which place is the death place of the father of Lola Karimova-Tillyaeva?", "Which place was the death place of the father of Lola Karimova-Tillyaeva?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lola_Karimova-Tillyaeva> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Louis von Doussa", "Tell me the death place of the father of Louis von Doussa", "What is the death place of the father of Louis von Doussa?", "What was the death place of the father of Louis von Doussa?", "Which place is the death place of the father of Louis von Doussa?", "Which place was the death place of the father of Louis von Doussa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Louis_von_Doussa> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Tachibana Ginchiyo", "Tell me the death place of the father of Tachibana Ginchiyo", "What is the death place of the father of Tachibana Ginchiyo?", "What was the death place of the father of Tachibana Ginchiyo?", "Which place is the death place of the father of Tachibana Ginchiyo?", "Which place was the death place of the father of Tachibana Ginchiyo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tachibana_Ginchiyo> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Cao Shuang", "Tell me the death place of the father of Cao Shuang", "What is the death place of the father of Cao Shuang?", "What was the death place of the father of Cao Shuang?", "Which place is the death place of the father of Cao Shuang?", "Which place was the death place of the father of Cao Shuang?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cao_Shuang> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Carlos Bee (California politician)", "Tell me the death place of the father of Carlos Bee (California politician)", "What is the death place of the father of Carlos Bee (California politician)?", "What was the death place of the father of Carlos Bee (California politician)?", "Which place is the death place of the father of Carlos Bee (California politician)?", "Which place was the death place of the father of Carlos Bee (California politician)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carlos_Bee_(California_politician)> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Carol Miller (politician)", "Tell me the death place of the father of Carol Miller (politician)", "What is the death place of the father of Carol Miller (politician)?", "What was the death place of the father of Carol Miller (politician)?", "Which place is the death place of the father of Carol Miller (politician)?", "Which place was the death place of the father of Carol Miller (politician)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carol_Miller_(politician)> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Cassius Fairchild", "Tell me the death place of the father of Cassius Fairchild", "What is the death place of the father of Cassius Fairchild?", "What was the death place of the father of Cassius Fairchild?", "Which place is the death place of the father of Cassius Fairchild?", "Which place was the death place of the father of Cassius Fairchild?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cassius_Fairchild> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Christian Porter", "Tell me the death place of the father of Christian Porter", "What is the death place of the father of Christian Porter?", "What was the death place of the father of Christian Porter?", "Which place is the death place of the father of Christian Porter?", "Which place was the death place of the father of Christian Porter?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Christian_Porter> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Claude Luse", "Tell me the death place of the father of Claude Luse", "What is the death place of the father of Claude Luse?", "What was the death place of the father of Claude Luse?", "Which place is the death place of the father of Claude Luse?", "Which place was the death place of the father of Claude Luse?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Claude_Luse> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Clyde Packer", "Tell me the death place of the father of Clyde Packer", "What is the death place of the father of Clyde Packer?", "What was the death place of the father of Clyde Packer?", "Which place is the death place of the father of Clyde Packer?", "Which place was the death place of the father of Clyde Packer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Clyde_Packer> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of Gazi Mohammad Shahnawaz", "Tell me the death place of the father of Gazi Mohammad Shahnawaz", "What is the death place of the father of Gazi Mohammad Shahnawaz?", "What was the death place of the father of Gazi Mohammad Shahnawaz?", "Which place is the death place of the father of Gazi Mohammad Shahnawaz?", "Which place was the death place of the father of Gazi Mohammad Shahnawaz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gazi_Mohammad_Shahnawaz> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of George Beauclerk, 3rd Duke of St Albans", "Tell me the death place of the father of George Beauclerk, 3rd Duke of St Albans", "What is the death place of the father of George Beauclerk, 3rd Duke of St Albans?", "What was the death place of the father of George Beauclerk, 3rd Duke of St Albans?", "Which place is the death place of the father of George Beauclerk, 3rd Duke of St Albans?", "Which place was the death place of the father of George Beauclerk, 3rd Duke of St Albans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/George_Beauclerk,_3rd_Duke_of_St_Albans> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of George Hemmant", "Tell me the death place of the father of George Hemmant", "What is the death place of the father of George Hemmant?", "What was the death place of the father of George Hemmant?", "Which place is the death place of the father of George Hemmant?", "Which place was the death place of the father of George Hemmant?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/George_Hemmant> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of George Hodges Knox", "Tell me the death place of the father of George Hodges Knox", "What is the death place of the father of George Hodges Knox?", "What was the death place of the father of George Hodges Knox?", "Which place is the death place of the father of George Hodges Knox?", "Which place was the death place of the father of George Hodges Knox?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/George_Hodges_Knox> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of George Oliver Plunkett", "Tell me the death place of the father of George Oliver Plunkett", "What is the death place of the father of George Oliver Plunkett?", "What was the death place of the father of George Oliver Plunkett?", "Which place is the death place of the father of George Oliver Plunkett?", "Which place was the death place of the father of George Oliver Plunkett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/George_Oliver_Plunkett> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of George Rogers Clark Floyd", "Tell me the death place of the father of George Rogers Clark Floyd", "What is the death place of the father of George Rogers Clark Floyd?", "What was the death place of the father of George Rogers Clark Floyd?", "Which place is the death place of the father of George Rogers Clark Floyd?", "Which place was the death place of the father of George Rogers Clark Floyd?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/George_Rogers_Clark_Floyd> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "16",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the death place of the father of George T. Beck", "Tell me the death place of the father of George T. Beck", "What is the death place of the father of George T. Beck?", "What was the death place of the father of George T. Beck?", "Which place is the death place of the father of George T. Beck?", "Which place was the death place of the father of George T. Beck?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/George_T._Beck> <http://dbpedia.org/ontology/father> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by 989 Studios?", "What develops works developed by 989 Studios?", "Which agent developed works developed by 989 Studios?", "Which agent develops works developed by 989 Studios?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/989_Studios>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by ABS-CBN News and Current Affairs?", "What develops works developed by ABS-CBN News and Current Affairs?", "Which agent developed works developed by ABS-CBN News and Current Affairs?", "Which agent develops works developed by ABS-CBN News and Current Affairs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/ABS-CBN_News_and_Current_Affairs>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by ADK (company)?", "What develops works developed by ADK (company)?", "Which agent developed works developed by ADK (company)?", "Which agent develops works developed by ADK (company)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/ADK_(company)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by LucasArts?", "What develops works developed by LucasArts?", "Which agent developed works developed by LucasArts?", "Which agent develops works developed by LucasArts?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/LucasArts>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Lucy Cousins?", "What develops works developed by Lucy Cousins?", "Which agent developed works developed by Lucy Cousins?", "Which agent develops works developed by Lucy Cousins?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Lucy_Cousins>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Luminous Productions?", "What develops works developed by Luminous Productions?", "Which agent developed works developed by Luminous Productions?", "Which agent develops works developed by Luminous Productions?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Luminous_Productions>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by M2 (game developer)?", "What develops works developed by M2 (game developer)?", "Which agent developed works developed by M2 (game developer)?", "Which agent develops works developed by M2 (game developer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/M2_(game_developer)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by MOL (company)?", "What develops works developed by MOL (company)?", "Which agent developed works developed by MOL (company)?", "Which agent develops works developed by MOL (company)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MOL_(company)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Mabrouk El Mechri?", "What develops works developed by Mabrouk El Mechri?", "Which agent developed works developed by Mabrouk El Mechri?", "Which agent develops works developed by Mabrouk El Mechri?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mabrouk_El_Mechri>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Macromedia?", "What develops works developed by Macromedia?", "Which agent developed works developed by Macromedia?", "Which agent develops works developed by Macromedia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Macromedia>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Mad Catz?", "What develops works developed by Mad Catz?", "Which agent developed works developed by Mad Catz?", "Which agent develops works developed by Mad Catz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mad_Catz>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Magix Software GmbH?", "What develops works developed by Magix Software GmbH?", "Which agent developed works developed by Magix Software GmbH?", "Which agent develops works developed by Magix Software GmbH?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Magix_Software_GmbH>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by University of Bristol?", "What develops works developed by University of Bristol?", "Which agent developed works developed by University of Bristol?", "Which agent develops works developed by University of Bristol?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Bristol>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by University of California, San Francisco?", "What develops works developed by University of California, San Francisco?", "Which agent developed works developed by University of California, San Francisco?", "Which agent develops works developed by University of California, San Francisco?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_California,_San_Francisco>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by University of South Florida?", "What develops works developed by University of South Florida?", "Which agent developed works developed by University of South Florida?", "Which agent develops works developed by University of South Florida?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_South_Florida>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by University of Sydney?", "What develops works developed by University of Sydney?", "Which agent developed works developed by University of Sydney?", "Which agent develops works developed by University of Sydney?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Sydney>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Strategic Studies Group?", "What develops works developed by Strategic Studies Group?", "Which agent developed works developed by Strategic Studies Group?", "Which agent develops works developed by Strategic Studies Group?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Strategic_Studies_Group>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by HeroCraft?", "What develops works developed by HeroCraft?", "Which agent developed works developed by HeroCraft?", "Which agent develops works developed by HeroCraft?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/HeroCraft>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Handheld Games?", "What develops works developed by Handheld Games?", "Which agent developed works developed by Handheld Games?", "Which agent develops works developed by Handheld Games?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Handheld_Games>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Spectral Associates?", "What develops works developed by Spectral Associates?", "Which agent developed works developed by Spectral Associates?", "Which agent develops works developed by Spectral Associates?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Spectral_Associates>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by No Magic?", "What develops works developed by No Magic?", "Which agent developed works developed by No Magic?", "Which agent develops works developed by No Magic?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/No_Magic>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Softdisk?", "What develops works developed by Softdisk?", "Which agent developed works developed by Softdisk?", "Which agent develops works developed by Softdisk?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Softdisk>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by BioWare?", "What develops works developed by BioWare?", "Which agent developed works developed by BioWare?", "Which agent develops works developed by BioWare?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/BioWare>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Blue Planet Software?", "What develops works developed by Blue Planet Software?", "Which agent developed works developed by Blue Planet Software?", "Which agent develops works developed by Blue Planet Software?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Blue_Planet_Software>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Devsisters?", "What develops works developed by Devsisters?", "Which agent developed works developed by Devsisters?", "Which agent develops works developed by Devsisters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Devsisters>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Digital Equipment Corporation?", "What develops works developed by Digital Equipment Corporation?", "Which agent developed works developed by Digital Equipment Corporation?", "Which agent develops works developed by Digital Equipment Corporation?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Digital_Equipment_Corporation>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Digital Leisure?", "What develops works developed by Digital Leisure?", "Which agent developed works developed by Digital Leisure?", "Which agent develops works developed by Digital Leisure?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Digital_Leisure>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Digital Research?", "What develops works developed by Digital Research?", "Which agent developed works developed by Digital Research?", "Which agent develops works developed by Digital Research?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Digital_Research>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Diplo?", "What develops works developed by Diplo?", "Which agent developed works developed by Diplo?", "Which agent develops works developed by Diplo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Diplo>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Google?", "What develops works developed by Google?", "Which agent developed works developed by Google?", "Which agent develops works developed by Google?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Google>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Gottlieb?", "What develops works developed by Gottlieb?", "Which agent developed works developed by Gottlieb?", "Which agent develops works developed by Gottlieb?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Gottlieb>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Grezzo?", "What develops works developed by Grezzo?", "Which agent developed works developed by Grezzo?", "Which agent develops works developed by Grezzo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Grezzo>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Kevin Shinick?", "What develops works developed by Kevin Shinick?", "Which agent developed works developed by Kevin Shinick?", "Which agent develops works developed by Kevin Shinick?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Kevin_Shinick>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Kogado Studio?", "What develops works developed by Kogado Studio?", "Which agent developed works developed by Kogado Studio?", "Which agent develops works developed by Kogado Studio?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Kogado_Studio>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Kojima Productions?", "What develops works developed by Kojima Productions?", "Which agent developed works developed by Kojima Productions?", "Which agent develops works developed by Kojima Productions?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Kojima_Productions>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Konami?", "What develops works developed by Konami?", "Which agent developed works developed by Konami?", "Which agent develops works developed by Konami?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Konami>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Korean Broadcasting System?", "What develops works developed by Korean Broadcasting System?", "Which agent developed works developed by Korean Broadcasting System?", "Which agent develops works developed by Korean Broadcasting System?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Korean_Broadcasting_System>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Krisalis Software?", "What develops works developed by Krisalis Software?", "Which agent developed works developed by Krisalis Software?", "Which agent develops works developed by Krisalis Software?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Krisalis_Software>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Alex Madonna?", "What develops works developed by Alex Madonna?", "Which agent developed works developed by Alex Madonna?", "Which agent develops works developed by Alex Madonna?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Alex_Madonna>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Aspyr Media?", "What develops works developed by Aspyr Media?", "Which agent developed works developed by Aspyr Media?", "Which agent develops works developed by Aspyr Media?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Aspyr_Media>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Q Entertainment?", "What develops works developed by Q Entertainment?", "Which agent developed works developed by Q Entertainment?", "Which agent develops works developed by Q Entertainment?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Q_Entertainment>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Quest Corporation?", "What develops works developed by Quest Corporation?", "Which agent developed works developed by Quest Corporation?", "Which agent develops works developed by Quest Corporation?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Quest_Corporation>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Radical Entertainment?", "What develops works developed by Radical Entertainment?", "Which agent developed works developed by Radical Entertainment?", "Which agent develops works developed by Radical Entertainment?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Radical_Entertainment>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Rainbow Arts?", "What develops works developed by Rainbow Arts?", "Which agent developed works developed by Rainbow Arts?", "Which agent develops works developed by Rainbow Arts?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Rainbow_Arts>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Rainbow Studios?", "What develops works developed by Rainbow Studios?", "Which agent developed works developed by Rainbow Studios?", "Which agent develops works developed by Rainbow Studios?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Rainbow_Studios>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Irem?", "What develops works developed by Irem?", "Which agent developed works developed by Irem?", "Which agent develops works developed by Irem?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Irem>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Exient Entertainment?", "What develops works developed by Exient Entertainment?", "Which agent developed works developed by Exient Entertainment?", "Which agent develops works developed by Exient Entertainment?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Exient_Entertainment>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Studio Alex?", "What develops works developed by Studio Alex?", "Which agent developed works developed by Studio Alex?", "Which agent develops works developed by Studio Alex?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Studio_Alex>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Aksys Games?", "What develops works developed by Aksys Games?", "Which agent developed works developed by Aksys Games?", "Which agent develops works developed by Aksys Games?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Aksys_Games>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Central Point Software?", "What develops works developed by Central Point Software?", "Which agent developed works developed by Central Point Software?", "Which agent develops works developed by Central Point Software?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Central_Point_Software>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by American Laser Games?", "What develops works developed by American Laser Games?", "Which agent developed works developed by American Laser Games?", "Which agent develops works developed by American Laser Games?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/American_Laser_Games>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Nintendo?", "What develops works developed by Nintendo?", "Which agent developed works developed by Nintendo?", "Which agent develops works developed by Nintendo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Nintendo>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Nintendo DS?", "What develops works developed by Nintendo DS?", "Which agent developed works developed by Nintendo DS?", "Which agent develops works developed by Nintendo DS?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Nintendo_DS>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Nintendo Entertainment Analysis & Development?", "What develops works developed by Nintendo Entertainment Analysis & Development?", "Which agent developed works developed by Nintendo Entertainment Analysis & Development?", "Which agent develops works developed by Nintendo Entertainment Analysis & Development?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Nintendo_Entertainment_Analysis_&_Development>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Nippon Ichi Software?", "What develops works developed by Nippon Ichi Software?", "Which agent developed works developed by Nippon Ichi Software?", "Which agent develops works developed by Nippon Ichi Software?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Nippon_Ichi_Software>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Nokia?", "What develops works developed by Nokia?", "Which agent developed works developed by Nokia?", "Which agent develops works developed by Nokia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Nokia>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Novell?", "What develops works developed by Novell?", "Which agent developed works developed by Novell?", "Which agent develops works developed by Novell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Novell>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Oak Ridge National Laboratory?", "What develops works developed by Oak Ridge National Laboratory?", "Which agent developed works developed by Oak Ridge National Laboratory?", "Which agent develops works developed by Oak Ridge National Laboratory?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Oak_Ridge_National_Laboratory>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Ocean Software?", "What develops works developed by Ocean Software?", "Which agent developed works developed by Ocean Software?", "Which agent develops works developed by Ocean Software?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Ocean_Software>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by GNU Project?", "What develops works developed by GNU Project?", "Which agent developed works developed by GNU Project?", "Which agent develops works developed by GNU Project?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/GNU_Project>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Mythos Games?", "What develops works developed by Mythos Games?", "Which agent developed works developed by Mythos Games?", "Which agent develops works developed by Mythos Games?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mythos_Games>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Natsume (company)?", "What develops works developed by Natsume (company)?", "Which agent developed works developed by Natsume (company)?", "Which agent develops works developed by Natsume (company)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Natsume_(company)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Neko Entertainment?", "What develops works developed by Neko Entertainment?", "Which agent developed works developed by Neko Entertainment?", "Which agent develops works developed by Neko Entertainment?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Neko_Entertainment>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Success (company)?", "What develops works developed by Success (company)?", "Which agent developed works developed by Success (company)?", "Which agent develops works developed by Success (company)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Success_(company)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Quicksilver Software?", "What develops works developed by Quicksilver Software?", "Which agent developed works developed by Quicksilver Software?", "Which agent develops works developed by Quicksilver Software?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Quicksilver_Software>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Warthog Games?", "What develops works developed by Warthog Games?", "Which agent developed works developed by Warthog Games?", "Which agent develops works developed by Warthog Games?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Warthog_Games>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Living Videotext?", "What develops works developed by Living Videotext?", "Which agent developed works developed by Living Videotext?", "Which agent develops works developed by Living Videotext?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Living_Videotext>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Fill-in-Cafe?", "What develops works developed by Fill-in-Cafe?", "Which agent developed works developed by Fill-in-Cafe?", "Which agent develops works developed by Fill-in-Cafe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Fill-in-Cafe>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Ferry Gouw?", "What develops works developed by Ferry Gouw?", "Which agent developed works developed by Ferry Gouw?", "Which agent develops works developed by Ferry Gouw?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Ferry_Gouw>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by MTV Italy?", "What develops works developed by MTV Italy?", "Which agent developed works developed by MTV Italy?", "Which agent develops works developed by MTV Italy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MTV_Italy>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Avalanche Studios?", "What develops works developed by Avalanche Studios?", "Which agent developed works developed by Avalanche Studios?", "Which agent develops works developed by Avalanche Studios?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Avalanche_Studios>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Bandai?", "What develops works developed by Bandai?", "Which agent developed works developed by Bandai?", "Which agent develops works developed by Bandai?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Bandai>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Banpresto?", "What develops works developed by Banpresto?", "Which agent developed works developed by Banpresto?", "Which agent develops works developed by Banpresto?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Banpresto>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Accelrys?", "What develops works developed by Accelrys?", "Which agent developed works developed by Accelrys?", "Which agent develops works developed by Accelrys?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Accelrys>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Arrowhead Game Studios?", "What develops works developed by Arrowhead Game Studios?", "Which agent developed works developed by Arrowhead Game Studios?", "Which agent develops works developed by Arrowhead Game Studios?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Arrowhead_Game_Studios>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Artdink?", "What develops works developed by Artdink?", "Which agent developed works developed by Artdink?", "Which agent develops works developed by Artdink?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Artdink>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Artificial Solutions?", "What develops works developed by Artificial Solutions?", "Which agent developed works developed by Artificial Solutions?", "Which agent develops works developed by Artificial Solutions?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Artificial_Solutions>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Erik Bye?", "What develops works developed by Erik Bye?", "Which agent developed works developed by Erik Bye?", "Which agent develops works developed by Erik Bye?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Erik_Bye>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by San Francisco Public Library?", "What develops works developed by San Francisco Public Library?", "Which agent developed works developed by San Francisco Public Library?", "Which agent develops works developed by San Francisco Public Library?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/San_Francisco_Public_Library>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Capcom?", "What develops works developed by Capcom?", "Which agent developed works developed by Capcom?", "Which agent develops works developed by Capcom?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Capcom>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Adam Cadre?", "What develops works developed by Adam Cadre?", "Which agent developed works developed by Adam Cadre?", "Which agent develops works developed by Adam Cadre?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Adam_Cadre>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by City University of New York?", "What develops works developed by City University of New York?", "Which agent developed works developed by City University of New York?", "Which agent develops works developed by City University of New York?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/City_University_of_New_York>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Claris?", "What develops works developed by Claris?", "Which agent developed works developed by Claris?", "Which agent develops works developed by Claris?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Claris>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Codemasters?", "What develops works developed by Codemasters?", "Which agent developed works developed by Codemasters?", "Which agent develops works developed by Codemasters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Codemasters>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Game Arts?", "What develops works developed by Game Arts?", "Which agent developed works developed by Game Arts?", "Which agent develops works developed by Game Arts?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Game_Arts>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Game Republic?", "What develops works developed by Game Republic?", "Which agent developed works developed by Game Republic?", "Which agent develops works developed by Game Republic?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Game_Republic>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Gameloft?", "What develops works developed by Gameloft?", "Which agent developed works developed by Gameloft?", "Which agent develops works developed by Gameloft?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Gameloft>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Gary Kildall?", "What develops works developed by Gary Kildall?", "Which agent developed works developed by Gary Kildall?", "Which agent develops works developed by Gary Kildall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Gary_Kildall>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Gene Reynolds?", "What develops works developed by Gene Reynolds?", "Which agent developed works developed by Gene Reynolds?", "Which agent develops works developed by Gene Reynolds?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Gene_Reynolds>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Genki (company)?", "What develops works developed by Genki (company)?", "Which agent developed works developed by Genki (company)?", "Which agent develops works developed by Genki (company)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Genki_(company)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Bandai Entertainment Company?", "What develops works developed by Bandai Entertainment Company?", "Which agent developed works developed by Bandai Entertainment Company?", "Which agent develops works developed by Bandai Entertainment Company?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Bandai_Entertainment_Company>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by HB Studios?", "What develops works developed by HB Studios?", "Which agent developed works developed by HB Studios?", "Which agent develops works developed by HB Studios?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/HB_Studios>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Microcabin?", "What develops works developed by Microcabin?", "Which agent developed works developed by Microcabin?", "Which agent develops works developed by Microcabin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Microcabin>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Nordcurrent?", "What develops works developed by Nordcurrent?", "Which agent developed works developed by Nordcurrent?", "Which agent develops works developed by Nordcurrent?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Nordcurrent>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Beenox?", "What develops works developed by Beenox?", "Which agent developed works developed by Beenox?", "Which agent develops works developed by Beenox?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Beenox>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Bell Labs?", "What develops works developed by Bell Labs?", "Which agent developed works developed by Bell Labs?", "Which agent develops works developed by Bell Labs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Bell_Labs>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Big Huge Games?", "What develops works developed by Big Huge Games?", "Which agent developed works developed by Big Huge Games?", "Which agent develops works developed by Big Huge Games?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Big_Huge_Games>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by Big Red Software?", "What develops works developed by Big Red Software?", "Which agent developed works developed by Big Red Software?", "Which agent develops works developed by Big Red Software?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Big_Red_Software>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by ABS-CBN Regional Network Group?", "What develops works developed by ABS-CBN Regional Network Group?", "Which agent developed works developed by ABS-CBN Regional Network Group?", "Which agent develops works developed by ABS-CBN Regional Network Group?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/ABS-CBN_Regional_Network_Group>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "18",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What developed works developed by KID?", "What develops works developed by KID?", "Which agent developed works developed by KID?", "Which agent develops works developed by KID?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/KID>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Lynn Herring?", "What playes fictional characters played by Lynn Herring?", "Which person played fictional characters played by Lynn Herring?", "Which person playes fictional characters played by Lynn Herring?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynn_Herring>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Madelaine Petsch?", "What playes fictional characters played by Madelaine Petsch?", "Which person played fictional characters played by Madelaine Petsch?", "Which person playes fictional characters played by Madelaine Petsch?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madelaine_Petsch>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Maggie Q?", "What playes fictional characters played by Maggie Q?", "Which person played fictional characters played by Maggie Q?", "Which person playes fictional characters played by Maggie Q?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Maggie_Q>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Maleficent (film)?", "What playes fictional characters played by Maleficent (film)?", "Which person played fictional characters played by Maleficent (film)?", "Which person playes fictional characters played by Maleficent (film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Maleficent_(film)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Carrie Southworth?", "What playes fictional characters played by Carrie Southworth?", "Which person played fictional characters played by Carrie Southworth?", "Which person playes fictional characters played by Carrie Southworth?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Carrie_Southworth>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Van Hansis?", "What playes fictional characters played by Van Hansis?", "Which person played fictional characters played by Van Hansis?", "Which person playes fictional characters played by Van Hansis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Van_Hansis>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Vanessa A. Williams?", "What playes fictional characters played by Vanessa A. Williams?", "Which person played fictional characters played by Vanessa A. Williams?", "Which person playes fictional characters played by Vanessa A. Williams?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Vanessa_A._Williams>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Sara Woods?", "What playes fictional characters played by Sara Woods?", "Which person played fictional characters played by Sara Woods?", "Which person playes fictional characters played by Sara Woods?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sara_Woods>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Pippa Guard?", "What playes fictional characters played by Pippa Guard?", "Which person played fictional characters played by Pippa Guard?", "Which person playes fictional characters played by Pippa Guard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Pippa_Guard>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Blake Berris?", "What playes fictional characters played by Blake Berris?", "Which person played fictional characters played by Blake Berris?", "Which person playes fictional characters played by Blake Berris?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Blake_Berris>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Bobbie Eakes?", "What playes fictional characters played by Bobbie Eakes?", "Which person played fictional characters played by Bobbie Eakes?", "Which person playes fictional characters played by Bobbie Eakes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Bobbie_Eakes>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Bradford Anderson?", "What playes fictional characters played by Bradford Anderson?", "Which person played fictional characters played by Bradford Anderson?", "Which person playes fictional characters played by Bradford Anderson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Bradford_Anderson>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Descendants (2015 film)?", "What playes fictional characters played by Descendants (2015 film)?", "Which person played fictional characters played by Descendants (2015 film)?", "Which person playes fictional characters played by Descendants (2015 film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Descendants_(2015_film)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Diane Neal?", "What playes fictional characters played by Diane Neal?", "Which person played fictional characters played by Diane Neal?", "Which person playes fictional characters played by Diane Neal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Diane_Neal>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Diane Sommerfield?", "What playes fictional characters played by Diane Sommerfield?", "Which person played fictional characters played by Diane Sommerfield?", "Which person playes fictional characters played by Diane Sommerfield?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Diane_Sommerfield>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Diego Luna?", "What playes fictional characters played by Diego Luna?", "Which person played fictional characters played by Diego Luna?", "Which person playes fictional characters played by Diego Luna?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Diego_Luna>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Don Gilet?", "What playes fictional characters played by Don Gilet?", "Which person played fictional characters played by Don Gilet?", "Which person playes fictional characters played by Don Gilet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Don_Gilet>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Andy Umberger?", "What playes fictional characters played by Andy Umberger?", "Which person played fictional characters played by Andy Umberger?", "Which person playes fictional characters played by Andy Umberger?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Andy_Umberger>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Goran Višnjić?", "What playes fictional characters played by Goran Višnjić?", "Which person played fictional characters played by Goran Višnjić?", "Which person playes fictional characters played by Goran Višnjić?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Goran_Višnjić>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Greg Vaughan?", "What playes fictional characters played by Greg Vaughan?", "Which person played fictional characters played by Greg Vaughan?", "Which person playes fictional characters played by Greg Vaughan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Greg_Vaughan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Kestie Morassi?", "What playes fictional characters played by Kestie Morassi?", "Which person played fictional characters played by Kestie Morassi?", "Which person playes fictional characters played by Kestie Morassi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kestie_Morassi>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Kevin Kennedy (actor)?", "What playes fictional characters played by Kevin Kennedy (actor)?", "Which person played fictional characters played by Kevin Kennedy (actor)?", "Which person playes fictional characters played by Kevin Kennedy (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kevin_Kennedy_(actor)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Kristen Bell?", "What playes fictional characters played by Kristen Bell?", "Which person played fictional characters played by Kristen Bell?", "Which person playes fictional characters played by Kristen Bell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kristen_Bell>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Kristin Chenoweth?", "What playes fictional characters played by Kristin Chenoweth?", "Which person played fictional characters played by Kristin Chenoweth?", "Which person playes fictional characters played by Kristin Chenoweth?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kristin_Chenoweth>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Kristine Sutherland?", "What playes fictional characters played by Kristine Sutherland?", "Which person played fictional characters played by Kristine Sutherland?", "Which person playes fictional characters played by Kristine Sutherland?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kristine_Sutherland>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Queen Latifah?", "What playes fictional characters played by Queen Latifah?", "Which person played fictional characters played by Queen Latifah?", "Which person playes fictional characters played by Queen Latifah?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Queen_Latifah>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Ralph Fiennes?", "What playes fictional characters played by Ralph Fiennes?", "Which person played fictional characters played by Ralph Fiennes?", "Which person playes fictional characters played by Ralph Fiennes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ralph_Fiennes>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Alex Walkinshaw?", "What playes fictional characters played by Alex Walkinshaw?", "Which person played fictional characters played by Alex Walkinshaw?", "Which person playes fictional characters played by Alex Walkinshaw?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Alex_Walkinshaw>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Alexandra Chando?", "What playes fictional characters played by Alexandra Chando?", "Which person played fictional characters played by Alexandra Chando?", "Which person playes fictional characters played by Alexandra Chando?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Alexandra_Chando>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Catherine Bach?", "What playes fictional characters played by Catherine Bach?", "Which person played fictional characters played by Catherine Bach?", "Which person playes fictional characters played by Catherine Bach?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Catherine_Bach>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Catrin Stewart?", "What playes fictional characters played by Catrin Stewart?", "Which person played fictional characters played by Catrin Stewart?", "Which person playes fictional characters played by Catrin Stewart?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Catrin_Stewart>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Chad Michael Murray?", "What playes fictional characters played by Chad Michael Murray?", "Which person played fictional characters played by Chad Michael Murray?", "Which person playes fictional characters played by Chad Michael Murray?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Chad_Michael_Murray>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Charisma Carpenter?", "What playes fictional characters played by Charisma Carpenter?", "Which person played fictional characters played by Charisma Carpenter?", "Which person playes fictional characters played by Charisma Carpenter?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Charisma_Carpenter>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Charles Gray (actor)?", "What playes fictional characters played by Charles Gray (actor)?", "Which person played fictional characters played by Charles Gray (actor)?", "Which person playes fictional characters played by Charles Gray (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Charles_Gray_(actor)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Cheryl Blossom?", "What playes fictional characters played by Cheryl Blossom?", "Which person played fictional characters played by Cheryl Blossom?", "Which person playes fictional characters played by Cheryl Blossom?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Cheryl_Blossom>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Nina Arvesen?", "What playes fictional characters played by Nina Arvesen?", "Which person played fictional characters played by Nina Arvesen?", "Which person playes fictional characters played by Nina Arvesen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Nina_Arvesen>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Noah Hathaway?", "What playes fictional characters played by Noah Hathaway?", "Which person played fictional characters played by Noah Hathaway?", "Which person playes fictional characters played by Noah Hathaway?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Noah_Hathaway>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Noni Ioannidou?", "What playes fictional characters played by Noni Ioannidou?", "Which person played fictional characters played by Noni Ioannidou?", "Which person playes fictional characters played by Noni Ioannidou?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Noni_Ioannidou>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Kohji Moritsugu?", "What playes fictional characters played by Kohji Moritsugu?", "Which person played fictional characters played by Kohji Moritsugu?", "Which person playes fictional characters played by Kohji Moritsugu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kohji_Moritsugu>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Azura Skye?", "What playes fictional characters played by Azura Skye?", "Which person played fictional characters played by Azura Skye?", "Which person playes fictional characters played by Azura Skye?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Azura_Skye>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Logan O'Brien?", "What playes fictional characters played by Logan O'Brien?", "Which person played fictional characters played by Logan O'Brien?", "Which person playes fictional characters played by Logan O'Brien?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Logan_O'Brien>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Lois Wilson (actress)?", "What playes fictional characters played by Lois Wilson (actress)?", "Which person played fictional characters played by Lois Wilson (actress)?", "Which person playes fictional characters played by Lois Wilson (actress)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lois_Wilson_(actress)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Camila Mendes?", "What playes fictional characters played by Camila Mendes?", "Which person played fictional characters played by Camila Mendes?", "Which person playes fictional characters played by Camila Mendes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Camila_Mendes>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Carel Struycken?", "What playes fictional characters played by Carel Struycken?", "Which person played fictional characters played by Carel Struycken?", "Which person playes fictional characters played by Carel Struycken?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Carel_Struycken>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Carey Mulligan?", "What playes fictional characters played by Carey Mulligan?", "Which person played fictional characters played by Carey Mulligan?", "Which person playes fictional characters played by Carey Mulligan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Carey_Mulligan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Chloë Grace Moretz?", "What playes fictional characters played by Chloë Grace Moretz?", "Which person played fictional characters played by Chloë Grace Moretz?", "Which person playes fictional characters played by Chloë Grace Moretz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Chloë_Grace_Moretz>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Christoph Waltz?", "What playes fictional characters played by Christoph Waltz?", "Which person played fictional characters played by Christoph Waltz?", "Which person playes fictional characters played by Christoph Waltz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Christoph_Waltz>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Clare Kramer?", "What playes fictional characters played by Clare Kramer?", "Which person played fictional characters played by Clare Kramer?", "Which person playes fictional characters played by Clare Kramer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Clare_Kramer>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Clementine Ford?", "What playes fictional characters played by Clementine Ford?", "Which person played fictional characters played by Clementine Ford?", "Which person playes fictional characters played by Clementine Ford?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Clementine_Ford>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Gareth Hale?", "What playes fictional characters played by Gareth Hale?", "Which person played fictional characters played by Gareth Hale?", "Which person playes fictional characters played by Gareth Hale?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Gareth_Hale>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by George Hertzberg?", "What playes fictional characters played by George Hertzberg?", "Which person played fictional characters played by George Hertzberg?", "Which person playes fictional characters played by George Hertzberg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/George_Hertzberg>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by George Kennedy?", "What playes fictional characters played by George Kennedy?", "Which person played fictional characters played by George Kennedy?", "Which person playes fictional characters played by George Kennedy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/George_Kennedy>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Jean-Claude Van Damme?", "What playes fictional characters played by Jean-Claude Van Damme?", "Which person played fictional characters played by Jean-Claude Van Damme?", "Which person playes fictional characters played by Jean-Claude Van Damme?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jean-Claude_Van_Damme>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Jeffrey DeMunn?", "What playes fictional characters played by Jeffrey DeMunn?", "Which person played fictional characters played by Jeffrey DeMunn?", "Which person playes fictional characters played by Jeffrey DeMunn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jeffrey_DeMunn>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Jeremy Sisto?", "What playes fictional characters played by Jeremy Sisto?", "Which person played fictional characters played by Jeremy Sisto?", "Which person playes fictional characters played by Jeremy Sisto?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jeremy_Sisto>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Jessica Simpson?", "What playes fictional characters played by Jessica Simpson?", "Which person played fictional characters played by Jessica Simpson?", "Which person playes fictional characters played by Jessica Simpson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jessica_Simpson>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Jodelle Ferland?", "What playes fictional characters played by Jodelle Ferland?", "Which person played fictional characters played by Jodelle Ferland?", "Which person playes fictional characters played by Jodelle Ferland?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jodelle_Ferland>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Joey Luthman?", "What playes fictional characters played by Joey Luthman?", "Which person played fictional characters played by Joey Luthman?", "Which person playes fictional characters played by Joey Luthman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Joey_Luthman>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by John DeSantis?", "What playes fictional characters played by John DeSantis?", "Which person played fictional characters played by John DeSantis?", "Which person playes fictional characters played by John DeSantis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/John_DeSantis>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by John Goodman?", "What playes fictional characters played by John Goodman?", "Which person played fictional characters played by John Goodman?", "Which person playes fictional characters played by John Goodman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/John_Goodman>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by John Hollis?", "What playes fictional characters played by John Hollis?", "Which person played fictional characters played by John Hollis?", "Which person playes fictional characters played by John Hollis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/John_Hollis>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by John Huston?", "What playes fictional characters played by John Huston?", "Which person played fictional characters played by John Huston?", "Which person playes fictional characters played by John Huston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/John_Huston>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by John J. York?", "What playes fictional characters played by John J. York?", "Which person played fictional characters played by John J. York?", "Which person playes fictional characters played by John J. York?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/John_J._York>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by John Leguizamo?", "What playes fictional characters played by John Leguizamo?", "Which person played fictional characters played by John Leguizamo?", "Which person playes fictional characters played by John Leguizamo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/John_Leguizamo>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Bernard Lee?", "What playes fictional characters played by Bernard Lee?", "Which person played fictional characters played by Bernard Lee?", "Which person playes fictional characters played by Bernard Lee?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Bernard_Lee>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Betty Field?", "What playes fictional characters played by Betty Field?", "Which person played fictional characters played by Betty Field?", "Which person playes fictional characters played by Betty Field?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Betty_Field>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Karen Kopins?", "What playes fictional characters played by Karen Kopins?", "Which person played fictional characters played by Karen Kopins?", "Which person playes fictional characters played by Karen Kopins?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Karen_Kopins>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Kassandra Clementi?", "What playes fictional characters played by Kassandra Clementi?", "Which person played fictional characters played by Kassandra Clementi?", "Which person playes fictional characters played by Kassandra Clementi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kassandra_Clementi>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Kelli Barrett?", "What playes fictional characters played by Kelli Barrett?", "Which person played fictional characters played by Kelli Barrett?", "Which person playes fictional characters played by Kelli Barrett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kelli_Barrett>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Kelly Kruger?", "What playes fictional characters played by Kelly Kruger?", "Which person played fictional characters played by Kelly Kruger?", "Which person playes fictional characters played by Kelly Kruger?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kelly_Kruger>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Kent McCord?", "What playes fictional characters played by Kent McCord?", "Which person played fictional characters played by Kent McCord?", "Which person playes fictional characters played by Kent McCord?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kent_McCord>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Lincoln Younes?", "What playes fictional characters played by Lincoln Younes?", "Which person played fictional characters played by Lincoln Younes?", "Which person playes fictional characters played by Lincoln Younes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lincoln_Younes>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Linda Lusardi?", "What playes fictional characters played by Linda Lusardi?", "Which person played fictional characters played by Linda Lusardi?", "Which person playes fictional characters played by Linda Lusardi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Linda_Lusardi>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Linzi Hateley?", "What playes fictional characters played by Linzi Hateley?", "Which person played fictional characters played by Linzi Hateley?", "Which person playes fictional characters played by Linzi Hateley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Linzi_Hateley>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Lisa McCune?", "What playes fictional characters played by Lisa McCune?", "Which person played fictional characters played by Lisa McCune?", "Which person playes fictional characters played by Lisa McCune?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lisa_McCune>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Yvonne Zima?", "What playes fictional characters played by Yvonne Zima?", "Which person played fictional characters played by Yvonne Zima?", "Which person playes fictional characters played by Yvonne Zima?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Yvonne_Zima>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Zachary James?", "What playes fictional characters played by Zachary James?", "Which person played fictional characters played by Zachary James?", "Which person playes fictional characters played by Zachary James?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Zachary_James>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Zoe Henry?", "What playes fictional characters played by Zoe Henry?", "Which person played fictional characters played by Zoe Henry?", "Which person playes fictional characters played by Zoe Henry?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Zoe_Henry>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Zöe Lucker?", "What playes fictional characters played by Zöe Lucker?", "Which person played fictional characters played by Zöe Lucker?", "Which person playes fictional characters played by Zöe Lucker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Zöe_Lucker>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Jirō Dan?", "What playes fictional characters played by Jirō Dan?", "Which person played fictional characters played by Jirō Dan?", "Which person playes fictional characters played by Jirō Dan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jirō_Dan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Bin Furuya?", "What playes fictional characters played by Bin Furuya?", "Which person played fictional characters played by Bin Furuya?", "Which person playes fictional characters played by Bin Furuya?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Bin_Furuya>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Michiel Huisman?", "What playes fictional characters played by Michiel Huisman?", "Which person played fictional characters played by Michiel Huisman?", "Which person playes fictional characters played by Michiel Huisman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Michiel_Huisman>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Midge Klump?", "What playes fictional characters played by Midge Klump?", "Which person played fictional characters played by Midge Klump?", "Which person playes fictional characters played by Midge Klump?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Midge_Klump>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Mira Sorvino?", "What playes fictional characters played by Mira Sorvino?", "Which person played fictional characters played by Mira Sorvino?", "Which person playes fictional characters played by Mira Sorvino?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mira_Sorvino>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Misha Collins?", "What playes fictional characters played by Misha Collins?", "Which person played fictional characters played by Misha Collins?", "Which person playes fictional characters played by Misha Collins?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Misha_Collins>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Ryan Carnes?", "What playes fictional characters played by Ryan Carnes?", "Which person played fictional characters played by Ryan Carnes?", "Which person playes fictional characters played by Ryan Carnes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ryan_Carnes>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Ryoko Kobayashi?", "What playes fictional characters played by Ryoko Kobayashi?", "Which person played fictional characters played by Ryoko Kobayashi?", "Which person playes fictional characters played by Ryoko Kobayashi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ryoko_Kobayashi>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Saburō Shinoda?", "What playes fictional characters played by Saburō Shinoda?", "Which person played fictional characters played by Saburō Shinoda?", "Which person playes fictional characters played by Saburō Shinoda?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Saburō_Shinoda>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Sal Stowers?", "What playes fictional characters played by Sal Stowers?", "Which person played fictional characters played by Sal Stowers?", "Which person playes fictional characters played by Sal Stowers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sal_Stowers>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Sam Neill?", "What playes fictional characters played by Sam Neill?", "Which person played fictional characters played by Sam Neill?", "Which person playes fictional characters played by Sam Neill?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sam_Neill>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Naoko Kamio?", "What playes fictional characters played by Naoko Kamio?", "Which person played fictional characters played by Naoko Kamio?", "Which person playes fictional characters played by Naoko Kamio?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Naoko_Kamio>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Rachel Kimsey?", "What playes fictional characters played by Rachel Kimsey?", "Which person played fictional characters played by Rachel Kimsey?", "Which person playes fictional characters played by Rachel Kimsey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Rachel_Kimsey>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Hugh Simon?", "What playes fictional characters played by Hugh Simon?", "Which person played fictional characters played by Hugh Simon?", "Which person playes fictional characters played by Hugh Simon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Hugh_Simon>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Donald Pleasence?", "What playes fictional characters played by Donald Pleasence?", "Which person played fictional characters played by Donald Pleasence?", "Which person playes fictional characters played by Donald Pleasence?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Donald_Pleasence>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Donovan Scott?", "What playes fictional characters played by Donovan Scott?", "Which person played fictional characters played by Donovan Scott?", "Which person playes fictional characters played by Donovan Scott?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Donovan_Scott>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Douglass Watson?", "What playes fictional characters played by Douglass Watson?", "Which person played fictional characters played by Douglass Watson?", "Which person playes fictional characters played by Douglass Watson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Douglass_Watson>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Ed Skrein?", "What playes fictional characters played by Ed Skrein?", "Which person played fictional characters played by Ed Skrein?", "Which person playes fictional characters played by Ed Skrein?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ed_Skrein>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Edward Fox (actor)?", "What playes fictional characters played by Edward Fox (actor)?", "Which person played fictional characters played by Edward Fox (actor)?", "Which person playes fictional characters played by Edward Fox (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Edward_Fox_(actor)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Frank Bank?", "What playes fictional characters played by Frank Bank?", "Which person played fictional characters played by Frank Bank?", "Which person playes fictional characters played by Frank Bank?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Frank_Bank>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "20",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What played fictional characters played by Frank Oz?", "What playes fictional characters played by Frank Oz?", "Which person played fictional characters played by Frank Oz?", "Which person playes fictional characters played by Frank Oz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Frank_Oz>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "21",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by the father of Giles Watling?", "What was played by the father of Giles Watling?", "Which fictional character is played by the father of Giles Watling?", "Which fictional character was played by the father of Giles Watling?", "Which fictional characters are played by the father of Giles Watling?", "Which fictional characters were played by the father of Giles Watling?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Giles_Watling> <http://dbpedia.org/ontology/father> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "22",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by fictional characters played by Steve Whitmire?", "What was played by fictional characters played by Steve Whitmire?", "Which fictional character is played by fictional characters played by Steve Whitmire?", "Which fictional character was played by fictional characters played by Steve Whitmire?", "Which fictional characters are played by fictional characters played by Steve Whitmire?", "Which fictional characters were played by fictional characters played by Steve Whitmire?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Steve_Whitmire>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "22",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by fictional characters played by Matt Vogel (puppeteer)?", "What was played by fictional characters played by Matt Vogel (puppeteer)?", "Which fictional character is played by fictional characters played by Matt Vogel (puppeteer)?", "Which fictional character was played by fictional characters played by Matt Vogel (puppeteer)?", "Which fictional characters are played by fictional characters played by Matt Vogel (puppeteer)?", "Which fictional characters were played by fictional characters played by Matt Vogel (puppeteer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Matt_Vogel_(puppeteer)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "22",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by fictional characters played by Madelaine Petsch?", "What was played by fictional characters played by Madelaine Petsch?", "Which fictional character is played by fictional characters played by Madelaine Petsch?", "Which fictional character was played by fictional characters played by Madelaine Petsch?", "Which fictional characters are played by fictional characters played by Madelaine Petsch?", "Which fictional characters were played by fictional characters played by Madelaine Petsch?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madelaine_Petsch>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "22",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by fictional characters played by It (2017 film)?", "What was played by fictional characters played by It (2017 film)?", "Which fictional character is played by fictional characters played by It (2017 film)?", "Which fictional character was played by fictional characters played by It (2017 film)?", "Which fictional characters are played by fictional characters played by It (2017 film)?", "Which fictional characters were played by fictional characters played by It (2017 film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/It_(2017_film)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "22",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by fictional characters played by It (miniseries)?", "What was played by fictional characters played by It (miniseries)?", "Which fictional character is played by fictional characters played by It (miniseries)?", "Which fictional character was played by fictional characters played by It (miniseries)?", "Which fictional characters are played by fictional characters played by It (miniseries)?", "Which fictional characters were played by fictional characters played by It (miniseries)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/It_(miniseries)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "22",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by fictional characters played by It Chapter Two?", "What was played by fictional characters played by It Chapter Two?", "Which fictional character is played by fictional characters played by It Chapter Two?", "Which fictional character was played by fictional characters played by It Chapter Two?", "Which fictional characters are played by fictional characters played by It Chapter Two?", "Which fictional characters were played by fictional characters played by It Chapter Two?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/It_Chapter_Two>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "22",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by fictional characters played by Jackson Robert Scott?", "What was played by fictional characters played by Jackson Robert Scott?", "Which fictional character is played by fictional characters played by Jackson Robert Scott?", "Which fictional character was played by fictional characters played by Jackson Robert Scott?", "Which fictional characters are played by fictional characters played by Jackson Robert Scott?", "Which fictional characters were played by fictional characters played by Jackson Robert Scott?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jackson_Robert_Scott>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "22",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by fictional characters played by Tony Dakota?", "What was played by fictional characters played by Tony Dakota?", "Which fictional character is played by fictional characters played by Tony Dakota?", "Which fictional character was played by fictional characters played by Tony Dakota?", "Which fictional characters are played by fictional characters played by Tony Dakota?", "Which fictional characters were played by fictional characters played by Tony Dakota?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Tony_Dakota>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "22",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by fictional characters played by Hirofumi Fukuzawa?", "What was played by fictional characters played by Hirofumi Fukuzawa?", "Which fictional character is played by fictional characters played by Hirofumi Fukuzawa?", "Which fictional character was played by fictional characters played by Hirofumi Fukuzawa?", "Which fictional characters are played by fictional characters played by Hirofumi Fukuzawa?", "Which fictional characters were played by fictional characters played by Hirofumi Fukuzawa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Hirofumi_Fukuzawa>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "22",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by fictional characters played by Akira Ohashi?", "What was played by fictional characters played by Akira Ohashi?", "Which fictional character is played by fictional characters played by Akira Ohashi?", "Which fictional character was played by fictional characters played by Akira Ohashi?", "Which fictional characters are played by fictional characters played by Akira Ohashi?", "Which fictional characters were played by fictional characters played by Akira Ohashi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Akira_Ohashi>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "22",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by fictional characters played by Teruo Aragaki?", "What was played by fictional characters played by Teruo Aragaki?", "Which fictional character is played by fictional characters played by Teruo Aragaki?", "Which fictional character was played by fictional characters played by Teruo Aragaki?", "Which fictional characters are played by fictional characters played by Teruo Aragaki?", "Which fictional characters were played by fictional characters played by Teruo Aragaki?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Teruo_Aragaki>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "22",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by fictional characters played by Mary Poppins (character)?", "What was played by fictional characters played by Mary Poppins (character)?", "Which fictional character is played by fictional characters played by Mary Poppins (character)?", "Which fictional character was played by fictional characters played by Mary Poppins (character)?", "Which fictional characters are played by fictional characters played by Mary Poppins (character)?", "Which fictional characters were played by fictional characters played by Mary Poppins (character)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mary_Poppins_(character)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "22",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by fictional characters played by Debi Derryberry?", "What was played by fictional characters played by Debi Derryberry?", "Which fictional character is played by fictional characters played by Debi Derryberry?", "Which fictional character was played by fictional characters played by Debi Derryberry?", "Which fictional characters are played by fictional characters played by Debi Derryberry?", "Which fictional characters were played by fictional characters played by Debi Derryberry?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Debi_Derryberry>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "22",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by fictional characters played by Emilija Baranac?", "What was played by fictional characters played by Emilija Baranac?", "Which fictional character is played by fictional characters played by Emilija Baranac?", "Which fictional character was played by fictional characters played by Emilija Baranac?", "Which fictional characters are played by fictional characters played by Emilija Baranac?", "Which fictional characters were played by fictional characters played by Emilija Baranac?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Emilija_Baranac>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "22",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by fictional characters played by Kevin Clash?", "What was played by fictional characters played by Kevin Clash?", "Which fictional character is played by fictional characters played by Kevin Clash?", "Which fictional character was played by fictional characters played by Kevin Clash?", "Which fictional characters are played by fictional characters played by Kevin Clash?", "Which fictional characters were played by fictional characters played by Kevin Clash?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kevin_Clash>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "22",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by fictional characters played by Ryan Dillon?", "What was played by fictional characters played by Ryan Dillon?", "Which fictional character is played by fictional characters played by Ryan Dillon?", "Which fictional character was played by fictional characters played by Ryan Dillon?", "Which fictional characters are played by fictional characters played by Ryan Dillon?", "Which fictional characters were played by fictional characters played by Ryan Dillon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ryan_Dillon>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "22",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by fictional characters played by Elmo?", "What was played by fictional characters played by Elmo?", "Which fictional character is played by fictional characters played by Elmo?", "Which fictional character was played by fictional characters played by Elmo?", "Which fictional characters are played by fictional characters played by Elmo?", "Which fictional characters were played by fictional characters played by Elmo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Elmo>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "22",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is played by fictional characters played by Tonya Williams?", "What was played by fictional characters played by Tonya Williams?", "Which fictional character is played by fictional characters played by Tonya Williams?", "Which fictional character was played by fictional characters played by Tonya Williams?", "Which fictional characters are played by fictional characters played by Tonya Williams?", "Which fictional characters were played by fictional characters played by Tonya Williams?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Tonya_Williams>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by 989 Studios released?", "When were the works developed by 989 Studios released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/989_Studios>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by ABS-CBN News and Current Affairs released?", "When were the works developed by ABS-CBN News and Current Affairs released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/ABS-CBN_News_and_Current_Affairs>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by ADK (company) released?", "When were the works developed by ADK (company) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/ADK_(company)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by LucasArts released?", "When were the works developed by LucasArts released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/LucasArts>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Lucy Cousins released?", "When were the works developed by Lucy Cousins released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Lucy_Cousins>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by M2 (game developer) released?", "When were the works developed by M2 (game developer) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/M2_(game_developer)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by MSX2 released?", "When were the works developed by MSX2 released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MSX2>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Mabrouk El Mechri released?", "When were the works developed by Mabrouk El Mechri released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mabrouk_El_Mechri>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Mad Catz released?", "When were the works developed by Mad Catz released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mad_Catz>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Bandai Namco Games released?", "When were the works developed by Bandai Namco Games released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Bandai_Namco_Games>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Ubisoft released?", "When were the works developed by Ubisoft released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Ubisoft>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Ubisoft Chengdu released?", "When were the works developed by Ubisoft Chengdu released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Ubisoft_Chengdu>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Ubisoft Montpellier released?", "When were the works developed by Ubisoft Montpellier released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Ubisoft_Montpellier>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Ubuntu Unity released?", "When were the works developed by Ubuntu Unity released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Ubuntu_Unity>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Ulteo released?", "When were the works developed by Ulteo released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Ulteo>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by University of Tsukuba released?", "When were the works developed by University of Tsukuba released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Tsukuba>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by VMware released?", "When were the works developed by VMware released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/VMware>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Cyan Worlds released?", "When were the works developed by Cyan Worlds released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Cyan_Worlds>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Scott Peters (writer) released?", "When were the works developed by Scott Peters (writer) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Scott_Peters_(writer)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by HeroCraft released?", "When were the works developed by HeroCraft released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/HeroCraft>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Handheld Games released?", "When were the works developed by Handheld Games released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Handheld_Games>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by BioWare released?", "When were the works developed by BioWare released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/BioWare>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by BlueSky Software released?", "When were the works developed by BlueSky Software released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/BlueSky_Software>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Blue Sky Productions released?", "When were the works developed by Blue Sky Productions released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Blue_Sky_Productions>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Devsisters released?", "When were the works developed by Devsisters released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Devsisters>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Digital Leisure released?", "When were the works developed by Digital Leisure released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Digital_Leisure>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Diplo released?", "When were the works developed by Diplo released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Diplo>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Grezzo released?", "When were the works developed by Grezzo released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Grezzo>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Kevin Shinick released?", "When were the works developed by Kevin Shinick released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Kevin_Shinick>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Koei Tecmo released?", "When were the works developed by Koei Tecmo released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Koei_Tecmo>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Kogado Studio released?", "When were the works developed by Kogado Studio released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Kogado_Studio>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Kojima Productions released?", "When were the works developed by Kojima Productions released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Kojima_Productions>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Konami released?", "When were the works developed by Konami released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Konami>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Korean Broadcasting System released?", "When were the works developed by Korean Broadcasting System released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Korean_Broadcasting_System>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Aspyr Media released?", "When were the works developed by Aspyr Media released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Aspyr_Media>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Q Entertainment released?", "When were the works developed by Q Entertainment released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Q_Entertainment>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Quest Corporation released?", "When were the works developed by Quest Corporation released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Quest_Corporation>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by RTL Klub released?", "When were the works developed by RTL Klub released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/RTL_Klub>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Radical Entertainment released?", "When were the works developed by Radical Entertainment released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Radical_Entertainment>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Rainbow Studios released?", "When were the works developed by Rainbow Studios released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Rainbow_Studios>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by G.rev released?", "When were the works developed by G.rev released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/G.rev>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Hanako Games released?", "When were the works developed by Hanako Games released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Hanako_Games>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Human Entertainment released?", "When were the works developed by Human Entertainment released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Human_Entertainment>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Irem released?", "When were the works developed by Irem released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Irem>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Exient Entertainment released?", "When were the works developed by Exient Entertainment released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Exient_Entertainment>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Studio Alex released?", "When were the works developed by Studio Alex released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Studio_Alex>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by NLnet Labs released?", "When were the works developed by NLnet Labs released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/NLnet_Labs>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Aksys Games released?", "When were the works developed by Aksys Games released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Aksys_Games>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Alfred Shaughnessy released?", "When were the works developed by Alfred Shaughnessy released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Alfred_Shaughnessy>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Altron released?", "When were the works developed by Altron released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Altron>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Central Point Software released?", "When were the works developed by Central Point Software released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Central_Point_Software>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Chiaki J. Konaka released?", "When were the works developed by Chiaki J. Konaka released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Chiaki_J._Konaka>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by American Laser Games released?", "When were the works developed by American Laser Games released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/American_Laser_Games>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Nihon Falcom released?", "When were the works developed by Nihon Falcom released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Nihon_Falcom>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Nintendo released?", "When were the works developed by Nintendo released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Nintendo>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Nintendo DS released?", "When were the works developed by Nintendo DS released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Nintendo_DS>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Nintendo Entertainment Analysis & Development released?", "When were the works developed by Nintendo Entertainment Analysis & Development released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Nintendo_Entertainment_Analysis_&_Development>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Nintendo Switch released?", "When were the works developed by Nintendo Switch released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Nintendo_Switch>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Nippon Ichi Software released?", "When were the works developed by Nippon Ichi Software released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Nippon_Ichi_Software>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Now Production released?", "When were the works developed by Now Production released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Now_Production>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Natsume (company) released?", "When were the works developed by Natsume (company) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Natsume_(company)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Neko Entertainment released?", "When were the works developed by Neko Entertainment released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Neko_Entertainment>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Success (company) released?", "When were the works developed by Success (company) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Success_(company)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Telenet Japan released?", "When were the works developed by Telenet Japan released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Telenet_Japan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Warthog Games released?", "When were the works developed by Warthog Games released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Warthog_Games>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Victor Interactive Software released?", "When were the works developed by Victor Interactive Software released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Victor_Interactive_Software>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Wadjet Eye Games released?", "When were the works developed by Wadjet Eye Games released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Wadjet_Eye_Games>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Fill-in-Cafe released?", "When were the works developed by Fill-in-Cafe released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Fill-in-Cafe>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Ferry Gouw released?", "When were the works developed by Ferry Gouw released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Ferry_Gouw>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by MTV Italy released?", "When were the works developed by MTV Italy released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MTV_Italy>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by 07th Expansion released?", "When were the works developed by 07th Expansion released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/07th_Expansion>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Avalanche Software released?", "When were the works developed by Avalanche Software released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Avalanche_Software>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Avalanche Studios released?", "When were the works developed by Avalanche Studios released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Avalanche_Studios>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Backbone Entertainment released?", "When were the works developed by Backbone Entertainment released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Backbone_Entertainment>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Bandai released?", "When were the works developed by Bandai released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Bandai>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Banpresto released?", "When were the works developed by Banpresto released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Banpresto>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Arrowhead Game Studios released?", "When were the works developed by Arrowhead Game Studios released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Arrowhead_Game_Studios>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Artdink released?", "When were the works developed by Artdink released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Artdink>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Artoon released?", "When were the works developed by Artoon released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Artoon>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by LookingGlass Technologies released?", "When were the works developed by LookingGlass Technologies released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/LookingGlass_Technologies>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Loriciels released?", "When were the works developed by Loriciels released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Loriciels>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Josh A. Cagan released?", "When were the works developed by Josh A. Cagan released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Josh_A._Cagan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Canonical (company) released?", "When were the works developed by Canonical (company) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Canonical_(company)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Canonical Ltd. released?", "When were the works developed by Canonical Ltd. released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Canonical_Ltd.>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Capcom released?", "When were the works developed by Capcom released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Capcom>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Choice of Games released?", "When were the works developed by Choice of Games released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Choice_of_Games>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Chris Taylor (comedian) released?", "When were the works developed by Chris Taylor (comedian) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Chris_Taylor_(comedian)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Cignal TV released?", "When were the works developed by Cignal TV released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Cignal_TV>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Anchor Inc. released?", "When were the works developed by Anchor Inc. released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Anchor_Inc.>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by GameHouse released?", "When were the works developed by GameHouse released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/GameHouse>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Game Arts released?", "When were the works developed by Game Arts released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Game_Arts>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Game Republic released?", "When were the works developed by Game Republic released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Game_Republic>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Gameloft released?", "When were the works developed by Gameloft released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Gameloft>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Gene Reynolds released?", "When were the works developed by Gene Reynolds released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Gene_Reynolds>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Genki (company) released?", "When were the works developed by Genki (company) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Genki_(company)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Jeremy Ashkenas released?", "When were the works developed by Jeremy Ashkenas released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Jeremy_Ashkenas>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Bandai Entertainment Company released?", "When were the works developed by Bandai Entertainment Company released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Bandai_Entertainment_Company>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by David M. Stern released?", "When were the works developed by David M. Stern released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/David_M._Stern>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by HB Studios released?", "When were the works developed by HB Studios released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/HB_Studios>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "25",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the works developed by Microcabin released?", "When were the works developed by Microcabin released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Microcabin>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  } ]
}