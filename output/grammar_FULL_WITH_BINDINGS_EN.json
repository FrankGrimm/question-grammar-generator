{
  "grammarEntries" : [ {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Greek boxers?", "Which is a Greek boxer?", "Which was a Greek boxer?", "Which were Greek boxers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Boxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Greek clerics?", "Which is a Greek cleric?", "Which was a Greek cleric?", "Which were Greek clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Greek office holders?", "Which is a Greek office holder?", "Which was a Greek office holder?", "Which were Greek office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Greek agents?", "Which is a Greek agent?", "Which was a Greek agent?", "Which were Greek agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Greek fictional characters?", "Which is a Greek fictional character?", "Which was a Greek fictional character?", "Which were Greek fictional characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Greek artists?", "Which is a Greek artist?", "Which was a Greek artist?", "Which were Greek artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Greek athletes?", "Which is a Greek athlete?", "Which was a Greek athlete?", "Which were Greek athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Greek scientists?", "Which is a Greek scientist?", "Which was a Greek scientist?", "Which were Greek scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Greek politicians?", "Which is a Greek politician?", "Which was a Greek politician?", "Which were Greek politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "25",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Greek swimmers?", "Which is a Greek swimmer?", "Which was a Greek swimmer?", "Which were Greek swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "27",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Greek volleyball players?", "Which is a Greek volleyball player?", "Which was a Greek volleyball player?", "Which were Greek volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "29",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Greek handball players?", "Which is a Greek handball player?", "Which was a Greek handball player?", "Which were Greek handball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HandballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "31",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Greek persons?", "Which is a Greek person?", "Which was a Greek person?", "Which were Greek persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "33",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Greek basketball players?", "Which is a Greek basketball player?", "Which was a Greek basketball player?", "Which were Greek basketball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "35",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Greek writers?", "Which is a Greek writer?", "Which was a Greek writer?", "Which were Greek writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "37",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "AA",
    "sentences" : [ "Which are Greek presidents?", "Which is a Greek president?", "Which was a Greek president?", "Which were Greek presidents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "59",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek boxer ?", "Which person married Greek boxers ?", "Who married a Greek boxer ?", "Who married Greek boxers ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Boxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek cleric ?", "Which person married Greek clerics ?", "Who married a Greek cleric ?", "Who married Greek clerics ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "61",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek office holder ?", "Which person married Greek office holders ?", "Who married a Greek office holder ?", "Who married Greek office holders ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "62",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek agent ?", "Which person married Greek agents ?", "Who married a Greek agent ?", "Who married Greek agents ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "63",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek fictional character ?", "Which person married Greek fictional characters ?", "Who married a Greek fictional character ?", "Who married Greek fictional characters ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "64",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek artist ?", "Which person married Greek artists ?", "Who married a Greek artist ?", "Who married Greek artists ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "65",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek athlete ?", "Which person married Greek athletes ?", "Who married a Greek athlete ?", "Who married Greek athletes ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek scientist ?", "Which person married Greek scientists ?", "Who married a Greek scientist ?", "Who married Greek scientists ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek politician ?", "Which person married Greek politicians ?", "Who married a Greek politician ?", "Who married Greek politicians ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "68",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek swimmer ?", "Which person married Greek swimmers ?", "Who married a Greek swimmer ?", "Who married Greek swimmers ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "69",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek volleyball player ?", "Which person married Greek volleyball players ?", "Who married a Greek volleyball player ?", "Who married Greek volleyball players ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "70",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek handball player ?", "Which person married Greek handball players ?", "Who married a Greek handball player ?", "Who married Greek handball players ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HandballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "71",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek person ?", "Which person married Greek persons ?", "Who married a Greek person ?", "Who married Greek persons ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "72",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek basketball player ?", "Which person married Greek basketball players ?", "Who married a Greek basketball player ?", "Who married Greek basketball players ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "73",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek writer ?", "Which person married Greek writers ?", "Who married a Greek writer ?", "Who married Greek writers ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "77",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played a Greek boxer ?", "Which person played Greek boxers ?", "Which person plays a Greek boxer ?", "Which person plays Greek boxers ?", "Who played a Greek boxer ?", "Who played Greek boxers ?", "Who plays a Greek boxer ?", "Who plays Greek boxers ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Boxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "78",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played a Greek cleric ?", "Which person played Greek clerics ?", "Which person plays a Greek cleric ?", "Which person plays Greek clerics ?", "Who played a Greek cleric ?", "Who played Greek clerics ?", "Who plays a Greek cleric ?", "Who plays Greek clerics ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "79",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played a Greek office holder ?", "Which person played Greek office holders ?", "Which person plays a Greek office holder ?", "Which person plays Greek office holders ?", "Who played a Greek office holder ?", "Who played Greek office holders ?", "Who plays a Greek office holder ?", "Who plays Greek office holders ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "80",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played a Greek agent ?", "Which person played Greek agents ?", "Which person plays a Greek agent ?", "Which person plays Greek agents ?", "Who played a Greek agent ?", "Who played Greek agents ?", "Who plays a Greek agent ?", "Who plays Greek agents ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "81",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played a Greek fictional character ?", "Which person played Greek fictional characters ?", "Which person plays a Greek fictional character ?", "Which person plays Greek fictional characters ?", "Who played a Greek fictional character ?", "Who played Greek fictional characters ?", "Who plays a Greek fictional character ?", "Who plays Greek fictional characters ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "82",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played a Greek artist ?", "Which person played Greek artists ?", "Which person plays a Greek artist ?", "Which person plays Greek artists ?", "Who played a Greek artist ?", "Who played Greek artists ?", "Who plays a Greek artist ?", "Who plays Greek artists ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "83",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played a Greek athlete ?", "Which person played Greek athletes ?", "Which person plays a Greek athlete ?", "Which person plays Greek athletes ?", "Who played a Greek athlete ?", "Who played Greek athletes ?", "Who plays a Greek athlete ?", "Who plays Greek athletes ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "84",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played a Greek scientist ?", "Which person played Greek scientists ?", "Which person plays a Greek scientist ?", "Which person plays Greek scientists ?", "Who played a Greek scientist ?", "Who played Greek scientists ?", "Who plays a Greek scientist ?", "Who plays Greek scientists ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "85",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played a Greek politician ?", "Which person played Greek politicians ?", "Which person plays a Greek politician ?", "Which person plays Greek politicians ?", "Who played a Greek politician ?", "Who played Greek politicians ?", "Who plays a Greek politician ?", "Who plays Greek politicians ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "86",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played a Greek swimmer ?", "Which person played Greek swimmers ?", "Which person plays a Greek swimmer ?", "Which person plays Greek swimmers ?", "Who played a Greek swimmer ?", "Who played Greek swimmers ?", "Who plays a Greek swimmer ?", "Who plays Greek swimmers ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "87",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played a Greek volleyball player ?", "Which person played Greek volleyball players ?", "Which person plays a Greek volleyball player ?", "Which person plays Greek volleyball players ?", "Who played a Greek volleyball player ?", "Who played Greek volleyball players ?", "Who plays a Greek volleyball player ?", "Who plays Greek volleyball players ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played a Greek handball player ?", "Which person played Greek handball players ?", "Which person plays a Greek handball player ?", "Which person plays Greek handball players ?", "Who played a Greek handball player ?", "Who played Greek handball players ?", "Who plays a Greek handball player ?", "Who plays Greek handball players ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HandballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played a Greek person ?", "Which person played Greek persons ?", "Which person plays a Greek person ?", "Which person plays Greek persons ?", "Who played a Greek person ?", "Who played Greek persons ?", "Who plays a Greek person ?", "Who plays Greek persons ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "90",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played a Greek basketball player ?", "Which person played Greek basketball players ?", "Which person plays a Greek basketball player ?", "Which person plays Greek basketball players ?", "Who played a Greek basketball player ?", "Who played Greek basketball players ?", "Who plays a Greek basketball player ?", "Who plays Greek basketball players ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "91",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played a Greek writer ?", "Which person played Greek writers ?", "Which person plays a Greek writer ?", "Which person plays Greek writers ?", "Who played a Greek writer ?", "Who played Greek writers ?", "Who plays a Greek writer ?", "Who plays Greek writers ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "95",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by a Greek boxer?", "Which fictional character is played by Greek boxers?", "Which fictional character was played by a Greek boxer?", "Which fictional character was played by Greek boxers?", "Which fictional characters are played by a Greek boxer?", "Which fictional characters are played by Greek boxers?", "Which fictional characters were played by a Greek boxer?", "Which fictional characters were played by Greek boxers?", "Who is played by a Greek boxer?", "Who is played by Greek boxers?", "Who was played by a Greek boxer?", "Who was played by Greek boxers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Boxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "96",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by a Greek cleric?", "Which fictional character is played by Greek clerics?", "Which fictional character was played by a Greek cleric?", "Which fictional character was played by Greek clerics?", "Which fictional characters are played by a Greek cleric?", "Which fictional characters are played by Greek clerics?", "Which fictional characters were played by a Greek cleric?", "Which fictional characters were played by Greek clerics?", "Who is played by a Greek cleric?", "Who is played by Greek clerics?", "Who was played by a Greek cleric?", "Who was played by Greek clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "97",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by a Greek office holder?", "Which fictional character is played by Greek office holders?", "Which fictional character was played by a Greek office holder?", "Which fictional character was played by Greek office holders?", "Which fictional characters are played by a Greek office holder?", "Which fictional characters are played by Greek office holders?", "Which fictional characters were played by a Greek office holder?", "Which fictional characters were played by Greek office holders?", "Who is played by a Greek office holder?", "Who is played by Greek office holders?", "Who was played by a Greek office holder?", "Who was played by Greek office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "98",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by a Greek agent?", "Which fictional character is played by Greek agents?", "Which fictional character was played by a Greek agent?", "Which fictional character was played by Greek agents?", "Which fictional characters are played by a Greek agent?", "Which fictional characters are played by Greek agents?", "Which fictional characters were played by a Greek agent?", "Which fictional characters were played by Greek agents?", "Who is played by a Greek agent?", "Who is played by Greek agents?", "Who was played by a Greek agent?", "Who was played by Greek agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "99",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by a Greek fictional character?", "Which fictional character is played by Greek fictional characters?", "Which fictional character was played by a Greek fictional character?", "Which fictional character was played by Greek fictional characters?", "Which fictional characters are played by a Greek fictional character?", "Which fictional characters are played by Greek fictional characters?", "Which fictional characters were played by a Greek fictional character?", "Which fictional characters were played by Greek fictional characters?", "Who is played by a Greek fictional character?", "Who is played by Greek fictional characters?", "Who was played by a Greek fictional character?", "Who was played by Greek fictional characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "100",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by a Greek artist?", "Which fictional character is played by Greek artists?", "Which fictional character was played by a Greek artist?", "Which fictional character was played by Greek artists?", "Which fictional characters are played by a Greek artist?", "Which fictional characters are played by Greek artists?", "Which fictional characters were played by a Greek artist?", "Which fictional characters were played by Greek artists?", "Who is played by a Greek artist?", "Who is played by Greek artists?", "Who was played by a Greek artist?", "Who was played by Greek artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "101",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by a Greek athlete?", "Which fictional character is played by Greek athletes?", "Which fictional character was played by a Greek athlete?", "Which fictional character was played by Greek athletes?", "Which fictional characters are played by a Greek athlete?", "Which fictional characters are played by Greek athletes?", "Which fictional characters were played by a Greek athlete?", "Which fictional characters were played by Greek athletes?", "Who is played by a Greek athlete?", "Who is played by Greek athletes?", "Who was played by a Greek athlete?", "Who was played by Greek athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "102",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by a Greek scientist?", "Which fictional character is played by Greek scientists?", "Which fictional character was played by a Greek scientist?", "Which fictional character was played by Greek scientists?", "Which fictional characters are played by a Greek scientist?", "Which fictional characters are played by Greek scientists?", "Which fictional characters were played by a Greek scientist?", "Which fictional characters were played by Greek scientists?", "Who is played by a Greek scientist?", "Who is played by Greek scientists?", "Who was played by a Greek scientist?", "Who was played by Greek scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "103",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by a Greek politician?", "Which fictional character is played by Greek politicians?", "Which fictional character was played by a Greek politician?", "Which fictional character was played by Greek politicians?", "Which fictional characters are played by a Greek politician?", "Which fictional characters are played by Greek politicians?", "Which fictional characters were played by a Greek politician?", "Which fictional characters were played by Greek politicians?", "Who is played by a Greek politician?", "Who is played by Greek politicians?", "Who was played by a Greek politician?", "Who was played by Greek politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "104",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by a Greek swimmer?", "Which fictional character is played by Greek swimmers?", "Which fictional character was played by a Greek swimmer?", "Which fictional character was played by Greek swimmers?", "Which fictional characters are played by a Greek swimmer?", "Which fictional characters are played by Greek swimmers?", "Which fictional characters were played by a Greek swimmer?", "Which fictional characters were played by Greek swimmers?", "Who is played by a Greek swimmer?", "Who is played by Greek swimmers?", "Who was played by a Greek swimmer?", "Who was played by Greek swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "105",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by a Greek volleyball player?", "Which fictional character is played by Greek volleyball players?", "Which fictional character was played by a Greek volleyball player?", "Which fictional character was played by Greek volleyball players?", "Which fictional characters are played by a Greek volleyball player?", "Which fictional characters are played by Greek volleyball players?", "Which fictional characters were played by a Greek volleyball player?", "Which fictional characters were played by Greek volleyball players?", "Who is played by a Greek volleyball player?", "Who is played by Greek volleyball players?", "Who was played by a Greek volleyball player?", "Who was played by Greek volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "106",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by a Greek handball player?", "Which fictional character is played by Greek handball players?", "Which fictional character was played by a Greek handball player?", "Which fictional character was played by Greek handball players?", "Which fictional characters are played by a Greek handball player?", "Which fictional characters are played by Greek handball players?", "Which fictional characters were played by a Greek handball player?", "Which fictional characters were played by Greek handball players?", "Who is played by a Greek handball player?", "Who is played by Greek handball players?", "Who was played by a Greek handball player?", "Who was played by Greek handball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HandballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "107",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by a Greek person?", "Which fictional character is played by Greek persons?", "Which fictional character was played by a Greek person?", "Which fictional character was played by Greek persons?", "Which fictional characters are played by a Greek person?", "Which fictional characters are played by Greek persons?", "Which fictional characters were played by a Greek person?", "Which fictional characters were played by Greek persons?", "Who is played by a Greek person?", "Who is played by Greek persons?", "Who was played by a Greek person?", "Who was played by Greek persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "108",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by a Greek basketball player?", "Which fictional character is played by Greek basketball players?", "Which fictional character was played by a Greek basketball player?", "Which fictional character was played by Greek basketball players?", "Which fictional characters are played by a Greek basketball player?", "Which fictional characters are played by Greek basketball players?", "Which fictional characters were played by a Greek basketball player?", "Which fictional characters were played by Greek basketball players?", "Who is played by a Greek basketball player?", "Who is played by Greek basketball players?", "Who was played by a Greek basketball player?", "Who was played by Greek basketball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "109",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by a Greek writer?", "Which fictional character is played by Greek writers?", "Which fictional character was played by a Greek writer?", "Which fictional character was played by Greek writers?", "Which fictional characters are played by a Greek writer?", "Which fictional characters are played by Greek writers?", "Which fictional characters were played by a Greek writer?", "Which fictional characters were played by Greek writers?", "Who is played by a Greek writer?", "Who is played by Greek writers?", "Who was played by a Greek writer?", "Who was played by Greek writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "113",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to a Greek boxer?", "Which person is married to Greek boxers?", "Which person was married to a Greek boxer?", "Which person was married to Greek boxers?", "Which persons are married to a Greek boxer?", "Which persons are married to Greek boxers?", "Which persons were married to a Greek boxer?", "Which persons were married to Greek boxers?", "Who is married to a Greek boxer?", "Who is married to Greek boxers?", "Who was married to a Greek boxer?", "Who was married to Greek boxers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Boxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "114",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to a Greek cleric?", "Which person is married to Greek clerics?", "Which person was married to a Greek cleric?", "Which person was married to Greek clerics?", "Which persons are married to a Greek cleric?", "Which persons are married to Greek clerics?", "Which persons were married to a Greek cleric?", "Which persons were married to Greek clerics?", "Who is married to a Greek cleric?", "Who is married to Greek clerics?", "Who was married to a Greek cleric?", "Who was married to Greek clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "115",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to a Greek office holder?", "Which person is married to Greek office holders?", "Which person was married to a Greek office holder?", "Which person was married to Greek office holders?", "Which persons are married to a Greek office holder?", "Which persons are married to Greek office holders?", "Which persons were married to a Greek office holder?", "Which persons were married to Greek office holders?", "Who is married to a Greek office holder?", "Who is married to Greek office holders?", "Who was married to a Greek office holder?", "Who was married to Greek office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "116",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to a Greek agent?", "Which person is married to Greek agents?", "Which person was married to a Greek agent?", "Which person was married to Greek agents?", "Which persons are married to a Greek agent?", "Which persons are married to Greek agents?", "Which persons were married to a Greek agent?", "Which persons were married to Greek agents?", "Who is married to a Greek agent?", "Who is married to Greek agents?", "Who was married to a Greek agent?", "Who was married to Greek agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "117",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to a Greek fictional character?", "Which person is married to Greek fictional characters?", "Which person was married to a Greek fictional character?", "Which person was married to Greek fictional characters?", "Which persons are married to a Greek fictional character?", "Which persons are married to Greek fictional characters?", "Which persons were married to a Greek fictional character?", "Which persons were married to Greek fictional characters?", "Who is married to a Greek fictional character?", "Who is married to Greek fictional characters?", "Who was married to a Greek fictional character?", "Who was married to Greek fictional characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "118",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to a Greek artist?", "Which person is married to Greek artists?", "Which person was married to a Greek artist?", "Which person was married to Greek artists?", "Which persons are married to a Greek artist?", "Which persons are married to Greek artists?", "Which persons were married to a Greek artist?", "Which persons were married to Greek artists?", "Who is married to a Greek artist?", "Who is married to Greek artists?", "Who was married to a Greek artist?", "Who was married to Greek artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "119",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to a Greek athlete?", "Which person is married to Greek athletes?", "Which person was married to a Greek athlete?", "Which person was married to Greek athletes?", "Which persons are married to a Greek athlete?", "Which persons are married to Greek athletes?", "Which persons were married to a Greek athlete?", "Which persons were married to Greek athletes?", "Who is married to a Greek athlete?", "Who is married to Greek athletes?", "Who was married to a Greek athlete?", "Who was married to Greek athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "120",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to a Greek scientist?", "Which person is married to Greek scientists?", "Which person was married to a Greek scientist?", "Which person was married to Greek scientists?", "Which persons are married to a Greek scientist?", "Which persons are married to Greek scientists?", "Which persons were married to a Greek scientist?", "Which persons were married to Greek scientists?", "Who is married to a Greek scientist?", "Who is married to Greek scientists?", "Who was married to a Greek scientist?", "Who was married to Greek scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "121",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to a Greek politician?", "Which person is married to Greek politicians?", "Which person was married to a Greek politician?", "Which person was married to Greek politicians?", "Which persons are married to a Greek politician?", "Which persons are married to Greek politicians?", "Which persons were married to a Greek politician?", "Which persons were married to Greek politicians?", "Who is married to a Greek politician?", "Who is married to Greek politicians?", "Who was married to a Greek politician?", "Who was married to Greek politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "122",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to a Greek swimmer?", "Which person is married to Greek swimmers?", "Which person was married to a Greek swimmer?", "Which person was married to Greek swimmers?", "Which persons are married to a Greek swimmer?", "Which persons are married to Greek swimmers?", "Which persons were married to a Greek swimmer?", "Which persons were married to Greek swimmers?", "Who is married to a Greek swimmer?", "Who is married to Greek swimmers?", "Who was married to a Greek swimmer?", "Who was married to Greek swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "123",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to a Greek volleyball player?", "Which person is married to Greek volleyball players?", "Which person was married to a Greek volleyball player?", "Which person was married to Greek volleyball players?", "Which persons are married to a Greek volleyball player?", "Which persons are married to Greek volleyball players?", "Which persons were married to a Greek volleyball player?", "Which persons were married to Greek volleyball players?", "Who is married to a Greek volleyball player?", "Who is married to Greek volleyball players?", "Who was married to a Greek volleyball player?", "Who was married to Greek volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "124",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to a Greek handball player?", "Which person is married to Greek handball players?", "Which person was married to a Greek handball player?", "Which person was married to Greek handball players?", "Which persons are married to a Greek handball player?", "Which persons are married to Greek handball players?", "Which persons were married to a Greek handball player?", "Which persons were married to Greek handball players?", "Who is married to a Greek handball player?", "Who is married to Greek handball players?", "Who was married to a Greek handball player?", "Who was married to Greek handball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HandballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "125",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to a Greek person?", "Which person is married to Greek persons?", "Which person was married to a Greek person?", "Which person was married to Greek persons?", "Which persons are married to a Greek person?", "Which persons are married to Greek persons?", "Which persons were married to a Greek person?", "Which persons were married to Greek persons?", "Who is married to a Greek person?", "Who is married to Greek persons?", "Who was married to a Greek person?", "Who was married to Greek persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "126",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to a Greek basketball player?", "Which person is married to Greek basketball players?", "Which person was married to a Greek basketball player?", "Which person was married to Greek basketball players?", "Which persons are married to a Greek basketball player?", "Which persons are married to Greek basketball players?", "Which persons were married to a Greek basketball player?", "Which persons were married to Greek basketball players?", "Who is married to a Greek basketball player?", "Who is married to Greek basketball players?", "Who was married to a Greek basketball player?", "Who was married to Greek basketball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "127",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to a Greek writer?", "Which person is married to Greek writers?", "Which person was married to a Greek writer?", "Which person was married to Greek writers?", "Which persons are married to a Greek writer?", "Which persons are married to Greek writers?", "Which persons were married to a Greek writer?", "Which persons were married to Greek writers?", "Who is married to a Greek writer?", "Who is married to Greek writers?", "Who was married to a Greek writer?", "Who was married to Greek writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "131",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek boxer?", "What is born in Greek boxers?", "What was born in a Greek boxer?", "What was born in Greek boxers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Boxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek cleric?", "What is born in Greek clerics?", "What was born in a Greek cleric?", "What was born in Greek clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek office holder?", "What is born in Greek office holders?", "What was born in a Greek office holder?", "What was born in Greek office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "134",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek agent?", "What is born in Greek agents?", "What was born in a Greek agent?", "What was born in Greek agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "135",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek fictional character?", "What is born in Greek fictional characters?", "What was born in a Greek fictional character?", "What was born in Greek fictional characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "136",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek artist?", "What is born in Greek artists?", "What was born in a Greek artist?", "What was born in Greek artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "137",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek athlete?", "What is born in Greek athletes?", "What was born in a Greek athlete?", "What was born in Greek athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "138",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek scientist?", "What is born in Greek scientists?", "What was born in a Greek scientist?", "What was born in Greek scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "139",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek politician?", "What is born in Greek politicians?", "What was born in a Greek politician?", "What was born in Greek politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "140",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek swimmer?", "What is born in Greek swimmers?", "What was born in a Greek swimmer?", "What was born in Greek swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "141",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek volleyball player?", "What is born in Greek volleyball players?", "What was born in a Greek volleyball player?", "What was born in Greek volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "142",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek handball player?", "What is born in Greek handball players?", "What was born in a Greek handball player?", "What was born in Greek handball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HandballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "143",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek person?", "What is born in Greek persons?", "What was born in a Greek person?", "What was born in Greek persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "144",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek basketball player?", "What is born in Greek basketball players?", "What was born in a Greek basketball player?", "What was born in Greek basketball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "145",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek writer?", "What is born in Greek writers?", "What was born in a Greek writer?", "What was born in Greek writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "149",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by a Greek boxer?", "What is developed by Greek boxers?", "What was developed by a Greek boxer?", "What was developed by Greek boxers?", "Which work is developed by a Greek boxer?", "Which work is developed by Greek boxers?", "Which work was developed by a Greek boxer?", "Which work was developed by Greek boxers?", "Which works are developed by a Greek boxer?", "Which works are developed by Greek boxers?", "Which works were developed by a Greek boxer?", "Which works were developed by Greek boxers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Boxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "150",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by a Greek cleric?", "What is developed by Greek clerics?", "What was developed by a Greek cleric?", "What was developed by Greek clerics?", "Which work is developed by a Greek cleric?", "Which work is developed by Greek clerics?", "Which work was developed by a Greek cleric?", "Which work was developed by Greek clerics?", "Which works are developed by a Greek cleric?", "Which works are developed by Greek clerics?", "Which works were developed by a Greek cleric?", "Which works were developed by Greek clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "151",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by a Greek office holder?", "What is developed by Greek office holders?", "What was developed by a Greek office holder?", "What was developed by Greek office holders?", "Which work is developed by a Greek office holder?", "Which work is developed by Greek office holders?", "Which work was developed by a Greek office holder?", "Which work was developed by Greek office holders?", "Which works are developed by a Greek office holder?", "Which works are developed by Greek office holders?", "Which works were developed by a Greek office holder?", "Which works were developed by Greek office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "152",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by a Greek agent?", "What is developed by Greek agents?", "What was developed by a Greek agent?", "What was developed by Greek agents?", "Which work is developed by a Greek agent?", "Which work is developed by Greek agents?", "Which work was developed by a Greek agent?", "Which work was developed by Greek agents?", "Which works are developed by a Greek agent?", "Which works are developed by Greek agents?", "Which works were developed by a Greek agent?", "Which works were developed by Greek agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "153",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by a Greek fictional character?", "What is developed by Greek fictional characters?", "What was developed by a Greek fictional character?", "What was developed by Greek fictional characters?", "Which work is developed by a Greek fictional character?", "Which work is developed by Greek fictional characters?", "Which work was developed by a Greek fictional character?", "Which work was developed by Greek fictional characters?", "Which works are developed by a Greek fictional character?", "Which works are developed by Greek fictional characters?", "Which works were developed by a Greek fictional character?", "Which works were developed by Greek fictional characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by a Greek artist?", "What is developed by Greek artists?", "What was developed by a Greek artist?", "What was developed by Greek artists?", "Which work is developed by a Greek artist?", "Which work is developed by Greek artists?", "Which work was developed by a Greek artist?", "Which work was developed by Greek artists?", "Which works are developed by a Greek artist?", "Which works are developed by Greek artists?", "Which works were developed by a Greek artist?", "Which works were developed by Greek artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by a Greek athlete?", "What is developed by Greek athletes?", "What was developed by a Greek athlete?", "What was developed by Greek athletes?", "Which work is developed by a Greek athlete?", "Which work is developed by Greek athletes?", "Which work was developed by a Greek athlete?", "Which work was developed by Greek athletes?", "Which works are developed by a Greek athlete?", "Which works are developed by Greek athletes?", "Which works were developed by a Greek athlete?", "Which works were developed by Greek athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "156",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by a Greek scientist?", "What is developed by Greek scientists?", "What was developed by a Greek scientist?", "What was developed by Greek scientists?", "Which work is developed by a Greek scientist?", "Which work is developed by Greek scientists?", "Which work was developed by a Greek scientist?", "Which work was developed by Greek scientists?", "Which works are developed by a Greek scientist?", "Which works are developed by Greek scientists?", "Which works were developed by a Greek scientist?", "Which works were developed by Greek scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "157",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by a Greek politician?", "What is developed by Greek politicians?", "What was developed by a Greek politician?", "What was developed by Greek politicians?", "Which work is developed by a Greek politician?", "Which work is developed by Greek politicians?", "Which work was developed by a Greek politician?", "Which work was developed by Greek politicians?", "Which works are developed by a Greek politician?", "Which works are developed by Greek politicians?", "Which works were developed by a Greek politician?", "Which works were developed by Greek politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "158",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by a Greek swimmer?", "What is developed by Greek swimmers?", "What was developed by a Greek swimmer?", "What was developed by Greek swimmers?", "Which work is developed by a Greek swimmer?", "Which work is developed by Greek swimmers?", "Which work was developed by a Greek swimmer?", "Which work was developed by Greek swimmers?", "Which works are developed by a Greek swimmer?", "Which works are developed by Greek swimmers?", "Which works were developed by a Greek swimmer?", "Which works were developed by Greek swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "159",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by a Greek volleyball player?", "What is developed by Greek volleyball players?", "What was developed by a Greek volleyball player?", "What was developed by Greek volleyball players?", "Which work is developed by a Greek volleyball player?", "Which work is developed by Greek volleyball players?", "Which work was developed by a Greek volleyball player?", "Which work was developed by Greek volleyball players?", "Which works are developed by a Greek volleyball player?", "Which works are developed by Greek volleyball players?", "Which works were developed by a Greek volleyball player?", "Which works were developed by Greek volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "160",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by a Greek handball player?", "What is developed by Greek handball players?", "What was developed by a Greek handball player?", "What was developed by Greek handball players?", "Which work is developed by a Greek handball player?", "Which work is developed by Greek handball players?", "Which work was developed by a Greek handball player?", "Which work was developed by Greek handball players?", "Which works are developed by a Greek handball player?", "Which works are developed by Greek handball players?", "Which works were developed by a Greek handball player?", "Which works were developed by Greek handball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HandballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "161",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by a Greek person?", "What is developed by Greek persons?", "What was developed by a Greek person?", "What was developed by Greek persons?", "Which work is developed by a Greek person?", "Which work is developed by Greek persons?", "Which work was developed by a Greek person?", "Which work was developed by Greek persons?", "Which works are developed by a Greek person?", "Which works are developed by Greek persons?", "Which works were developed by a Greek person?", "Which works were developed by Greek persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "162",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by a Greek basketball player?", "What is developed by Greek basketball players?", "What was developed by a Greek basketball player?", "What was developed by Greek basketball players?", "Which work is developed by a Greek basketball player?", "Which work is developed by Greek basketball players?", "Which work was developed by a Greek basketball player?", "Which work was developed by Greek basketball players?", "Which works are developed by a Greek basketball player?", "Which works are developed by Greek basketball players?", "Which works were developed by a Greek basketball player?", "Which works were developed by Greek basketball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "163",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by a Greek writer?", "What is developed by Greek writers?", "What was developed by a Greek writer?", "What was developed by Greek writers?", "Which work is developed by a Greek writer?", "Which work is developed by Greek writers?", "Which work was developed by a Greek writer?", "Which work was developed by Greek writers?", "Which works are developed by a Greek writer?", "Which works are developed by Greek writers?", "Which works were developed by a Greek writer?", "Which works were developed by Greek writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed 1943: The Battle of Midway ?", "Which agent develops 1943: The Battle of Midway ?", "Who developed 1943: The Battle of Midway ?", "Who develops 1943: The Battle of Midway ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1943:_The_Battle_of_Midway> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed 2014 FIFA World Cup Brazil (video game) ?", "Which agent develops 2014 FIFA World Cup Brazil (video game) ?", "Who developed 2014 FIFA World Cup Brazil (video game) ?", "Who develops 2014 FIFA World Cup Brazil (video game) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2014_FIFA_World_Cup_Brazil_(video_game)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed 750cc Grand Prix ?", "Which agent develops 750cc Grand Prix ?", "Who developed 750cc Grand Prix ?", "Who develops 750cc Grand Prix ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/750cc_Grand_Prix> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed 7 Mages ?", "Which agent develops 7 Mages ?", "Who developed 7 Mages ?", "Who develops 7 Mages ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/7_Mages> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed 7 dní a 7 nocí ?", "Which agent develops 7 dní a 7 nocí ?", "Who developed 7 dní a 7 nocí ?", "Who develops 7 dní a 7 nocí ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/7_dní_a_7_nocí> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed 8-Bit Armies ?", "Which agent develops 8-Bit Armies ?", "Who developed 8-Bit Armies ?", "Who develops 8-Bit Armies ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/8-Bit_Armies> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed 8-Bit Hordes ?", "Which agent develops 8-Bit Hordes ?", "Who developed 8-Bit Hordes ?", "Who develops 8-Bit Hordes ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/8-Bit_Hordes> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed 8-Bit Rebellion! ?", "Which agent develops 8-Bit Rebellion! ?", "Who developed 8-Bit Rebellion! ?", "Who develops 8-Bit Rebellion! ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/8-Bit_Rebellion!> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed 8Realms ?", "Which agent develops 8Realms ?", "Who developed 8Realms ?", "Who develops 8Realms ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/8Realms> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed 9:05 ?", "Which agent develops 9:05 ?", "Who developed 9:05 ?", "Who develops 9:05 ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/9:05> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed 9 Elefants ?", "Which agent develops 9 Elefants ?", "Who developed 9 Elefants ?", "Who develops 9 Elefants ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/9_Elefants> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed A320 Airbus (video game) ?", "Which agent develops A320 Airbus (video game) ?", "Who developed A320 Airbus (video game) ?", "Who develops A320 Airbus (video game) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A320_Airbus_(video_game)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed ABC Sports Indy Racing ?", "Which agent develops ABC Sports Indy Racing ?", "Who developed ABC Sports Indy Racing ?", "Who develops ABC Sports Indy Racing ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ABC_Sports_Indy_Racing> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed ABPA Backgammon ?", "Which agent develops ABPA Backgammon ?", "Who developed ABPA Backgammon ?", "Who develops ABPA Backgammon ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ABPA_Backgammon> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed ACD/ChemSketch ?", "Which agent develops ACD/ChemSketch ?", "Who developed ACD/ChemSketch ?", "Who develops ACD/ChemSketch ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ACD/ChemSketch> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed ACIS ?", "Which agent develops ACIS ?", "Who developed ACIS ?", "Who develops ACIS ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ACIS> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed AD&D Masterpiece Collection ?", "Which agent develops AD&D Masterpiece Collection ?", "Who developed AD&D Masterpiece Collection ?", "Who develops AD&D Masterpiece Collection ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AD&D_Masterpiece_Collection> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed ADO.NET ?", "Which agent develops ADO.NET ?", "Who developed ADO.NET ?", "Who develops ADO.NET ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ADO.NET> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed ADX (file format) ?", "Which agent develops ADX (file format) ?", "Who developed ADX (file format) ?", "Who develops ADX (file format) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ADX_(file_format)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed AFL Evolution ?", "Which agent develops AFL Evolution ?", "Who developed AFL Evolution ?", "Who develops AFL Evolution ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AFL_Evolution> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed AFL Live 2 ?", "Which agent develops AFL Live 2 ?", "Who developed AFL Live 2 ?", "Who develops AFL Live 2 ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AFL_Live_2> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed AGON ?", "Which agent develops AGON ?", "Who developed AGON ?", "Who develops AGON ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AGON> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed AIMMS ?", "Which agent develops AIMMS ?", "Who developed AIMMS ?", "Who develops AIMMS ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AIMMS> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed AIM Phoneline ?", "Which agent develops AIM Phoneline ?", "Who developed AIM Phoneline ?", "Who develops AIM Phoneline ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AIM_Phoneline> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed AI War: Fleet Command ?", "Which agent develops AI War: Fleet Command ?", "Who developed AI War: Fleet Command ?", "Who develops AI War: Fleet Command ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AI_War:_Fleet_Command> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed ALL-IN-1 ?", "Which agent develops ALL-IN-1 ?", "Who developed ALL-IN-1 ?", "Who develops ALL-IN-1 ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ALL-IN-1> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed ALTRAN ?", "Which agent develops ALTRAN ?", "Who developed ALTRAN ?", "Who develops ALTRAN ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ALTRAN> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed AMAP ?", "Which agent develops AMAP ?", "Who developed AMAP ?", "Who develops AMAP ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AMAP> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed AMD 700 chipset series ?", "Which agent develops AMD 700 chipset series ?", "Who developed AMD 700 chipset series ?", "Who develops AMD 700 chipset series ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AMD_700_chipset_series> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed AMD CodeAnalyst ?", "Which agent develops AMD CodeAnalyst ?", "Who developed AMD CodeAnalyst ?", "Who develops AMD CodeAnalyst ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AMD_CodeAnalyst> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed AMPHORA ?", "Which agent develops AMPHORA ?", "Who developed AMPHORA ?", "Who develops AMPHORA ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AMPHORA> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed ANGLE (software) ?", "Which agent develops ANGLE (software) ?", "Who developed ANGLE (software) ?", "Who develops ANGLE (software) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ANGLE_(software)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed ANTIGONE ?", "Which agent develops ANTIGONE ?", "Who developed ANTIGONE ?", "Who develops ANTIGONE ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ANTIGONE> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed APB (1987 video game) ?", "Which agent develops APB (1987 video game) ?", "Who developed APB (1987 video game) ?", "Who develops APB (1987 video game) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/APB_(1987_video_game)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed AQUA@home ?", "Which agent develops AQUA@home ?", "Who developed AQUA@home ?", "Who develops AQUA@home ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AQUA@home> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed LovePlus ?", "Which agent develops LovePlus ?", "Who developed LovePlus ?", "Who develops LovePlus ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/LovePlus> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Love & Destroy ?", "Which agent develops Love & Destroy ?", "Who developed Love & Destroy ?", "Who develops Love & Destroy ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_&_Destroy> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Love & Lies ?", "Which agent develops Love & Lies ?", "Who developed Love & Lies ?", "Who develops Love & Lies ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_&_Lies> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Love Alarm ?", "Which agent develops Love Alarm ?", "Who developed Love Alarm ?", "Who develops Love Alarm ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Alarm> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Love Boat: The Next Wave ?", "Which agent develops Love Boat: The Next Wave ?", "Who developed Love Boat: The Next Wave ?", "Who develops Love Boat: The Next Wave ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Boat:_The_Next_Wave> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Love Live! School Idol Festival ?", "Which agent develops Love Live! School Idol Festival ?", "Who developed Love Live! School Idol Festival ?", "Who develops Love Live! School Idol Festival ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Live!_School_Idol_Festival> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Love Me India ?", "Which agent develops Love Me India ?", "Who developed Love Me India ?", "Who develops Love Me India ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Me_India> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Love Story (video game) ?", "Which agent develops Love Story (video game) ?", "Who developed Love Story (video game) ?", "Who develops Love Story (video game) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Story_(video_game)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Love and Berry: Dress Up and Dance! ?", "Which agent develops Love and Berry: Dress Up and Dance! ?", "Who developed Love and Berry: Dress Up and Dance! ?", "Who develops Love and Berry: Dress Up and Dance! ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_and_Berry:_Dress_Up_and_Dance!> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Love in the Moonlight ?", "Which agent develops Love in the Moonlight ?", "Who developed Love in the Moonlight ?", "Who develops Love in the Moonlight ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_in_the_Moonlight> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lovebooks Presents ?", "Which agent develops Lovebooks Presents ?", "Who developed Lovebooks Presents ?", "Who develops Lovebooks Presents ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lovebooks_Presents> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lovecraft Country (TV series) ?", "Which agent develops Lovecraft Country (TV series) ?", "Who developed Lovecraft Country (TV series) ?", "Who develops Lovecraft Country (TV series) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lovecraft_Country_(TV_series)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Low G Man: The Low Gravity Man ?", "Which agent develops Low G Man: The Low Gravity Man ?", "Who developed Low G Man: The Low Gravity Man ?", "Who develops Low G Man: The Low Gravity Man ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Low_G_Man:_The_Low_Gravity_Man> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lucha Libre AAA: Héroes del Ring ?", "Which agent develops Lucha Libre AAA: Héroes del Ring ?", "Who developed Lucha Libre AAA: Héroes del Ring ?", "Who develops Lucha Libre AAA: Héroes del Ring ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucha_Libre_AAA:_Héroes_del_Ring> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lucidchart ?", "Which agent develops Lucidchart ?", "Who developed Lucidchart ?", "Who develops Lucidchart ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucidchart> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lucidity (video game) ?", "Which agent develops Lucidity (video game) ?", "Who developed Lucidity (video game) ?", "Who develops Lucidity (video game) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucidity_(video_game)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lucidpress ?", "Which agent develops Lucidpress ?", "Who developed Lucidpress ?", "Who develops Lucidpress ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucidpress> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lucienne's Quest ?", "Which agent develops Lucienne's Quest ?", "Who developed Lucienne's Quest ?", "Who develops Lucienne's Quest ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucienne's_Quest> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lucifer (TV series) ?", "Which agent develops Lucifer (TV series) ?", "Who developed Lucifer (TV series) ?", "Who develops Lucifer (TV series) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucifer_(TV_series)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lucifox ?", "Which agent develops Lucifox ?", "Who developed Lucifox ?", "Who develops Lucifox ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucifox> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lucius (video game) ?", "Which agent develops Lucius (video game) ?", "Who developed Lucius (video game) ?", "Who develops Lucius (video game) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucius_(video_game)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lucky & Wild ?", "Which agent develops Lucky & Wild ?", "Who developed Lucky & Wild ?", "Who develops Lucky & Wild ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucky_&_Wild> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lucky 7 (TV series) ?", "Which agent develops Lucky 7 (TV series) ?", "Who developed Lucky 7 (TV series) ?", "Who develops Lucky 7 (TV series) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucky_7_(TV_series)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lucky Dime Caper ?", "Which agent develops Lucky Dime Caper ?", "Who developed Lucky Dime Caper ?", "Who develops Lucky Dime Caper ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucky_Dime_Caper> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lufia: Curse of the Sinistrals ?", "Which agent develops Lufia: Curse of the Sinistrals ?", "Who developed Lufia: Curse of the Sinistrals ?", "Who develops Lufia: Curse of the Sinistrals ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lufia:_Curse_of_the_Sinistrals> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lufia: The Legend Returns ?", "Which agent develops Lufia: The Legend Returns ?", "Who developed Lufia: The Legend Returns ?", "Who develops Lufia: The Legend Returns ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lufia:_The_Legend_Returns> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lufia & the Fortress of Doom ?", "Which agent develops Lufia & the Fortress of Doom ?", "Who developed Lufia & the Fortress of Doom ?", "Who develops Lufia & the Fortress of Doom ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lufia_&_the_Fortress_of_Doom> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lufia II: Rise of the Sinistrals ?", "Which agent develops Lufia II: Rise of the Sinistrals ?", "Who developed Lufia II: Rise of the Sinistrals ?", "Who develops Lufia II: Rise of the Sinistrals ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lufia_II:_Rise_of_the_Sinistrals> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Luftrausers ?", "Which agent develops Luftrausers ?", "Who developed Luftrausers ?", "Who develops Luftrausers ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luftrausers> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Luigi's Mansion ?", "Which agent develops Luigi's Mansion ?", "Who developed Luigi's Mansion ?", "Who develops Luigi's Mansion ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luigi's_Mansion> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Luigi's Mansion: Dark Moon ?", "Which agent develops Luigi's Mansion: Dark Moon ?", "Who developed Luigi's Mansion: Dark Moon ?", "Who develops Luigi's Mansion: Dark Moon ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luigi's_Mansion:_Dark_Moon> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Luigi's Mansion 3 ?", "Which agent develops Luigi's Mansion 3 ?", "Who developed Luigi's Mansion 3 ?", "Who develops Luigi's Mansion 3 ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luigi's_Mansion_3> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lula: The Sexy Empire ?", "Which agent develops Lula: The Sexy Empire ?", "Who developed Lula: The Sexy Empire ?", "Who develops Lula: The Sexy Empire ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lula:_The_Sexy_Empire> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lula (series) ?", "Which agent develops Lula (series) ?", "Who developed Lula (series) ?", "Who develops Lula (series) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lula_(series)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lula 3D ?", "Which agent develops Lula 3D ?", "Who developed Lula 3D ?", "Who develops Lula 3D ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lula_3D> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lumen (software) ?", "Which agent develops Lumen (software) ?", "Who developed Lumen (software) ?", "Who develops Lumen (software) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lumen_(software)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lumiere (skyscraper) ?", "Which agent develops Lumiere (skyscraper) ?", "Who developed Lumiere (skyscraper) ?", "Who develops Lumiere (skyscraper) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lumiere_(skyscraper)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lumines: Electronic Symphony ?", "Which agent develops Lumines: Electronic Symphony ?", "Who developed Lumines: Electronic Symphony ?", "Who develops Lumines: Electronic Symphony ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lumines:_Electronic_Symphony> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lumines: Puzzle Fusion ?", "Which agent develops Lumines: Puzzle Fusion ?", "Who developed Lumines: Puzzle Fusion ?", "Who develops Lumines: Puzzle Fusion ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lumines:_Puzzle_Fusion> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lumines II ?", "Which agent develops Lumines II ?", "Who developed Lumines II ?", "Who develops Lumines II ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lumines_II> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lumines Live! ?", "Which agent develops Lumines Live! ?", "Who developed Lumines Live! ?", "Who develops Lumines Live! ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lumines_Live!> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lumines Supernova ?", "Which agent develops Lumines Supernova ?", "Who developed Lumines Supernova ?", "Who develops Lumines Supernova ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lumines_Supernova> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Luminous Arc ?", "Which agent develops Luminous Arc ?", "Who developed Luminous Arc ?", "Who develops Luminous Arc ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luminous_Arc> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Luminous Arc 2 ?", "Which agent develops Luminous Arc 2 ?", "Who developed Luminous Arc 2 ?", "Who develops Luminous Arc 2 ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luminous_Arc_2> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Luminous Arc 3 ?", "Which agent develops Luminous Arc 3 ?", "Who developed Luminous Arc 3 ?", "Who develops Luminous Arc 3 ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luminous_Arc_3> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Luminous Arc Infinity ?", "Which agent develops Luminous Arc Infinity ?", "Who developed Luminous Arc Infinity ?", "Who develops Luminous Arc Infinity ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luminous_Arc_Infinity> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Luminous Engine ?", "Which agent develops Luminous Engine ?", "Who developed Luminous Engine ?", "Who develops Luminous Engine ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luminous_Engine> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Luna Online ?", "Which agent develops Luna Online ?", "Who developed Luna Online ?", "Who develops Luna Online ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luna_Online> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lunacy (video game) ?", "Which agent develops Lunacy (video game) ?", "Who developed Lunacy (video game) ?", "Who develops Lunacy (video game) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lunacy_(video_game)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lunar: Eternal Blue ?", "Which agent develops Lunar: Eternal Blue ?", "Who developed Lunar: Eternal Blue ?", "Who develops Lunar: Eternal Blue ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lunar:_Eternal_Blue> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lunar: Sanposuru Gakuen ?", "Which agent develops Lunar: Sanposuru Gakuen ?", "Who developed Lunar: Sanposuru Gakuen ?", "Who develops Lunar: Sanposuru Gakuen ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lunar:_Sanposuru_Gakuen> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lunar: Silver Star Harmony ?", "Which agent develops Lunar: Silver Star Harmony ?", "Who developed Lunar: Silver Star Harmony ?", "Who develops Lunar: Silver Star Harmony ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lunar:_Silver_Star_Harmony> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lunar: Silver Star Story Complete ?", "Which agent develops Lunar: Silver Star Story Complete ?", "Who developed Lunar: Silver Star Story Complete ?", "Who develops Lunar: Silver Star Story Complete ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lunar:_Silver_Star_Story_Complete> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lunar: The Silver Star ?", "Which agent develops Lunar: The Silver Star ?", "Who developed Lunar: The Silver Star ?", "Who develops Lunar: The Silver Star ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lunar:_The_Silver_Star> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lunar Jetman ?", "Which agent develops Lunar Jetman ?", "Who developed Lunar Jetman ?", "Who develops Lunar Jetman ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lunar_Jetman> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lunar Knights ?", "Which agent develops Lunar Knights ?", "Who developed Lunar Knights ?", "Who develops Lunar Knights ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lunar_Knights> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lunar Lander (1979 video game) ?", "Which agent develops Lunar Lander (1979 video game) ?", "Who developed Lunar Lander (1979 video game) ?", "Who develops Lunar Lander (1979 video game) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lunar_Lander_(1979_video_game)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lunar Pool ?", "Which agent develops Lunar Pool ?", "Who developed Lunar Pool ?", "Who develops Lunar Pool ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lunar_Pool> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lunch Break (Philippine TV program) ?", "Which agent develops Lunch Break (Philippine TV program) ?", "Who developed Lunch Break (Philippine TV program) ?", "Who develops Lunch Break (Philippine TV program) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lunch_Break_(Philippine_TV_program)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lunicus ?", "Which agent develops Lunicus ?", "Who developed Lunicus ?", "Who develops Lunicus ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lunicus> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lupin (Philippine TV series) ?", "Which agent develops Lupin (Philippine TV series) ?", "Who developed Lupin (Philippine TV series) ?", "Who develops Lupin (Philippine TV series) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lupin_(Philippine_TV_series)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lupin the 3rd: Treasure of the Sorcerer King ?", "Which agent develops Lupin the 3rd: Treasure of the Sorcerer King ?", "Who developed Lupin the 3rd: Treasure of the Sorcerer King ?", "Who develops Lupin the 3rd: Treasure of the Sorcerer King ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lupin_the_3rd:_Treasure_of_the_Sorcerer_King> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lupin the Third: Lupin Is Dead, Zenigata Is in Love ?", "Which agent develops Lupin the Third: Lupin Is Dead, Zenigata Is in Love ?", "Who developed Lupin the Third: Lupin Is Dead, Zenigata Is in Love ?", "Who develops Lupin the Third: Lupin Is Dead, Zenigata Is in Love ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lupin_the_Third:_Lupin_Is_Dead,_Zenigata_Is_in_Love> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Lutris ?", "Which agent develops Lutris ?", "Who developed Lutris ?", "Who develops Lutris ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lutris> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed Luxor: Quest for the Afterlife ?", "Which agent develops Luxor: Quest for the Afterlife ?", "Who developed Luxor: Quest for the Afterlife ?", "Who develops Luxor: Quest for the Afterlife ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luxor:_Quest_for_the_Afterlife> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited 1949 in fine arts of the Soviet Union ?", "What exhibits 1949 in fine arts of the Soviet Union ?", "Which museum exhibited 1949 in fine arts of the Soviet Union ?", "Which museum exhibits 1949 in fine arts of the Soviet Union ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1949_in_fine_arts_of_the_Soviet_Union> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Love & Loss ?", "What exhibits Love & Loss ?", "Which museum exhibited Love & Loss ?", "Which museum exhibits Love & Loss ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_&_Loss> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Love (Indianapolis) ?", "What exhibits Love (Indianapolis) ?", "Which museum exhibited Love (Indianapolis) ?", "Which museum exhibits Love (Indianapolis) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_(Indianapolis)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Lovers in a Park ?", "What exhibits Lovers in a Park ?", "Which museum exhibited Lovers in a Park ?", "Which museum exhibits Lovers in a Park ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lovers_in_a_Park> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Lucifer (Stuck) ?", "What exhibits Lucifer (Stuck) ?", "Which museum exhibited Lucifer (Stuck) ?", "Which museum exhibits Lucifer (Stuck) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucifer_(Stuck)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Ludwig II (sculpture) ?", "What exhibits Ludwig II (sculpture) ?", "Which museum exhibited Ludwig II (sculpture) ?", "Which museum exhibits Ludwig II (sculpture) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ludwig_II_(sculpture)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Luminary (Laramore) ?", "What exhibits Luminary (Laramore) ?", "Which museum exhibited Luminary (Laramore) ?", "Which museum exhibits Luminary (Laramore) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luminary_(Laramore)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Luncheon of the Boating Party ?", "What exhibits Luncheon of the Boating Party ?", "Which museum exhibited Luncheon of the Boating Party ?", "Which museum exhibits Luncheon of the Boating Party ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luncheon_of_the_Boating_Party> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Luxembourg Gardens, Paris ?", "What exhibits Luxembourg Gardens, Paris ?", "Which museum exhibited Luxembourg Gardens, Paris ?", "Which museum exhibits Luxembourg Gardens, Paris ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luxembourg_Gardens,_Paris> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Machinery (Charles Demuth) ?", "What exhibits Machinery (Charles Demuth) ?", "Which museum exhibited Machinery (Charles Demuth) ?", "Which museum exhibits Machinery (Charles Demuth) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Machinery_(Charles_Demuth)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Macomb's Dam Bridge (painting) ?", "What exhibits Macomb's Dam Bridge (painting) ?", "Which museum exhibited Macomb's Dam Bridge (painting) ?", "Which museum exhibits Macomb's Dam Bridge (painting) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Macomb's_Dam_Bridge_(painting)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Madonna Litta ?", "What exhibits Madonna Litta ?", "Which museum exhibited Madonna Litta ?", "Which museum exhibits Madonna Litta ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Madonna_Litta> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Madonna and Child (Bellini, Detroit) ?", "What exhibits Madonna and Child (Bellini, Detroit) ?", "Which museum exhibited Madonna and Child (Bellini, Detroit) ?", "Which museum exhibits Madonna and Child (Bellini, Detroit) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Madonna_and_Child_(Bellini,_Detroit)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Madonna and Child (Bellini, Rome) ?", "What exhibits Madonna and Child (Bellini, Rome) ?", "Which museum exhibited Madonna and Child (Bellini, Rome) ?", "Which museum exhibits Madonna and Child (Bellini, Rome) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Madonna_and_Child_(Bellini,_Rome)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Madonna and Child with Four Saints and Donor ?", "What exhibits Madonna and Child with Four Saints and Donor ?", "Which museum exhibited Madonna and Child with Four Saints and Donor ?", "Which museum exhibits Madonna and Child with Four Saints and Donor ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Madonna_and_Child_with_Four_Saints_and_Donor> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Madonna and Child with the Book ?", "What exhibits Madonna and Child with the Book ?", "Which museum exhibited Madonna and Child with the Book ?", "Which museum exhibits Madonna and Child with the Book ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Madonna_and_Child_with_the_Book> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Madonna of Bruges ?", "What exhibits Madonna of Bruges ?", "Which museum exhibited Madonna of Bruges ?", "Which museum exhibits Madonna of Bruges ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Madonna_of_Bruges> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Madonna of the Yarnwinder ?", "What exhibits Madonna of the Yarnwinder ?", "Which museum exhibited Madonna of the Yarnwinder ?", "Which museum exhibits Madonna of the Yarnwinder ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Madonna_of_the_Yarnwinder> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Madonna on a Crescent Moon in Hortus Conclusus ?", "What exhibits Madonna on a Crescent Moon in Hortus Conclusus ?", "Which museum exhibited Madonna on a Crescent Moon in Hortus Conclusus ?", "Which museum exhibits Madonna on a Crescent Moon in Hortus Conclusus ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Madonna_on_a_Crescent_Moon_in_Hortus_Conclusus> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Madonna with Angel ?", "What exhibits Madonna with Angel ?", "Which museum exhibited Madonna with Angel ?", "Which museum exhibits Madonna with Angel ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Madonna_with_Angel> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Madonna with Machine Gun ?", "What exhibits Madonna with Machine Gun ?", "Which museum exhibited Madonna with Machine Gun ?", "Which museum exhibits Madonna with Machine Gun ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Madonna_with_Machine_Gun> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Madonnina (statue) ?", "What exhibits Madonnina (statue) ?", "Which museum exhibited Madonnina (statue) ?", "Which museum exhibits Madonnina (statue) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Madonnina_(statue)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Madre della Consolazione ?", "What exhibits Madre della Consolazione ?", "Which museum exhibited Madre della Consolazione ?", "Which museum exhibits Madre della Consolazione ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Madre_della_Consolazione> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Maffet Ledger ?", "What exhibits Maffet Ledger ?", "Which museum exhibited Maffet Ledger ?", "Which museum exhibits Maffet Ledger ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Maffet_Ledger> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Mahatma Gandhi Memorial (Milwaukee) ?", "What exhibits Mahatma Gandhi Memorial (Milwaukee) ?", "Which museum exhibited Mahatma Gandhi Memorial (Milwaukee) ?", "Which museum exhibits Mahatma Gandhi Memorial (Milwaukee) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mahatma_Gandhi_Memorial_(Milwaukee)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Carp and Pine ?", "What exhibits Carp and Pine ?", "Which museum exhibited Carp and Pine ?", "Which museum exhibits Carp and Pine ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Carp_and_Pine> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Caspar David Friedrich in his Studio ?", "What exhibits Caspar David Friedrich in his Studio ?", "Which museum exhibited Caspar David Friedrich in his Studio ?", "Which museum exhibits Caspar David Friedrich in his Studio ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Caspar_David_Friedrich_in_his_Studio> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Castine Harbor and Town ?", "What exhibits Castine Harbor and Town ?", "Which museum exhibited Castine Harbor and Town ?", "Which museum exhibits Castine Harbor and Town ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Castine_Harbor_and_Town> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Castor and Pollux (Prado) ?", "What exhibits Castor and Pollux (Prado) ?", "Which museum exhibited Castor and Pollux (Prado) ?", "Which museum exhibits Castor and Pollux (Prado) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Castor_and_Pollux_(Prado)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Catania and Mount Etna ?", "What exhibits Catania and Mount Etna ?", "Which museum exhibited Catania and Mount Etna ?", "Which museum exhibits Catania and Mount Etna ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Catania_and_Mount_Etna> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Catherine Brass Yates ?", "What exhibits Catherine Brass Yates ?", "Which museum exhibited Catherine Brass Yates ?", "Which museum exhibits Catherine Brass Yates ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Catherine_Brass_Yates> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Constellations (Miró) ?", "What exhibits Constellations (Miró) ?", "Which museum exhibited Constellations (Miró) ?", "Which museum exhibits Constellations (Miró) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Constellations_(Miró)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Construction Fence (Keith Haring) ?", "What exhibits Construction Fence (Keith Haring) ?", "Which museum exhibited Construction Fence (Keith Haring) ?", "Which museum exhibits Construction Fence (Keith Haring) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Construction_Fence_(Keith_Haring)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Consulting the Oracle ?", "What exhibits Consulting the Oracle ?", "Which museum exhibited Consulting the Oracle ?", "Which museum exhibits Consulting the Oracle ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Consulting_the_Oracle> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Continuing the Conversation ?", "What exhibits Continuing the Conversation ?", "Which museum exhibited Continuing the Conversation ?", "Which museum exhibits Continuing the Conversation ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Continuing_the_Conversation> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Convent Thoughts ?", "What exhibits Convent Thoughts ?", "Which museum exhibited Convent Thoughts ?", "Which museum exhibits Convent Thoughts ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Convent_Thoughts> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Convergence (Pollock) ?", "What exhibits Convergence (Pollock) ?", "Which museum exhibited Convergence (Pollock) ?", "Which museum exhibits Convergence (Pollock) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Convergence_(Pollock)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Conversion of Paul (Bruegel) ?", "What exhibits Conversion of Paul (Bruegel) ?", "Which museum exhibited Conversion of Paul (Bruegel) ?", "Which museum exhibits Conversion of Paul (Bruegel) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Conversion_of_Paul_(Bruegel)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Conversion on the Way to Damascus ?", "What exhibits Conversion on the Way to Damascus ?", "Which museum exhibited Conversion on the Way to Damascus ?", "Which museum exhibits Conversion on the Way to Damascus ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Conversion_on_the_Way_to_Damascus> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Copies by Vincent van Gogh ?", "What exhibits Copies by Vincent van Gogh ?", "Which museum exhibited Copies by Vincent van Gogh ?", "Which museum exhibits Copies by Vincent van Gogh ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Copies_by_Vincent_van_Gogh> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Copy of Lute Player by Frans Hals ?", "What exhibits Copy of Lute Player by Frans Hals ?", "Which museum exhibited Copy of Lute Player by Frans Hals ?", "Which museum exhibits Copy of Lute Player by Frans Hals ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Copy_of_Lute_Player_by_Frans_Hals> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Coresus Sacrificing Himself to Save Callirhoe ?", "What exhibits Coresus Sacrificing Himself to Save Callirhoe ?", "Which museum exhibited Coresus Sacrificing Himself to Save Callirhoe ?", "Which museum exhibits Coresus Sacrificing Himself to Save Callirhoe ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Coresus_Sacrificing_Himself_to_Save_Callirhoe> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Cornard Wood, near Sudbury, Suffolk ?", "What exhibits Cornard Wood, near Sudbury, Suffolk ?", "Which museum exhibited Cornard Wood, near Sudbury, Suffolk ?", "Which museum exhibits Cornard Wood, near Sudbury, Suffolk ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Cornard_Wood,_near_Sudbury,_Suffolk> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Cornelis Guldewagen ?", "What exhibits Cornelis Guldewagen ?", "Which museum exhibited Cornelis Guldewagen ?", "Which museum exhibits Cornelis Guldewagen ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Cornelis_Guldewagen> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Cornflowers (painting) ?", "What exhibits Cornflowers (painting) ?", "Which museum exhibited Cornflowers (painting) ?", "Which museum exhibits Cornflowers (painting) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Cornflowers_(painting)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Coronation of Saint Rosalia ?", "What exhibits Coronation of Saint Rosalia ?", "Which museum exhibited Coronation of Saint Rosalia ?", "Which museum exhibits Coronation of Saint Rosalia ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Coronation_of_Saint_Rosalia> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Coronation of the Virgin (Filippo Lippi) ?", "What exhibits Coronation of the Virgin (Filippo Lippi) ?", "Which museum exhibited Coronation of the Virgin (Filippo Lippi) ?", "Which museum exhibits Coronation of the Virgin (Filippo Lippi) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Coronation_of_the_Virgin_(Filippo_Lippi)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Coronation of the Virgin (Fra Angelico, Louvre) ?", "What exhibits Coronation of the Virgin (Fra Angelico, Louvre) ?", "Which museum exhibited Coronation of the Virgin (Fra Angelico, Louvre) ?", "Which museum exhibits Coronation of the Virgin (Fra Angelico, Louvre) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Coronation_of_the_Virgin_(Fra_Angelico,_Louvre)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Coronation of the Virgin (Fra Angelico, Uffizi) ?", "What exhibits Coronation of the Virgin (Fra Angelico, Uffizi) ?", "Which museum exhibited Coronation of the Virgin (Fra Angelico, Uffizi) ?", "Which museum exhibits Coronation of the Virgin (Fra Angelico, Uffizi) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Coronation_of_the_Virgin_(Fra_Angelico,_Uffizi)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Coronation of the Virgin (Lorenzo Monaco) ?", "What exhibits Coronation of the Virgin (Lorenzo Monaco) ?", "Which museum exhibited Coronation of the Virgin (Lorenzo Monaco) ?", "Which museum exhibits Coronation of the Virgin (Lorenzo Monaco) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Coronation_of_the_Virgin_(Lorenzo_Monaco)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Coronation of the Virgin (Velázquez) ?", "What exhibits Coronation of the Virgin (Velázquez) ?", "Which museum exhibited Coronation of the Virgin (Velázquez) ?", "Which museum exhibits Coronation of the Virgin (Velázquez) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Coronation_of_the_Virgin_(Velázquez)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Ugolino and His Sons (Rodin) ?", "What exhibits Ugolino and His Sons (Rodin) ?", "Which museum exhibited Ugolino and His Sons (Rodin) ?", "Which museum exhibits Ugolino and His Sons (Rodin) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ugolino_and_His_Sons_(Rodin)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Ulysses and the Sirens (Draper) ?", "What exhibits Ulysses and the Sirens (Draper) ?", "Which museum exhibited Ulysses and the Sirens (Draper) ?", "Which museum exhibits Ulysses and the Sirens (Draper) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ulysses_and_the_Sirens_(Draper)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Uncle Tom and Little Eva (painting) ?", "What exhibits Uncle Tom and Little Eva (painting) ?", "Which museum exhibited Uncle Tom and Little Eva (painting) ?", "Which museum exhibits Uncle Tom and Little Eva (painting) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Uncle_Tom_and_Little_Eva_(painting)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Unfolding (sculpture) ?", "What exhibits Unfolding (sculpture) ?", "Which museum exhibited Unfolding (sculpture) ?", "Which museum exhibits Unfolding (sculpture) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Unfolding_(sculpture)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Union of Lublin (painting) ?", "What exhibits Union of Lublin (painting) ?", "Which museum exhibited Union of Lublin (painting) ?", "Which museum exhibits Union of Lublin (painting) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Union_of_Lublin_(painting)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Unit 88-9 (Kiyomizu Masahiro) ?", "What exhibits Unit 88-9 (Kiyomizu Masahiro) ?", "Which museum exhibited Unit 88-9 (Kiyomizu Masahiro) ?", "Which museum exhibits Unit 88-9 (Kiyomizu Masahiro) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Unit_88-9_(Kiyomizu_Masahiro)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Untitled (Perfect Lovers) ?", "What exhibits Untitled (Perfect Lovers) ?", "Which museum exhibited Untitled (Perfect Lovers) ?", "Which museum exhibits Untitled (Perfect Lovers) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Untitled_(Perfect_Lovers)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Untitled (Richard Fleischner artwork at Alewife station) ?", "What exhibits Untitled (Richard Fleischner artwork at Alewife station) ?", "Which museum exhibited Untitled (Richard Fleischner artwork at Alewife station) ?", "Which museum exhibits Untitled (Richard Fleischner artwork at Alewife station) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Untitled_(Richard_Fleischner_artwork_at_Alewife_station)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Untitled (Rosati) ?", "What exhibits Untitled (Rosati) ?", "Which museum exhibited Untitled (Rosati) ?", "Which museum exhibits Untitled (Rosati) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Untitled_(Rosati)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Untitled (Shapiro) ?", "What exhibits Untitled (Shapiro) ?", "Which museum exhibited Untitled (Shapiro) ?", "Which museum exhibits Untitled (Shapiro) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Untitled_(Shapiro)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Untitled 77 (print) ?", "What exhibits Untitled 77 (print) ?", "Which museum exhibited Untitled 77 (print) ?", "Which museum exhibits Untitled 77 (print) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Untitled_77_(print)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Untitled 78 (print) ?", "What exhibits Untitled 78 (print) ?", "Which museum exhibited Untitled 78 (print) ?", "Which museum exhibits Untitled 78 (print) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Untitled_78_(print)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Vahine no te vi ?", "What exhibits Vahine no te vi ?", "Which museum exhibited Vahine no te vi ?", "Which museum exhibits Vahine no te vi ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Vahine_no_te_vi> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Vaillancourt Fountain ?", "What exhibits Vaillancourt Fountain ?", "Which museum exhibited Vaillancourt Fountain ?", "Which museum exhibits Vaillancourt Fountain ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Vaillancourt_Fountain> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Values of Civilization (Doyle) ?", "What exhibits Values of Civilization (Doyle) ?", "Which museum exhibited Values of Civilization (Doyle) ?", "Which museum exhibits Values of Civilization (Doyle) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Values_of_Civilization_(Doyle)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Van Gogh's family in his art ?", "What exhibits Van Gogh's family in his art ?", "Which museum exhibited Van Gogh's family in his art ?", "Which museum exhibits Van Gogh's family in his art ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Van_Gogh's_family_in_his_art> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Vault (sculpture) ?", "What exhibits Vault (sculpture) ?", "Which museum exhibited Vault (sculpture) ?", "Which museum exhibits Vault (sculpture) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Vault_(sculpture)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Vegetation (quilt) ?", "What exhibits Vegetation (quilt) ?", "Which museum exhibited Vegetation (quilt) ?", "Which museum exhibits Vegetation (quilt) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Vegetation_(quilt)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Veiled Christ ?", "What exhibits Veiled Christ ?", "Which museum exhibited Veiled Christ ?", "Which museum exhibits Veiled Christ ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Veiled_Christ> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Venice, from the Porch of Madonna della Salute ?", "What exhibits Venice, from the Porch of Madonna della Salute ?", "Which museum exhibited Venice, from the Porch of Madonna della Salute ?", "Which museum exhibits Venice, from the Porch of Madonna della Salute ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Venice,_from_the_Porch_of_Madonna_della_Salute> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Venus and Amor ?", "What exhibits Venus and Amor ?", "Which museum exhibited Venus and Amor ?", "Which museum exhibits Venus and Amor ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Venus_and_Amor> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Venus de Milo ?", "What exhibits Venus de Milo ?", "Which museum exhibited Venus de Milo ?", "Which museum exhibits Venus de Milo ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Venus_de_Milo> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Venus of Urbino ?", "What exhibits Venus of Urbino ?", "Which museum exhibited Venus of Urbino ?", "Which museum exhibits Venus of Urbino ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Venus_of_Urbino> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Vertumnus and Pomona (Melzi) ?", "What exhibits Vertumnus and Pomona (Melzi) ?", "Which museum exhibited Vertumnus and Pomona (Melzi) ?", "Which museum exhibits Vertumnus and Pomona (Melzi) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Vertumnus_and_Pomona_(Melzi)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Cupid Making His Bow ?", "What exhibits Cupid Making His Bow ?", "Which museum exhibited Cupid Making His Bow ?", "Which museum exhibits Cupid Making His Bow ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Cupid_Making_His_Bow> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Cupid Untying the Zone of Venus ?", "What exhibits Cupid Untying the Zone of Venus ?", "Which museum exhibited Cupid Untying the Zone of Venus ?", "Which museum exhibits Cupid Untying the Zone of Venus ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Cupid_Untying_the_Zone_of_Venus> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Cutting the Stone ?", "What exhibits Cutting the Stone ?", "Which museum exhibited Cutting the Stone ?", "Which museum exhibits Cutting the Stone ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Cutting_the_Stone> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Cypress Trees ?", "What exhibits Cypress Trees ?", "Which museum exhibited Cypress Trees ?", "Which museum exhibits Cypress Trees ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Cypress_Trees> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Cypresses (Metropolitan Museum of Art) ?", "What exhibits Cypresses (Metropolitan Museum of Art) ?", "Which museum exhibited Cypresses (Metropolitan Museum of Art) ?", "Which museum exhibits Cypresses (Metropolitan Museum of Art) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Cypresses_(Metropolitan_Museum_of_Art)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Côte des Bœufs at L'Hermitage ?", "What exhibits Côte des Bœufs at L'Hermitage ?", "Which museum exhibited Côte des Bœufs at L'Hermitage ?", "Which museum exhibits Côte des Bœufs at L'Hermitage ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Côte_des_Bœufs_at_L'Hermitage> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited DC Waterfront, Maine Avenue ?", "What exhibits DC Waterfront, Maine Avenue ?", "Which museum exhibited DC Waterfront, Maine Avenue ?", "Which museum exhibits DC Waterfront, Maine Avenue ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/DC_Waterfront,_Maine_Avenue> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Daisy Bates at Ooldea ?", "What exhibits Daisy Bates at Ooldea ?", "Which museum exhibited Daisy Bates at Ooldea ?", "Which museum exhibits Daisy Bates at Ooldea ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Daisy_Bates_at_Ooldea> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Portrait of Georgiana, Duchess of Devonshire ?", "What exhibits Portrait of Georgiana, Duchess of Devonshire ?", "Which museum exhibited Portrait of Georgiana, Duchess of Devonshire ?", "Which museum exhibits Portrait of Georgiana, Duchess of Devonshire ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Portrait_of_Georgiana,_Duchess_of_Devonshire> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Portrait of Madame Récamier ?", "What exhibits Portrait of Madame Récamier ?", "Which museum exhibited Portrait of Madame Récamier ?", "Which museum exhibits Portrait of Madame Récamier ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Portrait_of_Madame_Récamier> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Portrait of the Artist Holding a Thistle ?", "What exhibits Portrait of the Artist Holding a Thistle ?", "Which museum exhibited Portrait of the Artist Holding a Thistle ?", "Which museum exhibits Portrait of the Artist Holding a Thistle ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Portrait_of_the_Artist_Holding_a_Thistle> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Saint Apollonia (Zurbarán) ?", "What exhibits Saint Apollonia (Zurbarán) ?", "Which museum exhibited Saint Apollonia (Zurbarán) ?", "Which museum exhibits Saint Apollonia (Zurbarán) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Saint_Apollonia_(Zurbarán)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Sermon of Piotr Skarga ?", "What exhibits Sermon of Piotr Skarga ?", "Which museum exhibited Sermon of Piotr Skarga ?", "Which museum exhibits Sermon of Piotr Skarga ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Sermon_of_Piotr_Skarga> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited The Garden of Pan ?", "What exhibits The Garden of Pan ?", "Which museum exhibited The Garden of Pan ?", "Which museum exhibits The Garden of Pan ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Garden_of_Pan> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited The Merciful Knight ?", "What exhibits The Merciful Knight ?", "Which museum exhibited The Merciful Knight ?", "Which museum exhibits The Merciful Knight ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Merciful_Knight> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited The Sermon of St. Stephen (Carpaccio) ?", "What exhibits The Sermon of St. Stephen (Carpaccio) ?", "Which museum exhibited The Sermon of St. Stephen (Carpaccio) ?", "Which museum exhibits The Sermon of St. Stephen (Carpaccio) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Sermon_of_St._Stephen_(Carpaccio)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited The Three Ages of Man (Titian) ?", "What exhibits The Three Ages of Man (Titian) ?", "Which museum exhibited The Three Ages of Man (Titian) ?", "Which museum exhibits The Three Ages of Man (Titian) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Three_Ages_of_Man_(Titian)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Zadar Polyptych ?", "What exhibits Zadar Polyptych ?", "Which museum exhibited Zadar Polyptych ?", "Which museum exhibits Zadar Polyptych ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Zadar_Polyptych> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Zawieszenie dzwonu Zygmunta ?", "What exhibits Zawieszenie dzwonu Zygmunta ?", "Which museum exhibited Zawieszenie dzwonu Zygmunta ?", "Which museum exhibits Zawieszenie dzwonu Zygmunta ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Zawieszenie_dzwonu_Zygmunta> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Little Blue Horse ?", "What exhibits Little Blue Horse ?", "Which museum exhibited Little Blue Horse ?", "Which museum exhibits Little Blue Horse ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Little_Blue_Horse> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited Madonna del Bordone ?", "What exhibits Madonna del Bordone ?", "Which museum exhibited Madonna del Bordone ?", "Which museum exhibits Madonna del Bordone ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Madonna_del_Bordone> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited The Beauty ?", "What exhibits The Beauty ?", "Which museum exhibited The Beauty ?", "Which museum exhibits The Beauty ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Beauty> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited The Beloved (Rossetti painting) ?", "What exhibits The Beloved (Rossetti painting) ?", "Which museum exhibited The Beloved (Rossetti painting) ?", "Which museum exhibits The Beloved (Rossetti painting) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Beloved_(Rossetti_painting)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited The Blood Compact ?", "What exhibits The Blood Compact ?", "Which museum exhibited The Blood Compact ?", "Which museum exhibits The Blood Compact ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Blood_Compact> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited We Come in Peace ?", "What exhibits We Come in Peace ?", "Which museum exhibited We Come in Peace ?", "Which museum exhibits We Come in Peace ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/We_Come_in_Peace> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1912 in film ?", "Who married 1912 in film ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1912_in_film>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1914 Birmingham West by-election ?", "Who married 1914 Birmingham West by-election ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1914_Birmingham_West_by-election>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1914 in film ?", "Who married 1914 in film ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1914_in_film>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1917 in film ?", "Who married 1917 in film ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1917_in_film>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1918 St George's, Hanover Square by-election ?", "Who married 1918 St George's, Hanover Square by-election ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1918_St_George's,_Hanover_Square_by-election>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1919 Wellington City mayoral election ?", "Who married 1919 Wellington City mayoral election ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1919_Wellington_City_mayoral_election>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1928 United States Senate special election in Illinois ?", "Who married 1928 United States Senate special election in Illinois ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1928_United_States_Senate_special_election_in_Illinois>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1942 in film ?", "Who married 1942 in film ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1942_in_film>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1943 in film ?", "Who married 1943 in film ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1943_in_film>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1944 Wellington City mayoral election ?", "Who married 1944 Wellington City mayoral election ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1944_Wellington_City_mayoral_election>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1945 in film ?", "Who married 1945 in film ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1945_in_film>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1947 in film ?", "Who married 1947 in film ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1947_in_film>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1948 Armagh by-election ?", "Who married 1948 Armagh by-election ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1948_Armagh_by-election>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1949 in music ?", "Who married 1949 in music ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1949_in_music>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1950 NFL season ?", "Who married 1950 NFL season ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1950_NFL_season>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1950 in film ?", "Who married 1950 in film ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1950_in_film>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1951 in film ?", "Who married 1951 in film ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1951_in_film>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1953 in film ?", "Who married 1953 in film ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1953_in_film>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1954 Bournemouth West by-election ?", "Who married 1954 Bournemouth West by-election ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1954_Bournemouth_West_by-election>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1955 Brazilian presidential election ?", "Who married 1955 Brazilian presidential election ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1955_Brazilian_presidential_election>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1955 in television ?", "Who married 1955 in television ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1955_in_television>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1957 in film ?", "Who married 1957 in film ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1957_in_film>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1959 in film ?", "Who married 1959 in film ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1959_in_film>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1959 in television ?", "Who married 1959 in television ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1959_in_television>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1960 Formula One season ?", "Who married 1960 Formula One season ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1960_Formula_One_season>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1960 NFL season ?", "Who married 1960 NFL season ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1960_NFL_season>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1960 New York Film Critics Circle Awards ?", "Who married 1960 New York Film Critics Circle Awards ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1960_New_York_Film_Critics_Circle_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 1960 in film ?", "Who married 1960 in film ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1960_in_film>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 2013 Venezuelan presidential election ?", "Who married 2013 Venezuelan presidential election ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/2013_Venezuelan_presidential_election>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 2014 Indian Rajya Sabha elections ?", "Who married 2014 Indian Rajya Sabha elections ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/2014_Indian_Rajya_Sabha_elections>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 2014 Michigan gubernatorial election ?", "Who married 2014 Michigan gubernatorial election ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/2014_Michigan_gubernatorial_election>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 2014 Ontario general election ?", "Who married 2014 Ontario general election ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/2014_Ontario_general_election>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 2014 United States House of Representatives elections in California ?", "Who married 2014 United States House of Representatives elections in California ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/2014_United_States_House_of_Representatives_elections_in_California>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 2014 United States Senate election in Arkansas ?", "Who married 2014 United States Senate election in Arkansas ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/2014_United_States_Senate_election_in_Arkansas>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 2014 United States Senate election in Mississippi ?", "Who married 2014 United States Senate election in Mississippi ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/2014_United_States_Senate_election_in_Mississippi>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 2014 WNBA Finals ?", "Who married 2014 WNBA Finals ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/2014_WNBA_Finals>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 2016 North Dakota gubernatorial election ?", "Who married 2016 North Dakota gubernatorial election ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/2016_North_Dakota_gubernatorial_election>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 2016 Richmond, Virginia mayoral election ?", "Who married 2016 Richmond, Virginia mayoral election ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/2016_Richmond,_Virginia_mayoral_election>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 2016 Summer Olympics ?", "Who married 2016 Summer Olympics ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/2016_Summer_Olympics>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 2017 United Kingdom general election ?", "Who married 2017 United Kingdom general election ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/2017_United_Kingdom_general_election>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 2018 Billboard Music Awards ?", "Who married 2018 Billboard Music Awards ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/2018_Billboard_Music_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 5th Annual Grammy Awards ?", "Who married 5th Annual Grammy Awards ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/5th_Annual_Grammy_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 61st Academy Awards ?", "Who married 61st Academy Awards ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/61st_Academy_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 63rd Golden Globe Awards ?", "Who married 63rd Golden Globe Awards ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/63rd_Golden_Globe_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 64th Academy Awards ?", "Who married 64th Academy Awards ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/64th_Academy_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 66th Academy Awards ?", "Who married 66th Academy Awards ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/66th_Academy_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 67th Golden Globe Awards ?", "Who married 67th Golden Globe Awards ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/67th_Golden_Globe_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 68th Academy Awards ?", "Who married 68th Academy Awards ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/68th_Academy_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 69th New York State Legislature ?", "Who married 69th New York State Legislature ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/69th_New_York_State_Legislature>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 70th Primetime Emmy Awards ?", "Who married 70th Primetime Emmy Awards ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/70th_Primetime_Emmy_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 71st Primetime Emmy Awards ?", "Who married 71st Primetime Emmy Awards ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/71st_Primetime_Emmy_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 72nd Academy Awards ?", "Who married 72nd Academy Awards ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/72nd_Academy_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 72nd New York State Legislature ?", "Who married 72nd New York State Legislature ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/72nd_New_York_State_Legislature>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 76th Academy Awards ?", "Who married 76th Academy Awards ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/76th_Academy_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 78th Academy Awards ?", "Who married 78th Academy Awards ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/78th_Academy_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 88th Academy Awards ?", "Who married 88th Academy Awards ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/88th_Academy_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 8th Primetime Emmy Awards ?", "Who married 8th Primetime Emmy Awards ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/8th_Primetime_Emmy_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married 9th Academy Awards ?", "Who married 9th Academy Awards ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/9th_Academy_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married A. D. Peters ?", "Who married A. D. Peters ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/A._D._Peters>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married A. L. Raghavan ?", "Who married A. L. Raghavan ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/A._L._Raghavan>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married A. Ronald Button ?", "Who married A. Ronald Button ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/A._Ronald_Button>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married A. Vijayaraghavan ?", "Who married A. Vijayaraghavan ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/A._Vijayaraghavan>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married A. W. Martin ?", "Who married A. W. Martin ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/A._W._Martin>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Alva Erskine Smith ?", "Who married Alva Erskine Smith ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Alva_Erskine_Smith>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Alvilde Chaplin ?", "Who married Alvilde Chaplin ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Alvilde_Chaplin>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Alys, Countess of the Vexin ?", "Who married Alys, Countess of the Vexin ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Alys,_Countess_of_the_Vexin>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Amber Stevens ?", "Who married Amber Stevens ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amber_Stevens>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Ameitta Thiri Maha Dhamma Dewi ?", "Who married Ameitta Thiri Maha Dhamma Dewi ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Lovely Anand ?", "Who married Lovely Anand ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lovely_Anand>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Lowell Sherman ?", "Who married Lowell Sherman ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lowell_Sherman>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Loïc Le Meur ?", "Who married Loïc Le Meur ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Loïc_Le_Meur>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Lu Chen (scientist) ?", "Who married Lu Chen (scientist) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lu_Chen_(scientist)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Lu Gwei-djen ?", "Who married Lu Gwei-djen ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lu_Gwei-djen>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Lu Huinan ?", "Who married Lu Huinan ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lu_Huinan>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Lu Kang (Han dynasty) ?", "Who married Lu Kang (Han dynasty) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lu_Kang_(Han_dynasty)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Lu Muzhen ?", "Who married Lu Muzhen ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lu_Muzhen>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Lu Xun ?", "Who married Lu Xun ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lu_Xun>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Luan Volien ?", "Who married Luan Volien ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Luan_Volien>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Luana Patten ?", "Who married Luana Patten ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Luana_Patten>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Luang Prabang ?", "Who married Luang Prabang ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Luang_Prabang>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Luann de Lesseps ?", "Who married Luann de Lesseps ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Luann_de_Lesseps>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Lubov Azria ?", "Who married Lubov Azria ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lubov_Azria>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Luc Besson ?", "Who married Luc Besson ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Luc_Besson>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Luc Leestemaker ?", "Who married Luc Leestemaker ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Luc_Leestemaker>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Luc Tuymans ?", "Who married Luc Tuymans ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Luc_Tuymans>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Luca Argentero ?", "Who married Luca Argentero ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Luca_Argentero>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Luca Ward ?", "Who married Luca Ward ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Luca_Ward>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Luca Zingaretti ?", "Who married Luca Zingaretti ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Luca_Zingaretti>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Lucas Jones ?", "Who married Lucas Jones ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucas_Jones>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Lucas Neff ?", "Who married Lucas Neff ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucas_Neff>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Lucas Roberts ?", "Who married Lucas Roberts ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucas_Roberts>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Lucas Scott ?", "Who married Lucas Scott ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucas_Scott>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Lucette Destouches ?", "Who married Lucette Destouches ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucette_Destouches>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Lucia Migliaccio ?", "Who married Lucia Migliaccio ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucia_Migliaccio>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Lucia Moholy ?", "Who married Lucia Moholy ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucia_Moholy>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Lucia St. Clair Robson ?", "Who married Lucia St. Clair Robson ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucia_St._Clair_Robson>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Lucian Freud ?", "Who married Lucian Freud ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucian_Freud>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Luciana Paluzzi ?", "Who married Luciana Paluzzi ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Luciana_Paluzzi>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Luciano Cáceres ?", "Who married Luciano Cáceres ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Luciano_Cáceres>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married Luciano Ercoli ?", "Who married Luciano Ercoli ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Luciano_Ercoli>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Lucas Johnson ?", "Which person plays Lucas Johnson ?", "Who played Lucas Johnson ?", "Who plays Lucas Johnson ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucas_Johnson> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Lucky Spencer ?", "Which person plays Lucky Spencer ?", "Who played Lucky Spencer ?", "Who plays Lucky Spencer ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucky_Spencer> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Lucy Barker ?", "Which person plays Lucy Barker ?", "Who played Lucy Barker ?", "Who plays Lucy Barker ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_Barker> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Lucy Coe ?", "Which person plays Lucy Coe ?", "Who played Lucy Coe ?", "Who plays Lucy Coe ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_Coe> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Luka Kovač ?", "Which person plays Luka Kovač ?", "Who played Luka Kovač ?", "Who plays Luka Kovač ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luka_Kovač> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Luke Snyder ?", "Which person plays Luke Snyder ?", "Who played Luke Snyder ?", "Who plays Luke Snyder ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luke_Snyder> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Macy Alexander ?", "Which person plays Macy Alexander ?", "Who played Macy Alexander ?", "Who plays Macy Alexander ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Macy_Alexander> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Maggie Astoni ?", "Which person plays Maggie Astoni ?", "Who played Maggie Astoni ?", "Who plays Maggie Astoni ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Maggie_Astoni> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Mai Shiranui ?", "Which person plays Mai Shiranui ?", "Who played Mai Shiranui ?", "Who plays Mai Shiranui ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mai_Shiranui> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Maleficent ?", "Which person plays Maleficent ?", "Who played Maleficent ?", "Who plays Maleficent ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Maleficent> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Carrie White ?", "Which person plays Carrie White ?", "Who played Carrie White ?", "Who plays Carrie White ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Carrie_White> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Casey Novak ?", "Which person plays Casey Novak ?", "Who played Casey Novak ?", "Who plays Casey Novak ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Casey_Novak> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Cassian Andor ?", "Which person plays Cassian Andor ?", "Who played Cassian Andor ?", "Who plays Cassian Andor ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Cassian_Andor> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Cordelia Gray ?", "Which person plays Cordelia Gray ?", "Who played Cordelia Gray ?", "Who plays Cordelia Gray ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Cordelia_Gray> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Ursula (The Little Mermaid) ?", "Which person plays Ursula (The Little Mermaid) ?", "Who played Ursula (The Little Mermaid) ?", "Who plays Ursula (The Little Mermaid) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ursula_(The_Little_Mermaid)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Valerie Grant ?", "Which person plays Valerie Grant ?", "Who played Valerie Grant ?", "Who plays Valerie Grant ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Valerie_Grant> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Veronica Mars (character) ?", "Which person plays Veronica Mars (character) ?", "Who played Veronica Mars (character) ?", "Who plays Veronica Mars (character) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Veronica_Mars_(character)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Curly Watts ?", "Which person plays Curly Watts ?", "Who played Curly Watts ?", "Who plays Curly Watts ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Curly_Watts> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played D'Hoffryn ?", "Which person plays D'Hoffryn ?", "Who played D'Hoffryn ?", "Who plays D'Hoffryn ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/D'Hoffryn> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Damian Spinelli ?", "Which person plays Damian Spinelli ?", "Who played Damian Spinelli ?", "Who plays Damian Spinelli ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Damian_Spinelli> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played First Evil ?", "Which person plays First Evil ?", "Who played First Evil ?", "Who plays First Evil ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/First_Evil> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Frank Booth (Blue Velvet) ?", "Which person plays Frank Booth (Blue Velvet) ?", "Who played Frank Booth (Blue Velvet) ?", "Who plays Frank Booth (Blue Velvet) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Frank_Booth_(Blue_Velvet)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Hannah Baxter ?", "Which person plays Hannah Baxter ?", "Who played Hannah Baxter ?", "Who plays Hannah Baxter ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Hannah_Baxter> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played List of Chaos Walking characters ?", "Which person plays List of Chaos Walking characters ?", "Who played List of Chaos Walking characters ?", "Who plays List of Chaos Walking characters ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Chaos_Walking_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played List of Community characters ?", "Which person plays List of Community characters ?", "Who played List of Community characters ?", "Who plays List of Community characters ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Community_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played List of Emmerdale characters (2004) ?", "Which person plays List of Emmerdale characters (2004) ?", "Who played List of Emmerdale characters (2004) ?", "Who plays List of Emmerdale characters (2004) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Emmerdale_characters_(2004)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played List of My Family characters ?", "Which person plays List of My Family characters ?", "Who played List of My Family characters ?", "Who plays List of My Family characters ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_My_Family_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played List of Neighbours characters (1990) ?", "Which person plays List of Neighbours characters (1990) ?", "Who played List of Neighbours characters (1990) ?", "Who plays List of Neighbours characters (1990) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Neighbours_characters_(1990)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played List of New Tricks characters ?", "Which person plays List of New Tricks characters ?", "Who played List of New Tricks characters ?", "Who plays List of New Tricks characters ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_New_Tricks_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played List of Shortland Street characters (1993) ?", "Which person plays List of Shortland Street characters (1993) ?", "Who played List of Shortland Street characters (1993) ?", "Who plays List of Shortland Street characters (1993) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Shortland_Street_characters_(1993)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Professor Bobo ?", "Which person plays Professor Bobo ?", "Who played Professor Bobo ?", "Who plays Professor Bobo ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Professor_Bobo> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played The Blue Racer ?", "Which person plays The Blue Racer ?", "Who played The Blue Racer ?", "Who plays The Blue Racer ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Blue_Racer> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played The Bride (Kill Bill) ?", "Which person plays The Bride (Kill Bill) ?", "Who played The Bride (Kill Bill) ?", "Who plays The Bride (Kill Bill) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Bride_(Kill_Bill)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Petya Rostov ?", "Which person plays Petya Rostov ?", "Who played Petya Rostov ?", "Who plays Petya Rostov ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Petya_Rostov> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Ronald McDonald ?", "Which person plays Ronald McDonald ?", "Who played Ronald McDonald ?", "Who plays Ronald McDonald ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ronald_McDonald> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Rudy Huxtable ?", "Which person plays Rudy Huxtable ?", "Who played Rudy Huxtable ?", "Who plays Rudy Huxtable ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Rudy_Huxtable> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Samantha Jones (Sex and the City) ?", "Which person plays Samantha Jones (Sex and the City) ?", "Who played Samantha Jones (Sex and the City) ?", "Who plays Samantha Jones (Sex and the City) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Samantha_Jones_(Sex_and_the_City)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Savely Govorkov ?", "Which person plays Savely Govorkov ?", "Who played Savely Govorkov ?", "Who plays Savely Govorkov ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Savely_Govorkov> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Scarecrow (Oz) ?", "Which person plays Scarecrow (Oz) ?", "Who played Scarecrow (Oz) ?", "Who plays Scarecrow (Oz) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Scarecrow_(Oz)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Scott Hunter (Home and Away) ?", "Which person plays Scott Hunter (Home and Away) ?", "Who played Scott Hunter (Home and Away) ?", "Who plays Scott Hunter (Home and Away) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Scott_Hunter_(Home_and_Away)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Scotty Wandell ?", "Which person plays Scotty Wandell ?", "Who played Scotty Wandell ?", "Who plays Scotty Wandell ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Scotty_Wandell> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played George Smiley ?", "Which person plays George Smiley ?", "Who played George Smiley ?", "Who plays George Smiley ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/George_Smiley> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Patty Hewes ?", "Which person plays Patty Hewes ?", "Who played Patty Hewes ?", "Who plays Patty Hewes ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Patty_Hewes> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Ste Hay ?", "Which person plays Ste Hay ?", "Who played Ste Hay ?", "Who plays Ste Hay ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ste_Hay> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Justus Ward ?", "Which person plays Justus Ward ?", "Who played Justus Ward ?", "Who plays Justus Ward ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Justus_Ward> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Jake Hanson ?", "Which person plays Jake Hanson ?", "Who played Jake Hanson ?", "Who plays Jake Hanson ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Jake_Hanson> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Sybil Fawlty ?", "Which person plays Sybil Fawlty ?", "Who played Sybil Fawlty ?", "Who plays Sybil Fawlty ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Sybil_Fawlty> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Natalie Barnes ?", "Which person plays Natalie Barnes ?", "Who played Natalie Barnes ?", "Who plays Natalie Barnes ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Natalie_Barnes> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Vinnie Kruse ?", "Which person plays Vinnie Kruse ?", "Who played Vinnie Kruse ?", "Who plays Vinnie Kruse ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Vinnie_Kruse> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Mindy Lewis ?", "Which person plays Mindy Lewis ?", "Who played Mindy Lewis ?", "Who plays Mindy Lewis ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mindy_Lewis> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Professor Chronotis ?", "Which person plays Professor Chronotis ?", "Who played Professor Chronotis ?", "Who plays Professor Chronotis ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Professor_Chronotis> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Olenna Tyrell ?", "Which person plays Olenna Tyrell ?", "Who played Olenna Tyrell ?", "Who plays Olenna Tyrell ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Olenna_Tyrell> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Billie Jackson ?", "Which person plays Billie Jackson ?", "Who played Billie Jackson ?", "Who plays Billie Jackson ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Billie_Jackson> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Billie Reed ?", "Which person plays Billie Reed ?", "Who played Billie Reed ?", "Who plays Billie Reed ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Billie_Reed> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Billy (Black Christmas) ?", "Which person plays Billy (Black Christmas) ?", "Who played Billy (Black Christmas) ?", "Who plays Billy (Black Christmas) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Billy_(Black_Christmas)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Billy Abbott ?", "Which person plays Billy Abbott ?", "Who played Billy Abbott ?", "Who plays Billy Abbott ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Billy_Abbott> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Billy Cranston ?", "Which person plays Billy Cranston ?", "Who played Billy Cranston ?", "Who plays Billy Cranston ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Billy_Cranston> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Blanche Hunt ?", "Which person plays Blanche Hunt ?", "Who played Blanche Hunt ?", "Who plays Blanche Hunt ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Blanche_Hunt> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Bob Hughes ?", "Which person plays Bob Hughes ?", "Who played Bob Hughes ?", "Who plays Bob Hughes ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Bob_Hughes> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Boba Fett ?", "Which person plays Boba Fett ?", "Who played Boba Fett ?", "Who plays Boba Fett ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Boba_Fett> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Bowser (character) ?", "Which person plays Bowser (character) ?", "Who played Bowser (character) ?", "Who plays Bowser (character) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Bowser_(character)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Brad Carlton ?", "Which person plays Brad Carlton ?", "Who played Brad Carlton ?", "Who plays Brad Carlton ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Brad_Carlton> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Denise Fox ?", "Which person plays Denise Fox ?", "Who played Denise Fox ?", "Who plays Denise Fox ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Denise_Fox> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Desdemona ?", "Which person plays Desdemona ?", "Who played Desdemona ?", "Who plays Desdemona ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Desdemona> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Dominique Deveraux ?", "Which person plays Dominique Deveraux ?", "Who played Dominique Deveraux ?", "Who plays Dominique Deveraux ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dominique_Deveraux> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Domino Vitali ?", "Which person plays Domino Vitali ?", "Who played Domino Vitali ?", "Who plays Domino Vitali ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Domino_Vitali> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Andy Sipowicz ?", "Which person plays Andy Sipowicz ?", "Who played Andy Sipowicz ?", "Who plays Andy Sipowicz ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Andy_Sipowicz> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Angelique Bouchard Collins ?", "Which person plays Angelique Bouchard Collins ?", "Who played Angelique Bouchard Collins ?", "Who plays Angelique Bouchard Collins ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Angelique_Bouchard_Collins> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Glenda Mitchell ?", "Which person plays Glenda Mitchell ?", "Who played Glenda Mitchell ?", "Who plays Glenda Mitchell ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Glenda_Mitchell> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Kevin Fisher (The Young and the Restless) ?", "Which person plays Kevin Fisher (The Young and the Restless) ?", "Who played Kevin Fisher (The Young and the Restless) ?", "Who plays Kevin Fisher (The Young and the Restless) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Kevin_Fisher_(The_Young_and_the_Restless)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Kiki Jerome ?", "Which person plays Kiki Jerome ?", "Who played Kiki Jerome ?", "Who plays Kiki Jerome ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Kiki_Jerome> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played King Ezekiel ?", "Which person plays King Ezekiel ?", "Who played King Ezekiel ?", "Who plays King Ezekiel ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/King_Ezekiel> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Kirby Anders ?", "Which person plays Kirby Anders ?", "Who played Kirby Anders ?", "Who plays Kirby Anders ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Kirby_Anders> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Kiriti Roy ?", "Which person plays Kiriti Roy ?", "Who played Kiriti Roy ?", "Who plays Kiriti Roy ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Kiriti_Roy> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Princess Leia ?", "Which person plays Princess Leia ?", "Who played Princess Leia ?", "Who plays Princess Leia ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Princess_Leia> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Rachel Gannon ?", "Which person plays Rachel Gannon ?", "Who played Rachel Gannon ?", "Who plays Rachel Gannon ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Rachel_Gannon> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played List of Andromeda characters ?", "Which person plays List of Andromeda characters ?", "Who played List of Andromeda characters ?", "Who plays List of Andromeda characters ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Andromeda_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played List of Coronation Street characters (1969) ?", "Which person plays List of Coronation Street characters (1969) ?", "Who played List of Coronation Street characters (1969) ?", "Who plays List of Coronation Street characters (1969) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Coronation_Street_characters_(1969)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played List of ER characters ?", "Which person plays List of ER characters ?", "Who played List of ER characters ?", "Who plays List of ER characters ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_ER_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played List of EastEnders characters (2006) ?", "Which person plays List of EastEnders characters (2006) ?", "Who played List of EastEnders characters (2006) ?", "Who plays List of EastEnders characters (2006) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_EastEnders_characters_(2006)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played List of EastEnders characters (2007) ?", "Which person plays List of EastEnders characters (2007) ?", "Who played List of EastEnders characters (2007) ?", "Who plays List of EastEnders characters (2007) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_EastEnders_characters_(2007)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played List of Emmerdale characters (2006) ?", "Which person plays List of Emmerdale characters (2006) ?", "Who played List of Emmerdale characters (2006) ?", "Who plays List of Emmerdale characters (2006) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Emmerdale_characters_(2006)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played List of Hollyoaks characters (2009) ?", "Which person plays List of Hollyoaks characters (2009) ?", "Who played List of Hollyoaks characters (2009) ?", "Who plays List of Hollyoaks characters (2009) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Hollyoaks_characters_(2009)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played List of Neighbours characters (2008) ?", "Which person plays List of Neighbours characters (2008) ?", "Who played List of Neighbours characters (2008) ?", "Who plays List of Neighbours characters (2008) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Neighbours_characters_(2008)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played List of Primeval characters ?", "Which person plays List of Primeval characters ?", "Who played List of Primeval characters ?", "Who plays List of Primeval characters ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Primeval_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played List of The Inbetweeners characters ?", "Which person plays List of The Inbetweeners characters ?", "Who played List of The Inbetweeners characters ?", "Who plays List of The Inbetweeners characters ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_The_Inbetweeners_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played General Hux ?", "Which person plays General Hux ?", "Who played General Hux ?", "Who plays General Hux ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/General_Hux> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played List of A Series of Unfortunate Events characters ?", "Which person plays List of A Series of Unfortunate Events characters ?", "Who played List of A Series of Unfortunate Events characters ?", "Who plays List of A Series of Unfortunate Events characters ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_A_Series_of_Unfortunate_Events_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played List of Coronation Street characters (2002) ?", "Which person plays List of Coronation Street characters (2002) ?", "Who played List of Coronation Street characters (2002) ?", "Who plays List of Coronation Street characters (2002) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Coronation_Street_characters_(2002)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played List of EastEnders characters (2016) ?", "Which person plays List of EastEnders characters (2016) ?", "Who played List of EastEnders characters (2016) ?", "Who plays List of EastEnders characters (2016) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_EastEnders_characters_(2016)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played List of Emmerdale characters (2007) ?", "Which person plays List of Emmerdale characters (2007) ?", "Who played List of Emmerdale characters (2007) ?", "Who plays List of Emmerdale characters (2007) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Emmerdale_characters_(2007)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played List of Hollyoaks characters (2013) ?", "Which person plays List of Hollyoaks characters (2013) ?", "Who played List of Hollyoaks characters (2013) ?", "Who plays List of Hollyoaks characters (2013) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Hollyoaks_characters_(2013)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played List of Hollyoaks characters (2015) ?", "Which person plays List of Hollyoaks characters (2015) ?", "Who played List of Hollyoaks characters (2015) ?", "Who plays List of Hollyoaks characters (2015) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Hollyoaks_characters_(2015)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played List of Star Trek: Voyager characters ?", "Which person plays List of Star Trek: Voyager characters ?", "Who played List of Star Trek: Voyager characters ?", "Who plays List of Star Trek: Voyager characters ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Star_Trek:_Voyager_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played List of The Shield characters ?", "Which person plays List of The Shield characters ?", "Who played List of The Shield characters ?", "Who plays List of The Shield characters ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_The_Shield_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Norman Bates ?", "Which person plays Norman Bates ?", "Who played Norman Bates ?", "Who plays Norman Bates ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Norman_Bates> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Tony Gordon ?", "Which person plays Tony Gordon ?", "Who played Tony Gordon ?", "Who plays Tony Gordon ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Tony_Gordon> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Glinda the Good Witch ?", "Which person plays Glinda the Good Witch ?", "Who played Glinda the Good Witch ?", "Who plays Glinda the Good Witch ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Glinda_the_Good_Witch> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Grandmama (The Addams Family) ?", "Which person plays Grandmama (The Addams Family) ?", "Who played Grandmama (The Addams Family) ?", "Who plays Grandmama (The Addams Family) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Grandmama_(The_Addams_Family)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played Gyp Rosetti ?", "Which person plays Gyp Rosetti ?", "Who played Gyp Rosetti ?", "Who plays Gyp Rosetti ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gyp_Rosetti> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Alun Armstrong (actor)?", "Which fictional character was played by Alun Armstrong (actor)?", "Which fictional characters are played by Alun Armstrong (actor)?", "Which fictional characters were played by Alun Armstrong (actor)?", "Who is played by Alun Armstrong (actor)?", "Who was played by Alun Armstrong (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Alun_Armstrong_(actor)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Luca Zingaretti?", "Which fictional character was played by Luca Zingaretti?", "Which fictional characters are played by Luca Zingaretti?", "Which fictional characters were played by Luca Zingaretti?", "Who is played by Luca Zingaretti?", "Who was played by Luca Zingaretti?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luca_Zingaretti>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucas Black?", "Which fictional character was played by Lucas Black?", "Which fictional characters are played by Lucas Black?", "Which fictional characters were played by Lucas Black?", "Who is played by Lucas Black?", "Who was played by Lucas Black?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucas_Black>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucas Grabeel?", "Which fictional character was played by Lucas Grabeel?", "Which fictional characters are played by Lucas Grabeel?", "Which fictional characters were played by Lucas Grabeel?", "Who is played by Lucas Grabeel?", "Who was played by Lucas Grabeel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucas_Grabeel>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucas Jade Zumann?", "Which fictional character was played by Lucas Jade Zumann?", "Which fictional characters are played by Lucas Jade Zumann?", "Which fictional characters were played by Lucas Jade Zumann?", "Who is played by Lucas Jade Zumann?", "Who was played by Lucas Jade Zumann?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucas_Jade_Zumann>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucas Steele?", "Which fictional character was played by Lucas Steele?", "Which fictional characters are played by Lucas Steele?", "Which fictional characters were played by Lucas Steele?", "Who is played by Lucas Steele?", "Who was played by Lucas Steele?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucas_Steele>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucas Till?", "Which fictional character was played by Lucas Till?", "Which fictional characters are played by Lucas Till?", "Which fictional characters were played by Lucas Till?", "Who is played by Lucas Till?", "Who was played by Lucas Till?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucas_Till>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucian Msamati?", "Which fictional character was played by Lucian Msamati?", "Which fictional characters are played by Lucian Msamati?", "Which fictional characters were played by Lucian Msamati?", "Who is played by Lucian Msamati?", "Who was played by Lucian Msamati?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucian_Msamati>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Luciana Carro?", "Which fictional character was played by Luciana Carro?", "Which fictional characters are played by Luciana Carro?", "Which fictional characters were played by Luciana Carro?", "Who is played by Luciana Carro?", "Who was played by Luciana Carro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luciana_Carro>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Luciano Cáceres?", "Which fictional character was played by Luciano Cáceres?", "Which fictional characters are played by Luciano Cáceres?", "Which fictional characters were played by Luciano Cáceres?", "Who is played by Luciano Cáceres?", "Who was played by Luciano Cáceres?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luciano_Cáceres>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucien Laviscount?", "Which fictional character was played by Lucien Laviscount?", "Which fictional characters are played by Lucien Laviscount?", "Which fictional characters were played by Lucien Laviscount?", "Who is played by Lucien Laviscount?", "Who was played by Lucien Laviscount?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucien_Laviscount>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucille Ball?", "Which fictional character was played by Lucille Ball?", "Which fictional characters are played by Lucille Ball?", "Which fictional characters were played by Lucille Ball?", "Who is played by Lucille Ball?", "Who was played by Lucille Ball?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucille_Ball>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucille Wall?", "Which fictional character was played by Lucille Wall?", "Which fictional characters are played by Lucille Wall?", "Which fictional characters were played by Lucille Wall?", "Who is played by Lucille Wall?", "Who was played by Lucille Wall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucille_Wall>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucinda Dryzek?", "Which fictional character was played by Lucinda Dryzek?", "Which fictional characters are played by Lucinda Dryzek?", "Which fictional characters were played by Lucinda Dryzek?", "Who is played by Lucinda Dryzek?", "Who was played by Lucinda Dryzek?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucinda_Dryzek>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucy-Jo Hudson?", "Which fictional character was played by Lucy-Jo Hudson?", "Which fictional characters are played by Lucy-Jo Hudson?", "Which fictional characters were played by Lucy-Jo Hudson?", "Who is played by Lucy-Jo Hudson?", "Who was played by Lucy-Jo Hudson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy-Jo_Hudson>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucy Benjamin?", "Which fictional character was played by Lucy Benjamin?", "Which fictional characters are played by Lucy Benjamin?", "Which fictional characters were played by Lucy Benjamin?", "Who is played by Lucy Benjamin?", "Who was played by Lucy Benjamin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Benjamin>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucy Brown?", "Which fictional character was played by Lucy Brown?", "Which fictional characters are played by Lucy Brown?", "Which fictional characters were played by Lucy Brown?", "Who is played by Lucy Brown?", "Who was played by Lucy Brown?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Brown>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucy Davis?", "Which fictional character was played by Lucy Davis?", "Which fictional characters are played by Lucy Davis?", "Which fictional characters were played by Lucy Davis?", "Who is played by Lucy Davis?", "Who was played by Lucy Davis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Davis>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucy DeCoutere?", "Which fictional character was played by Lucy DeCoutere?", "Which fictional characters are played by Lucy DeCoutere?", "Which fictional characters were played by Lucy DeCoutere?", "Who is played by Lucy DeCoutere?", "Who was played by Lucy DeCoutere?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_DeCoutere>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucy Deakins?", "Which fictional character was played by Lucy Deakins?", "Which fictional characters are played by Lucy Deakins?", "Which fictional characters were played by Lucy Deakins?", "Who is played by Lucy Deakins?", "Who was played by Lucy Deakins?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Deakins>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucy Dixon?", "Which fictional character was played by Lucy Dixon?", "Which fictional characters are played by Lucy Dixon?", "Which fictional characters were played by Lucy Dixon?", "Who is played by Lucy Dixon?", "Who was played by Lucy Dixon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Dixon>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucy Durack?", "Which fictional character was played by Lucy Durack?", "Which fictional characters are played by Lucy Durack?", "Which fictional characters were played by Lucy Durack?", "Who is played by Lucy Durack?", "Who was played by Lucy Durack?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Durack>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucy Evans?", "Which fictional character was played by Lucy Evans?", "Which fictional characters are played by Lucy Evans?", "Which fictional characters were played by Lucy Evans?", "Who is played by Lucy Evans?", "Who was played by Lucy Evans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Evans>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucy Fallon?", "Which fictional character was played by Lucy Fallon?", "Which fictional characters are played by Lucy Fallon?", "Which fictional characters were played by Lucy Fallon?", "Who is played by Lucy Fallon?", "Who was played by Lucy Fallon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Fallon>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucy Gaskell?", "Which fictional character was played by Lucy Gaskell?", "Which fictional characters are played by Lucy Gaskell?", "Which fictional characters were played by Lucy Gaskell?", "Who is played by Lucy Gaskell?", "Who was played by Lucy Gaskell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Gaskell>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucy Griffiths (actress, born 1986)?", "Which fictional character was played by Lucy Griffiths (actress, born 1986)?", "Which fictional characters are played by Lucy Griffiths (actress, born 1986)?", "Which fictional characters were played by Lucy Griffiths (actress, born 1986)?", "Who is played by Lucy Griffiths (actress, born 1986)?", "Who was played by Lucy Griffiths (actress, born 1986)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Griffiths_(actress,_born_1986)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucy Hale?", "Which fictional character was played by Lucy Hale?", "Which fictional characters are played by Lucy Hale?", "Which fictional characters were played by Lucy Hale?", "Who is played by Lucy Hale?", "Who was played by Lucy Hale?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Hale>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucy Lawless?", "Which fictional character was played by Lucy Lawless?", "Which fictional characters are played by Lucy Lawless?", "Which fictional characters were played by Lucy Lawless?", "Who is played by Lucy Lawless?", "Who was played by Lucy Lawless?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Lawless>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucy Liu?", "Which fictional character was played by Lucy Liu?", "Which fictional characters are played by Lucy Liu?", "Which fictional characters were played by Lucy Liu?", "Who is played by Lucy Liu?", "Who was played by Lucy Liu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Liu>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucy Pargeter?", "Which fictional character was played by Lucy Pargeter?", "Which fictional characters are played by Lucy Pargeter?", "Which fictional characters were played by Lucy Pargeter?", "Who is played by Lucy Pargeter?", "Who was played by Lucy Pargeter?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Pargeter>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lucy Speed?", "Which fictional character was played by Lucy Speed?", "Which fictional characters are played by Lucy Speed?", "Which fictional characters were played by Lucy Speed?", "Who is played by Lucy Speed?", "Who was played by Lucy Speed?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Speed>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Ludi Lin?", "Which fictional character was played by Ludi Lin?", "Which fictional characters are played by Ludi Lin?", "Which fictional characters were played by Ludi Lin?", "Who is played by Ludi Lin?", "Who was played by Ludi Lin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ludi_Lin>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Ludivine Sagnier?", "Which fictional character was played by Ludivine Sagnier?", "Which fictional characters are played by Ludivine Sagnier?", "Which fictional characters were played by Ludivine Sagnier?", "Who is played by Ludivine Sagnier?", "Who was played by Ludivine Sagnier?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ludivine_Sagnier>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Luisa Bradshaw-White?", "Which fictional character was played by Luisa Bradshaw-White?", "Which fictional characters are played by Luisa Bradshaw-White?", "Which fictional characters were played by Luisa Bradshaw-White?", "Who is played by Luisa Bradshaw-White?", "Who was played by Luisa Bradshaw-White?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luisa_Bradshaw-White>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Luke Bracey?", "Which fictional character was played by Luke Bracey?", "Which fictional characters are played by Luke Bracey?", "Which fictional characters were played by Luke Bracey?", "Who is played by Luke Bracey?", "Who was played by Luke Bracey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Bracey>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Luke Evans?", "Which fictional character was played by Luke Evans?", "Which fictional characters are played by Luke Evans?", "Which fictional characters were played by Luke Evans?", "Who is played by Luke Evans?", "Who was played by Luke Evans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Evans>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Luke Jacobz?", "Which fictional character was played by Luke Jacobz?", "Which fictional characters are played by Luke Jacobz?", "Which fictional characters were played by Luke Jacobz?", "Who is played by Luke Jacobz?", "Who was played by Luke Jacobz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Jacobz>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Luke Jerdy?", "Which fictional character was played by Luke Jerdy?", "Which fictional characters are played by Luke Jerdy?", "Which fictional characters were played by Luke Jerdy?", "Who is played by Luke Jerdy?", "Who was played by Luke Jerdy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Jerdy>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Luke Kleintank?", "Which fictional character was played by Luke Kleintank?", "Which fictional characters are played by Luke Kleintank?", "Which fictional characters were played by Luke Kleintank?", "Who is played by Luke Kleintank?", "Who was played by Luke Kleintank?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Kleintank>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Luke Macfarlane?", "Which fictional character was played by Luke Macfarlane?", "Which fictional characters are played by Luke Macfarlane?", "Which fictional characters were played by Luke Macfarlane?", "Who is played by Luke Macfarlane?", "Who was played by Luke Macfarlane?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Macfarlane>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Luke Mitchell?", "Which fictional character was played by Luke Mitchell?", "Which fictional characters are played by Luke Mitchell?", "Which fictional characters were played by Luke Mitchell?", "Who is played by Luke Mitchell?", "Who was played by Luke Mitchell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Mitchell>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Luke Pasqualino?", "Which fictional character was played by Luke Pasqualino?", "Which fictional characters are played by Luke Pasqualino?", "Which fictional characters were played by Luke Pasqualino?", "Who is played by Luke Pasqualino?", "Who was played by Luke Pasqualino?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Pasqualino>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Luke Pegler?", "Which fictional character was played by Luke Pegler?", "Which fictional characters are played by Luke Pegler?", "Which fictional characters were played by Luke Pegler?", "Who is played by Luke Pegler?", "Who was played by Luke Pegler?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Pegler>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Luke Perry?", "Which fictional character was played by Luke Perry?", "Which fictional characters are played by Luke Perry?", "Which fictional characters were played by Luke Perry?", "Who is played by Luke Perry?", "Who was played by Luke Perry?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Perry>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Luke Roberts (actor)?", "Which fictional character was played by Luke Roberts (actor)?", "Which fictional characters are played by Luke Roberts (actor)?", "Which fictional characters were played by Luke Roberts (actor)?", "Who is played by Luke Roberts (actor)?", "Who was played by Luke Roberts (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Roberts_(actor)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Luke Roskell?", "Which fictional character was played by Luke Roskell?", "Which fictional characters are played by Luke Roskell?", "Which fictional characters were played by Luke Roskell?", "Who is played by Luke Roskell?", "Who was played by Luke Roskell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Roskell>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Luke Tarsitano?", "Which fictional character was played by Luke Tarsitano?", "Which fictional characters are played by Luke Tarsitano?", "Which fictional characters were played by Luke Tarsitano?", "Who is played by Luke Tarsitano?", "Who was played by Luke Tarsitano?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Tarsitano>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Luke Tittensor?", "Which fictional character was played by Luke Tittensor?", "Which fictional characters are played by Luke Tittensor?", "Which fictional characters were played by Luke Tittensor?", "Who is played by Luke Tittensor?", "Who was played by Luke Tittensor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Tittensor>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Luke Youngblood?", "Which fictional character was played by Luke Youngblood?", "Which fictional characters are played by Luke Youngblood?", "Which fictional characters were played by Luke Youngblood?", "Who is played by Luke Youngblood?", "Who was played by Luke Youngblood?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Youngblood>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lulu (singer)?", "Which fictional character was played by Lulu (singer)?", "Which fictional characters are played by Lulu (singer)?", "Which fictional characters were played by Lulu (singer)?", "Who is played by Lulu (singer)?", "Who was played by Lulu (singer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lulu_(singer)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lupita Nyong'o?", "Which fictional character was played by Lupita Nyong'o?", "Which fictional characters are played by Lupita Nyong'o?", "Which fictional characters were played by Lupita Nyong'o?", "Who is played by Lupita Nyong'o?", "Who was played by Lupita Nyong'o?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lupita_Nyong'o>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lydia Lloyd-Henry?", "Which fictional character was played by Lydia Lloyd-Henry?", "Which fictional characters are played by Lydia Lloyd-Henry?", "Which fictional characters were played by Lydia Lloyd-Henry?", "Who is played by Lydia Lloyd-Henry?", "Who was played by Lydia Lloyd-Henry?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lydia_Lloyd-Henry>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lydia Wilson?", "Which fictional character was played by Lydia Wilson?", "Which fictional characters are played by Lydia Wilson?", "Which fictional characters were played by Lydia Wilson?", "Who is played by Lydia Wilson?", "Who was played by Lydia Wilson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lydia_Wilson>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lyn Collingwood?", "Which fictional character was played by Lyn Collingwood?", "Which fictional characters are played by Lyn Collingwood?", "Which fictional characters were played by Lyn Collingwood?", "Who is played by Lyn Collingwood?", "Who was played by Lyn Collingwood?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lyn_Collingwood>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lyn Paul?", "Which fictional character was played by Lyn Paul?", "Which fictional characters are played by Lyn Paul?", "Which fictional characters were played by Lyn Paul?", "Who is played by Lyn Paul?", "Who was played by Lyn Paul?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lyn_Paul>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lynda Baron?", "Which fictional character was played by Lynda Baron?", "Which fictional characters are played by Lynda Baron?", "Which fictional characters were played by Lynda Baron?", "Who is played by Lynda Baron?", "Who was played by Lynda Baron?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynda_Baron>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lyndon Ogbourne?", "Which fictional character was played by Lyndon Ogbourne?", "Which fictional characters are played by Lyndon Ogbourne?", "Which fictional characters were played by Lyndon Ogbourne?", "Who is played by Lyndon Ogbourne?", "Who was played by Lyndon Ogbourne?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lyndon_Ogbourne>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lyndsy Fonseca?", "Which fictional character was played by Lyndsy Fonseca?", "Which fictional characters are played by Lyndsy Fonseca?", "Which fictional characters were played by Lyndsy Fonseca?", "Who is played by Lyndsy Fonseca?", "Who was played by Lyndsy Fonseca?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lyndsy_Fonseca>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lynn Dalby?", "Which fictional character was played by Lynn Dalby?", "Which fictional characters are played by Lynn Dalby?", "Which fictional characters were played by Lynn Dalby?", "Who is played by Lynn Dalby?", "Who was played by Lynn Dalby?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynn_Dalby>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lynn Farleigh?", "Which fictional character was played by Lynn Farleigh?", "Which fictional characters are played by Lynn Farleigh?", "Which fictional characters were played by Lynn Farleigh?", "Who is played by Lynn Farleigh?", "Who was played by Lynn Farleigh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynn_Farleigh>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lynn Herring?", "Which fictional character was played by Lynn Herring?", "Which fictional characters are played by Lynn Herring?", "Which fictional characters were played by Lynn Herring?", "Who is played by Lynn Herring?", "Who was played by Lynn Herring?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynn_Herring>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lynn Redgrave?", "Which fictional character was played by Lynn Redgrave?", "Which fictional characters are played by Lynn Redgrave?", "Which fictional characters were played by Lynn Redgrave?", "Who is played by Lynn Redgrave?", "Who was played by Lynn Redgrave?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynn_Redgrave>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lynne Carol?", "Which fictional character was played by Lynne Carol?", "Which fictional characters are played by Lynne Carol?", "Which fictional characters were played by Lynne Carol?", "Who is played by Lynne Carol?", "Who was played by Lynne Carol?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynne_Carol>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lynne McGranger?", "Which fictional character was played by Lynne McGranger?", "Which fictional characters are played by Lynne McGranger?", "Which fictional characters were played by Lynne McGranger?", "Who is played by Lynne McGranger?", "Who was played by Lynne McGranger?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynne_McGranger>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lynne Miller?", "Which fictional character was played by Lynne Miller?", "Which fictional characters are played by Lynne Miller?", "Which fictional characters were played by Lynne Miller?", "Who is played by Lynne Miller?", "Who was played by Lynne Miller?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynne_Miller>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lynne Perrie?", "Which fictional character was played by Lynne Perrie?", "Which fictional characters are played by Lynne Perrie?", "Which fictional characters were played by Lynne Perrie?", "Who is played by Lynne Perrie?", "Who was played by Lynne Perrie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynne_Perrie>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lynnie Greene?", "Which fictional character was played by Lynnie Greene?", "Which fictional characters are played by Lynnie Greene?", "Which fictional characters were played by Lynnie Greene?", "Who is played by Lynnie Greene?", "Who was played by Lynnie Greene?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynnie_Greene>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lynsey Bartilson?", "Which fictional character was played by Lynsey Bartilson?", "Which fictional characters are played by Lynsey Bartilson?", "Which fictional characters were played by Lynsey Bartilson?", "Who is played by Lynsey Bartilson?", "Who was played by Lynsey Bartilson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynsey_Bartilson>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Lysette Anthony?", "Which fictional character was played by Lysette Anthony?", "Which fictional characters are played by Lysette Anthony?", "Which fictional characters were played by Lysette Anthony?", "Who is played by Lysette Anthony?", "Who was played by Lysette Anthony?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lysette_Anthony>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by M'fundo Morrison?", "Which fictional character was played by M'fundo Morrison?", "Which fictional characters are played by M'fundo Morrison?", "Which fictional characters were played by M'fundo Morrison?", "Who is played by M'fundo Morrison?", "Who was played by M'fundo Morrison?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/M'fundo_Morrison>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by M*A*S*H (TV series)?", "Which fictional character was played by M*A*S*H (TV series)?", "Which fictional characters are played by M*A*S*H (TV series)?", "Which fictional characters were played by M*A*S*H (TV series)?", "Who is played by M*A*S*H (TV series)?", "Who was played by M*A*S*H (TV series)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/M*A*S*H_(TV_series)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by M. C. Gainey?", "Which fictional character was played by M. C. Gainey?", "Which fictional characters are played by M. C. Gainey?", "Which fictional characters were played by M. C. Gainey?", "Who is played by M. C. Gainey?", "Who was played by M. C. Gainey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/M._C._Gainey>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by M. Pokora?", "Which fictional character was played by M. Pokora?", "Which fictional characters are played by M. Pokora?", "Which fictional characters were played by M. Pokora?", "Who is played by M. Pokora?", "Who was played by M. Pokora?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/M._Pokora>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by MASH (film)?", "Which fictional character was played by MASH (film)?", "Which fictional characters are played by MASH (film)?", "Which fictional characters were played by MASH (film)?", "Who is played by MASH (film)?", "Who was played by MASH (film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/MASH_(film)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Mabel Ballin?", "Which fictional character was played by Mabel Ballin?", "Which fictional characters are played by Mabel Ballin?", "Which fictional characters were played by Mabel Ballin?", "Who is played by Mabel Ballin?", "Who was played by Mabel Ballin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mabel_Ballin>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Mabel King?", "Which fictional character was played by Mabel King?", "Which fictional characters are played by Mabel King?", "Which fictional characters were played by Mabel King?", "Who is played by Mabel King?", "Who was played by Mabel King?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mabel_King>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by MacDonald Carey?", "Which fictional character was played by MacDonald Carey?", "Which fictional characters are played by MacDonald Carey?", "Which fictional characters were played by MacDonald Carey?", "Who is played by MacDonald Carey?", "Who was played by MacDonald Carey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/MacDonald_Carey>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by MacKenzie Mauzy?", "Which fictional character was played by MacKenzie Mauzy?", "Which fictional characters are played by MacKenzie Mauzy?", "Which fictional characters were played by MacKenzie Mauzy?", "Who is played by MacKenzie Mauzy?", "Who was played by MacKenzie Mauzy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/MacKenzie_Mauzy>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Macdonald Carey?", "Which fictional character was played by Macdonald Carey?", "Which fictional characters are played by Macdonald Carey?", "Which fictional characters were played by Macdonald Carey?", "Who is played by Macdonald Carey?", "Who was played by Macdonald Carey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Macdonald_Carey>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Machiko Soga?", "Which fictional character was played by Machiko Soga?", "Which fictional characters are played by Machiko Soga?", "Which fictional characters were played by Machiko Soga?", "Who is played by Machiko Soga?", "Who was played by Machiko Soga?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Machiko_Soga>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Mackenyu?", "Which fictional character was played by Mackenyu?", "Which fictional characters are played by Mackenyu?", "Which fictional characters were played by Mackenyu?", "Who is played by Mackenyu?", "Who was played by Mackenyu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mackenyu>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Mackenzie Astin?", "Which fictional character was played by Mackenzie Astin?", "Which fictional characters are played by Mackenzie Astin?", "Which fictional characters were played by Mackenzie Astin?", "Who is played by Mackenzie Astin?", "Who was played by Mackenzie Astin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mackenzie_Astin>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Mackenzie Crook?", "Which fictional character was played by Mackenzie Crook?", "Which fictional characters are played by Mackenzie Crook?", "Which fictional characters were played by Mackenzie Crook?", "Who is played by Mackenzie Crook?", "Who was played by Mackenzie Crook?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mackenzie_Crook>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Mad Max 2?", "Which fictional character was played by Mad Max 2?", "Which fictional characters are played by Mad Max 2?", "Which fictional characters were played by Mad Max 2?", "Who is played by Mad Max 2?", "Who was played by Mad Max 2?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mad_Max_2>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Mad Max Beyond Thunderdome?", "Which fictional character was played by Mad Max Beyond Thunderdome?", "Which fictional characters are played by Mad Max Beyond Thunderdome?", "Which fictional characters were played by Mad Max Beyond Thunderdome?", "Who is played by Mad Max Beyond Thunderdome?", "Who was played by Mad Max Beyond Thunderdome?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mad_Max_Beyond_Thunderdome>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Maddison Brown?", "Which fictional character was played by Maddison Brown?", "Which fictional characters are played by Maddison Brown?", "Which fictional characters were played by Maddison Brown?", "Who is played by Maddison Brown?", "Who was played by Maddison Brown?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Maddison_Brown>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Maddy Hill?", "Which fictional character was played by Maddy Hill?", "Which fictional characters are played by Maddy Hill?", "Which fictional characters were played by Maddy Hill?", "Who is played by Maddy Hill?", "Who was played by Maddy Hill?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Maddy_Hill>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Madelaine Petsch?", "Which fictional character was played by Madelaine Petsch?", "Which fictional characters are played by Madelaine Petsch?", "Which fictional characters were played by Madelaine Petsch?", "Who is played by Madelaine Petsch?", "Who was played by Madelaine Petsch?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madelaine_Petsch>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Madeleine Howard?", "Which fictional character was played by Madeleine Howard?", "Which fictional characters are played by Madeleine Howard?", "Which fictional characters were played by Madeleine Howard?", "Who is played by Madeleine Howard?", "Who was played by Madeleine Howard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madeleine_Howard>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Madeleine West?", "Which fictional character was played by Madeleine West?", "Which fictional characters are played by Madeleine West?", "Which fictional characters were played by Madeleine West?", "Who is played by Madeleine West?", "Who was played by Madeleine West?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madeleine_West>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Madeline Duggan?", "Which fictional character was played by Madeline Duggan?", "Which fictional characters are played by Madeline Duggan?", "Which fictional characters were played by Madeline Duggan?", "Who is played by Madeline Duggan?", "Who was played by Madeline Duggan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madeline_Duggan>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Madeline Kahn?", "Which fictional character was played by Madeline Kahn?", "Which fictional characters are played by Madeline Kahn?", "Which fictional characters were played by Madeline Kahn?", "Who is played by Madeline Kahn?", "Who was played by Madeline Kahn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madeline_Kahn>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Madge Hindle?", "Which fictional character was played by Madge Hindle?", "Which fictional characters are played by Madge Hindle?", "Which fictional characters were played by Madge Hindle?", "Who is played by Madge Hindle?", "Who was played by Madge Hindle?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madge_Hindle>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Madge Kennedy?", "Which fictional character was played by Madge Kennedy?", "Which fictional characters are played by Madge Kennedy?", "Which fictional characters were played by Madge Kennedy?", "Who is played by Madge Kennedy?", "Who was played by Madge Kennedy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madge_Kennedy>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Madhuri Dixit?", "Which fictional character was played by Madhuri Dixit?", "Which fictional characters are played by Madhuri Dixit?", "Which fictional characters were played by Madhuri Dixit?", "Who is played by Madhuri Dixit?", "Who was played by Madhuri Dixit?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madhuri_Dixit>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Madison Davenport?", "Which fictional character was played by Madison Davenport?", "Which fictional characters are played by Madison Davenport?", "Which fictional characters were played by Madison Davenport?", "Who is played by Madison Davenport?", "Who was played by Madison Davenport?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madison_Davenport>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Madison Lintz?", "Which fictional character was played by Madison Lintz?", "Which fictional characters are played by Madison Lintz?", "Which fictional characters were played by Madison Lintz?", "Who is played by Madison Lintz?", "Who was played by Madison Lintz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madison_Lintz>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Madison Square Garden?", "Which fictional character was played by Madison Square Garden?", "Which fictional characters are played by Madison Square Garden?", "Which fictional characters were played by Madison Square Garden?", "Who is played by Madison Square Garden?", "Who was played by Madison Square Garden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madison_Square_Garden>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Mads Mikkelsen?", "Which fictional character was played by Mads Mikkelsen?", "Which fictional characters are played by Mads Mikkelsen?", "Which fictional characters were played by Mads Mikkelsen?", "Who is played by Mads Mikkelsen?", "Who was played by Mads Mikkelsen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mads_Mikkelsen>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by Mae Clarke?", "Which fictional character was played by Mae Clarke?", "Which fictional characters are played by Mae Clarke?", "Which fictional characters were played by Mae Clarke?", "Who is played by Mae Clarke?", "Who was played by Mae Clarke?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mae_Clarke>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to A.B.M. Ruhul Amin Howlader?", "Which person was married to A.B.M. Ruhul Amin Howlader?", "Which persons are married to A.B.M. Ruhul Amin Howlader?", "Which persons were married to A.B.M. Ruhul Amin Howlader?", "Who is married to A.B.M. Ruhul Amin Howlader?", "Who was married to A.B.M. Ruhul Amin Howlader?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A.B.M._Ruhul_Amin_Howlader> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to A.J. Soprano?", "Which person was married to A.J. Soprano?", "Which persons are married to A.J. Soprano?", "Which persons were married to A.J. Soprano?", "Who is married to A.J. Soprano?", "Who was married to A.J. Soprano?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A.J._Soprano> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to A.L. Monsohn Lithography?", "Which person was married to A.L. Monsohn Lithography?", "Which persons are married to A.L. Monsohn Lithography?", "Which persons were married to A.L. Monsohn Lithography?", "Who is married to A.L. Monsohn Lithography?", "Who was married to A.L. Monsohn Lithography?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A.L._Monsohn_Lithography> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to A. L. Vijay?", "Which person was married to A. L. Vijay?", "Which persons are married to A. L. Vijay?", "Which persons were married to A. L. Vijay?", "Who is married to A. L. Vijay?", "Who was married to A. L. Vijay?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._L._Vijay> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to A. W. Martin?", "Which person was married to A. W. Martin?", "Which persons are married to A. W. Martin?", "Which persons were married to A. W. Martin?", "Who is married to A. W. Martin?", "Who was married to A. W. Martin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._W._Martin> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lovely Anand?", "Which person was married to Lovely Anand?", "Which persons are married to Lovely Anand?", "Which persons were married to Lovely Anand?", "Who is married to Lovely Anand?", "Who was married to Lovely Anand?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lovely_Anand> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lowell Bergman?", "Which person was married to Lowell Bergman?", "Which persons are married to Lowell Bergman?", "Which persons were married to Lowell Bergman?", "Who is married to Lowell Bergman?", "Who was married to Lowell Bergman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lowell_Bergman> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lowell Goddard?", "Which person was married to Lowell Goddard?", "Which persons are married to Lowell Goddard?", "Which persons were married to Lowell Goddard?", "Who is married to Lowell Goddard?", "Who was married to Lowell Goddard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lowell_Goddard> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lowell Sherman?", "Which person was married to Lowell Sherman?", "Which persons are married to Lowell Sherman?", "Which persons were married to Lowell Sherman?", "Who is married to Lowell Sherman?", "Who was married to Lowell Sherman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lowell_Sherman> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lu Chen (scientist)?", "Which person was married to Lu Chen (scientist)?", "Which persons are married to Lu Chen (scientist)?", "Which persons were married to Lu Chen (scientist)?", "Who is married to Lu Chen (scientist)?", "Who was married to Lu Chen (scientist)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lu_Chen_(scientist)> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lu Chuan?", "Which person was married to Lu Chuan?", "Which persons are married to Lu Chuan?", "Which persons were married to Lu Chuan?", "Who is married to Lu Chuan?", "Who was married to Lu Chuan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lu_Chuan> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lu Gwei-djen?", "Which person was married to Lu Gwei-djen?", "Which persons are married to Lu Gwei-djen?", "Which persons were married to Lu Gwei-djen?", "Who is married to Lu Gwei-djen?", "Who was married to Lu Gwei-djen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lu_Gwei-djen> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lu Hsiu-yi?", "Which person was married to Lu Hsiu-yi?", "Which persons are married to Lu Hsiu-yi?", "Which persons were married to Lu Hsiu-yi?", "Who is married to Lu Hsiu-yi?", "Who was married to Lu Hsiu-yi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lu_Hsiu-yi> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lu Huinan?", "Which person was married to Lu Huinan?", "Which persons are married to Lu Huinan?", "Which persons were married to Lu Huinan?", "Who is married to Lu Huinan?", "Who was married to Lu Huinan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lu_Huinan> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lu Jing?", "Which person was married to Lu Jing?", "Which persons are married to Lu Jing?", "Which persons were married to Lu Jing?", "Who is married to Lu Jing?", "Who was married to Lu Jing?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lu_Jing> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lu Kang (Three Kingdoms)?", "Which person was married to Lu Kang (Three Kingdoms)?", "Which persons are married to Lu Kang (Three Kingdoms)?", "Which persons were married to Lu Kang (Three Kingdoms)?", "Who is married to Lu Kang (Three Kingdoms)?", "Who was married to Lu Kang (Three Kingdoms)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lu_Kang_(Three_Kingdoms)> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lu Kanru?", "Which person was married to Lu Kanru?", "Which persons are married to Lu Kanru?", "Which persons were married to Lu Kanru?", "Who is married to Lu Kanru?", "Who was married to Lu Kanru?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lu_Kanru> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lu Muzhen?", "Which person was married to Lu Muzhen?", "Which persons are married to Lu Muzhen?", "Which persons were married to Lu Muzhen?", "Who is married to Lu Muzhen?", "Who was married to Lu Muzhen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lu_Muzhen> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lu Xun?", "Which person was married to Lu Xun?", "Which persons are married to Lu Xun?", "Which persons were married to Lu Xun?", "Who is married to Lu Xun?", "Who was married to Lu Xun?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lu_Xun> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lu Xun (Three Kingdoms)?", "Which person was married to Lu Xun (Three Kingdoms)?", "Which persons are married to Lu Xun (Three Kingdoms)?", "Which persons were married to Lu Xun (Three Kingdoms)?", "Who is married to Lu Xun (Three Kingdoms)?", "Who was married to Lu Xun (Three Kingdoms)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lu_Xun_(Three_Kingdoms)> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Luana Patten?", "Which person was married to Luana Patten?", "Which persons are married to Luana Patten?", "Which persons were married to Luana Patten?", "Who is married to Luana Patten?", "Who was married to Luana Patten?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luana_Patten> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Luann de Lesseps?", "Which person was married to Luann de Lesseps?", "Which persons are married to Luann de Lesseps?", "Which persons were married to Luann de Lesseps?", "Who is married to Luann de Lesseps?", "Who was married to Luann de Lesseps?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luann_de_Lesseps> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Luarsab I of Kartli?", "Which person was married to Luarsab I of Kartli?", "Which persons are married to Luarsab I of Kartli?", "Which persons were married to Luarsab I of Kartli?", "Who is married to Luarsab I of Kartli?", "Who was married to Luarsab I of Kartli?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luarsab_I_of_Kartli> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lubov Azria?", "Which person was married to Lubov Azria?", "Which persons are married to Lubov Azria?", "Which persons were married to Lubov Azria?", "Who is married to Lubov Azria?", "Who was married to Lubov Azria?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lubov_Azria> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Luc Besson?", "Which person was married to Luc Besson?", "Which persons are married to Luc Besson?", "Which persons were married to Luc Besson?", "Who is married to Luc Besson?", "Who was married to Luc Besson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luc_Besson> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Luc Leestemaker?", "Which person was married to Luc Leestemaker?", "Which persons are married to Luc Leestemaker?", "Which persons were married to Luc Leestemaker?", "Who is married to Luc Leestemaker?", "Who was married to Luc Leestemaker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luc_Leestemaker> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Luc Tuymans?", "Which person was married to Luc Tuymans?", "Which persons are married to Luc Tuymans?", "Which persons were married to Luc Tuymans?", "Who is married to Luc Tuymans?", "Who was married to Luc Tuymans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luc_Tuymans> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Luca Argentero?", "Which person was married to Luca Argentero?", "Which persons are married to Luca Argentero?", "Which persons were married to Luca Argentero?", "Who is married to Luca Argentero?", "Who was married to Luca Argentero?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luca_Argentero> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Luca Giurato?", "Which person was married to Luca Giurato?", "Which persons are married to Luca Giurato?", "Which persons were married to Luca Giurato?", "Who is married to Luca Giurato?", "Who was married to Luca Giurato?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luca_Giurato> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Luca Ward?", "Which person was married to Luca Ward?", "Which persons are married to Luca Ward?", "Which persons were married to Luca Ward?", "Who is married to Luca Ward?", "Who was married to Luca Ward?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luca_Ward> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Luca Zingaretti?", "Which person was married to Luca Zingaretti?", "Which persons are married to Luca Zingaretti?", "Which persons were married to Luca Zingaretti?", "Who is married to Luca Zingaretti?", "Who was married to Luca Zingaretti?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luca_Zingaretti> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucas Horton?", "Which person was married to Lucas Horton?", "Which persons are married to Lucas Horton?", "Which persons were married to Lucas Horton?", "Who is married to Lucas Horton?", "Who was married to Lucas Horton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucas_Horton> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucas Mendes (journalist)?", "Which person was married to Lucas Mendes (journalist)?", "Which persons are married to Lucas Mendes (journalist)?", "Which persons were married to Lucas Mendes (journalist)?", "Who is married to Lucas Mendes (journalist)?", "Who was married to Lucas Mendes (journalist)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucas_Mendes_(journalist)> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucas Monteverde?", "Which person was married to Lucas Monteverde?", "Which persons are married to Lucas Monteverde?", "Which persons were married to Lucas Monteverde?", "Who is married to Lucas Monteverde?", "Who was married to Lucas Monteverde?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucas_Monteverde> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucas Neff?", "Which person was married to Lucas Neff?", "Which persons are married to Lucas Neff?", "Which persons were married to Lucas Neff?", "Who is married to Lucas Neff?", "Who was married to Lucas Neff?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucas_Neff> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucas Scott?", "Which person was married to Lucas Scott?", "Which persons are married to Lucas Scott?", "Which persons were married to Lucas Scott?", "Who is married to Lucas Scott?", "Who was married to Lucas Scott?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucas_Scott> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucelle Frances Beetham?", "Which person was married to Lucelle Frances Beetham?", "Which persons are married to Lucelle Frances Beetham?", "Which persons were married to Lucelle Frances Beetham?", "Who is married to Lucelle Frances Beetham?", "Who was married to Lucelle Frances Beetham?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucelle_Frances_Beetham> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucette Destouches?", "Which person was married to Lucette Destouches?", "Which persons are married to Lucette Destouches?", "Which persons were married to Lucette Destouches?", "Who is married to Lucette Destouches?", "Who was married to Lucette Destouches?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucette_Destouches> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucette Lagnado?", "Which person was married to Lucette Lagnado?", "Which persons are married to Lucette Lagnado?", "Which persons were married to Lucette Lagnado?", "Who is married to Lucette Lagnado?", "Who was married to Lucette Lagnado?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucette_Lagnado> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucia Bosè?", "Which person was married to Lucia Bosè?", "Which persons are married to Lucia Bosè?", "Which persons were married to Lucia Bosè?", "Who is married to Lucia Bosè?", "Who was married to Lucia Bosè?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucia_Bosè> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucia Casalini Torelli?", "Which person was married to Lucia Casalini Torelli?", "Which persons are married to Lucia Casalini Torelli?", "Which persons were married to Lucia Casalini Torelli?", "Who is married to Lucia Casalini Torelli?", "Who was married to Lucia Casalini Torelli?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucia_Casalini_Torelli> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucia Elizabeth Vestris?", "Which person was married to Lucia Elizabeth Vestris?", "Which persons are married to Lucia Elizabeth Vestris?", "Which persons were married to Lucia Elizabeth Vestris?", "Who is married to Lucia Elizabeth Vestris?", "Who was married to Lucia Elizabeth Vestris?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucia_Elizabeth_Vestris> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucia Fairchild Fuller?", "Which person was married to Lucia Fairchild Fuller?", "Which persons are married to Lucia Fairchild Fuller?", "Which persons were married to Lucia Fairchild Fuller?", "Who is married to Lucia Fairchild Fuller?", "Who was married to Lucia Fairchild Fuller?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucia_Fairchild_Fuller> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucia Migliaccio?", "Which person was married to Lucia Migliaccio?", "Which persons are married to Lucia Migliaccio?", "Which persons were married to Lucia Migliaccio?", "Who is married to Lucia Migliaccio?", "Who was married to Lucia Migliaccio?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucia_Migliaccio> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucia Moholy?", "Which person was married to Lucia Moholy?", "Which persons are married to Lucia Moholy?", "Which persons were married to Lucia Moholy?", "Who is married to Lucia Moholy?", "Who was married to Lucia Moholy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucia_Moholy> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucia Newman?", "Which person was married to Lucia Newman?", "Which persons are married to Lucia Newman?", "Which persons were married to Lucia Newman?", "Who is married to Lucia Newman?", "Who was married to Lucia Newman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucia_Newman> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucia Popp?", "Which person was married to Lucia Popp?", "Which persons are married to Lucia Popp?", "Which persons were married to Lucia Popp?", "Who is married to Lucia Popp?", "Who was married to Lucia Popp?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucia_Popp> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucian Freud?", "Which person was married to Lucian Freud?", "Which persons are married to Lucian Freud?", "Which persons were married to Lucian Freud?", "Who is married to Lucian Freud?", "Who was married to Lucian Freud?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucian_Freud> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Luciana Castellina?", "Which person was married to Luciana Castellina?", "Which persons are married to Luciana Castellina?", "Which persons were married to Luciana Castellina?", "Who is married to Luciana Castellina?", "Who was married to Luciana Castellina?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luciana_Castellina> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Luciana Paluzzi?", "Which person was married to Luciana Paluzzi?", "Which persons are married to Luciana Paluzzi?", "Which persons were married to Luciana Paluzzi?", "Who is married to Luciana Paluzzi?", "Who was married to Luciana Paluzzi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luciana_Paluzzi> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Luciana Pedraza?", "Which person was married to Luciana Pedraza?", "Which persons are married to Luciana Pedraza?", "Which persons were married to Luciana Pedraza?", "Who is married to Luciana Pedraza?", "Who was married to Luciana Pedraza?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luciana_Pedraza> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Luciano Cáceres?", "Which person was married to Luciano Cáceres?", "Which persons are married to Luciano Cáceres?", "Which persons were married to Luciano Cáceres?", "Who is married to Luciano Cáceres?", "Who was married to Luciano Cáceres?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luciano_Cáceres> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Luciano Ercoli?", "Which person was married to Luciano Ercoli?", "Which persons are married to Luciano Ercoli?", "Which persons were married to Luciano Ercoli?", "Who is married to Luciano Ercoli?", "Who was married to Luciano Ercoli?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luciano_Ercoli> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Luciano Huck?", "Which person was married to Luciano Huck?", "Which persons are married to Luciano Huck?", "Which persons were married to Luciano Huck?", "Who is married to Luciano Huck?", "Who was married to Luciano Huck?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luciano_Huck> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Luciano Martino?", "Which person was married to Luciano Martino?", "Which persons are married to Luciano Martino?", "Which persons were married to Luciano Martino?", "Who is married to Luciano Martino?", "Who was married to Luciano Martino?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luciano_Martino> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucie, Lady Duff-Gordon?", "Which person was married to Lucie, Lady Duff-Gordon?", "Which persons are married to Lucie, Lady Duff-Gordon?", "Which persons were married to Lucie, Lady Duff-Gordon?", "Who is married to Lucie, Lady Duff-Gordon?", "Who was married to Lucie, Lady Duff-Gordon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucie,_Lady_Duff-Gordon> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucie Arnaz?", "Which person was married to Lucie Arnaz?", "Which persons are married to Lucie Arnaz?", "Which persons were married to Lucie Arnaz?", "Who is married to Lucie Arnaz?", "Who was married to Lucie Arnaz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucie_Arnaz> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucie Aubrac?", "Which person was married to Lucie Aubrac?", "Which persons are married to Lucie Aubrac?", "Which persons were married to Lucie Aubrac?", "Who is married to Lucie Aubrac?", "Who was married to Lucie Aubrac?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucie_Aubrac> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucie Faure-Goyau?", "Which person was married to Lucie Faure-Goyau?", "Which persons are married to Lucie Faure-Goyau?", "Which persons were married to Lucie Faure-Goyau?", "Who is married to Lucie Faure-Goyau?", "Who was married to Lucie Faure-Goyau?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucie_Faure-Goyau> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucie Green?", "Which person was married to Lucie Green?", "Which persons are married to Lucie Green?", "Which persons were married to Lucie Green?", "Who is married to Lucie Green?", "Who was married to Lucie Green?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucie_Green> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucie Mannheim?", "Which person was married to Lucie Mannheim?", "Which persons are married to Lucie Mannheim?", "Which persons were married to Lucie Mannheim?", "Who is married to Lucie Mannheim?", "Who was married to Lucie Mannheim?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucie_Mannheim> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucie Vondráčková?", "Which person was married to Lucie Vondráčková?", "Which persons are married to Lucie Vondráčková?", "Which persons were married to Lucie Vondráčková?", "Who is married to Lucie Vondráčková?", "Who was married to Lucie Vondráčková?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucie_Vondráčková> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucien Blackwell?", "Which person was married to Lucien Blackwell?", "Which persons are married to Lucien Blackwell?", "Which persons were married to Lucien Blackwell?", "Who is married to Lucien Blackwell?", "Who was married to Lucien Blackwell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucien_Blackwell> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucien Bonaparte?", "Which person was married to Lucien Bonaparte?", "Which persons are married to Lucien Bonaparte?", "Which persons were married to Lucien Bonaparte?", "Who is married to Lucien Bonaparte?", "Who was married to Lucien Bonaparte?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucien_Bonaparte> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucien Neuwirth?", "Which person was married to Lucien Neuwirth?", "Which persons are married to Lucien Neuwirth?", "Which persons were married to Lucien Neuwirth?", "Who is married to Lucien Neuwirth?", "Who was married to Lucien Neuwirth?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucien_Neuwirth> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucien Parent?", "Which person was married to Lucien Parent?", "Which persons are married to Lucien Parent?", "Which persons were married to Lucien Parent?", "Who is married to Lucien Parent?", "Who was married to Lucien Parent?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucien_Parent> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucien Pissarro?", "Which person was married to Lucien Pissarro?", "Which persons are married to Lucien Pissarro?", "Which persons were married to Lucien Pissarro?", "Who is married to Lucien Pissarro?", "Who was married to Lucien Pissarro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucien_Pissarro> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucienne Bloch?", "Which person was married to Lucienne Bloch?", "Which persons are married to Lucienne Bloch?", "Which persons were married to Lucienne Bloch?", "Who is married to Lucienne Bloch?", "Who was married to Lucienne Bloch?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucienne_Bloch> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucienne Boyer?", "Which person was married to Lucienne Boyer?", "Which persons are married to Lucienne Boyer?", "Which persons were married to Lucienne Boyer?", "Who is married to Lucienne Boyer?", "Who was married to Lucienne Boyer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucienne_Boyer> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucienne Day?", "Which person was married to Lucienne Day?", "Which persons are married to Lucienne Day?", "Which persons were married to Lucienne Day?", "Who is married to Lucienne Day?", "Who was married to Lucienne Day?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucienne_Day> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucile Browne?", "Which person was married to Lucile Browne?", "Which persons are married to Lucile Browne?", "Which persons were married to Lucile Browne?", "Who is married to Lucile Browne?", "Who was married to Lucile Browne?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucile_Browne> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucile Gleason?", "Which person was married to Lucile Gleason?", "Which persons are married to Lucile Gleason?", "Which persons were married to Lucile Gleason?", "Who is married to Lucile Gleason?", "Who was married to Lucile Gleason?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucile_Gleason> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucile Hadžihalilović?", "Which person was married to Lucile Hadžihalilović?", "Which persons are married to Lucile Hadžihalilović?", "Which persons were married to Lucile Hadžihalilović?", "Who is married to Lucile Hadžihalilović?", "Who was married to Lucile Hadžihalilović?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucile_Hadžihalilović> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucile Lloyd?", "Which person was married to Lucile Lloyd?", "Which persons are married to Lucile Lloyd?", "Which persons were married to Lucile Lloyd?", "Who is married to Lucile Lloyd?", "Who was married to Lucile Lloyd?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucile_Lloyd> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucile Quarry Mann?", "Which person was married to Lucile Quarry Mann?", "Which persons are married to Lucile Quarry Mann?", "Which persons were married to Lucile Quarry Mann?", "Who is married to Lucile Quarry Mann?", "Who was married to Lucile Quarry Mann?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucile_Quarry_Mann> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucile Saint-Simon?", "Which person was married to Lucile Saint-Simon?", "Which persons are married to Lucile Saint-Simon?", "Which persons were married to Lucile Saint-Simon?", "Who is married to Lucile Saint-Simon?", "Who was married to Lucile Saint-Simon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucile_Saint-Simon> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucile Watson?", "Which person was married to Lucile Watson?", "Which persons are married to Lucile Watson?", "Which persons were married to Lucile Watson?", "Who is married to Lucile Watson?", "Who was married to Lucile Watson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucile_Watson> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucilla?", "Which person was married to Lucilla?", "Which persons are married to Lucilla?", "Which persons were married to Lucilla?", "Who is married to Lucilla?", "Who was married to Lucilla?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucilla> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucille Ball?", "Which person was married to Lucille Ball?", "Which persons are married to Lucille Ball?", "Which persons were married to Lucille Ball?", "Who is married to Lucille Ball?", "Who was married to Lucille Ball?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucille_Ball> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucille Campbell Green Randolph?", "Which person was married to Lucille Campbell Green Randolph?", "Which persons are married to Lucille Campbell Green Randolph?", "Which persons were married to Lucille Campbell Green Randolph?", "Who is married to Lucille Campbell Green Randolph?", "Who was married to Lucille Campbell Green Randolph?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucille_Campbell_Green_Randolph> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucille Farrier Stickel?", "Which person was married to Lucille Farrier Stickel?", "Which persons are married to Lucille Farrier Stickel?", "Which persons were married to Lucille Farrier Stickel?", "Who is married to Lucille Farrier Stickel?", "Who was married to Lucille Farrier Stickel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucille_Farrier_Stickel> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucille Fletcher?", "Which person was married to Lucille Fletcher?", "Which persons are married to Lucille Fletcher?", "Which persons were married to Lucille Fletcher?", "Who is married to Lucille Fletcher?", "Who was married to Lucille Fletcher?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucille_Fletcher> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucille Lortel?", "Which person was married to Lucille Lortel?", "Which persons are married to Lucille Lortel?", "Which persons were married to Lucille Lortel?", "Who is married to Lucille Lortel?", "Who was married to Lucille Lortel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucille_Lortel> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucille P. Markey?", "Which person was married to Lucille P. Markey?", "Which persons are married to Lucille P. Markey?", "Which persons were married to Lucille P. Markey?", "Who is married to Lucille P. Markey?", "Who was married to Lucille P. Markey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucille_P._Markey> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucina da Costa Gomez-Matheeuws?", "Which person was married to Lucina da Costa Gomez-Matheeuws?", "Which persons are married to Lucina da Costa Gomez-Matheeuws?", "Which persons were married to Lucina da Costa Gomez-Matheeuws?", "Who is married to Lucina da Costa Gomez-Matheeuws?", "Who was married to Lucina da Costa Gomez-Matheeuws?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucina_da_Costa_Gomez-Matheeuws> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucinda Creighton?", "Which person was married to Lucinda Creighton?", "Which persons are married to Lucinda Creighton?", "Which persons were married to Lucinda Creighton?", "Who is married to Lucinda Creighton?", "Who was married to Lucinda Creighton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucinda_Creighton> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucinda Dickey?", "Which person was married to Lucinda Dickey?", "Which persons are married to Lucinda Dickey?", "Which persons were married to Lucinda Dickey?", "Who is married to Lucinda Dickey?", "Who was married to Lucinda Dickey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucinda_Dickey> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucinda Franks?", "Which person was married to Lucinda Franks?", "Which persons are married to Lucinda Franks?", "Which persons were married to Lucinda Franks?", "Who is married to Lucinda Franks?", "Who was married to Lucinda Franks?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucinda_Franks> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucinda Gane?", "Which person was married to Lucinda Gane?", "Which persons are married to Lucinda Gane?", "Which persons were married to Lucinda Gane?", "Who is married to Lucinda Gane?", "Who was married to Lucinda Gane?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucinda_Gane> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucinda Hinsdale Stone?", "Which person was married to Lucinda Hinsdale Stone?", "Which persons are married to Lucinda Hinsdale Stone?", "Which persons were married to Lucinda Hinsdale Stone?", "Who is married to Lucinda Hinsdale Stone?", "Who was married to Lucinda Hinsdale Stone?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucinda_Hinsdale_Stone> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucinda Jenney?", "Which person was married to Lucinda Jenney?", "Which persons are married to Lucinda Jenney?", "Which persons were married to Lucinda Jenney?", "Who is married to Lucinda Jenney?", "Who was married to Lucinda Jenney?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucinda_Jenney> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucinda L. Combs?", "Which person was married to Lucinda L. Combs?", "Which persons are married to Lucinda L. Combs?", "Which persons were married to Lucinda L. Combs?", "Who is married to Lucinda L. Combs?", "Who was married to Lucinda L. Combs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucinda_L._Combs> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucinda Lambton?", "Which person was married to Lucinda Lambton?", "Which persons are married to Lucinda Lambton?", "Which persons were married to Lucinda Lambton?", "Who is married to Lucinda Lambton?", "Who was married to Lucinda Lambton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucinda_Lambton> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucinda Walsh?", "Which person was married to Lucinda Walsh?", "Which persons are married to Lucinda Walsh?", "Which persons were married to Lucinda Walsh?", "Who is married to Lucinda Walsh?", "Who was married to Lucinda Walsh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucinda_Walsh> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucinha Lins?", "Which person was married to Lucinha Lins?", "Which persons are married to Lucinha Lins?", "Which persons were married to Lucinha Lins?", "Who is married to Lucinha Lins?", "Who was married to Lucinha Lins?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucinha_Lins> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucio Norberto Mansilla?", "Which person was married to Lucio Norberto Mansilla?", "Which persons are married to Lucio Norberto Mansilla?", "Which persons were married to Lucio Norberto Mansilla?", "Who is married to Lucio Norberto Mansilla?", "Who was married to Lucio Norberto Mansilla?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucio_Norberto_Mansilla> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucio San Pedro?", "Which person was married to Lucio San Pedro?", "Which persons are married to Lucio San Pedro?", "Which persons were married to Lucio San Pedro?", "Who is married to Lucio San Pedro?", "Who was married to Lucio San Pedro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucio_San_Pedro> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucio and Simplicio Godina?", "Which person was married to Lucio and Simplicio Godina?", "Which persons are married to Lucio and Simplicio Godina?", "Which persons were married to Lucio and Simplicio Godina?", "Who is married to Lucio and Simplicio Godina?", "Who was married to Lucio and Simplicio Godina?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucio_and_Simplicio_Godina> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucius Aelius?", "Which person was married to Lucius Aelius?", "Which persons are married to Lucius Aelius?", "Which persons were married to Lucius Aelius?", "Who is married to Lucius Aelius?", "Who was married to Lucius Aelius?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucius_Aelius> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to Lucius Cary, 10th Viscount Falkland?", "Which person was married to Lucius Cary, 10th Viscount Falkland?", "Which persons are married to Lucius Cary, 10th Viscount Falkland?", "Which persons were married to Lucius Cary, 10th Viscount Falkland?", "Who is married to Lucius Cary, 10th Viscount Falkland?", "Who was married to Lucius Cary, 10th Viscount Falkland?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucius_Cary,_10th_Viscount_Falkland> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2013 Hialeah shooting?", "What was born in 2013 Hialeah shooting?", "Which person is born in 2013 Hialeah shooting?", "Which person was born in 2013 Hialeah shooting?", "Which persons are born in 2013 Hialeah shooting?", "Which persons were born in 2013 Hialeah shooting?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Hialeah_shooting> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2013 Santa Monica shooting?", "What was born in 2013 Santa Monica shooting?", "Which person is born in 2013 Santa Monica shooting?", "Which person was born in 2013 Santa Monica shooting?", "Which persons are born in 2013 Santa Monica shooting?", "Which persons were born in 2013 Santa Monica shooting?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Santa_Monica_shooting> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2014 Fort Hood shooting?", "What was born in 2014 Fort Hood shooting?", "Which person is born in 2014 Fort Hood shooting?", "Which person was born in 2014 Fort Hood shooting?", "Which persons are born in 2014 Fort Hood shooting?", "Which persons were born in 2014 Fort Hood shooting?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2014_Fort_Hood_shooting> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2014 Isla Vista killings?", "What was born in 2014 Isla Vista killings?", "Which person is born in 2014 Isla Vista killings?", "Which person was born in 2014 Isla Vista killings?", "Which persons are born in 2014 Isla Vista killings?", "Which persons were born in 2014 Isla Vista killings?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2014_Isla_Vista_killings> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2014 Las Vegas shootings?", "What was born in 2014 Las Vegas shootings?", "Which person is born in 2014 Las Vegas shootings?", "Which person was born in 2014 Las Vegas shootings?", "Which persons are born in 2014 Las Vegas shootings?", "Which persons were born in 2014 Las Vegas shootings?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2014_Las_Vegas_shootings> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2014 killings of NYPD officers?", "What was born in 2014 killings of NYPD officers?", "Which person is born in 2014 killings of NYPD officers?", "Which person was born in 2014 killings of NYPD officers?", "Which persons are born in 2014 killings of NYPD officers?", "Which persons were born in 2014 killings of NYPD officers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2014_killings_of_NYPD_officers> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2014 shootings at Parliament Hill, Ottawa?", "What was born in 2014 shootings at Parliament Hill, Ottawa?", "Which person is born in 2014 shootings at Parliament Hill, Ottawa?", "Which person was born in 2014 shootings at Parliament Hill, Ottawa?", "Which persons are born in 2014 shootings at Parliament Hill, Ottawa?", "Which persons were born in 2014 shootings at Parliament Hill, Ottawa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2014_shootings_at_Parliament_Hill,_Ottawa> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2015 Chattanooga shootings?", "What was born in 2015 Chattanooga shootings?", "Which person is born in 2015 Chattanooga shootings?", "Which person was born in 2015 Chattanooga shootings?", "Which persons are born in 2015 Chattanooga shootings?", "Which persons were born in 2015 Chattanooga shootings?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2015_Chattanooga_shootings> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2015 Lafayette shooting?", "What was born in 2015 Lafayette shooting?", "Which person is born in 2015 Lafayette shooting?", "Which person was born in 2015 Lafayette shooting?", "Which persons are born in 2015 Lafayette shooting?", "Which persons were born in 2015 Lafayette shooting?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2015_Lafayette_shooting> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2015 Parramatta shooting?", "What was born in 2015 Parramatta shooting?", "Which person is born in 2015 Parramatta shooting?", "Which person was born in 2015 Parramatta shooting?", "Which persons are born in 2015 Parramatta shooting?", "Which persons were born in 2015 Parramatta shooting?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2015_Parramatta_shooting> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2015 Sousse attacks?", "What was born in 2015 Sousse attacks?", "Which person is born in 2015 Sousse attacks?", "Which person was born in 2015 Sousse attacks?", "Which persons are born in 2015 Sousse attacks?", "Which persons were born in 2015 Sousse attacks?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2015_Sousse_attacks> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2016 Berlin truck attack?", "What was born in 2016 Berlin truck attack?", "Which person is born in 2016 Berlin truck attack?", "Which person was born in 2016 Berlin truck attack?", "Which persons are born in 2016 Berlin truck attack?", "Which persons were born in 2016 Berlin truck attack?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2016_Berlin_truck_attack> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2016 Munich shooting?", "What was born in 2016 Munich shooting?", "Which person is born in 2016 Munich shooting?", "Which person was born in 2016 Munich shooting?", "Which persons are born in 2016 Munich shooting?", "Which persons were born in 2016 Munich shooting?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2016_Munich_shooting> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2016 New York and New Jersey bombings?", "What was born in 2016 New York and New Jersey bombings?", "Which person is born in 2016 New York and New Jersey bombings?", "Which person was born in 2016 New York and New Jersey bombings?", "Which persons are born in 2016 New York and New Jersey bombings?", "Which persons were born in 2016 New York and New Jersey bombings?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2016_New_York_and_New_Jersey_bombings> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2016 UCLA shooting?", "What was born in 2016 UCLA shooting?", "Which person is born in 2016 UCLA shooting?", "Which person was born in 2016 UCLA shooting?", "Which persons are born in 2016 UCLA shooting?", "Which persons were born in 2016 UCLA shooting?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2016_UCLA_shooting> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2016 shooting of Almaty police officers?", "What was born in 2016 shooting of Almaty police officers?", "Which person is born in 2016 shooting of Almaty police officers?", "Which person was born in 2016 shooting of Almaty police officers?", "Which persons are born in 2016 shooting of Almaty police officers?", "Which persons were born in 2016 shooting of Almaty police officers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2016_shooting_of_Almaty_police_officers> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2016 shooting of Baton Rouge police officers?", "What was born in 2016 shooting of Baton Rouge police officers?", "Which person is born in 2016 shooting of Baton Rouge police officers?", "Which person was born in 2016 shooting of Baton Rouge police officers?", "Which persons are born in 2016 shooting of Baton Rouge police officers?", "Which persons were born in 2016 shooting of Baton Rouge police officers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2016_shooting_of_Baton_Rouge_police_officers> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2016 shooting of Dallas police officers?", "What was born in 2016 shooting of Dallas police officers?", "Which person is born in 2016 shooting of Dallas police officers?", "Which person was born in 2016 shooting of Dallas police officers?", "Which persons are born in 2016 shooting of Dallas police officers?", "Which persons were born in 2016 shooting of Dallas police officers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2016_shooting_of_Dallas_police_officers> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2017 Fresno shooting spree?", "What was born in 2017 Fresno shooting spree?", "Which person is born in 2017 Fresno shooting spree?", "Which person was born in 2017 Fresno shooting spree?", "Which persons are born in 2017 Fresno shooting spree?", "Which persons were born in 2017 Fresno shooting spree?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2017_Fresno_shooting_spree> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2017 New York City truck attack?", "What was born in 2017 New York City truck attack?", "Which person is born in 2017 New York City truck attack?", "Which person was born in 2017 New York City truck attack?", "Which persons are born in 2017 New York City truck attack?", "Which persons were born in 2017 New York City truck attack?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2017_New_York_City_truck_attack> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in 7669 (group)?", "What was born in 7669 (group)?", "Which person is born in 7669 (group)?", "Which person was born in 7669 (group)?", "Which persons are born in 7669 (group)?", "Which persons were born in 7669 (group)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/7669_(group)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A.Chal?", "What was born in A.Chal?", "Which person is born in A.Chal?", "Which person was born in A.Chal?", "Which persons are born in A.Chal?", "Which persons were born in A.Chal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A.Chal> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A.D.O.R.?", "What was born in A.D.O.R.?", "Which person is born in A.D.O.R.?", "Which person was born in A.D.O.R.?", "Which persons are born in A.D.O.R.?", "Which persons were born in A.D.O.R.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A.D.O.R.> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A.E. Dick Howard?", "What was born in A.E. Dick Howard?", "Which person is born in A.E. Dick Howard?", "Which person was born in A.E. Dick Howard?", "Which persons are born in A.E. Dick Howard?", "Which persons were born in A.E. Dick Howard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A.E._Dick_Howard> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A.E. Hanson?", "What was born in A.E. Hanson?", "Which person is born in A.E. Hanson?", "Which person was born in A.E. Hanson?", "Which persons are born in A.E. Hanson?", "Which persons were born in A.E. Hanson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A.E._Hanson> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A.G. Syjuco?", "What was born in A.G. Syjuco?", "Which person is born in A.G. Syjuco?", "Which person was born in A.G. Syjuco?", "Which persons are born in A.G. Syjuco?", "Which persons were born in A.G. Syjuco?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A.G._Syjuco> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A.J. Applegate?", "What was born in A.J. Applegate?", "Which person is born in A.J. Applegate?", "Which person was born in A.J. Applegate?", "Which persons are born in A.J. Applegate?", "Which persons were born in A.J. Applegate?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A.J._Applegate> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A.L. Monsohn Lithography?", "What was born in A.L. Monsohn Lithography?", "Which person is born in A.L. Monsohn Lithography?", "Which person was born in A.L. Monsohn Lithography?", "Which persons are born in A.L. Monsohn Lithography?", "Which persons were born in A.L. Monsohn Lithography?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A.L._Monsohn_Lithography> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A.M. Parkin?", "What was born in A.M. Parkin?", "Which person is born in A.M. Parkin?", "Which person was born in A.M. Parkin?", "Which persons are born in A.M. Parkin?", "Which persons were born in A.M. Parkin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A.M._Parkin> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A.M. SNiPER?", "What was born in A.M. SNiPER?", "Which person is born in A.M. SNiPER?", "Which person was born in A.M. SNiPER?", "Which persons are born in A.M. SNiPER?", "Which persons were born in A.M. SNiPER?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A.M._SNiPER> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A.N.M. Ehsanul Hoque Milan?", "What was born in A.N.M. Ehsanul Hoque Milan?", "Which person is born in A.N.M. Ehsanul Hoque Milan?", "Which person was born in A.N.M. Ehsanul Hoque Milan?", "Which persons are born in A.N.M. Ehsanul Hoque Milan?", "Which persons were born in A.N.M. Ehsanul Hoque Milan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A.N.M._Ehsanul_Hoque_Milan> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. A. Bondy?", "What was born in A. A. Bondy?", "Which person is born in A. A. Bondy?", "Which person was born in A. A. Bondy?", "Which persons are born in A. A. Bondy?", "Which persons were born in A. A. Bondy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._A._Bondy> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. A. H. Tuttle?", "What was born in A. A. H. Tuttle?", "Which person is born in A. A. H. Tuttle?", "Which person was born in A. A. H. Tuttle?", "Which persons are born in A. A. H. Tuttle?", "Which persons were born in A. A. H. Tuttle?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._A._H._Tuttle> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. A. Khan (academic)?", "What was born in A. A. Khan (academic)?", "Which person is born in A. A. Khan (academic)?", "Which person was born in A. A. Khan (academic)?", "Which persons are born in A. A. Khan (academic)?", "Which persons were born in A. A. Khan (academic)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._A._Khan_(academic)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Andrews?", "What was born in A. Andrews?", "Which person is born in A. Andrews?", "Which person was born in A. Andrews?", "Which persons are born in A. Andrews?", "Which persons were born in A. Andrews?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Andrews> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. B. Colton?", "What was born in A. B. Colton?", "Which person is born in A. B. Colton?", "Which person was born in A. B. Colton?", "Which persons are born in A. B. Colton?", "Which persons were born in A. B. Colton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._B._Colton> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. B. Creeke?", "What was born in A. B. Creeke?", "Which person is born in A. B. Creeke?", "Which person was born in A. B. Creeke?", "Which persons are born in A. B. Creeke?", "Which persons were born in A. B. Creeke?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._B._Creeke> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. B. Guthrie Jr.?", "What was born in A. B. Guthrie Jr.?", "Which person is born in A. B. Guthrie Jr.?", "Which person was born in A. B. Guthrie Jr.?", "Which persons are born in A. B. Guthrie Jr.?", "Which persons were born in A. B. Guthrie Jr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._B._Guthrie_Jr.> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. B. Imeson?", "What was born in A. B. Imeson?", "Which person is born in A. B. Imeson?", "Which person was born in A. B. Imeson?", "Which persons are born in A. B. Imeson?", "Which persons were born in A. B. Imeson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._B._Imeson> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. B. Lull?", "What was born in A. B. Lull?", "Which person is born in A. B. Lull?", "Which person was born in A. B. Lull?", "Which persons are born in A. B. Lull?", "Which persons were born in A. B. Lull?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._B._Lull> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Bernard Ackerman?", "What was born in A. Bernard Ackerman?", "Which person is born in A. Bernard Ackerman?", "Which person was born in A. Bernard Ackerman?", "Which persons are born in A. Bernard Ackerman?", "Which persons were born in A. Bernard Ackerman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Bernard_Ackerman> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Blaine Bowman?", "What was born in A. Blaine Bowman?", "Which person is born in A. Blaine Bowman?", "Which person was born in A. Blaine Bowman?", "Which persons are born in A. Blaine Bowman?", "Which persons were born in A. Blaine Bowman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Blaine_Bowman> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Brown Moore?", "What was born in A. Brown Moore?", "Which person is born in A. Brown Moore?", "Which person was born in A. Brown Moore?", "Which persons are born in A. Brown Moore?", "Which persons were born in A. Brown Moore?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Brown_Moore> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. C. Lyons?", "What was born in A. C. Lyons?", "Which person is born in A. C. Lyons?", "Which person was born in A. C. Lyons?", "Which persons are born in A. C. Lyons?", "Which persons were born in A. C. Lyons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._C._Lyons> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. C. Shanmugam?", "What was born in A. C. Shanmugam?", "Which person is born in A. C. Shanmugam?", "Which person was born in A. C. Shanmugam?", "Which persons are born in A. C. Shanmugam?", "Which persons were born in A. C. Shanmugam?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._C._Shanmugam> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. C. Wise?", "What was born in A. C. Wise?", "Which person is born in A. C. Wise?", "Which person was born in A. C. Wise?", "Which persons are born in A. C. Wise?", "Which persons were born in A. C. Wise?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._C._Wise> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Clarence Jones?", "What was born in A. Clarence Jones?", "Which person is born in A. Clarence Jones?", "Which person was born in A. Clarence Jones?", "Which persons are born in A. Clarence Jones?", "Which persons were born in A. Clarence Jones?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Clarence_Jones> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Clifford Jones?", "What was born in A. Clifford Jones?", "Which person is born in A. Clifford Jones?", "Which person was born in A. Clifford Jones?", "Which persons are born in A. Clifford Jones?", "Which persons were born in A. Clifford Jones?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Clifford_Jones> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. D. Patel?", "What was born in A. D. Patel?", "Which person is born in A. D. Patel?", "Which person was born in A. D. Patel?", "Which persons are born in A. D. Patel?", "Which persons were born in A. D. Patel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._D._Patel> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. DeWade Langley?", "What was born in A. DeWade Langley?", "Which person is born in A. DeWade Langley?", "Which person was born in A. DeWade Langley?", "Which persons are born in A. DeWade Langley?", "Which persons were born in A. DeWade Langley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._DeWade_Langley> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Duncan Carse?", "What was born in A. Duncan Carse?", "Which person is born in A. Duncan Carse?", "Which person was born in A. Duncan Carse?", "Which persons are born in A. Duncan Carse?", "Which persons were born in A. Duncan Carse?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Duncan_Carse> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. E. Coleby?", "What was born in A. E. Coleby?", "Which person is born in A. E. Coleby?", "Which person was born in A. E. Coleby?", "Which persons are born in A. E. Coleby?", "Which persons were born in A. E. Coleby?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._E._Coleby> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. F. K. Organski?", "What was born in A. F. K. Organski?", "Which person is born in A. F. K. Organski?", "Which person was born in A. F. K. Organski?", "Which persons are born in A. F. K. Organski?", "Which persons were born in A. F. K. Organski?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._F._K._Organski> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. G. Harbaugh?", "What was born in A. G. Harbaugh?", "Which person is born in A. G. Harbaugh?", "Which person was born in A. G. Harbaugh?", "Which persons are born in A. G. Harbaugh?", "Which persons were born in A. G. Harbaugh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._G._Harbaugh> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. G. K. Gokhale?", "What was born in A. G. K. Gokhale?", "Which person is born in A. G. K. Gokhale?", "Which person was born in A. G. K. Gokhale?", "Which persons are born in A. G. K. Gokhale?", "Which persons were born in A. G. K. Gokhale?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._G._K._Gokhale> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Ganeshkumar?", "What was born in A. Ganeshkumar?", "Which person is born in A. Ganeshkumar?", "Which person was born in A. Ganeshkumar?", "Which persons are born in A. Ganeshkumar?", "Which persons were born in A. Ganeshkumar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Ganeshkumar> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Gilbert Wright?", "What was born in A. Gilbert Wright?", "Which person is born in A. Gilbert Wright?", "Which person was born in A. Gilbert Wright?", "Which persons are born in A. Gilbert Wright?", "Which persons were born in A. Gilbert Wright?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Gilbert_Wright> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Gnanathasan?", "What was born in A. Gnanathasan?", "Which person is born in A. Gnanathasan?", "Which person was born in A. Gnanathasan?", "Which persons are born in A. Gnanathasan?", "Which persons were born in A. Gnanathasan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Gnanathasan> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Gordon Wetmore?", "What was born in A. Gordon Wetmore?", "Which person is born in A. Gordon Wetmore?", "Which person was born in A. Gordon Wetmore?", "Which persons are born in A. Gordon Wetmore?", "Which persons were born in A. Gordon Wetmore?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Gordon_Wetmore> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Grove Day?", "What was born in A. Grove Day?", "Which person is born in A. Grove Day?", "Which person was born in A. Grove Day?", "Which persons are born in A. Grove Day?", "Which persons were born in A. Grove Day?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Grove_Day> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. H. Albut?", "What was born in A. H. Albut?", "Which person is born in A. H. Albut?", "Which person was born in A. H. Albut?", "Which persons are born in A. H. Albut?", "Which persons were born in A. H. Albut?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._H._Albut> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. H. Hornby?", "What was born in A. H. Hornby?", "Which person is born in A. H. Hornby?", "Which person was born in A. H. Hornby?", "Which persons are born in A. H. Hornby?", "Which persons were born in A. H. Hornby?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._H._Hornby> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. J. B. Johnston?", "What was born in A. J. B. Johnston?", "Which person is born in A. J. B. Johnston?", "Which person was born in A. J. B. Johnston?", "Which persons are born in A. J. B. Johnston?", "Which persons were born in A. J. B. Johnston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._J._B._Johnston> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. J. Benza?", "What was born in A. J. Benza?", "Which person is born in A. J. Benza?", "Which person was born in A. J. Benza?", "Which persons are born in A. J. Benza?", "Which persons were born in A. J. Benza?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._J._Benza> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. J. Bernheim Brush?", "What was born in A. J. Bernheim Brush?", "Which person is born in A. J. Bernheim Brush?", "Which person was born in A. J. Bernheim Brush?", "Which persons are born in A. J. Bernheim Brush?", "Which persons were born in A. J. Bernheim Brush?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._J._Bernheim_Brush> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. J. Healy?", "What was born in A. J. Healy?", "Which person is born in A. J. Healy?", "Which person was born in A. J. Healy?", "Which persons are born in A. J. Healy?", "Which persons were born in A. J. Healy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._J._Healy> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. J. Mogis?", "What was born in A. J. Mogis?", "Which person is born in A. J. Mogis?", "Which person was born in A. J. Mogis?", "Which persons are born in A. J. Mogis?", "Which persons were born in A. J. Mogis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._J._Mogis> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. J. Preller?", "What was born in A. J. Preller?", "Which person is born in A. J. Preller?", "Which person was born in A. J. Preller?", "Which persons are born in A. J. Preller?", "Which persons were born in A. J. Preller?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._J._Preller> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. J. Reynolds?", "What was born in A. J. Reynolds?", "Which person is born in A. J. Reynolds?", "Which person was born in A. J. Reynolds?", "Which persons are born in A. J. Reynolds?", "Which persons were born in A. J. Reynolds?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._J._Reynolds> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Johnkumar?", "What was born in A. Johnkumar?", "Which person is born in A. Johnkumar?", "Which person was born in A. Johnkumar?", "Which persons are born in A. Johnkumar?", "Which persons were born in A. Johnkumar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Johnkumar> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. K. Brohi?", "What was born in A. K. Brohi?", "Which person is born in A. K. Brohi?", "Which person was born in A. K. Brohi?", "Which persons are born in A. K. Brohi?", "Which persons were born in A. K. Brohi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._K._Brohi> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. K. M. Shahidul Haque?", "What was born in A. K. M. Shahidul Haque?", "Which person is born in A. K. M. Shahidul Haque?", "Which person was born in A. K. M. Shahidul Haque?", "Which persons are born in A. K. M. Shahidul Haque?", "Which persons were born in A. K. M. Shahidul Haque?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._K._M._Shahidul_Haque> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. K. Narain?", "What was born in A. K. Narain?", "Which person is born in A. K. Narain?", "Which person was born in A. K. Narain?", "Which persons are born in A. K. Narain?", "Which persons were born in A. K. Narain?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._K._Narain> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. K. Patel?", "What was born in A. K. Patel?", "Which person is born in A. K. Patel?", "Which person was born in A. K. Patel?", "Which persons are born in A. K. Patel?", "Which persons were born in A. K. Patel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._K._Patel> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. K. Veerasami?", "What was born in A. K. Veerasami?", "Which person is born in A. K. Veerasami?", "Which person was born in A. K. Veerasami?", "Which persons are born in A. K. Veerasami?", "Which persons were born in A. K. Veerasami?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._K._Veerasami> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Karunakaran?", "What was born in A. Karunakaran?", "Which person is born in A. Karunakaran?", "Which person was born in A. Karunakaran?", "Which persons are born in A. Karunakaran?", "Which persons were born in A. Karunakaran?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Karunakaran> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. L. Narayan?", "What was born in A. L. Narayan?", "Which person is born in A. L. Narayan?", "Which person was born in A. L. Narayan?", "Which persons are born in A. L. Narayan?", "Which persons were born in A. L. Narayan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._L._Narayan> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. L. Raghavan?", "What was born in A. L. Raghavan?", "Which person is born in A. L. Raghavan?", "Which person was born in A. L. Raghavan?", "Which persons are born in A. L. Raghavan?", "Which persons were born in A. L. Raghavan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._L._Raghavan> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. L. Ramesh?", "What was born in A. L. Ramesh?", "Which person is born in A. L. Ramesh?", "Which person was born in A. L. Ramesh?", "Which persons are born in A. L. Ramesh?", "Which persons were born in A. L. Ramesh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._L._Ramesh> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. L. Vijay?", "What was born in A. L. Vijay?", "Which person is born in A. L. Vijay?", "Which person was born in A. L. Vijay?", "Which persons are born in A. L. Vijay?", "Which persons were born in A. L. Vijay?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._L._Vijay> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. M. M. Naushad?", "What was born in A. M. M. Naushad?", "Which person is born in A. M. M. Naushad?", "Which person was born in A. M. M. Naushad?", "Which persons are born in A. M. M. Naushad?", "Which persons were born in A. M. M. Naushad?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._M._M._Naushad> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. M. Mathai?", "What was born in A. M. Mathai?", "Which person is born in A. M. Mathai?", "Which person was born in A. M. Mathai?", "Which persons are born in A. M. Mathai?", "Which persons were born in A. M. Mathai?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._M._Mathai> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Mangalam?", "What was born in A. Mangalam?", "Which person is born in A. Mangalam?", "Which person was born in A. Mangalam?", "Which persons are born in A. Mangalam?", "Which persons were born in A. Mangalam?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Mangalam> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. N. Gopal?", "What was born in A. N. Gopal?", "Which person is born in A. N. Gopal?", "Which person was born in A. N. Gopal?", "Which persons are born in A. N. Gopal?", "Which persons were born in A. N. Gopal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._N._Gopal> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Oveta Fuller?", "What was born in A. Oveta Fuller?", "Which person is born in A. Oveta Fuller?", "Which person was born in A. Oveta Fuller?", "Which persons are born in A. Oveta Fuller?", "Which persons were born in A. Oveta Fuller?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Oveta_Fuller> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. P. Mda?", "What was born in A. P. Mda?", "Which person is born in A. P. Mda?", "Which person was born in A. P. Mda?", "Which persons are born in A. P. Mda?", "Which persons were born in A. P. Mda?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._P._Mda> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. P. Patro?", "What was born in A. P. Patro?", "Which person is born in A. P. Patro?", "Which person was born in A. P. Patro?", "Which persons are born in A. P. Patro?", "Which persons were born in A. P. Patro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._P._Patro> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. R. Krishnashastry?", "What was born in A. R. Krishnashastry?", "Which person is born in A. R. Krishnashastry?", "Which person was born in A. R. Krishnashastry?", "Which persons are born in A. R. Krishnashastry?", "Which persons were born in A. R. Krishnashastry?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._R._Krishnashastry> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. R. Mallu?", "What was born in A. R. Mallu?", "Which person is born in A. R. Mallu?", "Which person was born in A. R. Mallu?", "Which persons are born in A. R. Mallu?", "Which persons were born in A. R. Mallu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._R._Mallu> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. R. Taylor?", "What was born in A. R. Taylor?", "Which person is born in A. R. Taylor?", "Which person was born in A. R. Taylor?", "Which persons are born in A. R. Taylor?", "Which persons were born in A. R. Taylor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._R._Taylor> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Rajagopal?", "What was born in A. Rajagopal?", "Which person is born in A. Rajagopal?", "Which person was born in A. Rajagopal?", "Which persons are born in A. Rajagopal?", "Which persons were born in A. Rajagopal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Rajagopal> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Ranganadha Rao?", "What was born in A. Ranganadha Rao?", "Which person is born in A. Ranganadha Rao?", "Which person was born in A. Ranganadha Rao?", "Which persons are born in A. Ranganadha Rao?", "Which persons were born in A. Ranganadha Rao?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Ranganadha_Rao> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Rangaswami Iyengar?", "What was born in A. Rangaswami Iyengar?", "Which person is born in A. Rangaswami Iyengar?", "Which person was born in A. Rangaswami Iyengar?", "Which persons are born in A. Rangaswami Iyengar?", "Which persons were born in A. Rangaswami Iyengar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Rangaswami_Iyengar> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Roberto Frisancho?", "What was born in A. Roberto Frisancho?", "Which person is born in A. Roberto Frisancho?", "Which person was born in A. Roberto Frisancho?", "Which persons are born in A. Roberto Frisancho?", "Which persons were born in A. Roberto Frisancho?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Roberto_Frisancho> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. S. Arya?", "What was born in A. S. Arya?", "Which person is born in A. S. Arya?", "Which person was born in A. S. Arya?", "Which persons are born in A. S. Arya?", "Which persons were born in A. S. Arya?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._S._Arya> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. S. Baylinson?", "What was born in A. S. Baylinson?", "Which person is born in A. S. Baylinson?", "Which person was born in A. S. Baylinson?", "Which persons are born in A. S. Baylinson?", "Which persons were born in A. S. Baylinson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._S._Baylinson> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. S. Patrić?", "What was born in A. S. Patrić?", "Which person is born in A. S. Patrić?", "Which person was born in A. S. Patrić?", "Which persons are born in A. S. Patrić?", "Which persons were born in A. S. Patrić?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._S._Patrić> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. S. Rao?", "What was born in A. S. Rao?", "Which person is born in A. S. Rao?", "Which person was born in A. S. Rao?", "Which persons are born in A. S. Rao?", "Which persons were born in A. S. Rao?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._S._Rao> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. S. W. Rosenbach?", "What was born in A. S. W. Rosenbach?", "Which person is born in A. S. W. Rosenbach?", "Which person was born in A. S. W. Rosenbach?", "Which persons are born in A. S. W. Rosenbach?", "Which persons were born in A. S. W. Rosenbach?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._S._W._Rosenbach> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Sakunthala?", "What was born in A. Sakunthala?", "Which person is born in A. Sakunthala?", "Which person was born in A. Sakunthala?", "Which persons are born in A. Sakunthala?", "Which persons were born in A. Sakunthala?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Sakunthala> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2013 Hialeah shooting?", "What was born in 2013 Hialeah shooting?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Hialeah_shooting> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2013 Santa Monica shooting?", "What was born in 2013 Santa Monica shooting?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Santa_Monica_shooting> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2014 Colchester murders?", "What was born in 2014 Colchester murders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2014_Colchester_murders> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2014 Fort Hood shooting?", "What was born in 2014 Fort Hood shooting?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2014_Fort_Hood_shooting> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2014 Isla Vista killings?", "What was born in 2014 Isla Vista killings?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2014_Isla_Vista_killings> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2014 Las Vegas shootings?", "What was born in 2014 Las Vegas shootings?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2014_Las_Vegas_shootings> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2014 killings of NYPD officers?", "What was born in 2014 killings of NYPD officers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2014_killings_of_NYPD_officers> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2014 shootings at Parliament Hill, Ottawa?", "What was born in 2014 shootings at Parliament Hill, Ottawa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2014_shootings_at_Parliament_Hill,_Ottawa> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2015 Chattanooga shootings?", "What was born in 2015 Chattanooga shootings?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2015_Chattanooga_shootings> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2015 Lafayette shooting?", "What was born in 2015 Lafayette shooting?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2015_Lafayette_shooting> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2015 Parramatta shooting?", "What was born in 2015 Parramatta shooting?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2015_Parramatta_shooting> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2015 Sousse attacks?", "What was born in 2015 Sousse attacks?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2015_Sousse_attacks> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2016 Berlin truck attack?", "What was born in 2016 Berlin truck attack?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2016_Berlin_truck_attack> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2016 Kalamazoo shootings?", "What was born in 2016 Kalamazoo shootings?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2016_Kalamazoo_shootings> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2016 Munich shooting?", "What was born in 2016 Munich shooting?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2016_Munich_shooting> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2016 New York and New Jersey bombings?", "What was born in 2016 New York and New Jersey bombings?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2016_New_York_and_New_Jersey_bombings> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2016 UCLA shooting?", "What was born in 2016 UCLA shooting?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2016_UCLA_shooting> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2016 shooting of Almaty police officers?", "What was born in 2016 shooting of Almaty police officers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2016_shooting_of_Almaty_police_officers> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2016 shooting of Baton Rouge police officers?", "What was born in 2016 shooting of Baton Rouge police officers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2016_shooting_of_Baton_Rouge_police_officers> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2016 shooting of Dallas police officers?", "What was born in 2016 shooting of Dallas police officers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2016_shooting_of_Dallas_police_officers> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2017 Fresno shooting spree?", "What was born in 2017 Fresno shooting spree?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2017_Fresno_shooting_spree> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2017 New York City truck attack?", "What was born in 2017 New York City truck attack?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2017_New_York_City_truck_attack> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in 2017 Resorts World Manila attack?", "What was born in 2017 Resorts World Manila attack?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2017_Resorts_World_Manila_attack> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A.Chal?", "What was born in A.Chal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A.Chal> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A.D.M. Cooper?", "What was born in A.D.M. Cooper?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A.D.M._Cooper> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A.E. Hanson?", "What was born in A.E. Hanson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A.E._Hanson> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A.M. Parkin?", "What was born in A.M. Parkin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A.M._Parkin> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A.N.M. Ehsanul Hoque Milan?", "What was born in A.N.M. Ehsanul Hoque Milan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A.N.M._Ehsanul_Hoque_Milan> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. A. Englander?", "What was born in A. A. Englander?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._A._Englander> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Aslam Basha?", "What was born in A. Aslam Basha?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Aslam_Basha> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. B. Colton?", "What was born in A. B. Colton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._B._Colton> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. B. Creeke?", "What was born in A. B. Creeke?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._B._Creeke> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. B. Guthrie Jr.?", "What was born in A. B. Guthrie Jr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._B._Guthrie_Jr.> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Bernard Ackerman?", "What was born in A. Bernard Ackerman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Bernard_Ackerman> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Brown Moore?", "What was born in A. Brown Moore?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Brown_Moore> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. C. Lyons?", "What was born in A. C. Lyons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._C._Lyons> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Clifford Jones?", "What was born in A. Clifford Jones?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Clifford_Jones> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. D. Patel?", "What was born in A. D. Patel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._D._Patel> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. F. K. Organski?", "What was born in A. F. K. Organski?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._F._K._Organski> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. F. N. Everett?", "What was born in A. F. N. Everett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._F._N._Everett> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Fredric Leopold?", "What was born in A. Fredric Leopold?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Fredric_Leopold> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. G. Harbaugh?", "What was born in A. G. Harbaugh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._G._Harbaugh> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Gordon Wetmore?", "What was born in A. Gordon Wetmore?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Gordon_Wetmore> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. H. Hornby?", "What was born in A. H. Hornby?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._H._Hornby> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. J. Healy?", "What was born in A. J. Healy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._J._Healy> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. J. S. Lakshmi Shree?", "What was born in A. J. S. Lakshmi Shree?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._J._S._Lakshmi_Shree> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Johnkumar?", "What was born in A. Johnkumar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Johnkumar> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. K. M. Bahauddin?", "What was born in A. K. M. Bahauddin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._K._M._Bahauddin> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. K. M. Rezaul Karim Tansen?", "What was born in A. K. M. Rezaul Karim Tansen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._K._M._Rezaul_Karim_Tansen> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. K. Mozumdar?", "What was born in A. K. Mozumdar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._K._Mozumdar> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. K. Patel?", "What was born in A. K. Patel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._K._Patel> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Lakshmanaswami Mudaliar?", "What was born in A. Lakshmanaswami Mudaliar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Lakshmanaswami_Mudaliar> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. M. Mathai?", "What was born in A. M. Mathai?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._M._Mathai> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. M. Secrest?", "What was born in A. M. Secrest?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._M._Secrest> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Mangalam?", "What was born in A. Mangalam?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Mangalam> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Nafeesath Beevi?", "What was born in A. Nafeesath Beevi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Nafeesath_Beevi> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Oveta Fuller?", "What was born in A. Oveta Fuller?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Oveta_Fuller> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. P. Mda?", "What was born in A. P. Mda?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._P._Mda> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Palanisamy?", "What was born in A. Palanisamy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Palanisamy> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Pradeepkumar?", "What was born in A. Pradeepkumar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Pradeepkumar> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. R. Taylor?", "What was born in A. R. Taylor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._R._Taylor> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Ranganadha Rao?", "What was born in A. Ranganadha Rao?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Ranganadha_Rao> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Roberto Frisancho?", "What was born in A. Roberto Frisancho?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Roberto_Frisancho> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. S. Arya?", "What was born in A. S. Arya?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._S._Arya> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. S. Baylinson?", "What was born in A. S. Baylinson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._S._Baylinson> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. S. Rao?", "What was born in A. S. Rao?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._S._Rao> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. S. W. Rosenbach?", "What was born in A. S. W. Rosenbach?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._S._W._Rosenbach> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Subbarayalu Reddiar?", "What was born in A. Subbarayalu Reddiar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Subbarayalu_Reddiar> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. T. George?", "What was born in A. T. George?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._T._George> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. T. Hill?", "What was born in A. T. Hill?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._T._Hill> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. T. M. Abdul Wahab?", "What was born in A. T. M. Abdul Wahab?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._T._M._Abdul_Wahab> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. T. M. Shamsul Huda?", "What was born in A. T. M. Shamsul Huda?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._T._M._Shamsul_Huda> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. T. Pannirselvam?", "What was born in A. T. Pannirselvam?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._T._Pannirselvam> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Thomas Doyle?", "What was born in A. Thomas Doyle?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Thomas_Doyle> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. V. Kuttimalu Amma?", "What was born in A. V. Kuttimalu Amma?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._V._Kuttimalu_Amma> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. V. Rama Rao?", "What was born in A. V. Rama Rao?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._V._Rama_Rao> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Vinod Bharathi?", "What was born in A. Vinod Bharathi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Vinod_Bharathi> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. W. Baskcomb?", "What was born in A. W. Baskcomb?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._W._Baskcomb> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Wess Mitchell?", "What was born in A. Wess Mitchell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Wess_Mitchell> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in A. Y. G. Campbell?", "What was born in A. Y. G. Campbell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._Y._G._Campbell> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in ABM Sohel Rashid?", "What was born in ABM Sohel Rashid?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ABM_Sohel_Rashid> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in AD Singh?", "What was born in AD Singh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AD_Singh> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in AFM Solaiman Chowdhury?", "What was born in AFM Solaiman Chowdhury?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AFM_Solaiman_Chowdhury> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in Alva Noto?", "What was born in Alva Noto?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alva_Noto> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in LoveRance?", "What was born in LoveRance?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/LoveRance> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in Love (Ai Otsuka)?", "What was born in Love (Ai Otsuka)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_(Ai_Otsuka)> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in Love (footballer)?", "What was born in Love (footballer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_(footballer)> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in Love Ablish?", "What was born in Love Ablish?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Ablish> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in Love Allotey?", "What was born in Love Allotey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Allotey> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in Love Antell?", "What was born in Love Antell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Antell> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in Love At First Sound?", "What was born in Love At First Sound?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_At_First_Sound> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in Love Gantt?", "What was born in Love Gantt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Gantt> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in Love Larson?", "What was born in Love Larson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Larson> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in Lovebug Starski?", "What was born in Lovebug Starski?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lovebug_Starski> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in Loveday Enyinnaya?", "What was born in Loveday Enyinnaya?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loveday_Enyinnaya> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in Lovefoxxx?", "What was born in Lovefoxxx?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lovefoxxx> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in Lovel Palmer?", "What was born in Lovel Palmer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lovel_Palmer> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in Lovelace Ackah?", "What was born in Lovelace Ackah?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lovelace_Ackah> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in Lovelace Watkins?", "What was born in Lovelace Watkins?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lovelace_Watkins> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in Loveleen Kaur Sasan?", "What was born in Loveleen Kaur Sasan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loveleen_Kaur_Sasan> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by OpenLink Software?", "What was developed by OpenLink Software?", "Which work is developed by OpenLink Software?", "Which work was developed by OpenLink Software?", "Which works are developed by OpenLink Software?", "Which works were developed by OpenLink Software?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/OpenLink_Software>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by 5th Cell?", "What was developed by 5th Cell?", "Which work is developed by 5th Cell?", "Which work was developed by 5th Cell?", "Which works are developed by 5th Cell?", "Which works were developed by 5th Cell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/5th_Cell>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by 7th Level?", "What was developed by 7th Level?", "Which work is developed by 7th Level?", "Which work was developed by 7th Level?", "Which works are developed by 7th Level?", "Which works were developed by 7th Level?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/7th_Level>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by 7th Sky Entertainment?", "What was developed by 7th Sky Entertainment?", "Which work is developed by 7th Sky Entertainment?", "Which work was developed by 7th Sky Entertainment?", "Which works are developed by 7th Sky Entertainment?", "Which works were developed by 7th Sky Entertainment?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/7th_Sky_Entertainment>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by 989 Studios?", "What was developed by 989 Studios?", "Which work is developed by 989 Studios?", "Which work was developed by 989 Studios?", "Which works are developed by 989 Studios?", "Which works were developed by 989 Studios?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/989_Studios>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by A2A Simulations?", "What was developed by A2A Simulations?", "Which work is developed by A2A Simulations?", "Which work was developed by A2A Simulations?", "Which works are developed by A2A Simulations?", "Which works were developed by A2A Simulations?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/A2A_Simulations>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by ABS-CBN News and Current Affairs?", "What was developed by ABS-CBN News and Current Affairs?", "Which work is developed by ABS-CBN News and Current Affairs?", "Which work was developed by ABS-CBN News and Current Affairs?", "Which works are developed by ABS-CBN News and Current Affairs?", "Which works were developed by ABS-CBN News and Current Affairs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/ABS-CBN_News_and_Current_Affairs>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by ADK (company)?", "What was developed by ADK (company)?", "Which work is developed by ADK (company)?", "Which work was developed by ADK (company)?", "Which works are developed by ADK (company)?", "Which works were developed by ADK (company)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/ADK_(company)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by AH-Software?", "What was developed by AH-Software?", "Which work is developed by AH-Software?", "Which work was developed by AH-Software?", "Which works are developed by AH-Software?", "Which works were developed by AH-Software?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/AH-Software>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by AIG/Lincoln?", "What was developed by AIG/Lincoln?", "Which work is developed by AIG/Lincoln?", "Which work was developed by AIG/Lincoln?", "Which works are developed by AIG/Lincoln?", "Which works were developed by AIG/Lincoln?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/AIG/Lincoln>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by ALcot?", "What was developed by ALcot?", "Which work is developed by ALcot?", "Which work was developed by ALcot?", "Which works are developed by ALcot?", "Which works were developed by ALcot?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/ALcot>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by ANSI C?", "What was developed by ANSI C?", "Which work is developed by ANSI C?", "Which work was developed by ANSI C?", "Which works are developed by ANSI C?", "Which works were developed by ANSI C?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/ANSI_C>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Luc Bernard?", "What was developed by Luc Bernard?", "Which work is developed by Luc Bernard?", "Which work was developed by Luc Bernard?", "Which works are developed by Luc Bernard?", "Which works were developed by Luc Bernard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Luc_Bernard>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by LucasArts?", "What was developed by LucasArts?", "Which work is developed by LucasArts?", "Which work was developed by LucasArts?", "Which works are developed by LucasArts?", "Which works were developed by LucasArts?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/LucasArts>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Lucas Learning?", "What was developed by Lucas Learning?", "Which work is developed by Lucas Learning?", "Which work was developed by Lucas Learning?", "Which works are developed by Lucas Learning?", "Which works were developed by Lucas Learning?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Lucas_Learning>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Lucas Pope?", "What was developed by Lucas Pope?", "Which work is developed by Lucas Pope?", "Which work was developed by Lucas Pope?", "Which works are developed by Lucas Pope?", "Which works were developed by Lucas Pope?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Lucas_Pope>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Lucee?", "What was developed by Lucee?", "Which work is developed by Lucee?", "Which work was developed by Lucee?", "Which works are developed by Lucee?", "Which works were developed by Lucee?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Lucee>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Lucid Games?", "What was developed by Lucid Games?", "Which work is developed by Lucid Games?", "Which work was developed by Lucid Games?", "Which works are developed by Lucid Games?", "Which works were developed by Lucid Games?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Lucid_Games>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Lucy Cousins?", "What was developed by Lucy Cousins?", "Which work is developed by Lucy Cousins?", "Which work was developed by Lucy Cousins?", "Which works are developed by Lucy Cousins?", "Which works were developed by Lucy Cousins?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Lucy_Cousins>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Ludwig Maximilian University of Munich?", "What was developed by Ludwig Maximilian University of Munich?", "Which work is developed by Ludwig Maximilian University of Munich?", "Which work was developed by Ludwig Maximilian University of Munich?", "Which works are developed by Ludwig Maximilian University of Munich?", "Which works were developed by Ludwig Maximilian University of Munich?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Ludwig_Maximilian_University_of_Munich>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Luiz Fernando Carvalho?", "What was developed by Luiz Fernando Carvalho?", "Which work is developed by Luiz Fernando Carvalho?", "Which work was developed by Luiz Fernando Carvalho?", "Which works are developed by Luiz Fernando Carvalho?", "Which works were developed by Luiz Fernando Carvalho?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Luiz_Fernando_Carvalho>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Luke Davies?", "What was developed by Luke Davies?", "Which work is developed by Luke Davies?", "Which work was developed by Luke Davies?", "Which works are developed by Luke Davies?", "Which works were developed by Luke Davies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Luke_Davies>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Luke Pearson?", "What was developed by Luke Pearson?", "Which work is developed by Luke Pearson?", "Which work was developed by Luke Pearson?", "Which works are developed by Luke Pearson?", "Which works were developed by Luke Pearson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Luke_Pearson>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Luminous Productions?", "What was developed by Luminous Productions?", "Which work is developed by Luminous Productions?", "Which work was developed by Luminous Productions?", "Which works are developed by Luminous Productions?", "Which works were developed by Luminous Productions?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Luminous_Productions>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Lund University?", "What was developed by Lund University?", "Which work is developed by Lund University?", "Which work was developed by Lund University?", "Which works are developed by Lund University?", "Which works were developed by Lund University?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Lund_University>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Lycos?", "What was developed by Lycos?", "Which work is developed by Lycos?", "Which work was developed by Lycos?", "Which works are developed by Lycos?", "Which works were developed by Lycos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Lycos>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Lynne Jolitz?", "What was developed by Lynne Jolitz?", "Which work is developed by Lynne Jolitz?", "Which work was developed by Lynne Jolitz?", "Which works are developed by Lynne Jolitz?", "Which works were developed by Lynne Jolitz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Lynne_Jolitz>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by László Németh?", "What was developed by László Németh?", "Which work is developed by László Németh?", "Which work was developed by László Németh?", "Which works are developed by László Németh?", "Which works were developed by László Németh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/László_Németh>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by M-Net?", "What was developed by M-Net?", "Which work is developed by M-Net?", "Which work was developed by M-Net?", "Which works are developed by M-Net?", "Which works were developed by M-Net?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/M-Net>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by M.A. Fortin?", "What was developed by M.A. Fortin?", "Which work is developed by M.A. Fortin?", "Which work was developed by M.A. Fortin?", "Which works are developed by M.A. Fortin?", "Which works were developed by M.A. Fortin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/M.A._Fortin>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by M2 (game developer)?", "What was developed by M2 (game developer)?", "Which work is developed by M2 (game developer)?", "Which work was developed by M2 (game developer)?", "Which works are developed by M2 (game developer)?", "Which works were developed by M2 (game developer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/M2_(game_developer)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MAG Interactive?", "What was developed by MAG Interactive?", "Which work is developed by MAG Interactive?", "Which work was developed by MAG Interactive?", "Which works are developed by MAG Interactive?", "Which works were developed by MAG Interactive?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MAG_Interactive>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MAXON Computer GmbH?", "What was developed by MAXON Computer GmbH?", "Which work is developed by MAXON Computer GmbH?", "Which work was developed by MAXON Computer GmbH?", "Which works are developed by MAXON Computer GmbH?", "Which works were developed by MAXON Computer GmbH?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MAXON_Computer_GmbH>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MC2-Microïds?", "What was developed by MC2-Microïds?", "Which work is developed by MC2-Microïds?", "Which work was developed by MC2-Microïds?", "Which works are developed by MC2-Microïds?", "Which works were developed by MC2-Microïds?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MC2-Microïds>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MC2 France?", "What was developed by MC2 France?", "Which work is developed by MC2 France?", "Which work was developed by MC2 France?", "Which works are developed by MC2 France?", "Which works were developed by MC2 France?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MC2_France>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MD Productions?", "What was developed by MD Productions?", "Which work is developed by MD Productions?", "Which work was developed by MD Productions?", "Which works are developed by MD Productions?", "Which works were developed by MD Productions?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MD_Productions>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MECC?", "What was developed by MECC?", "Which work is developed by MECC?", "Which work was developed by MECC?", "Which works are developed by MECC?", "Which works were developed by MECC?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MECC>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MGM Resorts International?", "What was developed by MGM Resorts International?", "Which work is developed by MGM Resorts International?", "Which work was developed by MGM Resorts International?", "Which works are developed by MGM Resorts International?", "Which works were developed by MGM Resorts International?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MGM_Resorts_International>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MGM Television?", "What was developed by MGM Television?", "Which work is developed by MGM Television?", "Which work was developed by MGM Television?", "Which works are developed by MGM Television?", "Which works were developed by MGM Television?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MGM_Television>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MIPS Technologies?", "What was developed by MIPS Technologies?", "Which work is developed by MIPS Technologies?", "Which work was developed by MIPS Technologies?", "Which works are developed by MIPS Technologies?", "Which works were developed by MIPS Technologies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MIPS_Technologies>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MIT?", "What was developed by MIT?", "Which work is developed by MIT?", "Which work was developed by MIT?", "Which works are developed by MIT?", "Which works were developed by MIT?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MIT>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MIT Computer Science and Artificial Intelligence Laboratory?", "What was developed by MIT Computer Science and Artificial Intelligence Laboratory?", "Which work is developed by MIT Computer Science and Artificial Intelligence Laboratory?", "Which work was developed by MIT Computer Science and Artificial Intelligence Laboratory?", "Which works are developed by MIT Computer Science and Artificial Intelligence Laboratory?", "Which works were developed by MIT Computer Science and Artificial Intelligence Laboratory?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MIT_Computer_Science_and_Artificial_Intelligence_Laboratory>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MIT Media Lab?", "What was developed by MIT Media Lab?", "Which work is developed by MIT Media Lab?", "Which work was developed by MIT Media Lab?", "Which works are developed by MIT Media Lab?", "Which works were developed by MIT Media Lab?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MIT_Media_Lab>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MLB Network?", "What was developed by MLB Network?", "Which work is developed by MLB Network?", "Which work was developed by MLB Network?", "Which works are developed by MLB Network?", "Which works were developed by MLB Network?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MLB_Network>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MOL (company)?", "What was developed by MOL (company)?", "Which work is developed by MOL (company)?", "Which work was developed by MOL (company)?", "Which works are developed by MOL (company)?", "Which works were developed by MOL (company)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MOL_(company)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MPL Communications?", "What was developed by MPL Communications?", "Which work is developed by MPL Communications?", "Which work was developed by MPL Communications?", "Which works are developed by MPL Communications?", "Which works were developed by MPL Communications?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MPL_Communications>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MS-DOS?", "What was developed by MS-DOS?", "Which work is developed by MS-DOS?", "Which work was developed by MS-DOS?", "Which works are developed by MS-DOS?", "Which works were developed by MS-DOS?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MS-DOS>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MSP360?", "What was developed by MSP360?", "Which work is developed by MSP360?", "Which work was developed by MSP360?", "Which works are developed by MSP360?", "Which works were developed by MSP360?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MSP360>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MSX2?", "What was developed by MSX2?", "Which work is developed by MSX2?", "Which work was developed by MSX2?", "Which works are developed by MSX2?", "Which works were developed by MSX2?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MSX2>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MTO (video game company)?", "What was developed by MTO (video game company)?", "Which work is developed by MTO (video game company)?", "Which work was developed by MTO (video game company)?", "Which works are developed by MTO (video game company)?", "Which works were developed by MTO (video game company)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MTO_(video_game_company)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MTR Corporation?", "What was developed by MTR Corporation?", "Which work is developed by MTR Corporation?", "Which work was developed by MTR Corporation?", "Which works are developed by MTR Corporation?", "Which works were developed by MTR Corporation?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MTR_Corporation>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MTV?", "What was developed by MTV?", "Which work is developed by MTV?", "Which work was developed by MTV?", "Which works are developed by MTV?", "Which works were developed by MTV?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MTV>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MVRDV?", "What was developed by MVRDV?", "Which work is developed by MVRDV?", "Which work was developed by MVRDV?", "Which works are developed by MVRDV?", "Which works were developed by MVRDV?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MVRDV>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Mabrouk El Mechri?", "What was developed by Mabrouk El Mechri?", "Which work is developed by Mabrouk El Mechri?", "Which work was developed by Mabrouk El Mechri?", "Which works are developed by Mabrouk El Mechri?", "Which works were developed by Mabrouk El Mechri?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mabrouk_El_Mechri>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MacPlay?", "What was developed by MacPlay?", "Which work is developed by MacPlay?", "Which work was developed by MacPlay?", "Which works are developed by MacPlay?", "Which works were developed by MacPlay?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MacPlay>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MacSoft?", "What was developed by MacSoft?", "Which work is developed by MacSoft?", "Which work was developed by MacSoft?", "Which works are developed by MacSoft?", "Which works were developed by MacSoft?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MacSoft>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Mac OS X?", "What was developed by Mac OS X?", "Which work is developed by Mac OS X?", "Which work was developed by Mac OS X?", "Which works are developed by Mac OS X?", "Which works were developed by Mac OS X?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mac_OS_X>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Macedonian Radio Television?", "What was developed by Macedonian Radio Television?", "Which work is developed by Macedonian Radio Television?", "Which work was developed by Macedonian Radio Television?", "Which works are developed by Macedonian Radio Television?", "Which works were developed by Macedonian Radio Television?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Macedonian_Radio_Television>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by MachineGames?", "What was developed by MachineGames?", "Which work is developed by MachineGames?", "Which work was developed by MachineGames?", "Which works are developed by MachineGames?", "Which works were developed by MachineGames?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MachineGames>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Machine Shop co.?", "What was developed by Machine Shop co.?", "Which work is developed by Machine Shop co.?", "Which work was developed by Machine Shop co.?", "Which works are developed by Machine Shop co.?", "Which works were developed by Machine Shop co.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Machine_Shop_co.>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Machine Zone?", "What was developed by Machine Zone?", "Which work is developed by Machine Zone?", "Which work was developed by Machine Zone?", "Which works are developed by Machine Zone?", "Which works were developed by Machine Zone?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Machine_Zone>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Maciej Stachowiak?", "What was developed by Maciej Stachowiak?", "Which work is developed by Maciej Stachowiak?", "Which work was developed by Maciej Stachowiak?", "Which works are developed by Maciej Stachowiak?", "Which works were developed by Maciej Stachowiak?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Maciej_Stachowiak>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Mackinac Center for Public Policy?", "What was developed by Mackinac Center for Public Policy?", "Which work is developed by Mackinac Center for Public Policy?", "Which work was developed by Mackinac Center for Public Policy?", "Which works are developed by Mackinac Center for Public Policy?", "Which works were developed by Mackinac Center for Public Policy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mackinac_Center_for_Public_Policy>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Macromedia?", "What was developed by Macromedia?", "Which work is developed by Macromedia?", "Which work was developed by Macromedia?", "Which works are developed by Macromedia?", "Which works were developed by Macromedia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Macromedia>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Macrospace?", "What was developed by Macrospace?", "Which work is developed by Macrospace?", "Which work was developed by Macrospace?", "Which works are developed by Macrospace?", "Which works were developed by Macrospace?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Macrospace>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Mad Catz?", "What was developed by Mad Catz?", "Which work is developed by Mad Catz?", "Which work was developed by Mad Catz?", "Which works are developed by Mad Catz?", "Which works were developed by Mad Catz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mad_Catz>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Mad Doc Software?", "What was developed by Mad Doc Software?", "Which work is developed by Mad Doc Software?", "Which work was developed by Mad Doc Software?", "Which works are developed by Mad Doc Software?", "Which works were developed by Mad Doc Software?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mad_Doc_Software>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Madfinger Games?", "What was developed by Madfinger Games?", "Which work is developed by Madfinger Games?", "Which work was developed by Madfinger Games?", "Which works are developed by Madfinger Games?", "Which works were developed by Madfinger Games?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Madfinger_Games>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Maemo?", "What was developed by Maemo?", "Which work is developed by Maemo?", "Which work was developed by Maemo?", "Which works are developed by Maemo?", "Which works were developed by Maemo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Maemo>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Mages (company)?", "What was developed by Mages (company)?", "Which work is developed by Mages (company)?", "Which work was developed by Mages (company)?", "Which works are developed by Mages (company)?", "Which works were developed by Mages (company)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mages_(company)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Magix Software?", "What was developed by Magix Software?", "Which work is developed by Magix Software?", "Which work was developed by Magix Software?", "Which works are developed by Magix Software?", "Which works were developed by Magix Software?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Magix_Software>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Magix Software GmbH?", "What was developed by Magix Software GmbH?", "Which work is developed by Magix Software GmbH?", "Which work was developed by Magix Software GmbH?", "Which works are developed by Magix Software GmbH?", "Which works were developed by Magix Software GmbH?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Magix_Software_GmbH>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Magnavox?", "What was developed by Magnavox?", "Which work is developed by Magnavox?", "Which work was developed by Magnavox?", "Which works are developed by Magnavox?", "Which works were developed by Magnavox?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Magnavox>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Magnus Manske?", "What was developed by Magnus Manske?", "Which work is developed by Magnus Manske?", "Which work was developed by Magnus Manske?", "Which works are developed by Magnus Manske?", "Which works were developed by Magnus Manske?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Magnus_Manske>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Mainsoft?", "What was developed by Mainsoft?", "Which work is developed by Mainsoft?", "Which work was developed by Mainsoft?", "Which works are developed by Mainsoft?", "Which works were developed by Mainsoft?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mainsoft>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Mainz?", "What was developed by Mainz?", "Which work is developed by Mainz?", "Which work was developed by Mainz?", "Which works are developed by Mainz?", "Which works were developed by Mainz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mainz>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Majesco Entertainment?", "What was developed by Majesco Entertainment?", "Which work is developed by Majesco Entertainment?", "Which work was developed by Majesco Entertainment?", "Which works are developed by Majesco Entertainment?", "Which works were developed by Majesco Entertainment?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Majesco_Entertainment>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Mak Wilson?", "What was developed by Mak Wilson?", "Which work is developed by Mak Wilson?", "Which work was developed by Mak Wilson?", "Which works are developed by Mak Wilson?", "Which works were developed by Mak Wilson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mak_Wilson>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Malaysian Highway Authority?", "What was developed by Malaysian Highway Authority?", "Which work is developed by Malaysian Highway Authority?", "Which work was developed by Malaysian Highway Authority?", "Which works are developed by Malaysian Highway Authority?", "Which works were developed by Malaysian Highway Authority?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Malaysian_Highway_Authority>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Malaysian Public Works Department?", "What was developed by Malaysian Public Works Department?", "Which work is developed by Malaysian Public Works Department?", "Which work was developed by Malaysian Public Works Department?", "Which works are developed by Malaysian Public Works Department?", "Which works were developed by Malaysian Public Works Department?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Malaysian_Public_Works_Department>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Malibu Comics?", "What was developed by Malibu Comics?", "Which work is developed by Malibu Comics?", "Which work was developed by Malibu Comics?", "Which works are developed by Malibu Comics?", "Which works were developed by Malibu Comics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Malibu_Comics>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Caroli Group?", "What was developed by Caroli Group?", "Which work is developed by Caroli Group?", "Which work was developed by Caroli Group?", "Which works are developed by Caroli Group?", "Which works were developed by Caroli Group?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Caroli_Group>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Caroline Dries?", "What was developed by Caroline Dries?", "Which work is developed by Caroline Dries?", "Which work was developed by Caroline Dries?", "Which works are developed by Caroline Dries?", "Which works were developed by Caroline Dries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Caroline_Dries>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Carry Lab?", "What was developed by Carry Lab?", "Which work is developed by Carry Lab?", "Which work was developed by Carry Lab?", "Which works are developed by Carry Lab?", "Which works were developed by Carry Lab?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Carry_Lab>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Carter Covington?", "What was developed by Carter Covington?", "Which work is developed by Carter Covington?", "Which work was developed by Carter Covington?", "Which works are developed by Carter Covington?", "Which works were developed by Carter Covington?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Carter_Covington>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Castaway Entertainment?", "What was developed by Castaway Entertainment?", "Which work is developed by Castaway Entertainment?", "Which work was developed by Castaway Entertainment?", "Which works are developed by Castaway Entertainment?", "Which works were developed by Castaway Entertainment?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Castaway_Entertainment>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Bandai Namco Games?", "What was developed by Bandai Namco Games?", "Which work is developed by Bandai Namco Games?", "Which work was developed by Bandai Namco Games?", "Which works are developed by Bandai Namco Games?", "Which works were developed by Bandai Namco Games?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Bandai_Namco_Games>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Behdad Sami Interactive?", "What was developed by Behdad Sami Interactive?", "Which work is developed by Behdad Sami Interactive?", "Which work was developed by Behdad Sami Interactive?", "Which works are developed by Behdad Sami Interactive?", "Which works were developed by Behdad Sami Interactive?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Behdad_Sami_Interactive>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Behold Studios?", "What was developed by Behold Studios?", "Which work is developed by Behold Studios?", "Which work was developed by Behold Studios?", "Which works are developed by Behold Studios?", "Which works were developed by Behold Studios?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Behold_Studios>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Ben Richards?", "What was developed by Ben Richards?", "Which work is developed by Ben Richards?", "Which work was developed by Ben Richards?", "Which works are developed by Ben Richards?", "Which works were developed by Ben Richards?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Ben_Richards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Boeing Computer Services Co.?", "What was developed by Boeing Computer Services Co.?", "Which work is developed by Boeing Computer Services Co.?", "Which work was developed by Boeing Computer Services Co.?", "Which works are developed by Boeing Computer Services Co.?", "Which works were developed by Boeing Computer Services Co.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Boeing_Computer_Services_Co.>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Boinx?", "What was developed by Boinx?", "Which work is developed by Boinx?", "Which work was developed by Boinx?", "Which works are developed by Boinx?", "Which works were developed by Boinx?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Boinx>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Constantin Sotiropoulos?", "What was developed by Constantin Sotiropoulos?", "Which work is developed by Constantin Sotiropoulos?", "Which work was developed by Constantin Sotiropoulos?", "Which works are developed by Constantin Sotiropoulos?", "Which works were developed by Constantin Sotiropoulos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Constantin_Sotiropoulos>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Contrail (company)?", "What was developed by Contrail (company)?", "Which work is developed by Contrail (company)?", "Which work was developed by Contrail (company)?", "Which works are developed by Contrail (company)?", "Which works were developed by Contrail (company)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Contrail_(company)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Control Data Corporation?", "What was developed by Control Data Corporation?", "Which work is developed by Control Data Corporation?", "Which work was developed by Control Data Corporation?", "Which works are developed by Control Data Corporation?", "Which works were developed by Control Data Corporation?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Control_Data_Corporation>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Convergent Technologies?", "What was developed by Convergent Technologies?", "Which work is developed by Convergent Technologies?", "Which work was developed by Convergent Technologies?", "Which works are developed by Convergent Technologies?", "Which works were developed by Convergent Technologies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Convergent_Technologies>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Cooking Mama Limited?", "What was developed by Cooking Mama Limited?", "Which work is developed by Cooking Mama Limited?", "Which work was developed by Cooking Mama Limited?", "Which works are developed by Cooking Mama Limited?", "Which works were developed by Cooking Mama Limited?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Cooking_Mama_Limited>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Cope-Com?", "What was developed by Cope-Com?", "Which work is developed by Cope-Com?", "Which work was developed by Cope-Com?", "Which works are developed by Cope-Com?", "Which works were developed by Cope-Com?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Cope-Com>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Coresoft?", "What was developed by Coresoft?", "Which work is developed by Coresoft?", "Which work was developed by Coresoft?", "Which works are developed by Coresoft?", "Which works were developed by Coresoft?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Coresoft>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by Corinne Brinkerhoff?", "What was developed by Corinne Brinkerhoff?", "Which work is developed by Corinne Brinkerhoff?", "Which work was developed by Corinne Brinkerhoff?", "Which works are developed by Corinne Brinkerhoff?", "Which works were developed by Corinne Brinkerhoff?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Corinne_Brinkerhoff>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Lublin Museum?", "What was exhibited by Lublin Museum?", "Which artwork is exhibited by Lublin Museum?", "Which artwork was exhibited by Lublin Museum?", "Which artworks are exhibited by Lublin Museum?", "Which artworks were exhibited by Lublin Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Lublin_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by MUŻA?", "What was exhibited by MUŻA?", "Which artwork is exhibited by MUŻA?", "Which artwork was exhibited by MUŻA?", "Which artworks are exhibited by MUŻA?", "Which artworks were exhibited by MUŻA?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/MUŻA>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Maagdenhuis Museum?", "What was exhibited by Maagdenhuis Museum?", "Which artwork is exhibited by Maagdenhuis Museum?", "Which artwork was exhibited by Maagdenhuis Museum?", "Which artworks are exhibited by Maagdenhuis Museum?", "Which artworks were exhibited by Maagdenhuis Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Maagdenhuis_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Madrid?", "What was exhibited by Madrid?", "Which artwork is exhibited by Madrid?", "Which artwork was exhibited by Madrid?", "Which artworks are exhibited by Madrid?", "Which artworks were exhibited by Madrid?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Madrid>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Mali Lošinj?", "What was exhibited by Mali Lošinj?", "Which artwork is exhibited by Mali Lošinj?", "Which artwork was exhibited by Mali Lošinj?", "Which artworks are exhibited by Mali Lošinj?", "Which artworks were exhibited by Mali Lošinj?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Mali_Lošinj>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Casa Buonarroti?", "What was exhibited by Casa Buonarroti?", "Which artwork is exhibited by Casa Buonarroti?", "Which artwork was exhibited by Casa Buonarroti?", "Which artworks are exhibited by Casa Buonarroti?", "Which artworks were exhibited by Casa Buonarroti?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Casa_Buonarroti>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Castelvecchio Museum?", "What was exhibited by Castelvecchio Museum?", "Which artwork is exhibited by Castelvecchio Museum?", "Which artwork was exhibited by Castelvecchio Museum?", "Which artworks are exhibited by Castelvecchio Museum?", "Which artworks were exhibited by Castelvecchio Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Castelvecchio_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Cathedral Square, Christchurch?", "What was exhibited by Cathedral Square, Christchurch?", "Which artwork is exhibited by Cathedral Square, Christchurch?", "Which artwork was exhibited by Cathedral Square, Christchurch?", "Which artworks are exhibited by Cathedral Square, Christchurch?", "Which artworks were exhibited by Cathedral Square, Christchurch?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Cathedral_Square,_Christchurch>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Bogota?", "What was exhibited by Bogota?", "Which artwork is exhibited by Bogota?", "Which artwork was exhibited by Bogota?", "Which artworks are exhibited by Bogota?", "Which artworks were exhibited by Bogota?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Bogota>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Convent of San Domenico, Fiesole?", "What was exhibited by Convent of San Domenico, Fiesole?", "Which artwork is exhibited by Convent of San Domenico, Fiesole?", "Which artwork was exhibited by Convent of San Domenico, Fiesole?", "Which artworks are exhibited by Convent of San Domenico, Fiesole?", "Which artworks were exhibited by Convent of San Domenico, Fiesole?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Convent_of_San_Domenico,_Fiesole>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Uffizi?", "What was exhibited by Uffizi?", "Which artwork is exhibited by Uffizi?", "Which artwork was exhibited by Uffizi?", "Which artworks are exhibited by Uffizi?", "Which artworks were exhibited by Uffizi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Uffizi>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Union Buildings?", "What was exhibited by Union Buildings?", "Which artwork is exhibited by Union Buildings?", "Which artwork was exhibited by Union Buildings?", "Which artworks are exhibited by Union Buildings?", "Which artworks were exhibited by Union Buildings?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Union_Buildings>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Union League of Philadelphia?", "What was exhibited by Union League of Philadelphia?", "Which artwork is exhibited by Union League of Philadelphia?", "Which artwork was exhibited by Union League of Philadelphia?", "Which artworks are exhibited by Union League of Philadelphia?", "Which artworks were exhibited by Union League of Philadelphia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Union_League_of_Philadelphia>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by United Nations General Assembly?", "What was exhibited by United Nations General Assembly?", "Which artwork is exhibited by United Nations General Assembly?", "Which artwork was exhibited by United Nations General Assembly?", "Which artworks are exhibited by United Nations General Assembly?", "Which artworks were exhibited by United Nations General Assembly?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/United_Nations_General_Assembly>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by United States?", "What was exhibited by United States?", "Which artwork is exhibited by United States?", "Which artwork was exhibited by United States?", "Which artworks are exhibited by United States?", "Which artworks were exhibited by United States?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/United_States>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by United States Capitol?", "What was exhibited by United States Capitol?", "Which artwork is exhibited by United States Capitol?", "Which artwork was exhibited by United States Capitol?", "Which artworks are exhibited by United States Capitol?", "Which artworks were exhibited by United States Capitol?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/United_States_Capitol>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by United States Naval Academy?", "What was exhibited by United States Naval Academy?", "Which artwork is exhibited by United States Naval Academy?", "Which artwork was exhibited by United States Naval Academy?", "Which artworks are exhibited by United States Naval Academy?", "Which artworks were exhibited by United States Naval Academy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/United_States_Naval_Academy>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by United States Navy Memorial?", "What was exhibited by United States Navy Memorial?", "Which artwork is exhibited by United States Navy Memorial?", "Which artwork was exhibited by United States Navy Memorial?", "Which artworks are exhibited by United States Navy Memorial?", "Which artworks were exhibited by United States Navy Memorial?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/United_States_Navy_Memorial>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by University City of Caracas?", "What was exhibited by University City of Caracas?", "Which artwork is exhibited by University City of Caracas?", "Which artwork was exhibited by University City of Caracas?", "Which artworks are exhibited by University City of Caracas?", "Which artworks were exhibited by University City of Caracas?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/University_City_of_Caracas>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by University at Buffalo?", "What was exhibited by University at Buffalo?", "Which artwork is exhibited by University at Buffalo?", "Which artwork was exhibited by University at Buffalo?", "Which artworks are exhibited by University at Buffalo?", "Which artworks were exhibited by University at Buffalo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/University_at_Buffalo>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by University of California San Diego?", "What was exhibited by University of California San Diego?", "Which artwork is exhibited by University of California San Diego?", "Which artwork was exhibited by University of California San Diego?", "Which artworks are exhibited by University of California San Diego?", "Which artworks were exhibited by University of California San Diego?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/University_of_California_San_Diego>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by University of Chicago?", "What was exhibited by University of Chicago?", "Which artwork is exhibited by University of Chicago?", "Which artwork was exhibited by University of Chicago?", "Which artworks are exhibited by University of Chicago?", "Which artworks were exhibited by University of Chicago?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/University_of_Chicago>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by University of Ghana?", "What was exhibited by University of Ghana?", "Which artwork is exhibited by University of Ghana?", "Which artwork was exhibited by University of Ghana?", "Which artworks are exhibited by University of Ghana?", "Which artworks were exhibited by University of Ghana?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/University_of_Ghana>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by University of Houston?", "What was exhibited by University of Houston?", "Which artwork is exhibited by University of Houston?", "Which artwork was exhibited by University of Houston?", "Which artworks are exhibited by University of Houston?", "Which artworks were exhibited by University of Houston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/University_of_Houston>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by University of Michigan Museum of Art?", "What was exhibited by University of Michigan Museum of Art?", "Which artwork is exhibited by University of Michigan Museum of Art?", "Which artwork was exhibited by University of Michigan Museum of Art?", "Which artworks are exhibited by University of Michigan Museum of Art?", "Which artworks were exhibited by University of Michigan Museum of Art?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/University_of_Michigan_Museum_of_Art>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by University of Notre Dame?", "What was exhibited by University of Notre Dame?", "Which artwork is exhibited by University of Notre Dame?", "Which artwork was exhibited by University of Notre Dame?", "Which artworks are exhibited by University of Notre Dame?", "Which artworks were exhibited by University of Notre Dame?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/University_of_Notre_Dame>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by University of Otago?", "What was exhibited by University of Otago?", "Which artwork is exhibited by University of Otago?", "Which artwork was exhibited by University of Otago?", "Which artworks are exhibited by University of Otago?", "Which artworks were exhibited by University of Otago?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/University_of_Otago>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by University of Pennsylvania?", "What was exhibited by University of Pennsylvania?", "Which artwork is exhibited by University of Pennsylvania?", "Which artwork was exhibited by University of Pennsylvania?", "Which artworks are exhibited by University of Pennsylvania?", "Which artworks were exhibited by University of Pennsylvania?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/University_of_Pennsylvania>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by University of Sydney?", "What was exhibited by University of Sydney?", "Which artwork is exhibited by University of Sydney?", "Which artwork was exhibited by University of Sydney?", "Which artworks are exhibited by University of Sydney?", "Which artworks were exhibited by University of Sydney?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/University_of_Sydney>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by University of Twente?", "What was exhibited by University of Twente?", "Which artwork is exhibited by University of Twente?", "Which artwork was exhibited by University of Twente?", "Which artworks are exhibited by University of Twente?", "Which artworks were exhibited by University of Twente?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/University_of_Twente>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by University of Tübingen?", "What was exhibited by University of Tübingen?", "Which artwork is exhibited by University of Tübingen?", "Which artwork was exhibited by University of Tübingen?", "Which artworks are exhibited by University of Tübingen?", "Which artworks were exhibited by University of Tübingen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/University_of_Tübingen>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Utah State Capitol?", "What was exhibited by Utah State Capitol?", "Which artwork is exhibited by Utah State Capitol?", "Which artwork was exhibited by Utah State Capitol?", "Which artworks are exhibited by Utah State Capitol?", "Which artworks were exhibited by Utah State Capitol?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Utah_State_Capitol>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Utah Valley University?", "What was exhibited by Utah Valley University?", "Which artwork is exhibited by Utah Valley University?", "Which artwork was exhibited by Utah Valley University?", "Which artworks are exhibited by Utah Valley University?", "Which artworks were exhibited by Utah Valley University?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Utah_Valley_University>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Valletta?", "What was exhibited by Valletta?", "Which artwork is exhibited by Valletta?", "Which artwork was exhibited by Valletta?", "Which artworks are exhibited by Valletta?", "Which artworks were exhibited by Valletta?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Valletta>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Van Abbemuseum?", "What was exhibited by Van Abbemuseum?", "Which artwork is exhibited by Van Abbemuseum?", "Which artwork was exhibited by Van Abbemuseum?", "Which artworks are exhibited by Van Abbemuseum?", "Which artworks were exhibited by Van Abbemuseum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Van_Abbemuseum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Van Gogh Museum?", "What was exhibited by Van Gogh Museum?", "Which artwork is exhibited by Van Gogh Museum?", "Which artwork was exhibited by Van Gogh Museum?", "Which artworks are exhibited by Van Gogh Museum?", "Which artworks were exhibited by Van Gogh Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Van_Gogh_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Vancouver Art Gallery?", "What was exhibited by Vancouver Art Gallery?", "Which artwork is exhibited by Vancouver Art Gallery?", "Which artwork was exhibited by Vancouver Art Gallery?", "Which artworks are exhibited by Vancouver Art Gallery?", "Which artworks were exhibited by Vancouver Art Gallery?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Vancouver_Art_Gallery>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Vatican City?", "What was exhibited by Vatican City?", "Which artwork is exhibited by Vatican City?", "Which artwork was exhibited by Vatican City?", "Which artworks are exhibited by Vatican City?", "Which artworks were exhibited by Vatican City?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Vatican_City>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Vatican Museums?", "What was exhibited by Vatican Museums?", "Which artwork is exhibited by Vatican Museums?", "Which artwork was exhibited by Vatican Museums?", "Which artworks are exhibited by Vatican Museums?", "Which artworks were exhibited by Vatican Museums?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Vatican_Museums>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Venice?", "What was exhibited by Venice?", "Which artwork is exhibited by Venice?", "Which artwork was exhibited by Venice?", "Which artworks are exhibited by Venice?", "Which artworks were exhibited by Venice?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Venice>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Ventura County Courthouse?", "What was exhibited by Ventura County Courthouse?", "Which artwork is exhibited by Ventura County Courthouse?", "Which artwork was exhibited by Ventura County Courthouse?", "Which artworks are exhibited by Ventura County Courthouse?", "Which artworks were exhibited by Ventura County Courthouse?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Ventura_County_Courthouse>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Curtius Museum?", "What was exhibited by Curtius Museum?", "Which artwork is exhibited by Curtius Museum?", "Which artwork was exhibited by Curtius Museum?", "Which artworks are exhibited by Curtius Museum?", "Which artworks were exhibited by Curtius Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Curtius_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Czartoryski Museum?", "What was exhibited by Czartoryski Museum?", "Which artwork is exhibited by Czartoryski Museum?", "Which artwork was exhibited by Czartoryski Museum?", "Which artworks are exhibited by Czartoryski Museum?", "Which artworks were exhibited by Czartoryski Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Czartoryski_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Daitoku-ji?", "What was exhibited by Daitoku-ji?", "Which artwork is exhibited by Daitoku-ji?", "Which artwork was exhibited by Daitoku-ji?", "Which artworks are exhibited by Daitoku-ji?", "Which artworks were exhibited by Daitoku-ji?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Daitoku-ji>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Dallas Museum of Art?", "What was exhibited by Dallas Museum of Art?", "Which artwork is exhibited by Dallas Museum of Art?", "Which artwork was exhibited by Dallas Museum of Art?", "Which artworks are exhibited by Dallas Museum of Art?", "Which artworks were exhibited by Dallas Museum of Art?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Dallas_Museum_of_Art>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Sanssouci?", "What was exhibited by Sanssouci?", "Which artwork is exhibited by Sanssouci?", "Which artwork was exhibited by Sanssouci?", "Which artworks are exhibited by Sanssouci?", "Which artworks were exhibited by Sanssouci?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Sanssouci>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Santa Maria di Loreto, Rome?", "What was exhibited by Santa Maria di Loreto, Rome?", "Which artwork is exhibited by Santa Maria di Loreto, Rome?", "Which artwork was exhibited by Santa Maria di Loreto, Rome?", "Which artworks are exhibited by Santa Maria di Loreto, Rome?", "Which artworks were exhibited by Santa Maria di Loreto, Rome?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Santa_Maria_di_Loreto,_Rome>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Goya Museum?", "What was exhibited by Goya Museum?", "Which artwork is exhibited by Goya Museum?", "Which artwork was exhibited by Goya Museum?", "Which artworks are exhibited by Goya Museum?", "Which artworks were exhibited by Goya Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Goya_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Santa Bibiana?", "What was exhibited by Santa Bibiana?", "Which artwork is exhibited by Santa Bibiana?", "Which artwork was exhibited by Santa Bibiana?", "Which artworks are exhibited by Santa Bibiana?", "Which artworks were exhibited by Santa Bibiana?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Santa_Bibiana>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by National Gallery of Denmark?", "What was exhibited by National Gallery of Denmark?", "Which artwork is exhibited by National Gallery of Denmark?", "Which artwork was exhibited by National Gallery of Denmark?", "Which artworks are exhibited by National Gallery of Denmark?", "Which artworks were exhibited by National Gallery of Denmark?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/National_Gallery_of_Denmark>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Piazza della Santissima Annunziata?", "What was exhibited by Piazza della Santissima Annunziata?", "Which artwork is exhibited by Piazza della Santissima Annunziata?", "Which artwork was exhibited by Piazza della Santissima Annunziata?", "Which artworks are exhibited by Piazza della Santissima Annunziata?", "Which artworks were exhibited by Piazza della Santissima Annunziata?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Piazza_della_Santissima_Annunziata>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Royal Library of Turin?", "What was exhibited by Royal Library of Turin?", "Which artwork is exhibited by Royal Library of Turin?", "Which artwork was exhibited by Royal Library of Turin?", "Which artworks are exhibited by Royal Library of Turin?", "Which artworks were exhibited by Royal Library of Turin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Royal_Library_of_Turin>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by San Domenico, Arezzo?", "What was exhibited by San Domenico, Arezzo?", "Which artwork is exhibited by San Domenico, Arezzo?", "Which artwork was exhibited by San Domenico, Arezzo?", "Which artworks are exhibited by San Domenico, Arezzo?", "Which artworks were exhibited by San Domenico, Arezzo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/San_Domenico,_Arezzo>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by San Michele Visdomini?", "What was exhibited by San Michele Visdomini?", "Which artwork is exhibited by San Michele Visdomini?", "Which artwork was exhibited by San Michele Visdomini?", "Which artworks are exhibited by San Michele Visdomini?", "Which artworks were exhibited by San Michele Visdomini?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/San_Michele_Visdomini>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by San Sebastiano fuori le mura?", "What was exhibited by San Sebastiano fuori le mura?", "Which artwork is exhibited by San Sebastiano fuori le mura?", "Which artwork was exhibited by San Sebastiano fuori le mura?", "Which artworks are exhibited by San Sebastiano fuori le mura?", "Which artworks were exhibited by San Sebastiano fuori le mura?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/San_Sebastiano_fuori_le_mura>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Santa Caterina, Pisa?", "What was exhibited by Santa Caterina, Pisa?", "Which artwork is exhibited by Santa Caterina, Pisa?", "Which artwork was exhibited by Santa Caterina, Pisa?", "Which artworks are exhibited by Santa Caterina, Pisa?", "Which artworks were exhibited by Santa Caterina, Pisa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Santa_Caterina,_Pisa>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Santa Maria Gloriosa dei Frari?", "What was exhibited by Santa Maria Gloriosa dei Frari?", "Which artwork is exhibited by Santa Maria Gloriosa dei Frari?", "Which artwork was exhibited by Santa Maria Gloriosa dei Frari?", "Which artworks are exhibited by Santa Maria Gloriosa dei Frari?", "Which artworks were exhibited by Santa Maria Gloriosa dei Frari?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Santa_Maria_Gloriosa_dei_Frari>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Santi Giovanni e Paolo, Venice?", "What was exhibited by Santi Giovanni e Paolo, Venice?", "Which artwork is exhibited by Santi Giovanni e Paolo, Venice?", "Which artwork was exhibited by Santi Giovanni e Paolo, Venice?", "Which artworks are exhibited by Santi Giovanni e Paolo, Venice?", "Which artworks were exhibited by Santi Giovanni e Paolo, Venice?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Santi_Giovanni_e_Paolo,_Venice>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Santissima Annunziata, Florence?", "What was exhibited by Santissima Annunziata, Florence?", "Which artwork is exhibited by Santissima Annunziata, Florence?", "Which artwork was exhibited by Santissima Annunziata, Florence?", "Which artworks are exhibited by Santissima Annunziata, Florence?", "Which artworks were exhibited by Santissima Annunziata, Florence?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Santissima_Annunziata,_Florence>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Scuola di San Giorgio degli Schiavoni?", "What was exhibited by Scuola di San Giorgio degli Schiavoni?", "Which artwork is exhibited by Scuola di San Giorgio degli Schiavoni?", "Which artwork was exhibited by Scuola di San Giorgio degli Schiavoni?", "Which artworks are exhibited by Scuola di San Giorgio degli Schiavoni?", "Which artworks were exhibited by Scuola di San Giorgio degli Schiavoni?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Scuola_di_San_Giorgio_degli_Schiavoni>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Slovak National Gallery?", "What was exhibited by Slovak National Gallery?", "Which artwork is exhibited by Slovak National Gallery?", "Which artwork was exhibited by Slovak National Gallery?", "Which artworks are exhibited by Slovak National Gallery?", "Which artworks were exhibited by Slovak National Gallery?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Slovak_National_Gallery>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by United States Capitol rotunda?", "What was exhibited by United States Capitol rotunda?", "Which artwork is exhibited by United States Capitol rotunda?", "Which artwork was exhibited by United States Capitol rotunda?", "Which artworks are exhibited by United States Capitol rotunda?", "Which artworks were exhibited by United States Capitol rotunda?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/United_States_Capitol_rotunda>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Fogg Art Museum?", "What was exhibited by Fogg Art Museum?", "Which artwork is exhibited by Fogg Art Museum?", "Which artwork was exhibited by Fogg Art Museum?", "Which artworks are exhibited by Fogg Art Museum?", "Which artworks were exhibited by Fogg Art Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Fogg_Art_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Fondation Maeght?", "What was exhibited by Fondation Maeght?", "Which artwork is exhibited by Fondation Maeght?", "Which artwork was exhibited by Fondation Maeght?", "Which artworks are exhibited by Fondation Maeght?", "Which artworks were exhibited by Fondation Maeght?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Fondation_Maeght>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by National Gallery of Slovenia?", "What was exhibited by National Gallery of Slovenia?", "Which artwork is exhibited by National Gallery of Slovenia?", "Which artwork was exhibited by National Gallery of Slovenia?", "Which artworks are exhibited by National Gallery of Slovenia?", "Which artworks were exhibited by National Gallery of Slovenia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/National_Gallery_of_Slovenia>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Yamatane Museum?", "What was exhibited by Yamatane Museum?", "Which artwork is exhibited by Yamatane Museum?", "Which artwork was exhibited by Yamatane Museum?", "Which artworks are exhibited by Yamatane Museum?", "Which artworks were exhibited by Yamatane Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Yamatane_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Ulster Museum?", "What was exhibited by Ulster Museum?", "Which artwork is exhibited by Ulster Museum?", "Which artwork was exhibited by Ulster Museum?", "Which artworks are exhibited by Ulster Museum?", "Which artworks were exhibited by Ulster Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Ulster_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Mumok?", "What was exhibited by Mumok?", "Which artwork is exhibited by Mumok?", "Which artwork was exhibited by Mumok?", "Which artworks are exhibited by Mumok?", "Which artworks were exhibited by Mumok?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Mumok>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Hallwyl Museum?", "What was exhibited by Hallwyl Museum?", "Which artwork is exhibited by Hallwyl Museum?", "Which artwork was exhibited by Hallwyl Museum?", "Which artworks are exhibited by Hallwyl Museum?", "Which artworks were exhibited by Hallwyl Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Hallwyl_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Hank Aaron State Trail?", "What was exhibited by Hank Aaron State Trail?", "Which artwork is exhibited by Hank Aaron State Trail?", "Which artwork was exhibited by Hank Aaron State Trail?", "Which artworks are exhibited by Hank Aaron State Trail?", "Which artworks were exhibited by Hank Aaron State Trail?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Hank_Aaron_State_Trail>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Ospedale degli Innocenti?", "What was exhibited by Ospedale degli Innocenti?", "Which artwork is exhibited by Ospedale degli Innocenti?", "Which artwork was exhibited by Ospedale degli Innocenti?", "Which artworks are exhibited by Ospedale degli Innocenti?", "Which artworks were exhibited by Ospedale degli Innocenti?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Ospedale_degli_Innocenti>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Gemeentemuseum Den Haag?", "What was exhibited by Gemeentemuseum Den Haag?", "Which artwork is exhibited by Gemeentemuseum Den Haag?", "Which artwork was exhibited by Gemeentemuseum Den Haag?", "Which artworks are exhibited by Gemeentemuseum Den Haag?", "Which artworks were exhibited by Gemeentemuseum Den Haag?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Gemeentemuseum_Den_Haag>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Menil Collection?", "What was exhibited by Menil Collection?", "Which artwork is exhibited by Menil Collection?", "Which artwork was exhibited by Menil Collection?", "Which artworks are exhibited by Menil Collection?", "Which artworks were exhibited by Menil Collection?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Menil_Collection>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Städel?", "What was exhibited by Städel?", "Which artwork is exhibited by Städel?", "Which artwork was exhibited by Städel?", "Which artworks are exhibited by Städel?", "Which artworks were exhibited by Städel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Städel>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Malmö Art Museum?", "What was exhibited by Malmö Art Museum?", "Which artwork is exhibited by Malmö Art Museum?", "Which artwork was exhibited by Malmö Art Museum?", "Which artworks are exhibited by Malmö Art Museum?", "Which artworks were exhibited by Malmö Art Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Malmö_Art_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Museum of Japanese Art?", "What was exhibited by Museum of Japanese Art?", "Which artwork is exhibited by Museum of Japanese Art?", "Which artwork was exhibited by Museum of Japanese Art?", "Which artworks are exhibited by Museum of Japanese Art?", "Which artworks were exhibited by Museum of Japanese Art?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Museum_of_Japanese_Art>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by St. John's Co-Cathedral?", "What was exhibited by St. John's Co-Cathedral?", "Which artwork is exhibited by St. John's Co-Cathedral?", "Which artwork was exhibited by St. John's Co-Cathedral?", "Which artworks are exhibited by St. John's Co-Cathedral?", "Which artworks were exhibited by St. John's Co-Cathedral?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/St._John's_Co-Cathedral>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Lord's Pavilion?", "What was exhibited by Lord's Pavilion?", "Which artwork is exhibited by Lord's Pavilion?", "Which artwork was exhibited by Lord's Pavilion?", "Which artworks are exhibited by Lord's Pavilion?", "Which artworks were exhibited by Lord's Pavilion?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Lord's_Pavilion>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Pinacoteca Ambrosiana?", "What was exhibited by Pinacoteca Ambrosiana?", "Which artwork is exhibited by Pinacoteca Ambrosiana?", "Which artwork was exhibited by Pinacoteca Ambrosiana?", "Which artworks are exhibited by Pinacoteca Ambrosiana?", "Which artworks were exhibited by Pinacoteca Ambrosiana?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Pinacoteca_Ambrosiana>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Pinacoteca Giovanni e Marella Agnelli?", "What was exhibited by Pinacoteca Giovanni e Marella Agnelli?", "Which artwork is exhibited by Pinacoteca Giovanni e Marella Agnelli?", "Which artwork was exhibited by Pinacoteca Giovanni e Marella Agnelli?", "Which artworks are exhibited by Pinacoteca Giovanni e Marella Agnelli?", "Which artworks were exhibited by Pinacoteca Giovanni e Marella Agnelli?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Pinacoteca_Giovanni_e_Marella_Agnelli>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by St John's Co-Cathedral?", "What was exhibited by St John's Co-Cathedral?", "Which artwork is exhibited by St John's Co-Cathedral?", "Which artwork was exhibited by St John's Co-Cathedral?", "Which artworks are exhibited by St John's Co-Cathedral?", "Which artworks were exhibited by St John's Co-Cathedral?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/St_John's_Co-Cathedral>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Lafayette Street (Manhattan)?", "What was exhibited by Lafayette Street (Manhattan)?", "Which artwork is exhibited by Lafayette Street (Manhattan)?", "Which artwork was exhibited by Lafayette Street (Manhattan)?", "Which artworks are exhibited by Lafayette Street (Manhattan)?", "Which artworks were exhibited by Lafayette Street (Manhattan)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Lafayette_Street_(Manhattan)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by West Bank Wall?", "What was exhibited by West Bank Wall?", "Which artwork is exhibited by West Bank Wall?", "Which artwork was exhibited by West Bank Wall?", "Which artworks are exhibited by West Bank Wall?", "Which artworks were exhibited by West Bank Wall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/West_Bank_Wall>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Birmingham Museum and Art Gallery?", "What was exhibited by Birmingham Museum and Art Gallery?", "Which artwork is exhibited by Birmingham Museum and Art Gallery?", "Which artwork was exhibited by Birmingham Museum and Art Gallery?", "Which artworks are exhibited by Birmingham Museum and Art Gallery?", "Which artworks were exhibited by Birmingham Museum and Art Gallery?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Birmingham_Museum_and_Art_Gallery>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Birmingham Museum of Art?", "What was exhibited by Birmingham Museum of Art?", "Which artwork is exhibited by Birmingham Museum of Art?", "Which artwork was exhibited by Birmingham Museum of Art?", "Which artworks are exhibited by Birmingham Museum of Art?", "Which artworks were exhibited by Birmingham Museum of Art?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Birmingham_Museum_of_Art>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Blanton Museum of Art?", "What was exhibited by Blanton Museum of Art?", "Which artwork is exhibited by Blanton Museum of Art?", "Which artwork was exhibited by Blanton Museum of Art?", "Which artworks are exhibited by Blanton Museum of Art?", "Which artworks were exhibited by Blanton Museum of Art?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Blanton_Museum_of_Art>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Bletchley Park?", "What was exhibited by Bletchley Park?", "Which artwork is exhibited by Bletchley Park?", "Which artwork was exhibited by Bletchley Park?", "Which artworks are exhibited by Bletchley Park?", "Which artworks were exhibited by Bletchley Park?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Bletchley_Park>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Bode Museum?", "What was exhibited by Bode Museum?", "Which artwork is exhibited by Bode Museum?", "Which artwork was exhibited by Bode Museum?", "Which artworks are exhibited by Bode Museum?", "Which artworks were exhibited by Bode Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Bode_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Bonnefantenmuseum?", "What was exhibited by Bonnefantenmuseum?", "Which artwork is exhibited by Bonnefantenmuseum?", "Which artwork was exhibited by Bonnefantenmuseum?", "Which artworks are exhibited by Bonnefantenmuseum?", "Which artworks were exhibited by Bonnefantenmuseum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Bonnefantenmuseum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Boston?", "What was exhibited by Boston?", "Which artwork is exhibited by Boston?", "Which artwork was exhibited by Boston?", "Which artworks are exhibited by Boston?", "Which artworks were exhibited by Boston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Boston>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Bowery Poetry Club?", "What was exhibited by Bowery Poetry Club?", "Which artwork is exhibited by Bowery Poetry Club?", "Which artwork was exhibited by Bowery Poetry Club?", "Which artworks are exhibited by Bowery Poetry Club?", "Which artworks were exhibited by Bowery Poetry Club?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Bowery_Poetry_Club>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Delaware Art Museum?", "What was exhibited by Delaware Art Museum?", "Which artwork is exhibited by Delaware Art Museum?", "Which artwork was exhibited by Delaware Art Museum?", "Which artworks are exhibited by Delaware Art Museum?", "Which artworks were exhibited by Delaware Art Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Delaware_Art_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Delphi Archaeological Museum?", "What was exhibited by Delphi Archaeological Museum?", "Which artwork is exhibited by Delphi Archaeological Museum?", "Which artwork was exhibited by Delphi Archaeological Museum?", "Which artworks are exhibited by Delphi Archaeological Museum?", "Which artworks were exhibited by Delphi Archaeological Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Delphi_Archaeological_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Denver Art Museum?", "What was exhibited by Denver Art Museum?", "Which artwork is exhibited by Denver Art Museum?", "Which artwork was exhibited by Denver Art Museum?", "Which artworks are exhibited by Denver Art Museum?", "Which artworks were exhibited by Denver Art Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Denver_Art_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Denver International Airport?", "What was exhibited by Denver International Airport?", "Which artwork is exhibited by Denver International Airport?", "Which artwork was exhibited by Denver International Airport?", "Which artworks are exhibited by Denver International Airport?", "Which artworks were exhibited by Denver International Airport?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Denver_International_Airport>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Derby Museum and Art Gallery?", "What was exhibited by Derby Museum and Art Gallery?", "Which artwork is exhibited by Derby Museum and Art Gallery?", "Which artwork was exhibited by Derby Museum and Art Gallery?", "Which artworks are exhibited by Derby Museum and Art Gallery?", "Which artworks were exhibited by Derby Museum and Art Gallery?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Derby_Museum_and_Art_Gallery>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Des Moines Art Center?", "What was exhibited by Des Moines Art Center?", "Which artwork is exhibited by Des Moines Art Center?", "Which artwork was exhibited by Des Moines Art Center?", "Which artworks are exhibited by Des Moines Art Center?", "Which artworks were exhibited by Des Moines Art Center?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Des_Moines_Art_Center>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Detroit?", "What was exhibited by Detroit?", "Which artwork is exhibited by Detroit?", "Which artwork was exhibited by Detroit?", "Which artworks are exhibited by Detroit?", "Which artworks were exhibited by Detroit?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Detroit>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Detroit Institute of Arts?", "What was exhibited by Detroit Institute of Arts?", "Which artwork is exhibited by Detroit Institute of Arts?", "Which artwork was exhibited by Detroit Institute of Arts?", "Which artworks are exhibited by Detroit Institute of Arts?", "Which artworks were exhibited by Detroit Institute of Arts?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Detroit_Institute_of_Arts>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is exhibited by Dia Art Foundation?", "What was exhibited by Dia Art Foundation?", "Which artwork is exhibited by Dia Art Foundation?", "Which artwork was exhibited by Dia Art Foundation?", "Which artworks are exhibited by Dia Art Foundation?", "Which artworks were exhibited by Dia Art Foundation?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Dia_Art_Foundation>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the 2014 United States Senate election in Alaska flows?", "When were the 2014 United States Senate election in Alaska flows?", "Which river was the 2014 United States Senate election in Alaska flows?", "Which river were the 2014 United States Senate election in Alaska flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/2014_United_States_Senate_election_in_Alaska>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the 2014 United States Senate election in Arkansas flows?", "When were the 2014 United States Senate election in Arkansas flows?", "Which river was the 2014 United States Senate election in Arkansas flows?", "Which river were the 2014 United States Senate election in Arkansas flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/2014_United_States_Senate_election_in_Arkansas>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the 2014 United States Senate election in Colorado flows?", "When were the 2014 United States Senate election in Colorado flows?", "Which river was the 2014 United States Senate election in Colorado flows?", "Which river were the 2014 United States Senate election in Colorado flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/2014_United_States_Senate_election_in_Colorado>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the 2014 United States Senate election in Louisiana flows?", "When were the 2014 United States Senate election in Louisiana flows?", "Which river was the 2014 United States Senate election in Louisiana flows?", "Which river were the 2014 United States Senate election in Louisiana flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/2014_United_States_Senate_election_in_Louisiana>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the 2014 United States Senate election in North Carolina flows?", "When were the 2014 United States Senate election in North Carolina flows?", "Which river was the 2014 United States Senate election in North Carolina flows?", "Which river were the 2014 United States Senate election in North Carolina flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/2014_United_States_Senate_election_in_North_Carolina>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the 2016 Canada Sevens flows?", "When were the 2016 Canada Sevens flows?", "Which river was the 2016 Canada Sevens flows?", "Which river were the 2016 Canada Sevens flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/2016_Canada_Sevens>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the 2018 Alabama gubernatorial election flows?", "When were the 2018 Alabama gubernatorial election flows?", "Which river was the 2018 Alabama gubernatorial election flows?", "Which river were the 2018 Alabama gubernatorial election flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/2018_Alabama_gubernatorial_election>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the 2018 Alaska gubernatorial election flows?", "When were the 2018 Alaska gubernatorial election flows?", "Which river was the 2018 Alaska gubernatorial election flows?", "Which river were the 2018 Alaska gubernatorial election flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/2018_Alaska_gubernatorial_election>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the 2018 Arizona gubernatorial election flows?", "When were the 2018 Arizona gubernatorial election flows?", "Which river was the 2018 Arizona gubernatorial election flows?", "Which river were the 2018 Arizona gubernatorial election flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/2018_Arizona_gubernatorial_election>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the 2018 Arkansas gubernatorial election flows?", "When were the 2018 Arkansas gubernatorial election flows?", "Which river was the 2018 Arkansas gubernatorial election flows?", "Which river were the 2018 Arkansas gubernatorial election flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/2018_Arkansas_gubernatorial_election>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lower Canada flows?", "When were the Lower Canada flows?", "Which river was the Lower Canada flows?", "Which river were the Lower Canada flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Lower_Canada>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lower Egypt flows?", "When were the Lower Egypt flows?", "Which river was the Lower Egypt flows?", "Which river were the Lower Egypt flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Lower_Egypt>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lower Saxony flows?", "When were the Lower Saxony flows?", "Which river was the Lower Saxony flows?", "Which river were the Lower Saxony flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Lower_Saxony>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lucius Cornelius Cinna flows?", "When were the Lucius Cornelius Cinna flows?", "Which river was the Lucius Cornelius Cinna flows?", "Which river were the Lucius Cornelius Cinna flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Lucius_Cornelius_Cinna>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Luftwaffe flows?", "When were the Luftwaffe flows?", "Which river was the Luftwaffe flows?", "Which river were the Luftwaffe flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Luftwaffe>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Luhansk Oblast flows?", "When were the Luhansk Oblast flows?", "Which river was the Luhansk Oblast flows?", "Which river were the Luhansk Oblast flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Luhansk_Oblast>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Luhansk People's Republic flows?", "When were the Luhansk People's Republic flows?", "Which river was the Luhansk People's Republic flows?", "Which river were the Luhansk People's Republic flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Luhansk_People's_Republic>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lutheran flows?", "When were the Lutheran flows?", "Which river was the Lutheran flows?", "Which river were the Lutheran flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Lutheran>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lutheran Church flows?", "When were the Lutheran Church flows?", "Which river was the Lutheran Church flows?", "Which river were the Lutheran Church flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Lutheran_Church>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lutheranism flows?", "When were the Lutheranism flows?", "Which river was the Lutheranism flows?", "Which river were the Lutheranism flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Lutheranism>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lutherans flows?", "When were the Lutherans flows?", "Which river was the Lutherans flows?", "Which river were the Lutherans flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Lutherans>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Luxembourg flows?", "When were the Luxembourg flows?", "Which river was the Luxembourg flows?", "Which river were the Luxembourg flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Luxembourg>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Luxembourg (city) flows?", "When were the Luxembourg (city) flows?", "Which river was the Luxembourg (city) flows?", "Which river were the Luxembourg (city) flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Luxembourg_(city)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Luzerne County, Pennsylvania flows?", "When were the Luzerne County, Pennsylvania flows?", "Which river was the Luzerne County, Pennsylvania flows?", "Which river were the Luzerne County, Pennsylvania flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Luzerne_County,_Pennsylvania>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Luzon flows?", "When were the Luzon flows?", "Which river was the Luzon flows?", "Which river were the Luzon flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Luzon>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lviv Oblast flows?", "When were the Lviv Oblast flows?", "Which river was the Lviv Oblast flows?", "Which river were the Lviv Oblast flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Lviv_Oblast>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lyon flows?", "When were the Lyon flows?", "Which river was the Lyon flows?", "Which river were the Lyon flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Lyon>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lübeck flows?", "When were the Lübeck flows?", "Which river was the Lübeck flows?", "Which river were the Lübeck flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Lübeck>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Maastricht flows?", "When were the Maastricht flows?", "Which river was the Maastricht flows?", "Which river were the Maastricht flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Maastricht>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Macao flows?", "When were the Macao flows?", "Which river was the Macao flows?", "Which river were the Macao flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Macao>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Macau flows?", "When were the Macau flows?", "Which river was the Macau flows?", "Which river were the Macau flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Macau>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Macedonia (Roman province) flows?", "When were the Macedonia (Roman province) flows?", "Which river was the Macedonia (Roman province) flows?", "Which river were the Macedonia (Roman province) flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Macedonia_(Roman_province)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Macedonia (ancient kingdom) flows?", "When were the Macedonia (ancient kingdom) flows?", "Which river was the Macedonia (ancient kingdom) flows?", "Which river were the Macedonia (ancient kingdom) flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Macedonia_(ancient_kingdom)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Macedonia (region) flows?", "When were the Macedonia (region) flows?", "Which river was the Macedonia (region) flows?", "Which river were the Macedonia (region) flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Macedonia_(region)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Madagascar flows?", "When were the Madagascar flows?", "Which river was the Madagascar flows?", "Which river were the Madagascar flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Madagascar>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Madeira flows?", "When were the Madeira flows?", "Which river was the Madeira flows?", "Which river were the Madeira flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Madeira>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Madhubani, India flows?", "When were the Madhubani, India flows?", "Which river was the Madhubani, India flows?", "Which river were the Madhubani, India flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Madhubani,_India>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Madhya Pradesh flows?", "When were the Madhya Pradesh flows?", "Which river was the Madhya Pradesh flows?", "Which river were the Madhya Pradesh flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Madhya_Pradesh>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Madrid flows?", "When were the Madrid flows?", "Which river was the Madrid flows?", "Which river were the Madrid flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Madrid>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Madrid, Spain flows?", "When were the Madrid, Spain flows?", "Which river was the Madrid, Spain flows?", "Which river were the Madrid, Spain flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Madrid,_Spain>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Magahi people flows?", "When were the Magahi people flows?", "Which river was the Magahi people flows?", "Which river were the Magahi people flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Magahi_people>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Magallanes Region flows?", "When were the Magallanes Region flows?", "Which river was the Magallanes Region flows?", "Which river were the Magallanes Region flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Magallanes_Region>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Maghreb flows?", "When were the Maghreb flows?", "Which river was the Maghreb flows?", "Which river were the Maghreb flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Maghreb>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Maharashtra flows?", "When were the Maharashtra flows?", "Which river was the Maharashtra flows?", "Which river were the Maharashtra flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Maharashtra>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Mailsi flows?", "When were the Mailsi flows?", "Which river was the Mailsi flows?", "Which river were the Mailsi flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Mailsi>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Maine flows?", "When were the Maine flows?", "Which river was the Maine flows?", "Which river were the Maine flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Maine>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Maine-et-Loire flows?", "When were the Maine-et-Loire flows?", "Which river was the Maine-et-Loire flows?", "Which river were the Maine-et-Loire flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Maine-et-Loire>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Mainland China flows?", "When were the Mainland China flows?", "Which river was the Mainland China flows?", "Which river were the Mainland China flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Mainland_China>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Major League Baseball flows?", "When were the Major League Baseball flows?", "Which river was the Major League Baseball flows?", "Which river were the Major League Baseball flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Major_League_Baseball>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Majorca flows?", "When were the Majorca flows?", "Which river was the Majorca flows?", "Which river were the Majorca flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Majorca>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Maktab al-Khidamat flows?", "When were the Maktab al-Khidamat flows?", "Which river was the Maktab al-Khidamat flows?", "Which river were the Maktab al-Khidamat flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Maktab_al-Khidamat>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Malabar Coast flows?", "When were the Malabar Coast flows?", "Which river was the Malabar Coast flows?", "Which river were the Malabar Coast flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Malabar_Coast>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Malabe flows?", "When were the Malabe flows?", "Which river was the Malabe flows?", "Which river were the Malabe flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Malabe>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Malacca flows?", "When were the Malacca flows?", "Which river was the Malacca flows?", "Which river were the Malacca flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Malacca>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Malappuram district flows?", "When were the Malappuram district flows?", "Which river was the Malappuram district flows?", "Which river were the Malappuram district flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Malappuram_district>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Malawi flows?", "When were the Malawi flows?", "Which river was the Malawi flows?", "Which river were the Malawi flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Malawi>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Malay Peninsula flows?", "When were the Malay Peninsula flows?", "Which river was the Malay Peninsula flows?", "Which river were the Malay Peninsula flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Malay_Peninsula>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Malaya Command flows?", "When were the Malaya Command flows?", "Which river was the Malaya Command flows?", "Which river were the Malaya Command flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Malaya_Command>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Malayali flows?", "When were the Malayali flows?", "Which river was the Malayali flows?", "Which river were the Malayali flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Malayali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Malaysia flows?", "When were the Malaysia flows?", "Which river was the Malaysia flows?", "Which river were the Malaysia flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Malaysia>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Malaysia national cricket team flows?", "When were the Malaysia national cricket team flows?", "Which river was the Malaysia national cricket team flows?", "Which river were the Malaysia national cricket team flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Malaysia_national_cricket_team>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Malaysia women's national cricket team flows?", "When were the Malaysia women's national cricket team flows?", "Which river was the Malaysia women's national cricket team flows?", "Which river were the Malaysia women's national cricket team flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Malaysia_women's_national_cricket_team>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Malaysian Armed Forces flows?", "When were the Malaysian Armed Forces flows?", "Which river was the Malaysian Armed Forces flows?", "Which river were the Malaysian Armed Forces flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Malaysian_Armed_Forces>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Malaysian Siamese flows?", "When were the Malaysian Siamese flows?", "Which river was the Malaysian Siamese flows?", "Which river were the Malaysian Siamese flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Malaysian_Siamese>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Maldives flows?", "When were the Maldives flows?", "Which river was the Maldives flows?", "Which river were the Maldives flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Maldives>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Mali flows?", "When were the Mali flows?", "Which river was the Mali flows?", "Which river were the Mali flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Mali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Carry the Kettle Nakoda First Nation flows?", "When were the Carry the Kettle Nakoda First Nation flows?", "Which river was the Carry the Kettle Nakoda First Nation flows?", "Which river were the Carry the Kettle Nakoda First Nation flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Carry_the_Kettle_Nakoda_First_Nation>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Carus Publishing Company flows?", "When were the Carus Publishing Company flows?", "Which river was the Carus Publishing Company flows?", "Which river were the Carus Publishing Company flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Carus_Publishing_Company>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Castilian Spanish flows?", "When were the Castilian Spanish flows?", "Which river was the Castilian Spanish flows?", "Which river were the Castilian Spanish flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Castilian_Spanish>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Balkan flows?", "When were the Balkan flows?", "Which river was the Balkan flows?", "Which river were the Balkan flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Balkan>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Balochistan (Pakistan) flows?", "When were the Balochistan (Pakistan) flows?", "Which river was the Balochistan (Pakistan) flows?", "Which river were the Balochistan (Pakistan) flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Balochistan_(Pakistan)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Bangladesh Awami League flows?", "When were the Bangladesh Awami League flows?", "Which river was the Bangladesh Awami League flows?", "Which river were the Bangladesh Awami League flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Bangladesh_Awami_League>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Bangladeshi people flows?", "When were the Bangladeshi people flows?", "Which river was the Bangladeshi people flows?", "Which river were the Bangladeshi people flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Bangladeshi_people>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Beiyang Government flows?", "When were the Beiyang Government flows?", "Which river was the Beiyang Government flows?", "Which river were the Beiyang Government flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Beiyang_Government>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Bonnyville, Alberta flows?", "When were the Bonnyville, Alberta flows?", "Which river was the Bonnyville, Alberta flows?", "Which river were the Bonnyville, Alberta flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Bonnyville,_Alberta>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Constitution of Ghana flows?", "When were the Constitution of Ghana flows?", "Which river was the Constitution of Ghana flows?", "Which river were the Constitution of Ghana flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Constitution_of_Ghana>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Constitution of Namibia flows?", "When were the Constitution of Namibia flows?", "Which river was the Constitution of Namibia flows?", "Which river were the Constitution of Namibia flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Constitution_of_Namibia>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Constitutional history of Greece flows?", "When were the Constitutional history of Greece flows?", "Which river was the Constitutional history of Greece flows?", "Which river were the Constitutional history of Greece flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Constitutional_history_of_Greece>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Consultation (Texas) flows?", "When were the Consultation (Texas) flows?", "Which river was the Consultation (Texas) flows?", "Which river were the Consultation (Texas) flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Consultation_(Texas)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Continental Congress flows?", "When were the Continental Congress flows?", "Which river was the Continental Congress flows?", "Which river were the Continental Congress flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Continental_Congress>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the US Open (tennis) flows?", "When were the US Open (tennis) flows?", "Which river was the US Open (tennis) flows?", "Which river were the US Open (tennis) flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/US_Open_(tennis)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Uganda flows?", "When were the Uganda flows?", "Which river was the Uganda flows?", "Which river were the Uganda flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Uganda>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Uganda Air Force flows?", "When were the Uganda Air Force flows?", "Which river was the Uganda Air Force flows?", "Which river were the Uganda Air Force flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Uganda_Air_Force>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Uganda Army (1962–1971) flows?", "When were the Uganda Army (1962–1971) flows?", "Which river was the Uganda Army (1962–1971) flows?", "Which river were the Uganda Army (1962–1971) flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Uganda_Army_(1962–1971)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Uganda Protectorate flows?", "When were the Uganda Protectorate flows?", "Which river was the Uganda Protectorate flows?", "Which river were the Uganda Protectorate flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Uganda_Protectorate>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Uganda national cricket team flows?", "When were the Uganda national cricket team flows?", "Which river was the Uganda national cricket team flows?", "Which river were the Uganda national cricket team flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Uganda_national_cricket_team>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Uganda women's national cricket team flows?", "When were the Uganda women's national cricket team flows?", "Which river was the Uganda women's national cricket team flows?", "Which river were the Uganda women's national cricket team flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Uganda_women's_national_cricket_team>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Ukraine flows?", "When were the Ukraine flows?", "Which river was the Ukraine flows?", "Which river were the Ukraine flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ukraine>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Ukrainian Football Amateur Association flows?", "When were the Ukrainian Football Amateur Association flows?", "Which river was the Ukrainian Football Amateur Association flows?", "Which river were the Ukrainian Football Amateur Association flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ukrainian_Football_Amateur_Association>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Ukrainian Navy flows?", "When were the Ukrainian Navy flows?", "Which river was the Ukrainian Navy flows?", "Which river were the Ukrainian Navy flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ukrainian_Navy>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Ukrainian People's Republic flows?", "When were the Ukrainian People's Republic flows?", "Which river was the Ukrainian People's Republic flows?", "Which river were the Ukrainian People's Republic flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ukrainian_People's_Republic>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Ukrainian People's Republic of Soviets flows?", "When were the Ukrainian People's Republic of Soviets flows?", "Which river was the Ukrainian People's Republic of Soviets flows?", "Which river were the Ukrainian People's Republic of Soviets flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ukrainian_People's_Republic_of_Soviets>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Ukrainian Soviet Republic flows?", "When were the Ukrainian Soviet Republic flows?", "Which river was the Ukrainian Soviet Republic flows?", "Which river were the Ukrainian Soviet Republic flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ukrainian_Soviet_Republic>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Ukrainian Soviet Socialist Republic flows?", "When were the Ukrainian Soviet Socialist Republic flows?", "Which river was the Ukrainian Soviet Socialist Republic flows?", "Which river were the Ukrainian Soviet Socialist Republic flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ukrainian_Soviet_Socialist_Republic>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Ukrainian State flows?", "When were the Ukrainian State flows?", "Which river was the Ukrainian State flows?", "Which river were the Ukrainian State flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ukrainian_State>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Ulcinj flows?", "When were the Ulcinj flows?", "Which river was the Ulcinj flows?", "Which river were the Ulcinj flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ulcinj>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Ullal flows?", "When were the Ullal flows?", "Which river was the Ullal flows?", "Which river were the Ullal flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ullal>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Uman Raion flows?", "When were the Uman Raion flows?", "Which river was the Uman Raion flows?", "Which river were the Uman Raion flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Uman_Raion>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Umayyad Caliphate flows?", "When were the Umayyad Caliphate flows?", "Which river was the Umayyad Caliphate flows?", "Which river were the Umayyad Caliphate flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Umayyad_Caliphate>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "COUNTRY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Umbria flows?", "When were the Umbria flows?", "Which river was the Umbria flows?", "Which river were the Umbria flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Umbria>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1911 Philadelphia mayoral election?", "What was flows through 1911 Philadelphia mayoral election?", "What were flow through 1911 Philadelphia mayoral election?", "What were flows through 1911 Philadelphia mayoral election?", "Which countries were flow through 1911 Philadelphia mayoral election?", "Which countries were flows through 1911 Philadelphia mayoral election?", "Which country was flow through 1911 Philadelphia mayoral election?", "Which country was flows through 1911 Philadelphia mayoral election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1911_Philadelphia_mayoral_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1911 Portuguese Constituent National Assembly election?", "What was flows through 1911 Portuguese Constituent National Assembly election?", "What were flow through 1911 Portuguese Constituent National Assembly election?", "What were flows through 1911 Portuguese Constituent National Assembly election?", "Which countries were flow through 1911 Portuguese Constituent National Assembly election?", "Which countries were flows through 1911 Portuguese Constituent National Assembly election?", "Which country was flow through 1911 Portuguese Constituent National Assembly election?", "Which country was flows through 1911 Portuguese Constituent National Assembly election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1911_Portuguese_Constituent_National_Assembly_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1911 United States House of Representatives election in Arizona?", "What was flows through 1911 United States House of Representatives election in Arizona?", "What were flow through 1911 United States House of Representatives election in Arizona?", "What were flows through 1911 United States House of Representatives election in Arizona?", "Which countries were flow through 1911 United States House of Representatives election in Arizona?", "Which countries were flows through 1911 United States House of Representatives election in Arizona?", "Which country was flow through 1911 United States House of Representatives election in Arizona?", "Which country was flows through 1911 United States House of Representatives election in Arizona?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1911_United_States_House_of_Representatives_election_in_Arizona> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1911 United States House of Representatives election in New Mexico?", "What was flows through 1911 United States House of Representatives election in New Mexico?", "What were flow through 1911 United States House of Representatives election in New Mexico?", "What were flows through 1911 United States House of Representatives election in New Mexico?", "Which countries were flow through 1911 United States House of Representatives election in New Mexico?", "Which countries were flows through 1911 United States House of Representatives election in New Mexico?", "Which country was flow through 1911 United States House of Representatives election in New Mexico?", "Which country was flows through 1911 United States House of Representatives election in New Mexico?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1911_United_States_House_of_Representatives_election_in_New_Mexico> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1911 United States Senate election in New York?", "What was flows through 1911 United States Senate election in New York?", "What were flow through 1911 United States Senate election in New York?", "What were flows through 1911 United States Senate election in New York?", "Which countries were flow through 1911 United States Senate election in New York?", "Which countries were flows through 1911 United States Senate election in New York?", "Which country was flow through 1911 United States Senate election in New York?", "Which country was flows through 1911 United States Senate election in New York?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1911_United_States_Senate_election_in_New_York> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1912 Chinese National Assembly election?", "What was flows through 1912 Chinese National Assembly election?", "What were flow through 1912 Chinese National Assembly election?", "What were flows through 1912 Chinese National Assembly election?", "Which countries were flow through 1912 Chinese National Assembly election?", "Which countries were flows through 1912 Chinese National Assembly election?", "Which country was flow through 1912 Chinese National Assembly election?", "Which country was flows through 1912 Chinese National Assembly election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1912_Chinese_National_Assembly_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1912 Chinese provisional presidential election?", "What was flows through 1912 Chinese provisional presidential election?", "What were flow through 1912 Chinese provisional presidential election?", "What were flows through 1912 Chinese provisional presidential election?", "Which countries were flow through 1912 Chinese provisional presidential election?", "Which countries were flows through 1912 Chinese provisional presidential election?", "Which country was flow through 1912 Chinese provisional presidential election?", "Which country was flows through 1912 Chinese provisional presidential election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1912_Chinese_provisional_presidential_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1912 Cuban general election?", "What was flows through 1912 Cuban general election?", "What were flow through 1912 Cuban general election?", "What were flows through 1912 Cuban general election?", "Which countries were flow through 1912 Cuban general election?", "Which countries were flows through 1912 Cuban general election?", "Which country was flow through 1912 Cuban general election?", "Which country was flows through 1912 Cuban general election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1912_Cuban_general_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1912 Ecuadorian presidential election?", "What was flows through 1912 Ecuadorian presidential election?", "What were flow through 1912 Ecuadorian presidential election?", "What were flows through 1912 Ecuadorian presidential election?", "Which countries were flow through 1912 Ecuadorian presidential election?", "Which countries were flows through 1912 Ecuadorian presidential election?", "Which country was flow through 1912 Ecuadorian presidential election?", "Which country was flows through 1912 Ecuadorian presidential election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1912_Ecuadorian_presidential_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1912 French Grand Prix?", "What was flows through 1912 French Grand Prix?", "What were flow through 1912 French Grand Prix?", "What were flows through 1912 French Grand Prix?", "Which countries were flow through 1912 French Grand Prix?", "Which countries were flows through 1912 French Grand Prix?", "Which country was flow through 1912 French Grand Prix?", "Which country was flows through 1912 French Grand Prix?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1912_French_Grand_Prix> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1912 Louisiana gubernatorial election?", "What was flows through 1912 Louisiana gubernatorial election?", "What were flow through 1912 Louisiana gubernatorial election?", "What were flows through 1912 Louisiana gubernatorial election?", "Which countries were flow through 1912 Louisiana gubernatorial election?", "Which countries were flows through 1912 Louisiana gubernatorial election?", "Which country was flow through 1912 Louisiana gubernatorial election?", "Which country was flows through 1912 Louisiana gubernatorial election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1912_Louisiana_gubernatorial_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1912 United States Senate elections in Arizona?", "What was flows through 1912 United States Senate elections in Arizona?", "What were flow through 1912 United States Senate elections in Arizona?", "What were flows through 1912 United States Senate elections in Arizona?", "Which countries were flow through 1912 United States Senate elections in Arizona?", "Which countries were flows through 1912 United States Senate elections in Arizona?", "Which country was flow through 1912 United States Senate elections in Arizona?", "Which country was flows through 1912 United States Senate elections in Arizona?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1912_United_States_Senate_elections_in_Arizona> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1913 Chinese presidential election?", "What was flows through 1913 Chinese presidential election?", "What were flow through 1913 Chinese presidential election?", "What were flows through 1913 Chinese presidential election?", "Which countries were flow through 1913 Chinese presidential election?", "Which countries were flows through 1913 Chinese presidential election?", "Which country was flow through 1913 Chinese presidential election?", "Which country was flows through 1913 Chinese presidential election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1913_Chinese_presidential_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1913 French Grand Prix?", "What was flows through 1913 French Grand Prix?", "What were flow through 1913 French Grand Prix?", "What were flows through 1913 French Grand Prix?", "Which countries were flow through 1913 French Grand Prix?", "Which countries were flows through 1913 French Grand Prix?", "Which country was flow through 1913 French Grand Prix?", "Which country was flows through 1913 French Grand Prix?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1913_French_Grand_Prix> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1913 United States Senate election in South Carolina?", "What was flows through 1913 United States Senate election in South Carolina?", "What were flow through 1913 United States Senate election in South Carolina?", "What were flows through 1913 United States Senate election in South Carolina?", "Which countries were flow through 1913 United States Senate election in South Carolina?", "Which countries were flows through 1913 United States Senate election in South Carolina?", "Which country was flow through 1913 United States Senate election in South Carolina?", "Which country was flows through 1913 United States Senate election in South Carolina?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1913_United_States_Senate_election_in_South_Carolina> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1914 American Grand Prize?", "What was flows through 1914 American Grand Prize?", "What were flow through 1914 American Grand Prize?", "What were flows through 1914 American Grand Prize?", "Which countries were flow through 1914 American Grand Prize?", "Which countries were flows through 1914 American Grand Prize?", "Which country was flow through 1914 American Grand Prize?", "Which country was flows through 1914 American Grand Prize?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1914_American_Grand_Prize> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1914 Boston mayoral election?", "What was flows through 1914 Boston mayoral election?", "What were flow through 1914 Boston mayoral election?", "What were flows through 1914 Boston mayoral election?", "Which countries were flow through 1914 Boston mayoral election?", "Which countries were flows through 1914 Boston mayoral election?", "Which country was flow through 1914 Boston mayoral election?", "Which country was flows through 1914 Boston mayoral election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1914_Boston_mayoral_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1914 Brazilian presidential election?", "What was flows through 1914 Brazilian presidential election?", "What were flow through 1914 Brazilian presidential election?", "What were flows through 1914 Brazilian presidential election?", "Which countries were flow through 1914 Brazilian presidential election?", "Which countries were flows through 1914 Brazilian presidential election?", "Which country was flow through 1914 Brazilian presidential election?", "Which country was flows through 1914 Brazilian presidential election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1914_Brazilian_presidential_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1914 New York state election?", "What was flows through 1914 New York state election?", "What were flow through 1914 New York state election?", "What were flows through 1914 New York state election?", "Which countries were flow through 1914 New York state election?", "Which countries were flows through 1914 New York state election?", "Which country was flow through 1914 New York state election?", "Which country was flows through 1914 New York state election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1914_New_York_state_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1914 Oregon gubernatorial election?", "What was flows through 1914 Oregon gubernatorial election?", "What were flow through 1914 Oregon gubernatorial election?", "What were flows through 1914 Oregon gubernatorial election?", "Which countries were flow through 1914 Oregon gubernatorial election?", "Which countries were flows through 1914 Oregon gubernatorial election?", "Which country was flow through 1914 Oregon gubernatorial election?", "Which country was flows through 1914 Oregon gubernatorial election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1914_Oregon_gubernatorial_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1914 United States Senate election in South Carolina?", "What was flows through 1914 United States Senate election in South Carolina?", "What were flow through 1914 United States Senate election in South Carolina?", "What were flows through 1914 United States Senate election in South Carolina?", "Which countries were flow through 1914 United States Senate election in South Carolina?", "Which countries were flows through 1914 United States Senate election in South Carolina?", "Which country was flow through 1914 United States Senate election in South Carolina?", "Which country was flows through 1914 United States Senate election in South Carolina?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1914_United_States_Senate_election_in_South_Carolina> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1915 Chilean presidential election?", "What was flows through 1915 Chilean presidential election?", "What were flow through 1915 Chilean presidential election?", "What were flows through 1915 Chilean presidential election?", "Which countries were flow through 1915 Chilean presidential election?", "Which countries were flows through 1915 Chilean presidential election?", "Which country was flow through 1915 Chilean presidential election?", "Which country was flows through 1915 Chilean presidential election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1915_Chilean_presidential_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1915 Salvadoran presidential election?", "What was flows through 1915 Salvadoran presidential election?", "What were flow through 1915 Salvadoran presidential election?", "What were flows through 1915 Salvadoran presidential election?", "Which countries were flow through 1915 Salvadoran presidential election?", "Which countries were flows through 1915 Salvadoran presidential election?", "Which country was flow through 1915 Salvadoran presidential election?", "Which country was flows through 1915 Salvadoran presidential election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1915_Salvadoran_presidential_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1916 American Grand Prize?", "What was flows through 1916 American Grand Prize?", "What were flow through 1916 American Grand Prize?", "What were flows through 1916 American Grand Prize?", "Which countries were flow through 1916 American Grand Prize?", "Which countries were flows through 1916 American Grand Prize?", "Which country was flow through 1916 American Grand Prize?", "Which country was flows through 1916 American Grand Prize?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1916_American_Grand_Prize> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1916 Chinese vice-presidential election?", "What was flows through 1916 Chinese vice-presidential election?", "What were flow through 1916 Chinese vice-presidential election?", "What were flows through 1916 Chinese vice-presidential election?", "Which countries were flow through 1916 Chinese vice-presidential election?", "Which countries were flows through 1916 Chinese vice-presidential election?", "Which country was flow through 1916 Chinese vice-presidential election?", "Which country was flows through 1916 Chinese vice-presidential election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1916_Chinese_vice-presidential_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1916 Cuban general election?", "What was flows through 1916 Cuban general election?", "What were flow through 1916 Cuban general election?", "What were flows through 1916 Cuban general election?", "Which countries were flow through 1916 Cuban general election?", "Which countries were flows through 1916 Cuban general election?", "Which country was flow through 1916 Cuban general election?", "Which country was flows through 1916 Cuban general election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1916_Cuban_general_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1916 Ecuadorian presidential election?", "What was flows through 1916 Ecuadorian presidential election?", "What were flow through 1916 Ecuadorian presidential election?", "What were flows through 1916 Ecuadorian presidential election?", "Which countries were flow through 1916 Ecuadorian presidential election?", "Which countries were flows through 1916 Ecuadorian presidential election?", "Which country was flow through 1916 Ecuadorian presidential election?", "Which country was flows through 1916 Ecuadorian presidential election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1916_Ecuadorian_presidential_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1916 Guatemalan presidential election?", "What was flows through 1916 Guatemalan presidential election?", "What were flow through 1916 Guatemalan presidential election?", "What were flows through 1916 Guatemalan presidential election?", "Which countries were flow through 1916 Guatemalan presidential election?", "Which countries were flows through 1916 Guatemalan presidential election?", "Which country was flow through 1916 Guatemalan presidential election?", "Which country was flows through 1916 Guatemalan presidential election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1916_Guatemalan_presidential_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1916 Louisiana gubernatorial election?", "What was flows through 1916 Louisiana gubernatorial election?", "What were flow through 1916 Louisiana gubernatorial election?", "What were flows through 1916 Louisiana gubernatorial election?", "Which countries were flow through 1916 Louisiana gubernatorial election?", "Which countries were flows through 1916 Louisiana gubernatorial election?", "Which country was flow through 1916 Louisiana gubernatorial election?", "Which country was flows through 1916 Louisiana gubernatorial election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1916_Louisiana_gubernatorial_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1916 Missouri gubernatorial election?", "What was flows through 1916 Missouri gubernatorial election?", "What were flow through 1916 Missouri gubernatorial election?", "What were flows through 1916 Missouri gubernatorial election?", "Which countries were flow through 1916 Missouri gubernatorial election?", "Which countries were flows through 1916 Missouri gubernatorial election?", "Which country was flow through 1916 Missouri gubernatorial election?", "Which country was flows through 1916 Missouri gubernatorial election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1916_Missouri_gubernatorial_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1917 Boston mayoral election?", "What was flows through 1917 Boston mayoral election?", "What were flow through 1917 Boston mayoral election?", "What were flows through 1917 Boston mayoral election?", "Which countries were flow through 1917 Boston mayoral election?", "Which countries were flows through 1917 Boston mayoral election?", "Which country was flow through 1917 Boston mayoral election?", "Which country was flows through 1917 Boston mayoral election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1917_Boston_mayoral_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1917 Ceylonese Legislative Council election?", "What was flows through 1917 Ceylonese Legislative Council election?", "What were flow through 1917 Ceylonese Legislative Council election?", "What were flows through 1917 Ceylonese Legislative Council election?", "Which countries were flow through 1917 Ceylonese Legislative Council election?", "Which countries were flows through 1917 Ceylonese Legislative Council election?", "Which country was flow through 1917 Ceylonese Legislative Council election?", "Which country was flows through 1917 Ceylonese Legislative Council election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1917_Ceylonese_Legislative_Council_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1917 Costa Rican general election?", "What was flows through 1917 Costa Rican general election?", "What were flow through 1917 Costa Rican general election?", "What were flows through 1917 Costa Rican general election?", "Which countries were flow through 1917 Costa Rican general election?", "Which countries were flows through 1917 Costa Rican general election?", "Which country was flow through 1917 Costa Rican general election?", "Which country was flows through 1917 Costa Rican general election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1917_Costa_Rican_general_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1917 Mexican general election?", "What was flows through 1917 Mexican general election?", "What were flow through 1917 Mexican general election?", "What were flows through 1917 Mexican general election?", "Which countries were flow through 1917 Mexican general election?", "Which countries were flows through 1917 Mexican general election?", "Which country was flow through 1917 Mexican general election?", "Which country was flows through 1917 Mexican general election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1917_Mexican_general_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1918 Brazilian general election?", "What was flows through 1918 Brazilian general election?", "What were flow through 1918 Brazilian general election?", "What were flows through 1918 Brazilian general election?", "Which countries were flow through 1918 Brazilian general election?", "Which countries were flows through 1918 Brazilian general election?", "Which country was flow through 1918 Brazilian general election?", "Which country was flows through 1918 Brazilian general election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1918_Brazilian_general_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1918 Chinese presidential election?", "What was flows through 1918 Chinese presidential election?", "What were flow through 1918 Chinese presidential election?", "What were flows through 1918 Chinese presidential election?", "Which countries were flow through 1918 Chinese presidential election?", "Which countries were flows through 1918 Chinese presidential election?", "Which country was flow through 1918 Chinese presidential election?", "Which country was flows through 1918 Chinese presidential election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1918_Chinese_presidential_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1918 New York gubernatorial election?", "What was flows through 1918 New York gubernatorial election?", "What were flow through 1918 New York gubernatorial election?", "What were flows through 1918 New York gubernatorial election?", "Which countries were flow through 1918 New York gubernatorial election?", "Which countries were flows through 1918 New York gubernatorial election?", "Which country was flow through 1918 New York gubernatorial election?", "Which country was flows through 1918 New York gubernatorial election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1918_New_York_gubernatorial_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1918 Oregon gubernatorial election?", "What was flows through 1918 Oregon gubernatorial election?", "What were flow through 1918 Oregon gubernatorial election?", "What were flows through 1918 Oregon gubernatorial election?", "Which countries were flow through 1918 Oregon gubernatorial election?", "Which countries were flows through 1918 Oregon gubernatorial election?", "Which country was flow through 1918 Oregon gubernatorial election?", "Which country was flows through 1918 Oregon gubernatorial election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1918_Oregon_gubernatorial_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1918 United States Senate election in South Carolina?", "What was flows through 1918 United States Senate election in South Carolina?", "What were flow through 1918 United States Senate election in South Carolina?", "What were flows through 1918 United States Senate election in South Carolina?", "Which countries were flow through 1918 United States Senate election in South Carolina?", "Which countries were flows through 1918 United States Senate election in South Carolina?", "Which country was flow through 1918 United States Senate election in South Carolina?", "Which country was flows through 1918 United States Senate election in South Carolina?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1918_United_States_Senate_election_in_South_Carolina> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1919 Brazilian presidential election?", "What was flows through 1919 Brazilian presidential election?", "What were flow through 1919 Brazilian presidential election?", "What were flows through 1919 Brazilian presidential election?", "Which countries were flow through 1919 Brazilian presidential election?", "Which countries were flows through 1919 Brazilian presidential election?", "Which country was flow through 1919 Brazilian presidential election?", "Which country was flows through 1919 Brazilian presidential election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1919_Brazilian_presidential_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1919 Calgary municipal election?", "What was flows through 1919 Calgary municipal election?", "What were flow through 1919 Calgary municipal election?", "What were flows through 1919 Calgary municipal election?", "Which countries were flow through 1919 Calgary municipal election?", "Which countries were flows through 1919 Calgary municipal election?", "Which country was flow through 1919 Calgary municipal election?", "Which country was flows through 1919 Calgary municipal election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1919_Calgary_municipal_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1919 Finnish presidential election?", "What was flows through 1919 Finnish presidential election?", "What were flow through 1919 Finnish presidential election?", "What were flows through 1919 Finnish presidential election?", "Which countries were flow through 1919 Finnish presidential election?", "Which countries were flows through 1919 Finnish presidential election?", "Which country was flow through 1919 Finnish presidential election?", "Which country was flows through 1919 Finnish presidential election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1919_Finnish_presidential_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1919 German presidential election?", "What was flows through 1919 German presidential election?", "What were flow through 1919 German presidential election?", "What were flows through 1919 German presidential election?", "Which countries were flow through 1919 German presidential election?", "Which countries were flows through 1919 German presidential election?", "Which country was flow through 1919 German presidential election?", "Which country was flows through 1919 German presidential election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1919_German_presidential_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1919 Philippine Senate elections?", "What was flows through 1919 Philippine Senate elections?", "What were flow through 1919 Philippine Senate elections?", "What were flows through 1919 Philippine Senate elections?", "Which countries were flow through 1919 Philippine Senate elections?", "Which countries were flows through 1919 Philippine Senate elections?", "Which country was flow through 1919 Philippine Senate elections?", "Which country was flows through 1919 Philippine Senate elections?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1919_Philippine_Senate_elections> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1919 Salvadoran presidential election?", "What was flows through 1919 Salvadoran presidential election?", "What were flow through 1919 Salvadoran presidential election?", "What were flows through 1919 Salvadoran presidential election?", "Which countries were flow through 1919 Salvadoran presidential election?", "Which countries were flows through 1919 Salvadoran presidential election?", "Which country was flow through 1919 Salvadoran presidential election?", "Which country was flows through 1919 Salvadoran presidential election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1919_Salvadoran_presidential_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1919 Swiss federal election?", "What was flows through 1919 Swiss federal election?", "What were flow through 1919 Swiss federal election?", "What were flows through 1919 Swiss federal election?", "Which countries were flow through 1919 Swiss federal election?", "Which countries were flows through 1919 Swiss federal election?", "Which country was flow through 1919 Swiss federal election?", "Which country was flows through 1919 Swiss federal election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1919_Swiss_federal_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 191st Ohio Infantry?", "What was flows through 191st Ohio Infantry?", "What were flow through 191st Ohio Infantry?", "What were flows through 191st Ohio Infantry?", "Which countries were flow through 191st Ohio Infantry?", "Which countries were flows through 191st Ohio Infantry?", "Which country was flow through 191st Ohio Infantry?", "Which country was flows through 191st Ohio Infantry?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/191st_Ohio_Infantry> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 191st Pennsylvania Infantry Regiment?", "What was flows through 191st Pennsylvania Infantry Regiment?", "What were flow through 191st Pennsylvania Infantry Regiment?", "What were flows through 191st Pennsylvania Infantry Regiment?", "Which countries were flow through 191st Pennsylvania Infantry Regiment?", "Which countries were flows through 191st Pennsylvania Infantry Regiment?", "Which country was flow through 191st Pennsylvania Infantry Regiment?", "Which country was flows through 191st Pennsylvania Infantry Regiment?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/191st_Pennsylvania_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1920 Calgary municipal election?", "What was flows through 1920 Calgary municipal election?", "What were flow through 1920 Calgary municipal election?", "What were flows through 1920 Calgary municipal election?", "Which countries were flow through 1920 Calgary municipal election?", "Which countries were flows through 1920 Calgary municipal election?", "Which country was flow through 1920 Calgary municipal election?", "Which country was flows through 1920 Calgary municipal election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1920_Calgary_municipal_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1920 Cuban general election?", "What was flows through 1920 Cuban general election?", "What were flow through 1920 Cuban general election?", "What were flows through 1920 Cuban general election?", "Which countries were flow through 1920 Cuban general election?", "Which countries were flows through 1920 Cuban general election?", "Which country was flow through 1920 Cuban general election?", "Which country was flows through 1920 Cuban general election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1920_Cuban_general_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1920 Ecuadorian presidential election?", "What was flows through 1920 Ecuadorian presidential election?", "What were flow through 1920 Ecuadorian presidential election?", "What were flows through 1920 Ecuadorian presidential election?", "Which countries were flow through 1920 Ecuadorian presidential election?", "Which countries were flows through 1920 Ecuadorian presidential election?", "Which country was flow through 1920 Ecuadorian presidential election?", "Which country was flows through 1920 Ecuadorian presidential election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1920_Ecuadorian_presidential_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1920 Estonian parliamentary election?", "What was flows through 1920 Estonian parliamentary election?", "What were flow through 1920 Estonian parliamentary election?", "What were flows through 1920 Estonian parliamentary election?", "Which countries were flow through 1920 Estonian parliamentary election?", "Which countries were flows through 1920 Estonian parliamentary election?", "Which country was flow through 1920 Estonian parliamentary election?", "Which country was flows through 1920 Estonian parliamentary election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1920_Estonian_parliamentary_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1920 Indian general election?", "What was flows through 1920 Indian general election?", "What were flow through 1920 Indian general election?", "What were flows through 1920 Indian general election?", "Which countries were flow through 1920 Indian general election?", "Which countries were flows through 1920 Indian general election?", "Which country was flow through 1920 Indian general election?", "Which country was flows through 1920 Indian general election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1920_Indian_general_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1920 Louisiana gubernatorial election?", "What was flows through 1920 Louisiana gubernatorial election?", "What were flow through 1920 Louisiana gubernatorial election?", "What were flows through 1920 Louisiana gubernatorial election?", "Which countries were flow through 1920 Louisiana gubernatorial election?", "Which countries were flows through 1920 Louisiana gubernatorial election?", "Which country was flow through 1920 Louisiana gubernatorial election?", "Which country was flows through 1920 Louisiana gubernatorial election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1920_Louisiana_gubernatorial_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1920 Mexican general election?", "What was flows through 1920 Mexican general election?", "What were flow through 1920 Mexican general election?", "What were flows through 1920 Mexican general election?", "Which countries were flow through 1920 Mexican general election?", "Which countries were flows through 1920 Mexican general election?", "Which country was flow through 1920 Mexican general election?", "Which country was flows through 1920 Mexican general election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1920_Mexican_general_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1920 Missouri gubernatorial election?", "What was flows through 1920 Missouri gubernatorial election?", "What were flow through 1920 Missouri gubernatorial election?", "What were flows through 1920 Missouri gubernatorial election?", "Which countries were flow through 1920 Missouri gubernatorial election?", "Which countries were flows through 1920 Missouri gubernatorial election?", "Which country was flow through 1920 Missouri gubernatorial election?", "Which country was flows through 1920 Missouri gubernatorial election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1920_Missouri_gubernatorial_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1920 New York gubernatorial election?", "What was flows through 1920 New York gubernatorial election?", "What were flow through 1920 New York gubernatorial election?", "What were flows through 1920 New York gubernatorial election?", "Which countries were flow through 1920 New York gubernatorial election?", "Which countries were flows through 1920 New York gubernatorial election?", "Which country was flow through 1920 New York gubernatorial election?", "Which country was flows through 1920 New York gubernatorial election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1920_New_York_gubernatorial_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1920 Sammarinese general election?", "What was flows through 1920 Sammarinese general election?", "What were flow through 1920 Sammarinese general election?", "What were flows through 1920 Sammarinese general election?", "Which countries were flow through 1920 Sammarinese general election?", "Which countries were flows through 1920 Sammarinese general election?", "Which country was flow through 1920 Sammarinese general election?", "Which country was flows through 1920 Sammarinese general election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1920_Sammarinese_general_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1920 Turkish Grand National Assembly election?", "What was flows through 1920 Turkish Grand National Assembly election?", "What were flow through 1920 Turkish Grand National Assembly election?", "What were flows through 1920 Turkish Grand National Assembly election?", "Which countries were flow through 1920 Turkish Grand National Assembly election?", "Which countries were flows through 1920 Turkish Grand National Assembly election?", "Which country was flow through 1920 Turkish Grand National Assembly election?", "Which country was flows through 1920 Turkish Grand National Assembly election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1920_Turkish_Grand_National_Assembly_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1920 United States Senate election in South Carolina?", "What was flows through 1920 United States Senate election in South Carolina?", "What were flow through 1920 United States Senate election in South Carolina?", "What were flows through 1920 United States Senate election in South Carolina?", "Which countries were flow through 1920 United States Senate election in South Carolina?", "Which countries were flows through 1920 United States Senate election in South Carolina?", "Which country was flow through 1920 United States Senate election in South Carolina?", "Which country was flows through 1920 United States Senate election in South Carolina?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1920_United_States_Senate_election_in_South_Carolina> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1921 Boston mayoral election?", "What was flows through 1921 Boston mayoral election?", "What were flow through 1921 Boston mayoral election?", "What were flows through 1921 Boston mayoral election?", "Which countries were flow through 1921 Boston mayoral election?", "Which countries were flows through 1921 Boston mayoral election?", "Which country was flow through 1921 Boston mayoral election?", "Which country was flows through 1921 Boston mayoral election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1921_Boston_mayoral_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1921 Calgary municipal election?", "What was flows through 1921 Calgary municipal election?", "What were flow through 1921 Calgary municipal election?", "What were flows through 1921 Calgary municipal election?", "Which countries were flow through 1921 Calgary municipal election?", "Which countries were flows through 1921 Calgary municipal election?", "Which country was flow through 1921 Calgary municipal election?", "Which country was flows through 1921 Calgary municipal election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1921_Calgary_municipal_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1921 Ceylonese Legislative Council election?", "What was flows through 1921 Ceylonese Legislative Council election?", "What were flow through 1921 Ceylonese Legislative Council election?", "What were flows through 1921 Ceylonese Legislative Council election?", "Which countries were flow through 1921 Ceylonese Legislative Council election?", "Which countries were flows through 1921 Ceylonese Legislative Council election?", "Which country was flow through 1921 Ceylonese Legislative Council election?", "Which country was flows through 1921 Ceylonese Legislative Council election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1921_Ceylonese_Legislative_Council_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1921 French Grand Prix?", "What was flows through 1921 French Grand Prix?", "What were flow through 1921 French Grand Prix?", "What were flows through 1921 French Grand Prix?", "Which countries were flow through 1921 French Grand Prix?", "Which countries were flows through 1921 French Grand Prix?", "Which country was flow through 1921 French Grand Prix?", "Which country was flows through 1921 French Grand Prix?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1921_French_Grand_Prix> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1921 Guatemalan presidential election?", "What was flows through 1921 Guatemalan presidential election?", "What were flow through 1921 Guatemalan presidential election?", "What were flows through 1921 Guatemalan presidential election?", "Which countries were flow through 1921 Guatemalan presidential election?", "Which countries were flows through 1921 Guatemalan presidential election?", "Which country was flow through 1921 Guatemalan presidential election?", "Which country was flows through 1921 Guatemalan presidential election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1921_Guatemalan_presidential_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1921 Italian Grand Prix?", "What was flows through 1921 Italian Grand Prix?", "What were flow through 1921 Italian Grand Prix?", "What were flows through 1921 Italian Grand Prix?", "Which countries were flow through 1921 Italian Grand Prix?", "Which countries were flows through 1921 Italian Grand Prix?", "Which country was flow through 1921 Italian Grand Prix?", "Which country was flows through 1921 Italian Grand Prix?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1921_Italian_Grand_Prix> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1922 Argentine general election?", "What was flows through 1922 Argentine general election?", "What were flow through 1922 Argentine general election?", "What were flows through 1922 Argentine general election?", "Which countries were flow through 1922 Argentine general election?", "Which countries were flows through 1922 Argentine general election?", "Which country was flow through 1922 Argentine general election?", "Which country was flows through 1922 Argentine general election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1922_Argentine_general_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1922 Burmese general election?", "What was flows through 1922 Burmese general election?", "What were flow through 1922 Burmese general election?", "What were flows through 1922 Burmese general election?", "Which countries were flow through 1922 Burmese general election?", "Which countries were flows through 1922 Burmese general election?", "Which country was flow through 1922 Burmese general election?", "Which country was flows through 1922 Burmese general election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1922_Burmese_general_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1922 French Grand Prix?", "What was flows through 1922 French Grand Prix?", "What were flow through 1922 French Grand Prix?", "What were flows through 1922 French Grand Prix?", "Which countries were flow through 1922 French Grand Prix?", "Which countries were flows through 1922 French Grand Prix?", "Which country was flow through 1922 French Grand Prix?", "Which country was flows through 1922 French Grand Prix?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1922_French_Grand_Prix> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1922 Guatemalan presidential election?", "What was flows through 1922 Guatemalan presidential election?", "What were flow through 1922 Guatemalan presidential election?", "What were flows through 1922 Guatemalan presidential election?", "Which countries were flow through 1922 Guatemalan presidential election?", "Which countries were flows through 1922 Guatemalan presidential election?", "Which country was flow through 1922 Guatemalan presidential election?", "Which country was flows through 1922 Guatemalan presidential election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1922_Guatemalan_presidential_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1922 Italian Grand Prix?", "What was flows through 1922 Italian Grand Prix?", "What were flow through 1922 Italian Grand Prix?", "What were flows through 1922 Italian Grand Prix?", "Which countries were flow through 1922 Italian Grand Prix?", "Which countries were flows through 1922 Italian Grand Prix?", "Which country was flow through 1922 Italian Grand Prix?", "Which country was flows through 1922 Italian Grand Prix?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1922_Italian_Grand_Prix> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1922 Oregon gubernatorial election?", "What was flows through 1922 Oregon gubernatorial election?", "What were flow through 1922 Oregon gubernatorial election?", "What were flows through 1922 Oregon gubernatorial election?", "Which countries were flow through 1922 Oregon gubernatorial election?", "Which countries were flows through 1922 Oregon gubernatorial election?", "Which country was flow through 1922 Oregon gubernatorial election?", "Which country was flows through 1922 Oregon gubernatorial election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1922_Oregon_gubernatorial_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1922 Philippine Senate elections?", "What was flows through 1922 Philippine Senate elections?", "What were flow through 1922 Philippine Senate elections?", "What were flows through 1922 Philippine Senate elections?", "Which countries were flow through 1922 Philippine Senate elections?", "Which countries were flows through 1922 Philippine Senate elections?", "Which country was flow through 1922 Philippine Senate elections?", "Which country was flows through 1922 Philippine Senate elections?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1922_Philippine_Senate_elections> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1922 Polish presidential elections?", "What was flows through 1922 Polish presidential elections?", "What were flow through 1922 Polish presidential elections?", "What were flows through 1922 Polish presidential elections?", "Which countries were flow through 1922 Polish presidential elections?", "Which countries were flows through 1922 Polish presidential elections?", "Which country was flow through 1922 Polish presidential elections?", "Which country was flows through 1922 Polish presidential elections?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1922_Polish_presidential_elections> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1922 United Kingdom general election in Northern Ireland?", "What was flows through 1922 United Kingdom general election in Northern Ireland?", "What were flow through 1922 United Kingdom general election in Northern Ireland?", "What were flows through 1922 United Kingdom general election in Northern Ireland?", "Which countries were flow through 1922 United Kingdom general election in Northern Ireland?", "Which countries were flows through 1922 United Kingdom general election in Northern Ireland?", "Which country was flow through 1922 United Kingdom general election in Northern Ireland?", "Which country was flows through 1922 United Kingdom general election in Northern Ireland?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1922_United_Kingdom_general_election_in_Northern_Ireland> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1923 Chinese presidential election?", "What was flows through 1923 Chinese presidential election?", "What were flow through 1923 Chinese presidential election?", "What were flows through 1923 Chinese presidential election?", "Which countries were flow through 1923 Chinese presidential election?", "Which countries were flows through 1923 Chinese presidential election?", "Which country was flow through 1923 Chinese presidential election?", "Which country was flows through 1923 Chinese presidential election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1923_Chinese_presidential_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1923 Estonian parliamentary election?", "What was flows through 1923 Estonian parliamentary election?", "What were flow through 1923 Estonian parliamentary election?", "What were flows through 1923 Estonian parliamentary election?", "Which countries were flow through 1923 Estonian parliamentary election?", "Which countries were flows through 1923 Estonian parliamentary election?", "Which country was flow through 1923 Estonian parliamentary election?", "Which country was flows through 1923 Estonian parliamentary election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1923_Estonian_parliamentary_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1923 French Grand Prix?", "What was flows through 1923 French Grand Prix?", "What were flow through 1923 French Grand Prix?", "What were flows through 1923 French Grand Prix?", "Which countries were flow through 1923 French Grand Prix?", "Which countries were flows through 1923 French Grand Prix?", "Which country was flow through 1923 French Grand Prix?", "Which country was flows through 1923 French Grand Prix?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1923_French_Grand_Prix> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1923 Indian general election?", "What was flows through 1923 Indian general election?", "What were flow through 1923 Indian general election?", "What were flows through 1923 Indian general election?", "Which countries were flow through 1923 Indian general election?", "Which countries were flows through 1923 Indian general election?", "Which country was flow through 1923 Indian general election?", "Which country was flows through 1923 Indian general election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1923_Indian_general_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1923 Italian Grand Prix?", "What was flows through 1923 Italian Grand Prix?", "What were flow through 1923 Italian Grand Prix?", "What were flows through 1923 Italian Grand Prix?", "Which countries were flow through 1923 Italian Grand Prix?", "Which countries were flows through 1923 Italian Grand Prix?", "Which country was flow through 1923 Italian Grand Prix?", "Which country was flows through 1923 Italian Grand Prix?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1923_Italian_Grand_Prix> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1923 Salvadoran presidential election?", "What was flows through 1923 Salvadoran presidential election?", "What were flow through 1923 Salvadoran presidential election?", "What were flows through 1923 Salvadoran presidential election?", "Which countries were flow through 1923 Salvadoran presidential election?", "Which countries were flows through 1923 Salvadoran presidential election?", "Which country was flow through 1923 Salvadoran presidential election?", "Which country was flows through 1923 Salvadoran presidential election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1923_Salvadoran_presidential_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1923–24 Egyptian parliamentary election?", "What was flows through 1923–24 Egyptian parliamentary election?", "What were flow through 1923–24 Egyptian parliamentary election?", "What were flows through 1923–24 Egyptian parliamentary election?", "Which countries were flow through 1923–24 Egyptian parliamentary election?", "Which countries were flows through 1923–24 Egyptian parliamentary election?", "Which country was flow through 1923–24 Egyptian parliamentary election?", "Which country was flows through 1923–24 Egyptian parliamentary election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1923–24_Egyptian_parliamentary_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1924 Calgary municipal election?", "What was flows through 1924 Calgary municipal election?", "What were flow through 1924 Calgary municipal election?", "What were flows through 1924 Calgary municipal election?", "Which countries were flow through 1924 Calgary municipal election?", "Which countries were flows through 1924 Calgary municipal election?", "Which country was flow through 1924 Calgary municipal election?", "Which country was flows through 1924 Calgary municipal election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1924_Calgary_municipal_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1924 Ceylonese Legislative Council election?", "What was flows through 1924 Ceylonese Legislative Council election?", "What were flow through 1924 Ceylonese Legislative Council election?", "What were flows through 1924 Ceylonese Legislative Council election?", "Which countries were flow through 1924 Ceylonese Legislative Council election?", "Which countries were flows through 1924 Ceylonese Legislative Council election?", "Which country was flow through 1924 Ceylonese Legislative Council election?", "Which country was flows through 1924 Ceylonese Legislative Council election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1924_Ceylonese_Legislative_Council_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1942 United States Senate election in South Carolina?", "What was flows through 1942 United States Senate election in South Carolina?", "What were flow through 1942 United States Senate election in South Carolina?", "What were flows through 1942 United States Senate election in South Carolina?", "Which countries were flow through 1942 United States Senate election in South Carolina?", "Which countries were flows through 1942 United States Senate election in South Carolina?", "Which country was flow through 1942 United States Senate election in South Carolina?", "Which country was flows through 1942 United States Senate election in South Carolina?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1942_United_States_Senate_election_in_South_Carolina> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1943 Finnish presidential election?", "What was flows through 1943 Finnish presidential election?", "What were flow through 1943 Finnish presidential election?", "What were flows through 1943 Finnish presidential election?", "Which countries were flow through 1943 Finnish presidential election?", "Which countries were flows through 1943 Finnish presidential election?", "Which country was flow through 1943 Finnish presidential election?", "Which country was flows through 1943 Finnish presidential election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1943_Finnish_presidential_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1944 Cuban general election?", "What was flows through 1944 Cuban general election?", "What were flow through 1944 Cuban general election?", "What were flows through 1944 Cuban general election?", "Which countries were flow through 1944 Cuban general election?", "Which countries were flows through 1944 Cuban general election?", "Which country was flow through 1944 Cuban general election?", "Which country was flows through 1944 Cuban general election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1944_Cuban_general_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1944 Guatemalan presidential election?", "What was flows through 1944 Guatemalan presidential election?", "What were flow through 1944 Guatemalan presidential election?", "What were flows through 1944 Guatemalan presidential election?", "Which countries were flow through 1944 Guatemalan presidential election?", "Which countries were flows through 1944 Guatemalan presidential election?", "Which country was flow through 1944 Guatemalan presidential election?", "Which country was flows through 1944 Guatemalan presidential election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1944_Guatemalan_presidential_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1944 Illinois elections?", "What was flows through 1944 Illinois elections?", "What were flow through 1944 Illinois elections?", "What were flows through 1944 Illinois elections?", "Which countries were flow through 1944 Illinois elections?", "Which countries were flows through 1944 Illinois elections?", "Which country was flow through 1944 Illinois elections?", "Which country was flows through 1944 Illinois elections?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1944_Illinois_elections> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1944 Missouri gubernatorial election?", "What was flows through 1944 Missouri gubernatorial election?", "What were flow through 1944 Missouri gubernatorial election?", "What were flows through 1944 Missouri gubernatorial election?", "Which countries were flow through 1944 Missouri gubernatorial election?", "Which countries were flows through 1944 Missouri gubernatorial election?", "Which country was flow through 1944 Missouri gubernatorial election?", "Which country was flows through 1944 Missouri gubernatorial election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1944_Missouri_gubernatorial_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1944 Salvadoran presidential election?", "What was flows through 1944 Salvadoran presidential election?", "What were flow through 1944 Salvadoran presidential election?", "What were flows through 1944 Salvadoran presidential election?", "Which countries were flow through 1944 Salvadoran presidential election?", "Which countries were flows through 1944 Salvadoran presidential election?", "Which country was flow through 1944 Salvadoran presidential election?", "Which country was flows through 1944 Salvadoran presidential election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1944_Salvadoran_presidential_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1944 United States Senate election in Illinois?", "What was flows through 1944 United States Senate election in Illinois?", "What were flow through 1944 United States Senate election in Illinois?", "What were flows through 1944 United States Senate election in Illinois?", "Which countries were flow through 1944 United States Senate election in Illinois?", "Which countries were flows through 1944 United States Senate election in Illinois?", "Which country was flow through 1944 United States Senate election in Illinois?", "Which country was flows through 1944 United States Senate election in Illinois?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1944_United_States_Senate_election_in_Illinois> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1944 United States Senate election in South Carolina?", "What was flows through 1944 United States Senate election in South Carolina?", "What were flow through 1944 United States Senate election in South Carolina?", "What were flows through 1944 United States Senate election in South Carolina?", "Which countries were flow through 1944 United States Senate election in South Carolina?", "Which countries were flows through 1944 United States Senate election in South Carolina?", "Which country was flow through 1944 United States Senate election in South Carolina?", "Which country was flows through 1944 United States Senate election in South Carolina?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1944_United_States_Senate_election_in_South_Carolina> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1945 (Gingrich and Forstchen novel)?", "What was flows through 1945 (Gingrich and Forstchen novel)?", "What were flow through 1945 (Gingrich and Forstchen novel)?", "What were flows through 1945 (Gingrich and Forstchen novel)?", "Which countries were flow through 1945 (Gingrich and Forstchen novel)?", "Which countries were flows through 1945 (Gingrich and Forstchen novel)?", "Which country was flow through 1945 (Gingrich and Forstchen novel)?", "Which country was flows through 1945 (Gingrich and Forstchen novel)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1945_(Gingrich_and_Forstchen_novel)> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1945 Boston mayoral election?", "What was flows through 1945 Boston mayoral election?", "What were flow through 1945 Boston mayoral election?", "What were flows through 1945 Boston mayoral election?", "Which countries were flow through 1945 Boston mayoral election?", "Which countries were flows through 1945 Boston mayoral election?", "Which country was flow through 1945 Boston mayoral election?", "Which country was flows through 1945 Boston mayoral election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1945_Boston_mayoral_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1945 Indian general election?", "What was flows through 1945 Indian general election?", "What were flow through 1945 Indian general election?", "What were flows through 1945 Indian general election?", "Which countries were flow through 1945 Indian general election?", "Which countries were flows through 1945 Indian general election?", "Which country was flow through 1945 Indian general election?", "Which country was flows through 1945 Indian general election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1945_Indian_general_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1945 Salvadoran presidential election?", "What was flows through 1945 Salvadoran presidential election?", "What were flow through 1945 Salvadoran presidential election?", "What were flows through 1945 Salvadoran presidential election?", "Which countries were flow through 1945 Salvadoran presidential election?", "Which countries were flows through 1945 Salvadoran presidential election?", "Which country was flow through 1945 Salvadoran presidential election?", "Which country was flows through 1945 Salvadoran presidential election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1945_Salvadoran_presidential_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1946 Bulgarian Constitutional Assembly election?", "What was flows through 1946 Bulgarian Constitutional Assembly election?", "What were flow through 1946 Bulgarian Constitutional Assembly election?", "What were flows through 1946 Bulgarian Constitutional Assembly election?", "Which countries were flow through 1946 Bulgarian Constitutional Assembly election?", "Which countries were flows through 1946 Bulgarian Constitutional Assembly election?", "Which country was flow through 1946 Bulgarian Constitutional Assembly election?", "Which country was flows through 1946 Bulgarian Constitutional Assembly election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1946_Bulgarian_Constitutional_Assembly_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1946 Colombian presidential election?", "What was flows through 1946 Colombian presidential election?", "What were flow through 1946 Colombian presidential election?", "What were flows through 1946 Colombian presidential election?", "Which countries were flow through 1946 Colombian presidential election?", "Which countries were flows through 1946 Colombian presidential election?", "Which country was flow through 1946 Colombian presidential election?", "Which country was flows through 1946 Colombian presidential election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1946_Colombian_presidential_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1946 Finnish presidential election?", "What was flows through 1946 Finnish presidential election?", "What were flow through 1946 Finnish presidential election?", "What were flows through 1946 Finnish presidential election?", "Which countries were flow through 1946 Finnish presidential election?", "Which countries were flows through 1946 Finnish presidential election?", "Which country was flow through 1946 Finnish presidential election?", "Which country was flows through 1946 Finnish presidential election?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1946_Finnish_presidential_election> <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Alto Lucero, Veracruz flows?", "When were the Alto Lucero, Veracruz flows?", "Which river was the Alto Lucero, Veracruz flows?", "Which river were the Alto Lucero, Veracruz flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Alto_Lucero,_Veracruz>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Altındağ, Ankara flows?", "When were the Altındağ, Ankara flows?", "Which river was the Altındağ, Ankara flows?", "Which river were the Altındağ, Ankara flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Altındağ,_Ankara>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Amagasaki, Hyōgo flows?", "When were the Amagasaki, Hyōgo flows?", "Which river was the Amagasaki, Hyōgo flows?", "Which river were the Amagasaki, Hyōgo flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Amagasaki,_Hyōgo>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Amaravati (state capital) flows?", "When were the Amaravati (state capital) flows?", "Which river was the Amaravati (state capital) flows?", "Which river were the Amaravati (state capital) flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Amaravati_(state_capital)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Ambikapur, India flows?", "When were the Ambikapur, India flows?", "Which river was the Ambikapur, India flows?", "Which river were the Ambikapur, India flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Ambikapur,_India>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lovech flows?", "When were the Lovech flows?", "Which river was the Lovech flows?", "Which river were the Lovech flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lovech>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lovelady, Texas flows?", "When were the Lovelady, Texas flows?", "Which river was the Lovelady, Texas flows?", "Which river were the Lovelady, Texas flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lovelady,_Texas>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Loveland, Colorado flows?", "When were the Loveland, Colorado flows?", "Which river was the Loveland, Colorado flows?", "Which river were the Loveland, Colorado flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Loveland,_Colorado>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Loveland, Ohio flows?", "When were the Loveland, Ohio flows?", "Which river was the Loveland, Ohio flows?", "Which river were the Loveland, Ohio flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Loveland,_Ohio>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lovell, Wyoming flows?", "When were the Lovell, Wyoming flows?", "Which river was the Lovell, Wyoming flows?", "Which river were the Lovell, Wyoming flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lovell,_Wyoming>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lovelock, Nevada flows?", "When were the Lovelock, Nevada flows?", "Which river was the Lovelock, Nevada flows?", "Which river were the Lovelock, Nevada flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lovelock,_Nevada>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lovely Banks, Victoria flows?", "When were the Lovely Banks, Victoria flows?", "Which river was the Lovely Banks, Victoria flows?", "Which river were the Lovely Banks, Victoria flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lovely_Banks,_Victoria>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Loves Park, Illinois flows?", "When were the Loves Park, Illinois flows?", "Which river was the Loves Park, Illinois flows?", "Which river were the Loves Park, Illinois flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Loves_Park,_Illinois>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lovington, New Mexico flows?", "When were the Lovington, New Mexico flows?", "Which river was the Lovington, New Mexico flows?", "Which river were the Lovington, New Mexico flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lovington,_New_Mexico>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lovran flows?", "When were the Lovran flows?", "Which river was the Lovran flows?", "Which river were the Lovran flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lovran>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Low, Utah flows?", "When were the Low, Utah flows?", "Which river was the Low, Utah flows?", "Which river were the Low, Utah flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Low,_Utah>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Low Fell flows?", "When were the Low Fell flows?", "Which river was the Low Fell flows?", "Which river were the Low Fell flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Low_Fell>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Low Moor, Virginia flows?", "When were the Low Moor, Virginia flows?", "Which river was the Low Moor, Virginia flows?", "Which river were the Low Moor, Virginia flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Low_Moor,_Virginia>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lowell, Arizona flows?", "When were the Lowell, Arizona flows?", "Which river was the Lowell, Arizona flows?", "Which river were the Lowell, Arizona flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lowell,_Arizona>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lowell, Arkansas flows?", "When were the Lowell, Arkansas flows?", "Which river was the Lowell, Arkansas flows?", "Which river were the Lowell, Arkansas flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lowell,_Arkansas>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lowell, Indiana flows?", "When were the Lowell, Indiana flows?", "Which river was the Lowell, Indiana flows?", "Which river were the Lowell, Indiana flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lowell,_Indiana>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lowell, Massachusetts flows?", "When were the Lowell, Massachusetts flows?", "Which river was the Lowell, Massachusetts flows?", "Which river were the Lowell, Massachusetts flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lowell,_Massachusetts>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lowell, Michigan flows?", "When were the Lowell, Michigan flows?", "Which river was the Lowell, Michigan flows?", "Which river were the Lowell, Michigan flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lowell,_Michigan>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lowell, Oregon flows?", "When were the Lowell, Oregon flows?", "Which river was the Lowell, Oregon flows?", "Which river were the Lowell, Oregon flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lowell,_Oregon>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lowellville, Ohio flows?", "When were the Lowellville, Ohio flows?", "Which river was the Lowellville, Ohio flows?", "Which river were the Lowellville, Ohio flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lowellville,_Ohio>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lower Austria flows?", "When were the Lower Austria flows?", "Which river was the Lower Austria flows?", "Which river were the Lower Austria flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lower_Austria>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lower Beechmont, Queensland flows?", "When were the Lower Beechmont, Queensland flows?", "Which river was the Lower Beechmont, Queensland flows?", "Which river were the Lower Beechmont, Queensland flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lower_Beechmont,_Queensland>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lower Burrell, Pennsylvania flows?", "When were the Lower Burrell, Pennsylvania flows?", "Which river was the Lower Burrell, Pennsylvania flows?", "Which river were the Lower Burrell, Pennsylvania flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lower_Burrell,_Pennsylvania>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lower Dir District flows?", "When were the Lower Dir District flows?", "Which river was the Lower Dir District flows?", "Which river were the Lower Dir District flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lower_Dir_District>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lower East Side flows?", "When were the Lower East Side flows?", "Which river was the Lower East Side flows?", "Which river were the Lower East Side flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lower_East_Side>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lower Hutt flows?", "When were the Lower Hutt flows?", "Which river was the Lower Hutt flows?", "Which river were the Lower Hutt flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lower_Hutt>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lower Merion Township, Pennsylvania flows?", "When were the Lower Merion Township, Pennsylvania flows?", "Which river was the Lower Merion Township, Pennsylvania flows?", "Which river were the Lower Merion Township, Pennsylvania flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lower_Merion_Township,_Pennsylvania>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lower Sackville, Nova Scotia flows?", "When were the Lower Sackville, Nova Scotia flows?", "Which river was the Lower Sackville, Nova Scotia flows?", "Which river were the Lower Sackville, Nova Scotia flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lower_Sackville,_Nova_Scotia>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lowestoft flows?", "When were the Lowestoft flows?", "Which river was the Lowestoft flows?", "Which river were the Lowestoft flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lowestoft>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lowry, South Dakota flows?", "When were the Lowry, South Dakota flows?", "Which river was the Lowry, South Dakota flows?", "Which river were the Lowry, South Dakota flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lowry,_South_Dakota>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lowry City, Missouri flows?", "When were the Lowry City, Missouri flows?", "Which river was the Lowry City, Missouri flows?", "Which river were the Lowry City, Missouri flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lowry_City,_Missouri>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lowville, New York flows?", "When were the Lowville, New York flows?", "Which river was the Lowville, New York flows?", "Which river were the Lowville, New York flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lowville,_New_York>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Loyalist, Ontario flows?", "When were the Loyalist, Ontario flows?", "Which river was the Loyalist, Ontario flows?", "Which river were the Loyalist, Ontario flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Loyalist,_Ontario>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Loysburg, Pennsylvania flows?", "When were the Loysburg, Pennsylvania flows?", "Which river was the Loysburg, Pennsylvania flows?", "Which river were the Loysburg, Pennsylvania flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Loysburg,_Pennsylvania>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lošinj flows?", "When were the Lošinj flows?", "Which river was the Lošinj flows?", "Which river were the Lošinj flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lošinj>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Luanda flows?", "When were the Luanda flows?", "Which river was the Luanda flows?", "Which river were the Luanda flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Luanda>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Luang Namtha flows?", "When were the Luang Namtha flows?", "Which river was the Luang Namtha flows?", "Which river were the Luang Namtha flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Luang_Namtha>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Luang Prabang flows?", "When were the Luang Prabang flows?", "Which river was the Luang Prabang flows?", "Which river were the Luang Prabang flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Luang_Prabang>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Luanshya flows?", "When were the Luanshya flows?", "Which river was the Luanshya flows?", "Which river were the Luanshya flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Luanshya>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lubang Island flows?", "When were the Lubang Island flows?", "Which river was the Lubang Island flows?", "Which river were the Lubang Island flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lubang_Island>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lubango flows?", "When were the Lubango flows?", "Which river was the Lubango flows?", "Which river were the Lubango flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lubango>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lubbock, Texas flows?", "When were the Lubbock, Texas flows?", "Which river was the Lubbock, Texas flows?", "Which river were the Lubbock, Texas flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lubbock,_Texas>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lubero flows?", "When were the Lubero flows?", "Which river was the Lubero flows?", "Which river were the Lubero flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lubero>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lubin flows?", "When were the Lubin flows?", "Which river was the Lubin flows?", "Which river were the Lubin flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lubin>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lublin flows?", "When were the Lublin flows?", "Which river was the Lublin flows?", "Which river were the Lublin flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lublin>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lubny flows?", "When were the Lubny flows?", "Which river was the Lubny flows?", "Which river were the Lubny flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lubny>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lubondaie flows?", "When were the Lubondaie flows?", "Which river was the Lubondaie flows?", "Which river were the Lubondaie flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lubondaie>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lubowa flows?", "When were the Lubowa flows?", "Which river was the Lubowa flows?", "Which river were the Lubowa flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lubowa>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lubuklinggau flows?", "When were the Lubuklinggau flows?", "Which river was the Lubuklinggau flows?", "Which river were the Lubuklinggau flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lubuklinggau>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lubumbashi flows?", "When were the Lubumbashi flows?", "Which river was the Lubumbashi flows?", "Which river were the Lubumbashi flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lubumbashi>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lucapa flows?", "When were the Lucapa flows?", "Which river was the Lucapa flows?", "Which river were the Lucapa flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lucapa>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lucas, Ohio flows?", "When were the Lucas, Ohio flows?", "Which river was the Lucas, Ohio flows?", "Which river were the Lucas, Ohio flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lucas,_Ohio>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lucas, Texas flows?", "When were the Lucas, Texas flows?", "Which river was the Lucas, Texas flows?", "Which river were the Lucas, Texas flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lucas,_Texas>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lucas Oil Stadium flows?", "When were the Lucas Oil Stadium flows?", "Which river was the Lucas Oil Stadium flows?", "Which river were the Lucas Oil Stadium flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lucas_Oil_Stadium>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lucas do Rio Verde flows?", "When were the Lucas do Rio Verde flows?", "Which river was the Lucas do Rio Verde flows?", "Which river were the Lucas do Rio Verde flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lucas_do_Rio_Verde>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lucban flows?", "When were the Lucban flows?", "Which river was the Lucban flows?", "Which river were the Lucban flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lucban>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lucca flows?", "When were the Lucca flows?", "Which river was the Lucca flows?", "Which river were the Lucca flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lucca>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lucedale, Mississippi flows?", "When were the Lucedale, Mississippi flows?", "Which river was the Lucedale, Mississippi flows?", "Which river were the Lucedale, Mississippi flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lucedale,_Mississippi>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lucena, Philippines flows?", "When were the Lucena, Philippines flows?", "Which river was the Lucena, Philippines flows?", "Which river were the Lucena, Philippines flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lucena,_Philippines>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lucerne flows?", "When were the Lucerne flows?", "Which river was the Lucerne flows?", "Which river were the Lucerne flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lucerne>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lucerne Valley, California flows?", "When were the Lucerne Valley, California flows?", "Which river was the Lucerne Valley, California flows?", "Which river were the Lucerne Valley, California flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lucerne_Valley,_California>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lucin, Utah flows?", "When were the Lucin, Utah flows?", "Which river was the Lucin, Utah flows?", "Which river were the Lucin, Utah flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lucin,_Utah>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Luckey, Ohio flows?", "When were the Luckey, Ohio flows?", "Which river was the Luckey, Ohio flows?", "Which river were the Luckey, Ohio flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Luckey,_Ohio>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Luckhoff flows?", "When were the Luckhoff flows?", "Which river was the Luckhoff flows?", "Which river were the Luckhoff flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Luckhoff>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lucknow flows?", "When were the Lucknow flows?", "Which river was the Lucknow flows?", "Which river were the Lucknow flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lucknow>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lucknow, Ontario flows?", "When were the Lucknow, Ontario flows?", "Which river was the Lucknow, Ontario flows?", "Which river were the Lucknow, Ontario flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lucknow,_Ontario>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lucton flows?", "When were the Lucton flows?", "Which river was the Lucton flows?", "Which river were the Lucton flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lucton>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Ludbreg flows?", "When were the Ludbreg flows?", "Which river was the Ludbreg flows?", "Which river were the Ludbreg flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Ludbreg>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Luddenham, New South Wales flows?", "When were the Luddenham, New South Wales flows?", "Which river was the Luddenham, New South Wales flows?", "Which river were the Luddenham, New South Wales flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Luddenham,_New_South_Wales>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Ludhiana flows?", "When were the Ludhiana flows?", "Which river was the Ludhiana flows?", "Which river were the Ludhiana flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Ludhiana>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Ludington, Michigan flows?", "When were the Ludington, Michigan flows?", "Which river was the Ludington, Michigan flows?", "Which river were the Ludington, Michigan flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Ludington,_Michigan>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Ludlow flows?", "When were the Ludlow flows?", "Which river was the Ludlow flows?", "Which river were the Ludlow flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Ludlow>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Ludlow, California flows?", "When were the Ludlow, California flows?", "Which river was the Ludlow, California flows?", "Which river were the Ludlow, California flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Ludlow,_California>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Ludlow, Massachusetts flows?", "When were the Ludlow, Massachusetts flows?", "Which river was the Ludlow, Massachusetts flows?", "Which river were the Ludlow, Massachusetts flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Ludlow,_Massachusetts>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Ludowici, Georgia flows?", "When were the Ludowici, Georgia flows?", "Which river was the Ludowici, Georgia flows?", "Which river were the Ludowici, Georgia flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Ludowici,_Georgia>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Ludwigsburg flows?", "When were the Ludwigsburg flows?", "Which river was the Ludwigsburg flows?", "Which river were the Ludwigsburg flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Ludwigsburg>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Ludwigshafen flows?", "When were the Ludwigshafen flows?", "Which river was the Ludwigshafen flows?", "Which river were the Ludwigshafen flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Ludwigshafen>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Luebo flows?", "When were the Luebo flows?", "Which river was the Luebo flows?", "Which river were the Luebo flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Luebo>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lufkin, Texas flows?", "When were the Lufkin, Texas flows?", "Which river was the Lufkin, Texas flows?", "Which river were the Lufkin, Texas flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lufkin,_Texas>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lugano flows?", "When were the Lugano flows?", "Which river was the Lugano flows?", "Which river were the Lugano flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lugano>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lugau flows?", "When were the Lugau flows?", "Which river was the Lugau flows?", "Which river were the Lugau flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lugau>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lugazi flows?", "When were the Lugazi flows?", "Which river was the Lugazi flows?", "Which river were the Lugazi flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lugazi>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lugo flows?", "When were the Lugo flows?", "Which river was the Lugo flows?", "Which river were the Lugo flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lugo>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lugoff, South Carolina flows?", "When were the Lugoff, South Carolina flows?", "Which river was the Lugoff, South Carolina flows?", "Which river were the Lugoff, South Carolina flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lugoff,_South_Carolina>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lugoj flows?", "When were the Lugoj flows?", "Which river was the Lugoj flows?", "Which river were the Lugoj flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lugoj>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Luhansk flows?", "When were the Luhansk flows?", "Which river was the Luhansk flows?", "Which river were the Luhansk flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Luhansk>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Luján, Buenos Aires Province flows?", "When were the Luján, Buenos Aires Province flows?", "Which river was the Luján, Buenos Aires Province flows?", "Which river were the Luján, Buenos Aires Province flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Luján,_Buenos_Aires_Province>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lukavica (Istočno Novo Sarajevo) flows?", "When were the Lukavica (Istočno Novo Sarajevo) flows?", "Which river was the Lukavica (Istočno Novo Sarajevo) flows?", "Which river were the Lukavica (Istočno Novo Sarajevo) flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lukavica_(Istočno_Novo_Sarajevo)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lukla flows?", "When were the Lukla flows?", "Which river was the Lukla flows?", "Which river were the Lukla flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lukla>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Luleå flows?", "When were the Luleå flows?", "Which river was the Luleå flows?", "Which river were the Luleå flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Luleå>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Luling, Texas flows?", "When were the Luling, Texas flows?", "Which river was the Luling, Texas flows?", "Which river were the Luling, Texas flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Luling,_Texas>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lumbala N'guimbo flows?", "When were the Lumbala N'guimbo flows?", "Which river was the Lumbala N'guimbo flows?", "Which river were the Lumbala N'guimbo flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lumbala_N'guimbo>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lumber City, Georgia flows?", "When were the Lumber City, Georgia flows?", "Which river was the Lumber City, Georgia flows?", "Which river were the Lumber City, Georgia flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lumber_City,_Georgia>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lumberton, Mississippi flows?", "When were the Lumberton, Mississippi flows?", "Which river was the Lumberton, Mississippi flows?", "Which river were the Lumberton, Mississippi flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lumberton,_Mississippi>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the Lumberton, North Carolina flows?", "When were the Lumberton, North Carolina flows?", "Which river was the Lumberton, North Carolina flows?", "Which river were the Lumberton, North Carolina flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Lumberton,_North_Carolina>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1912 All-Ireland Senior Hurling Championship Final?", "What was flows through 1912 All-Ireland Senior Hurling Championship Final?", "What were flow through 1912 All-Ireland Senior Hurling Championship Final?", "What were flows through 1912 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1912 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1912 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1912 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1912 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1912_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1912 FA Charity Shield?", "What was flows through 1912 FA Charity Shield?", "What were flow through 1912 FA Charity Shield?", "What were flows through 1912 FA Charity Shield?", "Which cities were flow through 1912 FA Charity Shield?", "Which cities were flows through 1912 FA Charity Shield?", "Which city was flow through 1912 FA Charity Shield?", "Which city was flows through 1912 FA Charity Shield?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1912_FA_Charity_Shield> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1913 All-Ireland Senior Hurling Championship Final?", "What was flows through 1913 All-Ireland Senior Hurling Championship Final?", "What were flow through 1913 All-Ireland Senior Hurling Championship Final?", "What were flows through 1913 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1913 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1913 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1913 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1913 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1913_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1913 Nordic Games?", "What was flows through 1913 Nordic Games?", "What were flow through 1913 Nordic Games?", "What were flows through 1913 Nordic Games?", "Which cities were flow through 1913 Nordic Games?", "Which cities were flows through 1913 Nordic Games?", "Which city was flow through 1913 Nordic Games?", "Which city was flows through 1913 Nordic Games?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1913_Nordic_Games> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1914 All-Ireland Senior Hurling Championship Final?", "What was flows through 1914 All-Ireland Senior Hurling Championship Final?", "What were flow through 1914 All-Ireland Senior Hurling Championship Final?", "What were flows through 1914 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1914 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1914 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1914 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1914 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1914_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1915 All-Ireland Senior Hurling Championship Final?", "What was flows through 1915 All-Ireland Senior Hurling Championship Final?", "What were flow through 1915 All-Ireland Senior Hurling Championship Final?", "What were flows through 1915 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1915 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1915 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1915 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1915 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1915_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1916 All-Ireland Senior Hurling Championship Final?", "What was flows through 1916 All-Ireland Senior Hurling Championship Final?", "What were flow through 1916 All-Ireland Senior Hurling Championship Final?", "What were flows through 1916 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1916 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1916 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1916 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1916 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1916_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1917 All-Ireland Senior Hurling Championship Final?", "What was flows through 1917 All-Ireland Senior Hurling Championship Final?", "What were flow through 1917 All-Ireland Senior Hurling Championship Final?", "What were flows through 1917 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1917 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1917 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1917 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1917 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1917_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1918 All-Ireland Senior Hurling Championship Final?", "What was flows through 1918 All-Ireland Senior Hurling Championship Final?", "What were flow through 1918 All-Ireland Senior Hurling Championship Final?", "What were flows through 1918 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1918 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1918 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1918 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1918 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1918_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1919 All-Ireland Senior Hurling Championship Final?", "What was flows through 1919 All-Ireland Senior Hurling Championship Final?", "What were flow through 1919 All-Ireland Senior Hurling Championship Final?", "What were flows through 1919 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1919 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1919 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1919 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1919 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1919_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1920 All-Ireland Senior Hurling Championship Final?", "What was flows through 1920 All-Ireland Senior Hurling Championship Final?", "What were flow through 1920 All-Ireland Senior Hurling Championship Final?", "What were flows through 1920 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1920 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1920 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1920 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1920 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1920_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1920 FA Charity Shield?", "What was flows through 1920 FA Charity Shield?", "What were flow through 1920 FA Charity Shield?", "What were flows through 1920 FA Charity Shield?", "Which cities were flow through 1920 FA Charity Shield?", "Which cities were flows through 1920 FA Charity Shield?", "Which city was flow through 1920 FA Charity Shield?", "Which city was flows through 1920 FA Charity Shield?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1920_FA_Charity_Shield> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1921 All-Ireland Senior Hurling Championship Final?", "What was flows through 1921 All-Ireland Senior Hurling Championship Final?", "What were flow through 1921 All-Ireland Senior Hurling Championship Final?", "What were flows through 1921 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1921 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1921 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1921 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1921 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1921_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1922 All-Ireland Senior Hurling Championship Final?", "What was flows through 1922 All-Ireland Senior Hurling Championship Final?", "What were flow through 1922 All-Ireland Senior Hurling Championship Final?", "What were flows through 1922 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1922 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1922 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1922 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1922 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1922_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1923 All-Ireland Senior Hurling Championship Final?", "What was flows through 1923 All-Ireland Senior Hurling Championship Final?", "What were flow through 1923 All-Ireland Senior Hurling Championship Final?", "What were flows through 1923 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1923 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1923 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1923 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1923 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1923_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1924 All-Ireland Senior Hurling Championship Final?", "What was flows through 1924 All-Ireland Senior Hurling Championship Final?", "What were flow through 1924 All-Ireland Senior Hurling Championship Final?", "What were flows through 1924 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1924 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1924 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1924 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1924 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1924_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1943 All-Ireland Senior Hurling Championship Final?", "What was flows through 1943 All-Ireland Senior Hurling Championship Final?", "What were flow through 1943 All-Ireland Senior Hurling Championship Final?", "What were flows through 1943 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1943 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1943 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1943 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1943 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1943_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1943 Workers' Summer Olympiad?", "What was flows through 1943 Workers' Summer Olympiad?", "What were flow through 1943 Workers' Summer Olympiad?", "What were flows through 1943 Workers' Summer Olympiad?", "Which cities were flow through 1943 Workers' Summer Olympiad?", "Which cities were flows through 1943 Workers' Summer Olympiad?", "Which city was flow through 1943 Workers' Summer Olympiad?", "Which city was flows through 1943 Workers' Summer Olympiad?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1943_Workers'_Summer_Olympiad> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1944 All-Ireland Senior Hurling Championship Final?", "What was flows through 1944 All-Ireland Senior Hurling Championship Final?", "What were flow through 1944 All-Ireland Senior Hurling Championship Final?", "What were flows through 1944 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1944 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1944 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1944 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1944 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1944_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1945 All-Ireland Senior Hurling Championship Final?", "What was flows through 1945 All-Ireland Senior Hurling Championship Final?", "What were flow through 1945 All-Ireland Senior Hurling Championship Final?", "What were flows through 1945 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1945 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1945 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1945 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1945 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1945_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1946 All-Ireland Senior Hurling Championship Final?", "What was flows through 1946 All-Ireland Senior Hurling Championship Final?", "What were flow through 1946 All-Ireland Senior Hurling Championship Final?", "What were flows through 1946 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1946 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1946 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1946 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1946 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1946_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1947 All-Ireland Senior Hurling Championship Final?", "What was flows through 1947 All-Ireland Senior Hurling Championship Final?", "What were flow through 1947 All-Ireland Senior Hurling Championship Final?", "What were flows through 1947 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1947 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1947 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1947 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1947 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1947_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1948 All-Ireland Senior Hurling Championship Final?", "What was flows through 1948 All-Ireland Senior Hurling Championship Final?", "What were flow through 1948 All-Ireland Senior Hurling Championship Final?", "What were flows through 1948 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1948 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1948 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1948 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1948 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1948_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1949 All-Ireland Senior Hurling Championship Final?", "What was flows through 1949 All-Ireland Senior Hurling Championship Final?", "What were flow through 1949 All-Ireland Senior Hurling Championship Final?", "What were flows through 1949 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1949 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1949 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1949 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1949 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1949_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1950 All-Ireland Senior Hurling Championship Final?", "What was flows through 1950 All-Ireland Senior Hurling Championship Final?", "What were flow through 1950 All-Ireland Senior Hurling Championship Final?", "What were flows through 1950 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1950 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1950 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1950 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1950 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1950_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1951 All-Ireland Senior Hurling Championship Final?", "What was flows through 1951 All-Ireland Senior Hurling Championship Final?", "What were flow through 1951 All-Ireland Senior Hurling Championship Final?", "What were flows through 1951 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1951 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1951 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1951 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1951 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1951_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1952 All-Ireland Senior Hurling Championship Final?", "What was flows through 1952 All-Ireland Senior Hurling Championship Final?", "What were flow through 1952 All-Ireland Senior Hurling Championship Final?", "What were flows through 1952 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1952 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1952 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1952 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1952 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1952_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1953 All-Ireland Senior Football Championship Final?", "What was flows through 1953 All-Ireland Senior Football Championship Final?", "What were flow through 1953 All-Ireland Senior Football Championship Final?", "What were flows through 1953 All-Ireland Senior Football Championship Final?", "Which cities were flow through 1953 All-Ireland Senior Football Championship Final?", "Which cities were flows through 1953 All-Ireland Senior Football Championship Final?", "Which city was flow through 1953 All-Ireland Senior Football Championship Final?", "Which city was flows through 1953 All-Ireland Senior Football Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1953_All-Ireland_Senior_Football_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1953 All-Ireland Senior Hurling Championship Final?", "What was flows through 1953 All-Ireland Senior Hurling Championship Final?", "What were flow through 1953 All-Ireland Senior Hurling Championship Final?", "What were flows through 1953 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1953 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1953 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1953 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1953 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1953_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1954 All-Ireland Senior Hurling Championship Final?", "What was flows through 1954 All-Ireland Senior Hurling Championship Final?", "What were flow through 1954 All-Ireland Senior Hurling Championship Final?", "What were flows through 1954 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1954 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1954 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1954 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1954 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1954_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1955 All-Ireland Senior Hurling Championship Final?", "What was flows through 1955 All-Ireland Senior Hurling Championship Final?", "What were flow through 1955 All-Ireland Senior Hurling Championship Final?", "What were flows through 1955 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1955 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1955 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1955 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1955 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1955_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1956 All-Ireland Senior Hurling Championship Final?", "What was flows through 1956 All-Ireland Senior Hurling Championship Final?", "What were flow through 1956 All-Ireland Senior Hurling Championship Final?", "What were flows through 1956 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1956 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1956 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1956 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1956 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1956_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1957 All-Ireland Senior Hurling Championship Final?", "What was flows through 1957 All-Ireland Senior Hurling Championship Final?", "What were flow through 1957 All-Ireland Senior Hurling Championship Final?", "What were flows through 1957 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1957 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1957 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1957 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1957 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1957_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1957 Emperor's Cup Final?", "What was flows through 1957 Emperor's Cup Final?", "What were flow through 1957 Emperor's Cup Final?", "What were flows through 1957 Emperor's Cup Final?", "Which cities were flow through 1957 Emperor's Cup Final?", "Which cities were flows through 1957 Emperor's Cup Final?", "Which city was flow through 1957 Emperor's Cup Final?", "Which city was flows through 1957 Emperor's Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1957_Emperor's_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1958 All-Ireland Senior Hurling Championship Final?", "What was flows through 1958 All-Ireland Senior Hurling Championship Final?", "What were flow through 1958 All-Ireland Senior Hurling Championship Final?", "What were flows through 1958 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1958 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1958 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1958 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1958 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1958_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1959 All-Ireland Senior Hurling Championship Final?", "What was flows through 1959 All-Ireland Senior Hurling Championship Final?", "What were flow through 1959 All-Ireland Senior Hurling Championship Final?", "What were flows through 1959 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1959 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1959 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1959 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1959 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1959_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 1960 All-Ireland Senior Hurling Championship Final?", "What was flows through 1960 All-Ireland Senior Hurling Championship Final?", "What were flow through 1960 All-Ireland Senior Hurling Championship Final?", "What were flows through 1960 All-Ireland Senior Hurling Championship Final?", "Which cities were flow through 1960 All-Ireland Senior Hurling Championship Final?", "Which cities were flows through 1960 All-Ireland Senior Hurling Championship Final?", "Which city was flow through 1960 All-Ireland Senior Hurling Championship Final?", "Which city was flows through 1960 All-Ireland Senior Hurling Championship Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1960_All-Ireland_Senior_Hurling_Championship_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Azerbaijan Supercup?", "What was flows through 2013 Azerbaijan Supercup?", "What were flow through 2013 Azerbaijan Supercup?", "What were flows through 2013 Azerbaijan Supercup?", "Which cities were flow through 2013 Azerbaijan Supercup?", "Which cities were flows through 2013 Azerbaijan Supercup?", "Which city was flow through 2013 Azerbaijan Supercup?", "Which city was flows through 2013 Azerbaijan Supercup?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Azerbaijan_Supercup> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Belarusian Super Cup?", "What was flows through 2013 Belarusian Super Cup?", "What were flow through 2013 Belarusian Super Cup?", "What were flows through 2013 Belarusian Super Cup?", "Which cities were flow through 2013 Belarusian Super Cup?", "Which cities were flows through 2013 Belarusian Super Cup?", "Which city was flow through 2013 Belarusian Super Cup?", "Which city was flows through 2013 Belarusian Super Cup?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Belarusian_Super_Cup> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Belgian Cup Final?", "What was flows through 2013 Belgian Cup Final?", "What were flow through 2013 Belgian Cup Final?", "What were flows through 2013 Belgian Cup Final?", "Which cities were flow through 2013 Belgian Cup Final?", "Which cities were flows through 2013 Belgian Cup Final?", "Which city was flow through 2013 Belgian Cup Final?", "Which city was flows through 2013 Belgian Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Belgian_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Belgian Super Cup?", "What was flows through 2013 Belgian Super Cup?", "What were flow through 2013 Belgian Super Cup?", "What were flows through 2013 Belgian Super Cup?", "Which cities were flow through 2013 Belgian Super Cup?", "Which cities were flows through 2013 Belgian Super Cup?", "Which city was flow through 2013 Belgian Super Cup?", "Which city was flows through 2013 Belgian Super Cup?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Belgian_Super_Cup> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Bolivarian Games?", "What was flows through 2013 Bolivarian Games?", "What were flow through 2013 Bolivarian Games?", "What were flows through 2013 Bolivarian Games?", "Which cities were flow through 2013 Bolivarian Games?", "Which cities were flows through 2013 Bolivarian Games?", "Which city was flow through 2013 Bolivarian Games?", "Which city was flows through 2013 Bolivarian Games?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Bolivarian_Games> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Bulgarian Cup Final?", "What was flows through 2013 Bulgarian Cup Final?", "What were flow through 2013 Bulgarian Cup Final?", "What were flows through 2013 Bulgarian Cup Final?", "Which cities were flow through 2013 Bulgarian Cup Final?", "Which cities were flows through 2013 Bulgarian Cup Final?", "Which city was flow through 2013 Bulgarian Cup Final?", "Which city was flows through 2013 Bulgarian Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Bulgarian_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Bulgarian Supercup?", "What was flows through 2013 Bulgarian Supercup?", "What were flow through 2013 Bulgarian Supercup?", "What were flows through 2013 Bulgarian Supercup?", "Which cities were flow through 2013 Bulgarian Supercup?", "Which cities were flows through 2013 Bulgarian Supercup?", "Which city was flow through 2013 Bulgarian Supercup?", "Which city was flows through 2013 Bulgarian Supercup?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Bulgarian_Supercup> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 CAF Super Cup?", "What was flows through 2013 CAF Super Cup?", "What were flow through 2013 CAF Super Cup?", "What were flows through 2013 CAF Super Cup?", "Which cities were flow through 2013 CAF Super Cup?", "Which cities were flows through 2013 CAF Super Cup?", "Which city was flow through 2013 CAF Super Cup?", "Which city was flows through 2013 CAF Super Cup?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_CAF_Super_Cup> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 CECAFA Cup Final?", "What was flows through 2013 CECAFA Cup Final?", "What were flow through 2013 CECAFA Cup Final?", "What were flows through 2013 CECAFA Cup Final?", "Which cities were flow through 2013 CECAFA Cup Final?", "Which cities were flows through 2013 CECAFA Cup Final?", "Which city was flow through 2013 CECAFA Cup Final?", "Which city was flows through 2013 CECAFA Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_CECAFA_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 CONCACAF Gold Cup Final?", "What was flows through 2013 CONCACAF Gold Cup Final?", "What were flow through 2013 CONCACAF Gold Cup Final?", "What were flows through 2013 CONCACAF Gold Cup Final?", "Which cities were flow through 2013 CONCACAF Gold Cup Final?", "Which cities were flows through 2013 CONCACAF Gold Cup Final?", "Which city was flow through 2013 CONCACAF Gold Cup Final?", "Which city was flows through 2013 CONCACAF Gold Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_CONCACAF_Gold_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Central American Games?", "What was flows through 2013 Central American Games?", "What were flow through 2013 Central American Games?", "What were flows through 2013 Central American Games?", "Which cities were flow through 2013 Central American Games?", "Which cities were flows through 2013 Central American Games?", "Which city was flow through 2013 Central American Games?", "Which city was flows through 2013 Central American Games?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Central_American_Games> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Chinese FA Super Cup?", "What was flows through 2013 Chinese FA Super Cup?", "What were flow through 2013 Chinese FA Super Cup?", "What were flows through 2013 Chinese FA Super Cup?", "Which cities were flow through 2013 Chinese FA Super Cup?", "Which cities were flows through 2013 Chinese FA Super Cup?", "Which city was flow through 2013 Chinese FA Super Cup?", "Which city was flows through 2013 Chinese FA Super Cup?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Chinese_FA_Super_Cup> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Copa Argentina Final?", "What was flows through 2013 Copa Argentina Final?", "What were flow through 2013 Copa Argentina Final?", "What were flows through 2013 Copa Argentina Final?", "Which cities were flow through 2013 Copa Argentina Final?", "Which cities were flows through 2013 Copa Argentina Final?", "Which city was flow through 2013 Copa Argentina Final?", "Which city was flows through 2013 Copa Argentina Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Copa_Argentina_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Copa del Rey Final?", "What was flows through 2013 Copa del Rey Final?", "What were flow through 2013 Copa del Rey Final?", "What were flows through 2013 Copa del Rey Final?", "Which cities were flow through 2013 Copa del Rey Final?", "Which cities were flows through 2013 Copa del Rey Final?", "Which city was flow through 2013 Copa del Rey Final?", "Which city was flows through 2013 Copa del Rey Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Copa_del_Rey_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Coppa Italia Final?", "What was flows through 2013 Coppa Italia Final?", "What were flow through 2013 Coppa Italia Final?", "What were flows through 2013 Coppa Italia Final?", "Which cities were flow through 2013 Coppa Italia Final?", "Which cities were flows through 2013 Coppa Italia Final?", "Which city was flow through 2013 Coppa Italia Final?", "Which city was flows through 2013 Coppa Italia Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Coppa_Italia_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Coupe de France Final?", "What was flows through 2013 Coupe de France Final?", "What were flow through 2013 Coupe de France Final?", "What were flows through 2013 Coupe de France Final?", "Which cities were flow through 2013 Coupe de France Final?", "Which cities were flows through 2013 Coupe de France Final?", "Which city was flow through 2013 Coupe de France Final?", "Which city was flows through 2013 Coupe de France Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Coupe_de_France_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Coupe de la Ligue Final?", "What was flows through 2013 Coupe de la Ligue Final?", "What were flow through 2013 Coupe de la Ligue Final?", "What were flows through 2013 Coupe de la Ligue Final?", "Which cities were flow through 2013 Coupe de la Ligue Final?", "Which cities were flows through 2013 Coupe de la Ligue Final?", "Which city was flow through 2013 Coupe de la Ligue Final?", "Which city was flows through 2013 Coupe de la Ligue Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Coupe_de_la_Ligue_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Croatian Football Super Cup?", "What was flows through 2013 Croatian Football Super Cup?", "What were flow through 2013 Croatian Football Super Cup?", "What were flows through 2013 Croatian Football Super Cup?", "Which cities were flow through 2013 Croatian Football Super Cup?", "Which cities were flows through 2013 Croatian Football Super Cup?", "Which city was flow through 2013 Croatian Football Super Cup?", "Which city was flows through 2013 Croatian Football Super Cup?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Croatian_Football_Super_Cup> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Cupa României Final?", "What was flows through 2013 Cupa României Final?", "What were flow through 2013 Cupa României Final?", "What were flows through 2013 Cupa României Final?", "Which cities were flow through 2013 Cupa României Final?", "Which cities were flows through 2013 Cupa României Final?", "Which city was flow through 2013 Cupa României Final?", "Which city was flows through 2013 Cupa României Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Cupa_României_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 DFB-Pokal Final?", "What was flows through 2013 DFB-Pokal Final?", "What were flow through 2013 DFB-Pokal Final?", "What were flows through 2013 DFB-Pokal Final?", "Which cities were flow through 2013 DFB-Pokal Final?", "Which cities were flows through 2013 DFB-Pokal Final?", "Which city was flow through 2013 DFB-Pokal Final?", "Which city was flows through 2013 DFB-Pokal Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_DFB-Pokal_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 DFL-Supercup?", "What was flows through 2013 DFL-Supercup?", "What were flow through 2013 DFL-Supercup?", "What were flows through 2013 DFL-Supercup?", "Which cities were flow through 2013 DFL-Supercup?", "Which cities were flows through 2013 DFL-Supercup?", "Which city was flow through 2013 DFL-Supercup?", "Which city was flows through 2013 DFL-Supercup?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_DFL-Supercup> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Danish Cup Final?", "What was flows through 2013 Danish Cup Final?", "What were flow through 2013 Danish Cup Final?", "What were flows through 2013 Danish Cup Final?", "Which cities were flow through 2013 Danish Cup Final?", "Which cities were flows through 2013 Danish Cup Final?", "Which city was flow through 2013 Danish Cup Final?", "Which city was flows through 2013 Danish Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Danish_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Durand Cup Final?", "What was flows through 2013 Durand Cup Final?", "What were flow through 2013 Durand Cup Final?", "What were flows through 2013 Durand Cup Final?", "Which cities were flow through 2013 Durand Cup Final?", "Which cities were flows through 2013 Durand Cup Final?", "Which city was flow through 2013 Durand Cup Final?", "Which city was flows through 2013 Durand Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Durand_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Egypt Cup Final?", "What was flows through 2013 Egypt Cup Final?", "What were flow through 2013 Egypt Cup Final?", "What were flows through 2013 Egypt Cup Final?", "Which cities were flow through 2013 Egypt Cup Final?", "Which cities were flows through 2013 Egypt Cup Final?", "Which city was flow through 2013 Egypt Cup Final?", "Which city was flows through 2013 Egypt Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Egypt_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Empress's Cup Final?", "What was flows through 2013 Empress's Cup Final?", "What were flow through 2013 Empress's Cup Final?", "What were flows through 2013 Empress's Cup Final?", "Which cities were flow through 2013 Empress's Cup Final?", "Which cities were flows through 2013 Empress's Cup Final?", "Which city was flow through 2013 Empress's Cup Final?", "Which city was flows through 2013 Empress's Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Empress's_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 European Youth Olympic Winter Festival?", "What was flows through 2013 European Youth Olympic Winter Festival?", "What were flow through 2013 European Youth Olympic Winter Festival?", "What were flows through 2013 European Youth Olympic Winter Festival?", "Which cities were flow through 2013 European Youth Olympic Winter Festival?", "Which cities were flows through 2013 European Youth Olympic Winter Festival?", "Which city was flow through 2013 European Youth Olympic Winter Festival?", "Which city was flows through 2013 European Youth Olympic Winter Festival?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_European_Youth_Olympic_Winter_Festival> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 European Youth Summer Olympic Festival?", "What was flows through 2013 European Youth Summer Olympic Festival?", "What were flow through 2013 European Youth Summer Olympic Festival?", "What were flows through 2013 European Youth Summer Olympic Festival?", "Which cities were flow through 2013 European Youth Summer Olympic Festival?", "Which cities were flows through 2013 European Youth Summer Olympic Festival?", "Which city was flow through 2013 European Youth Summer Olympic Festival?", "Which city was flows through 2013 European Youth Summer Olympic Festival?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_European_Youth_Summer_Olympic_Festival> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 FAI Cup Final?", "What was flows through 2013 FAI Cup Final?", "What were flow through 2013 FAI Cup Final?", "What were flows through 2013 FAI Cup Final?", "Which cities were flow through 2013 FAI Cup Final?", "Which cities were flows through 2013 FAI Cup Final?", "Which city was flow through 2013 FAI Cup Final?", "Which city was flows through 2013 FAI Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_FAI_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 FAI Women's Cup Final?", "What was flows through 2013 FAI Women's Cup Final?", "What were flow through 2013 FAI Women's Cup Final?", "What were flows through 2013 FAI Women's Cup Final?", "Which cities were flow through 2013 FAI Women's Cup Final?", "Which cities were flows through 2013 FAI Women's Cup Final?", "Which city was flow through 2013 FAI Women's Cup Final?", "Which city was flows through 2013 FAI Women's Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_FAI_Women's_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 FA Community Shield?", "What was flows through 2013 FA Community Shield?", "What were flow through 2013 FA Community Shield?", "What were flows through 2013 FA Community Shield?", "Which cities were flow through 2013 FA Community Shield?", "Which cities were flows through 2013 FA Community Shield?", "Which city was flow through 2013 FA Community Shield?", "Which city was flows through 2013 FA Community Shield?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_FA_Community_Shield> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 FA Cup Final?", "What was flows through 2013 FA Cup Final?", "What were flow through 2013 FA Cup Final?", "What were flows through 2013 FA Cup Final?", "Which cities were flow through 2013 FA Cup Final?", "Which cities were flows through 2013 FA Cup Final?", "Which city was flow through 2013 FA Cup Final?", "Which city was flows through 2013 FA Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_FA_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 FA Trophy Final?", "What was flows through 2013 FA Trophy Final?", "What were flow through 2013 FA Trophy Final?", "What were flows through 2013 FA Trophy Final?", "Which cities were flow through 2013 FA Trophy Final?", "Which cities were flows through 2013 FA Trophy Final?", "Which city was flow through 2013 FA Trophy Final?", "Which city was flows through 2013 FA Trophy Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_FA_Trophy_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 FA Vase Final?", "What was flows through 2013 FA Vase Final?", "What were flow through 2013 FA Vase Final?", "What were flows through 2013 FA Vase Final?", "Which cities were flow through 2013 FA Vase Final?", "Which cities were flows through 2013 FA Vase Final?", "Which city was flow through 2013 FA Vase Final?", "Which city was flows through 2013 FA Vase Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_FA_Vase_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 FA Women's Cup Final?", "What was flows through 2013 FA Women's Cup Final?", "What were flow through 2013 FA Women's Cup Final?", "What were flows through 2013 FA Women's Cup Final?", "Which cities were flow through 2013 FA Women's Cup Final?", "Which cities were flows through 2013 FA Women's Cup Final?", "Which city was flow through 2013 FA Women's Cup Final?", "Which city was flows through 2013 FA Women's Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_FA_Women's_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 FIFA Beach Soccer World Cup Final?", "What was flows through 2013 FIFA Beach Soccer World Cup Final?", "What were flow through 2013 FIFA Beach Soccer World Cup Final?", "What were flows through 2013 FIFA Beach Soccer World Cup Final?", "Which cities were flow through 2013 FIFA Beach Soccer World Cup Final?", "Which cities were flows through 2013 FIFA Beach Soccer World Cup Final?", "Which city was flow through 2013 FIFA Beach Soccer World Cup Final?", "Which city was flows through 2013 FIFA Beach Soccer World Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_FIFA_Beach_Soccer_World_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 FIFA Club World Cup Final?", "What was flows through 2013 FIFA Club World Cup Final?", "What were flow through 2013 FIFA Club World Cup Final?", "What were flows through 2013 FIFA Club World Cup Final?", "Which cities were flow through 2013 FIFA Club World Cup Final?", "Which cities were flows through 2013 FIFA Club World Cup Final?", "Which city was flow through 2013 FIFA Club World Cup Final?", "Which city was flows through 2013 FIFA Club World Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_FIFA_Club_World_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 FIFA Confederations Cup Final?", "What was flows through 2013 FIFA Confederations Cup Final?", "What were flow through 2013 FIFA Confederations Cup Final?", "What were flows through 2013 FIFA Confederations Cup Final?", "Which cities were flow through 2013 FIFA Confederations Cup Final?", "Which cities were flows through 2013 FIFA Confederations Cup Final?", "Which city was flow through 2013 FIFA Confederations Cup Final?", "Which city was flows through 2013 FIFA Confederations Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_FIFA_Confederations_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 FKF President's Cup Final?", "What was flows through 2013 FKF President's Cup Final?", "What were flow through 2013 FKF President's Cup Final?", "What were flows through 2013 FKF President's Cup Final?", "Which cities were flow through 2013 FKF President's Cup Final?", "Which cities were flows through 2013 FKF President's Cup Final?", "Which city was flow through 2013 FKF President's Cup Final?", "Which city was flows through 2013 FKF President's Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_FKF_President's_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Gibraltar v Slovakia football match?", "What was flows through 2013 Gibraltar v Slovakia football match?", "What were flow through 2013 Gibraltar v Slovakia football match?", "What were flows through 2013 Gibraltar v Slovakia football match?", "Which cities were flow through 2013 Gibraltar v Slovakia football match?", "Which cities were flows through 2013 Gibraltar v Slovakia football match?", "Which city was flow through 2013 Gibraltar v Slovakia football match?", "Which city was flows through 2013 Gibraltar v Slovakia football match?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Gibraltar_v_Slovakia_football_match> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Hazfi Cup Final?", "What was flows through 2013 Hazfi Cup Final?", "What were flow through 2013 Hazfi Cup Final?", "What were flows through 2013 Hazfi Cup Final?", "Which cities were flow through 2013 Hazfi Cup Final?", "Which cities were flows through 2013 Hazfi Cup Final?", "Which city was flow through 2013 Hazfi Cup Final?", "Which city was flows through 2013 Hazfi Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Hazfi_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Heineken Cup Final?", "What was flows through 2013 Heineken Cup Final?", "What were flow through 2013 Heineken Cup Final?", "What were flows through 2013 Heineken Cup Final?", "Which cities were flow through 2013 Heineken Cup Final?", "Which cities were flows through 2013 Heineken Cup Final?", "Which city was flow through 2013 Heineken Cup Final?", "Which city was flows through 2013 Heineken Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Heineken_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Indonesia Super League All-Star Game?", "What was flows through 2013 Indonesia Super League All-Star Game?", "What were flow through 2013 Indonesia Super League All-Star Game?", "What were flows through 2013 Indonesia Super League All-Star Game?", "Which cities were flow through 2013 Indonesia Super League All-Star Game?", "Which cities were flows through 2013 Indonesia Super League All-Star Game?", "Which city was flow through 2013 Indonesia Super League All-Star Game?", "Which city was flows through 2013 Indonesia Super League All-Star Game?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Indonesia_Super_League_All-Star_Game> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Indonesian Community Shield?", "What was flows through 2013 Indonesian Community Shield?", "What were flow through 2013 Indonesian Community Shield?", "What were flows through 2013 Indonesian Community Shield?", "Which cities were flow through 2013 Indonesian Community Shield?", "Which cities were flows through 2013 Indonesian Community Shield?", "Which city was flow through 2013 Indonesian Community Shield?", "Which city was flows through 2013 Indonesian Community Shield?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Indonesian_Community_Shield> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Islamic Solidarity Games?", "What was flows through 2013 Islamic Solidarity Games?", "What were flow through 2013 Islamic Solidarity Games?", "What were flows through 2013 Islamic Solidarity Games?", "Which cities were flow through 2013 Islamic Solidarity Games?", "Which cities were flows through 2013 Islamic Solidarity Games?", "Which city was flow through 2013 Islamic Solidarity Games?", "Which city was flows through 2013 Islamic Solidarity Games?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Islamic_Solidarity_Games> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 J.League Cup Final?", "What was flows through 2013 J.League Cup Final?", "What were flow through 2013 J.League Cup Final?", "What were flows through 2013 J.League Cup Final?", "Which cities were flow through 2013 J.League Cup Final?", "Which cities were flows through 2013 J.League Cup Final?", "Which city was flow through 2013 J.League Cup Final?", "Which city was flows through 2013 J.League Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_J.League_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Japanese Super Cup?", "What was flows through 2013 Japanese Super Cup?", "What were flow through 2013 Japanese Super Cup?", "What were flows through 2013 Japanese Super Cup?", "Which cities were flow through 2013 Japanese Super Cup?", "Which cities were flows through 2013 Japanese Super Cup?", "Which city was flow through 2013 Japanese Super Cup?", "Which city was flows through 2013 Japanese Super Cup?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Japanese_Super_Cup> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Jeux de la Francophonie?", "What was flows through 2013 Jeux de la Francophonie?", "What were flow through 2013 Jeux de la Francophonie?", "What were flows through 2013 Jeux de la Francophonie?", "Which cities were flow through 2013 Jeux de la Francophonie?", "Which cities were flows through 2013 Jeux de la Francophonie?", "Which city was flow through 2013 Jeux de la Francophonie?", "Which city was flows through 2013 Jeux de la Francophonie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Jeux_de_la_Francophonie> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Johan Cruyff Shield?", "What was flows through 2013 Johan Cruyff Shield?", "What were flow through 2013 Johan Cruyff Shield?", "What were flows through 2013 Johan Cruyff Shield?", "Which cities were flow through 2013 Johan Cruyff Shield?", "Which cities were flows through 2013 Johan Cruyff Shield?", "Which city was flow through 2013 Johan Cruyff Shield?", "Which city was flows through 2013 Johan Cruyff Shield?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Johan_Cruyff_Shield> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 KNVB Cup Final?", "What was flows through 2013 KNVB Cup Final?", "What were flow through 2013 KNVB Cup Final?", "What were flows through 2013 KNVB Cup Final?", "Which cities were flow through 2013 KNVB Cup Final?", "Which cities were flows through 2013 KNVB Cup Final?", "Which city was flow through 2013 KNVB Cup Final?", "Which city was flows through 2013 KNVB Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_KNVB_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Kor Royal Cup?", "What was flows through 2013 Kor Royal Cup?", "What were flow through 2013 Kor Royal Cup?", "What were flows through 2013 Kor Royal Cup?", "Which cities were flow through 2013 Kor Royal Cup?", "Which cities were flows through 2013 Kor Royal Cup?", "Which city was flow through 2013 Kor Royal Cup?", "Which city was flows through 2013 Kor Royal Cup?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Kor_Royal_Cup> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Kuwait Super Cup?", "What was flows through 2013 Kuwait Super Cup?", "What were flow through 2013 Kuwait Super Cup?", "What were flows through 2013 Kuwait Super Cup?", "Which cities were flow through 2013 Kuwait Super Cup?", "Which cities were flows through 2013 Kuwait Super Cup?", "Which city was flow through 2013 Kuwait Super Cup?", "Which city was flows through 2013 Kuwait Super Cup?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Kuwait_Super_Cup> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Latvian Supercup?", "What was flows through 2013 Latvian Supercup?", "What were flow through 2013 Latvian Supercup?", "What were flows through 2013 Latvian Supercup?", "Which cities were flow through 2013 Latvian Supercup?", "Which cities were flows through 2013 Latvian Supercup?", "Which city was flow through 2013 Latvian Supercup?", "Which city was flows through 2013 Latvian Supercup?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Latvian_Supercup> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Leinster Senior Cup Final?", "What was flows through 2013 Leinster Senior Cup Final?", "What were flow through 2013 Leinster Senior Cup Final?", "What were flows through 2013 Leinster Senior Cup Final?", "Which cities were flow through 2013 Leinster Senior Cup Final?", "Which cities were flows through 2013 Leinster Senior Cup Final?", "Which city was flow through 2013 Leinster Senior Cup Final?", "Which city was flows through 2013 Leinster Senior Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Leinster_Senior_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Liga Indonesia Premier Division (LI) Final?", "What was flows through 2013 Liga Indonesia Premier Division (LI) Final?", "What were flow through 2013 Liga Indonesia Premier Division (LI) Final?", "What were flows through 2013 Liga Indonesia Premier Division (LI) Final?", "Which cities were flow through 2013 Liga Indonesia Premier Division (LI) Final?", "Which cities were flows through 2013 Liga Indonesia Premier Division (LI) Final?", "Which city was flow through 2013 Liga Indonesia Premier Division (LI) Final?", "Which city was flows through 2013 Liga Indonesia Premier Division (LI) Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Liga_Indonesia_Premier_Division_(LI)_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 MLS All-Star Game?", "What was flows through 2013 MLS All-Star Game?", "What were flow through 2013 MLS All-Star Game?", "What were flows through 2013 MLS All-Star Game?", "Which cities were flow through 2013 MLS All-Star Game?", "Which cities were flows through 2013 MLS All-Star Game?", "Which city was flow through 2013 MLS All-Star Game?", "Which city was flows through 2013 MLS All-Star Game?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_MLS_All-Star_Game> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Magyar Kupa Final?", "What was flows through 2013 Magyar Kupa Final?", "What were flow through 2013 Magyar Kupa Final?", "What were flows through 2013 Magyar Kupa Final?", "Which cities were flow through 2013 Magyar Kupa Final?", "Which cities were flows through 2013 Magyar Kupa Final?", "Which city was flow through 2013 Magyar Kupa Final?", "Which city was flows through 2013 Magyar Kupa Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Magyar_Kupa_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Malaysia Cup Final?", "What was flows through 2013 Malaysia Cup Final?", "What were flow through 2013 Malaysia Cup Final?", "What were flows through 2013 Malaysia Cup Final?", "Which cities were flow through 2013 Malaysia Cup Final?", "Which cities were flows through 2013 Malaysia Cup Final?", "Which city was flow through 2013 Malaysia Cup Final?", "Which city was flows through 2013 Malaysia Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Malaysia_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Malaysia FA Cup Final?", "What was flows through 2013 Malaysia FA Cup Final?", "What were flow through 2013 Malaysia FA Cup Final?", "What were flows through 2013 Malaysia FA Cup Final?", "Which cities were flow through 2013 Malaysia FA Cup Final?", "Which cities were flows through 2013 Malaysia FA Cup Final?", "Which city was flow through 2013 Malaysia FA Cup Final?", "Which city was flows through 2013 Malaysia FA Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Malaysia_FA_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Maldives FA Cup Final?", "What was flows through 2013 Maldives FA Cup Final?", "What were flow through 2013 Maldives FA Cup Final?", "What were flows through 2013 Maldives FA Cup Final?", "Which cities were flow through 2013 Maldives FA Cup Final?", "Which cities were flows through 2013 Maldives FA Cup Final?", "Which city was flow through 2013 Maldives FA Cup Final?", "Which city was flows through 2013 Maldives FA Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Maldives_FA_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Mediterranean Games?", "What was flows through 2013 Mediterranean Games?", "What were flow through 2013 Mediterranean Games?", "What were flows through 2013 Mediterranean Games?", "Which cities were flow through 2013 Mediterranean Games?", "Which cities were flows through 2013 Mediterranean Games?", "Which city was flow through 2013 Mediterranean Games?", "Which city was flows through 2013 Mediterranean Games?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Mediterranean_Games> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Nadeshiko League Cup Final?", "What was flows through 2013 Nadeshiko League Cup Final?", "What were flow through 2013 Nadeshiko League Cup Final?", "What were flows through 2013 Nadeshiko League Cup Final?", "Which cities were flow through 2013 Nadeshiko League Cup Final?", "Which cities were flows through 2013 Nadeshiko League Cup Final?", "Which city was flow through 2013 Nadeshiko League Cup Final?", "Which city was flows through 2013 Nadeshiko League Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Nadeshiko_League_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Netball Superleague Grand Final?", "What was flows through 2013 Netball Superleague Grand Final?", "What were flow through 2013 Netball Superleague Grand Final?", "What were flows through 2013 Netball Superleague Grand Final?", "Which cities were flow through 2013 Netball Superleague Grand Final?", "Which cities were flows through 2013 Netball Superleague Grand Final?", "Which city was flow through 2013 Netball Superleague Grand Final?", "Which city was flows through 2013 Netball Superleague Grand Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Netball_Superleague_Grand_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "What was flow through 2013 Norwegian Football Cup Final?", "What was flows through 2013 Norwegian Football Cup Final?", "What were flow through 2013 Norwegian Football Cup Final?", "What were flows through 2013 Norwegian Football Cup Final?", "Which cities were flow through 2013 Norwegian Football Cup Final?", "Which cities were flows through 2013 Norwegian Football Cup Final?", "Which city was flow through 2013 Norwegian Football Cup Final?", "Which city was flows through 2013 Norwegian Football Cup Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Norwegian_Football_Cup_Final> <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by 989 Studios ?", "Which agent develops works developed by 989 Studios ?", "Who developed works developed by 989 Studios ?", "Who develops works developed by 989 Studios ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/989_Studios>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by ABS-CBN News and Current Affairs ?", "Which agent develops works developed by ABS-CBN News and Current Affairs ?", "Who developed works developed by ABS-CBN News and Current Affairs ?", "Who develops works developed by ABS-CBN News and Current Affairs ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/ABS-CBN_News_and_Current_Affairs>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by ADK (company) ?", "Which agent develops works developed by ADK (company) ?", "Who developed works developed by ADK (company) ?", "Who develops works developed by ADK (company) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/ADK_(company)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by LucasArts ?", "Which agent develops works developed by LucasArts ?", "Who developed works developed by LucasArts ?", "Who develops works developed by LucasArts ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/LucasArts>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Lucy Cousins ?", "Which agent develops works developed by Lucy Cousins ?", "Who developed works developed by Lucy Cousins ?", "Who develops works developed by Lucy Cousins ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Lucy_Cousins>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Luminous Productions ?", "Which agent develops works developed by Luminous Productions ?", "Who developed works developed by Luminous Productions ?", "Who develops works developed by Luminous Productions ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Luminous_Productions>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by M2 (game developer) ?", "Which agent develops works developed by M2 (game developer) ?", "Who developed works developed by M2 (game developer) ?", "Who develops works developed by M2 (game developer) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/M2_(game_developer)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by MOL (company) ?", "Which agent develops works developed by MOL (company) ?", "Who developed works developed by MOL (company) ?", "Who develops works developed by MOL (company) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MOL_(company)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Mabrouk El Mechri ?", "Which agent develops works developed by Mabrouk El Mechri ?", "Who developed works developed by Mabrouk El Mechri ?", "Who develops works developed by Mabrouk El Mechri ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mabrouk_El_Mechri>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Macromedia ?", "Which agent develops works developed by Macromedia ?", "Who developed works developed by Macromedia ?", "Who develops works developed by Macromedia ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Macromedia>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Mad Catz ?", "Which agent develops works developed by Mad Catz ?", "Who developed works developed by Mad Catz ?", "Who develops works developed by Mad Catz ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mad_Catz>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Magix Software GmbH ?", "Which agent develops works developed by Magix Software GmbH ?", "Who developed works developed by Magix Software GmbH ?", "Who develops works developed by Magix Software GmbH ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Magix_Software_GmbH>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by University of Bristol ?", "Which agent develops works developed by University of Bristol ?", "Who developed works developed by University of Bristol ?", "Who develops works developed by University of Bristol ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Bristol>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by University of California, San Francisco ?", "Which agent develops works developed by University of California, San Francisco ?", "Who developed works developed by University of California, San Francisco ?", "Who develops works developed by University of California, San Francisco ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_California,_San_Francisco>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by University of South Florida ?", "Which agent develops works developed by University of South Florida ?", "Who developed works developed by University of South Florida ?", "Who develops works developed by University of South Florida ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_South_Florida>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by University of Sydney ?", "Which agent develops works developed by University of Sydney ?", "Who developed works developed by University of Sydney ?", "Who develops works developed by University of Sydney ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Sydney>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Strategic Studies Group ?", "Which agent develops works developed by Strategic Studies Group ?", "Who developed works developed by Strategic Studies Group ?", "Who develops works developed by Strategic Studies Group ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Strategic_Studies_Group>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by HeroCraft ?", "Which agent develops works developed by HeroCraft ?", "Who developed works developed by HeroCraft ?", "Who develops works developed by HeroCraft ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/HeroCraft>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Handheld Games ?", "Which agent develops works developed by Handheld Games ?", "Who developed works developed by Handheld Games ?", "Who develops works developed by Handheld Games ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Handheld_Games>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Spectral Associates ?", "Which agent develops works developed by Spectral Associates ?", "Who developed works developed by Spectral Associates ?", "Who develops works developed by Spectral Associates ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Spectral_Associates>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by No Magic ?", "Which agent develops works developed by No Magic ?", "Who developed works developed by No Magic ?", "Who develops works developed by No Magic ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/No_Magic>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Softdisk ?", "Which agent develops works developed by Softdisk ?", "Who developed works developed by Softdisk ?", "Who develops works developed by Softdisk ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Softdisk>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by BioWare ?", "Which agent develops works developed by BioWare ?", "Who developed works developed by BioWare ?", "Who develops works developed by BioWare ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/BioWare>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Blue Planet Software ?", "Which agent develops works developed by Blue Planet Software ?", "Who developed works developed by Blue Planet Software ?", "Who develops works developed by Blue Planet Software ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Blue_Planet_Software>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Devsisters ?", "Which agent develops works developed by Devsisters ?", "Who developed works developed by Devsisters ?", "Who develops works developed by Devsisters ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Devsisters>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Digital Equipment Corporation ?", "Which agent develops works developed by Digital Equipment Corporation ?", "Who developed works developed by Digital Equipment Corporation ?", "Who develops works developed by Digital Equipment Corporation ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Digital_Equipment_Corporation>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Digital Leisure ?", "Which agent develops works developed by Digital Leisure ?", "Who developed works developed by Digital Leisure ?", "Who develops works developed by Digital Leisure ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Digital_Leisure>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Digital Research ?", "Which agent develops works developed by Digital Research ?", "Who developed works developed by Digital Research ?", "Who develops works developed by Digital Research ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Digital_Research>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Diplo ?", "Which agent develops works developed by Diplo ?", "Who developed works developed by Diplo ?", "Who develops works developed by Diplo ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Diplo>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Google ?", "Which agent develops works developed by Google ?", "Who developed works developed by Google ?", "Who develops works developed by Google ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Google>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Gottlieb ?", "Which agent develops works developed by Gottlieb ?", "Who developed works developed by Gottlieb ?", "Who develops works developed by Gottlieb ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Gottlieb>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Grezzo ?", "Which agent develops works developed by Grezzo ?", "Who developed works developed by Grezzo ?", "Who develops works developed by Grezzo ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Grezzo>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Kevin Shinick ?", "Which agent develops works developed by Kevin Shinick ?", "Who developed works developed by Kevin Shinick ?", "Who develops works developed by Kevin Shinick ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Kevin_Shinick>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Kogado Studio ?", "Which agent develops works developed by Kogado Studio ?", "Who developed works developed by Kogado Studio ?", "Who develops works developed by Kogado Studio ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Kogado_Studio>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Kojima Productions ?", "Which agent develops works developed by Kojima Productions ?", "Who developed works developed by Kojima Productions ?", "Who develops works developed by Kojima Productions ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Kojima_Productions>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Konami ?", "Which agent develops works developed by Konami ?", "Who developed works developed by Konami ?", "Who develops works developed by Konami ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Konami>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Korean Broadcasting System ?", "Which agent develops works developed by Korean Broadcasting System ?", "Who developed works developed by Korean Broadcasting System ?", "Who develops works developed by Korean Broadcasting System ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Korean_Broadcasting_System>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Krisalis Software ?", "Which agent develops works developed by Krisalis Software ?", "Who developed works developed by Krisalis Software ?", "Who develops works developed by Krisalis Software ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Krisalis_Software>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Alex Madonna ?", "Which agent develops works developed by Alex Madonna ?", "Who developed works developed by Alex Madonna ?", "Who develops works developed by Alex Madonna ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Alex_Madonna>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Aspyr Media ?", "Which agent develops works developed by Aspyr Media ?", "Who developed works developed by Aspyr Media ?", "Who develops works developed by Aspyr Media ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Aspyr_Media>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Q Entertainment ?", "Which agent develops works developed by Q Entertainment ?", "Who developed works developed by Q Entertainment ?", "Who develops works developed by Q Entertainment ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Q_Entertainment>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Quest Corporation ?", "Which agent develops works developed by Quest Corporation ?", "Who developed works developed by Quest Corporation ?", "Who develops works developed by Quest Corporation ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Quest_Corporation>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Radical Entertainment ?", "Which agent develops works developed by Radical Entertainment ?", "Who developed works developed by Radical Entertainment ?", "Who develops works developed by Radical Entertainment ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Radical_Entertainment>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Rainbow Arts ?", "Which agent develops works developed by Rainbow Arts ?", "Who developed works developed by Rainbow Arts ?", "Who develops works developed by Rainbow Arts ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Rainbow_Arts>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Rainbow Studios ?", "Which agent develops works developed by Rainbow Studios ?", "Who developed works developed by Rainbow Studios ?", "Who develops works developed by Rainbow Studios ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Rainbow_Studios>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Irem ?", "Which agent develops works developed by Irem ?", "Who developed works developed by Irem ?", "Who develops works developed by Irem ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Irem>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Exient Entertainment ?", "Which agent develops works developed by Exient Entertainment ?", "Who developed works developed by Exient Entertainment ?", "Who develops works developed by Exient Entertainment ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Exient_Entertainment>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Studio Alex ?", "Which agent develops works developed by Studio Alex ?", "Who developed works developed by Studio Alex ?", "Who develops works developed by Studio Alex ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Studio_Alex>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Aksys Games ?", "Which agent develops works developed by Aksys Games ?", "Who developed works developed by Aksys Games ?", "Who develops works developed by Aksys Games ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Aksys_Games>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Central Point Software ?", "Which agent develops works developed by Central Point Software ?", "Who developed works developed by Central Point Software ?", "Who develops works developed by Central Point Software ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Central_Point_Software>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by American Laser Games ?", "Which agent develops works developed by American Laser Games ?", "Who developed works developed by American Laser Games ?", "Who develops works developed by American Laser Games ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/American_Laser_Games>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Nintendo ?", "Which agent develops works developed by Nintendo ?", "Who developed works developed by Nintendo ?", "Who develops works developed by Nintendo ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Nintendo>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Nintendo DS ?", "Which agent develops works developed by Nintendo DS ?", "Who developed works developed by Nintendo DS ?", "Who develops works developed by Nintendo DS ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Nintendo_DS>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Nintendo Entertainment Analysis & Development ?", "Which agent develops works developed by Nintendo Entertainment Analysis & Development ?", "Who developed works developed by Nintendo Entertainment Analysis & Development ?", "Who develops works developed by Nintendo Entertainment Analysis & Development ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Nintendo_Entertainment_Analysis_&_Development>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Nippon Ichi Software ?", "Which agent develops works developed by Nippon Ichi Software ?", "Who developed works developed by Nippon Ichi Software ?", "Who develops works developed by Nippon Ichi Software ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Nippon_Ichi_Software>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Nokia ?", "Which agent develops works developed by Nokia ?", "Who developed works developed by Nokia ?", "Who develops works developed by Nokia ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Nokia>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Novell ?", "Which agent develops works developed by Novell ?", "Who developed works developed by Novell ?", "Who develops works developed by Novell ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Novell>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Oak Ridge National Laboratory ?", "Which agent develops works developed by Oak Ridge National Laboratory ?", "Who developed works developed by Oak Ridge National Laboratory ?", "Who develops works developed by Oak Ridge National Laboratory ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Oak_Ridge_National_Laboratory>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Ocean Software ?", "Which agent develops works developed by Ocean Software ?", "Who developed works developed by Ocean Software ?", "Who develops works developed by Ocean Software ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Ocean_Software>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by GNU Project ?", "Which agent develops works developed by GNU Project ?", "Who developed works developed by GNU Project ?", "Who develops works developed by GNU Project ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/GNU_Project>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Mythos Games ?", "Which agent develops works developed by Mythos Games ?", "Who developed works developed by Mythos Games ?", "Who develops works developed by Mythos Games ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mythos_Games>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Natsume (company) ?", "Which agent develops works developed by Natsume (company) ?", "Who developed works developed by Natsume (company) ?", "Who develops works developed by Natsume (company) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Natsume_(company)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Neko Entertainment ?", "Which agent develops works developed by Neko Entertainment ?", "Who developed works developed by Neko Entertainment ?", "Who develops works developed by Neko Entertainment ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Neko_Entertainment>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Success (company) ?", "Which agent develops works developed by Success (company) ?", "Who developed works developed by Success (company) ?", "Who develops works developed by Success (company) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Success_(company)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Quicksilver Software ?", "Which agent develops works developed by Quicksilver Software ?", "Who developed works developed by Quicksilver Software ?", "Who develops works developed by Quicksilver Software ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Quicksilver_Software>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Warthog Games ?", "Which agent develops works developed by Warthog Games ?", "Who developed works developed by Warthog Games ?", "Who develops works developed by Warthog Games ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Warthog_Games>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Living Videotext ?", "Which agent develops works developed by Living Videotext ?", "Who developed works developed by Living Videotext ?", "Who develops works developed by Living Videotext ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Living_Videotext>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Fill-in-Cafe ?", "Which agent develops works developed by Fill-in-Cafe ?", "Who developed works developed by Fill-in-Cafe ?", "Who develops works developed by Fill-in-Cafe ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Fill-in-Cafe>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Ferry Gouw ?", "Which agent develops works developed by Ferry Gouw ?", "Who developed works developed by Ferry Gouw ?", "Who develops works developed by Ferry Gouw ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Ferry_Gouw>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by MTV Italy ?", "Which agent develops works developed by MTV Italy ?", "Who developed works developed by MTV Italy ?", "Who develops works developed by MTV Italy ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MTV_Italy>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Avalanche Studios ?", "Which agent develops works developed by Avalanche Studios ?", "Who developed works developed by Avalanche Studios ?", "Who develops works developed by Avalanche Studios ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Avalanche_Studios>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Bandai ?", "Which agent develops works developed by Bandai ?", "Who developed works developed by Bandai ?", "Who develops works developed by Bandai ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Bandai>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Banpresto ?", "Which agent develops works developed by Banpresto ?", "Who developed works developed by Banpresto ?", "Who develops works developed by Banpresto ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Banpresto>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Accelrys ?", "Which agent develops works developed by Accelrys ?", "Who developed works developed by Accelrys ?", "Who develops works developed by Accelrys ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Accelrys>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Arrowhead Game Studios ?", "Which agent develops works developed by Arrowhead Game Studios ?", "Who developed works developed by Arrowhead Game Studios ?", "Who develops works developed by Arrowhead Game Studios ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Arrowhead_Game_Studios>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Artdink ?", "Which agent develops works developed by Artdink ?", "Who developed works developed by Artdink ?", "Who develops works developed by Artdink ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Artdink>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Artificial Solutions ?", "Which agent develops works developed by Artificial Solutions ?", "Who developed works developed by Artificial Solutions ?", "Who develops works developed by Artificial Solutions ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Artificial_Solutions>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Erik Bye ?", "Which agent develops works developed by Erik Bye ?", "Who developed works developed by Erik Bye ?", "Who develops works developed by Erik Bye ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Erik_Bye>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by San Francisco Public Library ?", "Which agent develops works developed by San Francisco Public Library ?", "Who developed works developed by San Francisco Public Library ?", "Who develops works developed by San Francisco Public Library ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/San_Francisco_Public_Library>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Capcom ?", "Which agent develops works developed by Capcom ?", "Who developed works developed by Capcom ?", "Who develops works developed by Capcom ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Capcom>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Adam Cadre ?", "Which agent develops works developed by Adam Cadre ?", "Who developed works developed by Adam Cadre ?", "Who develops works developed by Adam Cadre ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Adam_Cadre>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by City University of New York ?", "Which agent develops works developed by City University of New York ?", "Who developed works developed by City University of New York ?", "Who develops works developed by City University of New York ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/City_University_of_New_York>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Claris ?", "Which agent develops works developed by Claris ?", "Who developed works developed by Claris ?", "Who develops works developed by Claris ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Claris>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Codemasters ?", "Which agent develops works developed by Codemasters ?", "Who developed works developed by Codemasters ?", "Who develops works developed by Codemasters ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Codemasters>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Game Arts ?", "Which agent develops works developed by Game Arts ?", "Who developed works developed by Game Arts ?", "Who develops works developed by Game Arts ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Game_Arts>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Game Republic ?", "Which agent develops works developed by Game Republic ?", "Who developed works developed by Game Republic ?", "Who develops works developed by Game Republic ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Game_Republic>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Gameloft ?", "Which agent develops works developed by Gameloft ?", "Who developed works developed by Gameloft ?", "Who develops works developed by Gameloft ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Gameloft>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Gary Kildall ?", "Which agent develops works developed by Gary Kildall ?", "Who developed works developed by Gary Kildall ?", "Who develops works developed by Gary Kildall ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Gary_Kildall>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Gene Reynolds ?", "Which agent develops works developed by Gene Reynolds ?", "Who developed works developed by Gene Reynolds ?", "Who develops works developed by Gene Reynolds ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Gene_Reynolds>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Genki (company) ?", "Which agent develops works developed by Genki (company) ?", "Who developed works developed by Genki (company) ?", "Who develops works developed by Genki (company) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Genki_(company)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Bandai Entertainment Company ?", "Which agent develops works developed by Bandai Entertainment Company ?", "Who developed works developed by Bandai Entertainment Company ?", "Who develops works developed by Bandai Entertainment Company ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Bandai_Entertainment_Company>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by HB Studios ?", "Which agent develops works developed by HB Studios ?", "Who developed works developed by HB Studios ?", "Who develops works developed by HB Studios ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/HB_Studios>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Microcabin ?", "Which agent develops works developed by Microcabin ?", "Who developed works developed by Microcabin ?", "Who develops works developed by Microcabin ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Microcabin>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Nordcurrent ?", "Which agent develops works developed by Nordcurrent ?", "Who developed works developed by Nordcurrent ?", "Who develops works developed by Nordcurrent ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Nordcurrent>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Beenox ?", "Which agent develops works developed by Beenox ?", "Who developed works developed by Beenox ?", "Who develops works developed by Beenox ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Beenox>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Bell Labs ?", "Which agent develops works developed by Bell Labs ?", "Who developed works developed by Bell Labs ?", "Who develops works developed by Bell Labs ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Bell_Labs>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Big Huge Games ?", "Which agent develops works developed by Big Huge Games ?", "Who developed works developed by Big Huge Games ?", "Who develops works developed by Big Huge Games ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Big_Huge_Games>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by Big Red Software ?", "Which agent develops works developed by Big Red Software ?", "Who developed works developed by Big Red Software ?", "Who develops works developed by Big Red Software ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Big_Red_Software>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by ABS-CBN Regional Network Group ?", "Which agent develops works developed by ABS-CBN Regional Network Group ?", "Who developed works developed by ABS-CBN Regional Network Group ?", "Who develops works developed by ABS-CBN Regional Network Group ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/ABS-CBN_Regional_Network_Group>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed works developed by KID ?", "Which agent develops works developed by KID ?", "Who developed works developed by KID ?", "Who develops works developed by KID ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/KID>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Lublin Museum ?", "What exhibits artworks exhibited by Lublin Museum ?", "Which museum exhibited artworks exhibited by Lublin Museum ?", "Which museum exhibits artworks exhibited by Lublin Museum ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Lublin_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by MUŻA ?", "What exhibits artworks exhibited by MUŻA ?", "Which museum exhibited artworks exhibited by MUŻA ?", "Which museum exhibits artworks exhibited by MUŻA ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/MUŻA>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Madrid ?", "What exhibits artworks exhibited by Madrid ?", "Which museum exhibited artworks exhibited by Madrid ?", "Which museum exhibits artworks exhibited by Madrid ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Madrid>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Convent of San Domenico, Fiesole ?", "What exhibits artworks exhibited by Convent of San Domenico, Fiesole ?", "Which museum exhibited artworks exhibited by Convent of San Domenico, Fiesole ?", "Which museum exhibits artworks exhibited by Convent of San Domenico, Fiesole ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Convent_of_San_Domenico,_Fiesole>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Uffizi ?", "What exhibits artworks exhibited by Uffizi ?", "Which museum exhibited artworks exhibited by Uffizi ?", "Which museum exhibits artworks exhibited by Uffizi ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Uffizi>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by United Nations General Assembly ?", "What exhibits artworks exhibited by United Nations General Assembly ?", "Which museum exhibited artworks exhibited by United Nations General Assembly ?", "Which museum exhibits artworks exhibited by United Nations General Assembly ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/United_Nations_General_Assembly>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by United States Capitol ?", "What exhibits artworks exhibited by United States Capitol ?", "Which museum exhibited artworks exhibited by United States Capitol ?", "Which museum exhibits artworks exhibited by United States Capitol ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/United_States_Capitol>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Valletta ?", "What exhibits artworks exhibited by Valletta ?", "Which museum exhibited artworks exhibited by Valletta ?", "Which museum exhibits artworks exhibited by Valletta ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Valletta>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Van Gogh Museum ?", "What exhibits artworks exhibited by Van Gogh Museum ?", "Which museum exhibited artworks exhibited by Van Gogh Museum ?", "Which museum exhibits artworks exhibited by Van Gogh Museum ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Van_Gogh_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Vatican Museums ?", "What exhibits artworks exhibited by Vatican Museums ?", "Which museum exhibited artworks exhibited by Vatican Museums ?", "Which museum exhibits artworks exhibited by Vatican Museums ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Vatican_Museums>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Dallas Museum of Art ?", "What exhibits artworks exhibited by Dallas Museum of Art ?", "Which museum exhibited artworks exhibited by Dallas Museum of Art ?", "Which museum exhibits artworks exhibited by Dallas Museum of Art ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Dallas_Museum_of_Art>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by National Gallery of Denmark ?", "What exhibits artworks exhibited by National Gallery of Denmark ?", "Which museum exhibited artworks exhibited by National Gallery of Denmark ?", "Which museum exhibits artworks exhibited by National Gallery of Denmark ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/National_Gallery_of_Denmark>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Piazza della Santissima Annunziata ?", "What exhibits artworks exhibited by Piazza della Santissima Annunziata ?", "Which museum exhibited artworks exhibited by Piazza della Santissima Annunziata ?", "Which museum exhibits artworks exhibited by Piazza della Santissima Annunziata ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Piazza_della_Santissima_Annunziata>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Royal Library of Turin ?", "What exhibits artworks exhibited by Royal Library of Turin ?", "Which museum exhibited artworks exhibited by Royal Library of Turin ?", "Which museum exhibits artworks exhibited by Royal Library of Turin ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Royal_Library_of_Turin>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by San Michele Visdomini ?", "What exhibits artworks exhibited by San Michele Visdomini ?", "Which museum exhibited artworks exhibited by San Michele Visdomini ?", "Which museum exhibits artworks exhibited by San Michele Visdomini ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/San_Michele_Visdomini>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Scuola di San Giorgio degli Schiavoni ?", "What exhibits artworks exhibited by Scuola di San Giorgio degli Schiavoni ?", "Which museum exhibited artworks exhibited by Scuola di San Giorgio degli Schiavoni ?", "Which museum exhibits artworks exhibited by Scuola di San Giorgio degli Schiavoni ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Scuola_di_San_Giorgio_degli_Schiavoni>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Slovak National Gallery ?", "What exhibits artworks exhibited by Slovak National Gallery ?", "Which museum exhibited artworks exhibited by Slovak National Gallery ?", "Which museum exhibits artworks exhibited by Slovak National Gallery ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Slovak_National_Gallery>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Fogg Art Museum ?", "What exhibits artworks exhibited by Fogg Art Museum ?", "Which museum exhibited artworks exhibited by Fogg Art Museum ?", "Which museum exhibits artworks exhibited by Fogg Art Museum ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Fogg_Art_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Ulster Museum ?", "What exhibits artworks exhibited by Ulster Museum ?", "Which museum exhibited artworks exhibited by Ulster Museum ?", "Which museum exhibits artworks exhibited by Ulster Museum ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Ulster_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Hallwyl Museum ?", "What exhibits artworks exhibited by Hallwyl Museum ?", "Which museum exhibited artworks exhibited by Hallwyl Museum ?", "Which museum exhibits artworks exhibited by Hallwyl Museum ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Hallwyl_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Gemeentemuseum Den Haag ?", "What exhibits artworks exhibited by Gemeentemuseum Den Haag ?", "Which museum exhibited artworks exhibited by Gemeentemuseum Den Haag ?", "Which museum exhibits artworks exhibited by Gemeentemuseum Den Haag ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Gemeentemuseum_Den_Haag>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Menil Collection ?", "What exhibits artworks exhibited by Menil Collection ?", "Which museum exhibited artworks exhibited by Menil Collection ?", "Which museum exhibits artworks exhibited by Menil Collection ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Menil_Collection>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Städel ?", "What exhibits artworks exhibited by Städel ?", "Which museum exhibited artworks exhibited by Städel ?", "Which museum exhibits artworks exhibited by Städel ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Städel>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Lafayette Street (Manhattan) ?", "What exhibits artworks exhibited by Lafayette Street (Manhattan) ?", "Which museum exhibited artworks exhibited by Lafayette Street (Manhattan) ?", "Which museum exhibits artworks exhibited by Lafayette Street (Manhattan) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Lafayette_Street_(Manhattan)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Bletchley Park ?", "What exhibits artworks exhibited by Bletchley Park ?", "Which museum exhibited artworks exhibited by Bletchley Park ?", "Which museum exhibits artworks exhibited by Bletchley Park ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Bletchley_Park>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Delaware Art Museum ?", "What exhibits artworks exhibited by Delaware Art Museum ?", "Which museum exhibited artworks exhibited by Delaware Art Museum ?", "Which museum exhibits artworks exhibited by Delaware Art Museum ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Delaware_Art_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Delphi Archaeological Museum ?", "What exhibits artworks exhibited by Delphi Archaeological Museum ?", "Which museum exhibited artworks exhibited by Delphi Archaeological Museum ?", "Which museum exhibits artworks exhibited by Delphi Archaeological Museum ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Delphi_Archaeological_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Derby Museum and Art Gallery ?", "What exhibits artworks exhibited by Derby Museum and Art Gallery ?", "Which museum exhibited artworks exhibited by Derby Museum and Art Gallery ?", "Which museum exhibits artworks exhibited by Derby Museum and Art Gallery ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Derby_Museum_and_Art_Gallery>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Detroit Institute of Arts ?", "What exhibits artworks exhibited by Detroit Institute of Arts ?", "Which museum exhibited artworks exhibited by Detroit Institute of Arts ?", "Which museum exhibits artworks exhibited by Detroit Institute of Arts ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Detroit_Institute_of_Arts>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Golden Gate Park ?", "What exhibits artworks exhibited by Golden Gate Park ?", "Which museum exhibited artworks exhibited by Golden Gate Park ?", "Which museum exhibits artworks exhibited by Golden Gate Park ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Golden_Gate_Park>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Grandmaster's Palace (Valletta) ?", "What exhibits artworks exhibited by Grandmaster's Palace (Valletta) ?", "Which museum exhibited artworks exhibited by Grandmaster's Palace (Valletta) ?", "Which museum exhibits artworks exhibited by Grandmaster's Palace (Valletta) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Grandmaster's_Palace_(Valletta)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Kit Carson Park ?", "What exhibits artworks exhibited by Kit Carson Park ?", "Which museum exhibited artworks exhibited by Kit Carson Park ?", "Which museum exhibits artworks exhibited by Kit Carson Park ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Kit_Carson_Park>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Krannert Art Museum ?", "What exhibits artworks exhibited by Krannert Art Museum ?", "Which museum exhibited artworks exhibited by Krannert Art Museum ?", "Which museum exhibits artworks exhibited by Krannert Art Museum ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Krannert_Art_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Kröller-Müller Museum ?", "What exhibits artworks exhibited by Kröller-Müller Museum ?", "Which museum exhibited artworks exhibited by Kröller-Müller Museum ?", "Which museum exhibits artworks exhibited by Kröller-Müller Museum ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Kröller-Müller_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Princeton University Art Museum ?", "What exhibits artworks exhibited by Princeton University Art Museum ?", "Which museum exhibited artworks exhibited by Princeton University Art Museum ?", "Which museum exhibits artworks exhibited by Princeton University Art Museum ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Princeton_University_Art_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Kunstmuseum Basel ?", "What exhibits artworks exhibited by Kunstmuseum Basel ?", "Which museum exhibited artworks exhibited by Kunstmuseum Basel ?", "Which museum exhibits artworks exhibited by Kunstmuseum Basel ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Kunstmuseum_Basel>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Palazzo Pitti ?", "What exhibits artworks exhibited by Palazzo Pitti ?", "Which museum exhibited artworks exhibited by Palazzo Pitti ?", "Which museum exhibits artworks exhibited by Palazzo Pitti ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Palazzo_Pitti>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Lynden Sculpture Garden ?", "What exhibits artworks exhibited by Lynden Sculpture Garden ?", "Which museum exhibited artworks exhibited by Lynden Sculpture Garden ?", "Which museum exhibits artworks exhibited by Lynden Sculpture Garden ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Lynden_Sculpture_Garden>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by University of Maryland ?", "What exhibits artworks exhibited by University of Maryland ?", "Which museum exhibited artworks exhibited by University of Maryland ?", "Which museum exhibits artworks exhibited by University of Maryland ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/University_of_Maryland>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Albertina ?", "What exhibits artworks exhibited by Albertina ?", "Which museum exhibited artworks exhibited by Albertina ?", "Which museum exhibits artworks exhibited by Albertina ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Albertina>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Albright–Knox Art Gallery ?", "What exhibits artworks exhibited by Albright–Knox Art Gallery ?", "Which museum exhibited artworks exhibited by Albright–Knox Art Gallery ?", "Which museum exhibits artworks exhibited by Albright–Knox Art Gallery ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Albright–Knox_Art_Gallery>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Allen Memorial Art Museum ?", "What exhibits artworks exhibited by Allen Memorial Art Museum ?", "Which museum exhibited artworks exhibited by Allen Memorial Art Museum ?", "Which museum exhibits artworks exhibited by Allen Memorial Art Museum ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Allen_Memorial_Art_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Alnwick Castle ?", "What exhibits artworks exhibited by Alnwick Castle ?", "Which museum exhibited artworks exhibited by Alnwick Castle ?", "Which museum exhibits artworks exhibited by Alnwick Castle ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Alnwick_Castle>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Alte Nationalgalerie ?", "What exhibits artworks exhibited by Alte Nationalgalerie ?", "Which museum exhibited artworks exhibited by Alte Nationalgalerie ?", "Which museum exhibits artworks exhibited by Alte Nationalgalerie ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Alte_Nationalgalerie>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Alte Pinakothek ?", "What exhibits artworks exhibited by Alte Pinakothek ?", "Which museum exhibited artworks exhibited by Alte Pinakothek ?", "Which museum exhibits artworks exhibited by Alte Pinakothek ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Alte_Pinakothek>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Centro (Madrid) ?", "What exhibits artworks exhibited by Centro (Madrid) ?", "Which museum exhibited artworks exhibited by Centro (Madrid) ?", "Which museum exhibits artworks exhibited by Centro (Madrid) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Centro_(Madrid)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Chatsworth House ?", "What exhibits artworks exhibited by Chatsworth House ?", "Which museum exhibited artworks exhibited by Chatsworth House ?", "Which museum exhibits artworks exhibited by Chatsworth House ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Chatsworth_House>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Finland Station ?", "What exhibits artworks exhibited by Finland Station ?", "Which museum exhibited artworks exhibited by Finland Station ?", "Which museum exhibits artworks exhibited by Finland Station ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Finland_Station>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Fitzwilliam Museum ?", "What exhibits artworks exhibited by Fitzwilliam Museum ?", "Which museum exhibited artworks exhibited by Fitzwilliam Museum ?", "Which museum exhibits artworks exhibited by Fitzwilliam Museum ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Fitzwilliam_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Florence ?", "What exhibits artworks exhibited by Florence ?", "Which museum exhibited artworks exhibited by Florence ?", "Which museum exhibits artworks exhibited by Florence ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Florence>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Folger Shakespeare Library ?", "What exhibits artworks exhibited by Folger Shakespeare Library ?", "Which museum exhibited artworks exhibited by Folger Shakespeare Library ?", "Which museum exhibits artworks exhibited by Folger Shakespeare Library ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Folger_Shakespeare_Library>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Amon Carter Museum of American Art ?", "What exhibits artworks exhibited by Amon Carter Museum of American Art ?", "Which museum exhibited artworks exhibited by Amon Carter Museum of American Art ?", "Which museum exhibits artworks exhibited by Amon Carter Museum of American Art ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Amon_Carter_Museum_of_American_Art>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Norfolk Southern Tower ?", "What exhibits artworks exhibited by Norfolk Southern Tower ?", "Which museum exhibited artworks exhibited by Norfolk Southern Tower ?", "Which museum exhibits artworks exhibited by Norfolk Southern Tower ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Norfolk_Southern_Tower>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Norman Rockwell Museum ?", "What exhibits artworks exhibited by Norman Rockwell Museum ?", "Which museum exhibited artworks exhibited by Norman Rockwell Museum ?", "Which museum exhibits artworks exhibited by Norman Rockwell Museum ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Norman_Rockwell_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Norton Simon Museum ?", "What exhibits artworks exhibited by Norton Simon Museum ?", "Which museum exhibited artworks exhibited by Norton Simon Museum ?", "Which museum exhibits artworks exhibited by Norton Simon Museum ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Norton_Simon_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Norwich Castle ?", "What exhibits artworks exhibited by Norwich Castle ?", "Which museum exhibited artworks exhibited by Norwich Castle ?", "Which museum exhibits artworks exhibited by Norwich Castle ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Norwich_Castle>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Olana State Historic Site ?", "What exhibits artworks exhibited by Olana State Historic Site ?", "Which museum exhibited artworks exhibited by Olana State Historic Site ?", "Which museum exhibits artworks exhibited by Olana State Historic Site ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Olana_State_Historic_Site>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Gemäldegalerie, Berlin ?", "What exhibits artworks exhibited by Gemäldegalerie, Berlin ?", "Which museum exhibited artworks exhibited by Gemäldegalerie, Berlin ?", "Which museum exhibits artworks exhibited by Gemäldegalerie, Berlin ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Gemäldegalerie,_Berlin>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Gemäldegalerie Alte Meister ?", "What exhibits artworks exhibited by Gemäldegalerie Alte Meister ?", "Which museum exhibited artworks exhibited by Gemäldegalerie Alte Meister ?", "Which museum exhibits artworks exhibited by Gemäldegalerie Alte Meister ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Gemäldegalerie_Alte_Meister>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Museo de Málaga ?", "What exhibits artworks exhibited by Museo de Málaga ?", "Which museum exhibited artworks exhibited by Museo de Málaga ?", "Which museum exhibits artworks exhibited by Museo de Málaga ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Museo_de_Málaga>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Museo dell'Opera del Duomo (Florence) ?", "What exhibits artworks exhibited by Museo dell'Opera del Duomo (Florence) ?", "Which museum exhibited artworks exhibited by Museo dell'Opera del Duomo (Florence) ?", "Which museum exhibits artworks exhibited by Museo dell'Opera del Duomo (Florence) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Museo_dell'Opera_del_Duomo_(Florence)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by National Galleries of Scotland ?", "What exhibits artworks exhibited by National Galleries of Scotland ?", "Which museum exhibited artworks exhibited by National Galleries of Scotland ?", "Which museum exhibits artworks exhibited by National Galleries of Scotland ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/National_Galleries_of_Scotland>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by National Museums Liverpool ?", "What exhibits artworks exhibited by National Museums Liverpool ?", "Which museum exhibited artworks exhibited by National Museums Liverpool ?", "Which museum exhibits artworks exhibited by National Museums Liverpool ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/National_Museums_Liverpool>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Royal Museum of Fine Arts Antwerp ?", "What exhibits artworks exhibited by Royal Museum of Fine Arts Antwerp ?", "Which museum exhibited artworks exhibited by Royal Museum of Fine Arts Antwerp ?", "Which museum exhibits artworks exhibited by Royal Museum of Fine Arts Antwerp ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Royal_Museum_of_Fine_Arts_Antwerp>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Fundació Joan Miró ?", "What exhibits artworks exhibited by Fundació Joan Miró ?", "Which museum exhibited artworks exhibited by Fundació Joan Miró ?", "Which museum exhibits artworks exhibited by Fundació Joan Miró ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Fundació_Joan_Miró>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Russian Museum ?", "What exhibits artworks exhibited by Russian Museum ?", "Which museum exhibited artworks exhibited by Russian Museum ?", "Which museum exhibits artworks exhibited by Russian Museum ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Russian_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Scuola Grande di San Rocco ?", "What exhibits artworks exhibited by Scuola Grande di San Rocco ?", "Which museum exhibited artworks exhibited by Scuola Grande di San Rocco ?", "Which museum exhibits artworks exhibited by Scuola Grande di San Rocco ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Scuola_Grande_di_San_Rocco>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Getty Museum ?", "What exhibits artworks exhibited by Getty Museum ?", "Which museum exhibited artworks exhibited by Getty Museum ?", "Which museum exhibits artworks exhibited by Getty Museum ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Getty_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Australian Centre for Contemporary Art ?", "What exhibits artworks exhibited by Australian Centre for Contemporary Art ?", "Which museum exhibited artworks exhibited by Australian Centre for Contemporary Art ?", "Which museum exhibits artworks exhibited by Australian Centre for Contemporary Art ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Australian_Centre_for_Contemporary_Art>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Baltimore Museum of Art ?", "What exhibits artworks exhibited by Baltimore Museum of Art ?", "Which museum exhibited artworks exhibited by Baltimore Museum of Art ?", "Which museum exhibits artworks exhibited by Baltimore Museum of Art ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Baltimore_Museum_of_Art>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Barnes Foundation ?", "What exhibits artworks exhibited by Barnes Foundation ?", "Which museum exhibited artworks exhibited by Barnes Foundation ?", "Which museum exhibits artworks exhibited by Barnes Foundation ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Barnes_Foundation>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Basel ?", "What exhibits artworks exhibited by Basel ?", "Which museum exhibited artworks exhibited by Basel ?", "Which museum exhibits artworks exhibited by Basel ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Basel>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Accademia Carrara ?", "What exhibits artworks exhibited by Accademia Carrara ?", "Which museum exhibited artworks exhibited by Accademia Carrara ?", "Which museum exhibits artworks exhibited by Accademia Carrara ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Accademia_Carrara>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Art Gallery of South Australia ?", "What exhibits artworks exhibited by Art Gallery of South Australia ?", "Which museum exhibited artworks exhibited by Art Gallery of South Australia ?", "Which museum exhibits artworks exhibited by Art Gallery of South Australia ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Art_Gallery_of_South_Australia>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Albright-Knox Art Gallery ?", "What exhibits artworks exhibited by Albright-Knox Art Gallery ?", "Which museum exhibited artworks exhibited by Albright-Knox Art Gallery ?", "Which museum exhibits artworks exhibited by Albright-Knox Art Gallery ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Albright-Knox_Art_Gallery>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Alewife (MBTA station) ?", "What exhibits artworks exhibited by Alewife (MBTA station) ?", "Which museum exhibited artworks exhibited by Alewife (MBTA station) ?", "Which museum exhibits artworks exhibited by Alewife (MBTA station) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Alewife_(MBTA_station)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Beaverbrook Art Gallery ?", "What exhibits artworks exhibited by Beaverbrook Art Gallery ?", "Which museum exhibited artworks exhibited by Beaverbrook Art Gallery ?", "Which museum exhibits artworks exhibited by Beaverbrook Art Gallery ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Beaverbrook_Art_Gallery>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Lithuanian Art Museum ?", "What exhibits artworks exhibited by Lithuanian Art Museum ?", "Which museum exhibited artworks exhibited by Lithuanian Art Museum ?", "Which museum exhibits artworks exhibited by Lithuanian Art Museum ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Lithuanian_Art_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by London ?", "What exhibits artworks exhibited by London ?", "Which museum exhibited artworks exhibited by London ?", "Which museum exhibits artworks exhibited by London ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/London>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Los Angeles County Museum of Art ?", "What exhibits artworks exhibited by Los Angeles County Museum of Art ?", "Which museum exhibited artworks exhibited by Los Angeles County Museum of Art ?", "Which museum exhibits artworks exhibited by Los Angeles County Museum of Art ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Los_Angeles_County_Museum_of_Art>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Louisville Waterfront Park ?", "What exhibits artworks exhibited by Louisville Waterfront Park ?", "Which museum exhibited artworks exhibited by Louisville Waterfront Park ?", "Which museum exhibits artworks exhibited by Louisville Waterfront Park ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Louisville_Waterfront_Park>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Louvre ?", "What exhibits artworks exhibited by Louvre ?", "Which museum exhibited artworks exhibited by Louvre ?", "Which museum exhibits artworks exhibited by Louvre ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Louvre>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Munch Museum ?", "What exhibits artworks exhibited by Munch Museum ?", "Which museum exhibited artworks exhibited by Munch Museum ?", "Which museum exhibits artworks exhibited by Munch Museum ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Munch_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by North Carolina Museum of Art ?", "What exhibits artworks exhibited by North Carolina Museum of Art ?", "Which museum exhibited artworks exhibited by North Carolina Museum of Art ?", "Which museum exhibits artworks exhibited by North Carolina Museum of Art ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/North_Carolina_Museum_of_Art>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Milwaukee County Courthouse ?", "What exhibits artworks exhibited by Milwaukee County Courthouse ?", "Which museum exhibited artworks exhibited by Milwaukee County Courthouse ?", "Which museum exhibits artworks exhibited by Milwaukee County Courthouse ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Milwaukee_County_Courthouse>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Carcassonne ?", "What exhibits artworks exhibited by Carcassonne ?", "Which museum exhibited artworks exhibited by Carcassonne ?", "Which museum exhibits artworks exhibited by Carcassonne ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Carcassonne>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Carnegie Museum of Natural History ?", "What exhibits artworks exhibited by Carnegie Museum of Natural History ?", "Which museum exhibited artworks exhibited by Carnegie Museum of Natural History ?", "Which museum exhibits artworks exhibited by Carnegie Museum of Natural History ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Carnegie_Museum_of_Natural_History>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Chigi Chapel ?", "What exhibits artworks exhibited by Chigi Chapel ?", "Which museum exhibited artworks exhibited by Chigi Chapel ?", "Which museum exhibits artworks exhibited by Chigi Chapel ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Chigi_Chapel>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Church of Our Lady, Bruges ?", "What exhibits artworks exhibited by Church of Our Lady, Bruges ?", "Which museum exhibited artworks exhibited by Church of Our Lady, Bruges ?", "Which museum exhibits artworks exhibited by Church of Our Lady, Bruges ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Church_of_Our_Lady,_Bruges>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Château de Montsoreau-Museum of Contemporary Art ?", "What exhibits artworks exhibited by Château de Montsoreau-Museum of Contemporary Art ?", "Which museum exhibited artworks exhibited by Château de Montsoreau-Museum of Contemporary Art ?", "Which museum exhibits artworks exhibited by Château de Montsoreau-Museum of Contemporary Art ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Château_de_Montsoreau-Museum_of_Contemporary_Art>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Cincinnati Art Museum ?", "What exhibits artworks exhibited by Cincinnati Art Museum ?", "Which museum exhibited artworks exhibited by Cincinnati Art Museum ?", "Which museum exhibits artworks exhibited by Cincinnati Art Museum ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Cincinnati_Art_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Clark Art Institute ?", "What exhibits artworks exhibited by Clark Art Institute ?", "Which museum exhibited artworks exhibited by Clark Art Institute ?", "Which museum exhibits artworks exhibited by Clark Art Institute ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Clark_Art_Institute>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Cleveland Museum of Art ?", "What exhibits artworks exhibited by Cleveland Museum of Art ?", "Which museum exhibited artworks exhibited by Cleveland Museum of Art ?", "Which museum exhibits artworks exhibited by Cleveland Museum of Art ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Cleveland_Museum_of_Art>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Colgate University ?", "What exhibits artworks exhibited by Colgate University ?", "Which museum exhibited artworks exhibited by Colgate University ?", "Which museum exhibits artworks exhibited by Colgate University ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Colgate_University>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Gansu Provincial Museum ?", "What exhibits artworks exhibited by Gansu Provincial Museum ?", "Which museum exhibited artworks exhibited by Gansu Provincial Museum ?", "Which museum exhibits artworks exhibited by Gansu Provincial Museum ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Gansu_Provincial_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Georgia Tech ?", "What exhibits artworks exhibited by Georgia Tech ?", "Which museum exhibited artworks exhibited by Georgia Tech ?", "Which museum exhibits artworks exhibited by Georgia Tech ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Georgia_Tech>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Getty Center ?", "What exhibits artworks exhibited by Getty Center ?", "Which museum exhibited artworks exhibited by Getty Center ?", "Which museum exhibits artworks exhibited by Getty Center ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Getty_Center>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Gettysburg Museum and Visitor Center ?", "What exhibits artworks exhibited by Gettysburg Museum and Visitor Center ?", "Which museum exhibited artworks exhibited by Gettysburg Museum and Visitor Center ?", "Which museum exhibits artworks exhibited by Gettysburg Museum and Visitor Center ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Gettysburg_Museum_and_Visitor_Center>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Gettysburg National Military Park ?", "What exhibits artworks exhibited by Gettysburg National Military Park ?", "Which museum exhibited artworks exhibited by Gettysburg National Military Park ?", "Which museum exhibits artworks exhibited by Gettysburg National Military Park ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Gettysburg_National_Military_Park>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "What exhibited artworks exhibited by Gibbes Museum of Art ?", "What exhibits artworks exhibited by Gibbes Museum of Art ?", "Which museum exhibited artworks exhibited by Gibbes Museum of Art ?", "Which museum exhibits artworks exhibited by Gibbes Museum of Art ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Gibbes_Museum_of_Art>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Luke Macfarlane ?", "Who married fictional characters played by Luke Macfarlane ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Macfarlane>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Lynn Herring ?", "Who married fictional characters played by Lynn Herring ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynn_Herring>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Lysette Anthony ?", "Who married fictional characters played by Lysette Anthony ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lysette_Anthony>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Maggie Smith ?", "Who married fictional characters played by Maggie Smith ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Maggie_Smith>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Uta Hagen ?", "Who married fictional characters played by Uta Hagen ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Uta_Hagen>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Sara Woods ?", "Who married fictional characters played by Sara Woods ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sara_Woods>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Don Diamont ?", "Who married fictional characters played by Don Diamont ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Don_Diamont>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Don Hastings ?", "Who married fictional characters played by Don Hastings ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Don_Hastings>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Goran Višnjić ?", "Who married fictional characters played by Goran Višnjić ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Goran_Višnjić>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Krista Allen ?", "Who married fictional characters played by Krista Allen ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Krista_Allen>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Krista Tesreau ?", "Who married fictional characters played by Krista Tesreau ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Krista_Tesreau>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Kristen Alderson ?", "Who married fictional characters played by Kristen Alderson ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kristen_Alderson>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Prunella Scales ?", "Who married fictional characters played by Prunella Scales ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Prunella_Scales>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Alexander Beyer ?", "Who married fictional characters played by Alexander Beyer ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Alexander_Beyer>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Catherine O'Hara ?", "Who married fictional characters played by Catherine O'Hara ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Catherine_O'Hara>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Chad Michael Murray ?", "Who married fictional characters played by Chad Michael Murray ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Chad_Michael_Murray>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Noah Ringer ?", "Who married fictional characters played by Noah Ringer ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Noah_Ringer>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Okieriete Onaodowan ?", "Who married fictional characters played by Okieriete Onaodowan ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Okieriete_Onaodowan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Nathalie Kelley ?", "Who married fictional characters played by Nathalie Kelley ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Nathalie_Kelley>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Barbara Crampton ?", "Who married fictional characters played by Barbara Crampton ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Barbara_Crampton>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Barbara Hershey ?", "Who married fictional characters played by Barbara Hershey ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Barbara_Hershey>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Logan O'Brien ?", "Who married fictional characters played by Logan O'Brien ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Logan_O'Brien>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Calista Flockhart ?", "Who married fictional characters played by Calista Flockhart ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Calista_Flockhart>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Carolyn Jones ?", "Who married fictional characters played by Carolyn Jones ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Carolyn_Jones>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Chris Pratt ?", "Who married fictional characters played by Chris Pratt ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Chris_Pratt>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Christian Serratos ?", "Who married fictional characters played by Christian Serratos ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Christian_Serratos>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Clementine Ford ?", "Who married fictional characters played by Clementine Ford ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Clementine_Ford>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Jeanine Mason ?", "Who married fictional characters played by Jeanine Mason ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jeanine_Mason>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Jed Allan ?", "Who married fictional characters played by Jed Allan ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jed_Allan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Jennifer Garner ?", "Who married fictional characters played by Jennifer Garner ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jennifer_Garner>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Joan Van Ark ?", "Who married fictional characters played by Joan Van Ark ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Joan_Van_Ark>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Joey Luthman ?", "Who married fictional characters played by Joey Luthman ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Joey_Luthman>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by John Goodman ?", "Who married fictional characters played by John Goodman ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/John_Goodman>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by John J. York ?", "Who married fictional characters played by John J. York ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/John_J._York>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Bebe Neuwirth ?", "Who married fictional characters played by Bebe Neuwirth ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Bebe_Neuwirth>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Kareena Kapoor ?", "Who married fictional characters played by Kareena Kapoor ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kareena_Kapoor>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Kassie DePaiva ?", "Who married fictional characters played by Kassie DePaiva ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kassie_DePaiva>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Kathryn Hays ?", "Who married fictional characters played by Kathryn Hays ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kathryn_Hays>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Kathy Bates ?", "Who married fictional characters played by Kathy Bates ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kathy_Bates>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Kelly Kruger ?", "Who married fictional characters played by Kelly Kruger ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kelly_Kruger>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Lexi Ainsworth ?", "Who married fictional characters played by Lexi Ainsworth ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lexi_Ainsworth>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Linda Evans ?", "Who married fictional characters played by Linda Evans ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Linda_Evans>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Lindsay Wagner ?", "Who married fictional characters played by Lindsay Wagner ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lindsay_Wagner>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Lindsey Morgan ?", "Who married fictional characters played by Lindsey Morgan ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lindsey_Morgan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Lisa Rinna ?", "Who married fictional characters played by Lisa Rinna ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lisa_Rinna>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Teri Hatcher ?", "Who married fictional characters played by Teri Hatcher ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Teri_Hatcher>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Yvonne Strahovski ?", "Who married fictional characters played by Yvonne Strahovski ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Yvonne_Strahovski>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Kimberley Simms ?", "Who married fictional characters played by Kimberley Simms ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kimberley_Simms>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Michael Nader ?", "Who married fictional characters played by Michael Nader ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Michael_Nader>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Michaela Conlin ?", "Who married fictional characters played by Michaela Conlin ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Michaela_Conlin>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Russell Todd ?", "Who married fictional characters played by Russell Todd ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Russell_Todd>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Ryan Carnes ?", "Who married fictional characters played by Ryan Carnes ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ryan_Carnes>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Rachel Kimsey ?", "Who married fictional characters played by Rachel Kimsey ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Rachel_Kimsey>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Helen Faucit ?", "Who married fictional characters played by Helen Faucit ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Helen_Faucit>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Dragonball Evolution ?", "Who married fictional characters played by Dragonball Evolution ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Dragonball_Evolution>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Dylan Minnette ?", "Who married fictional characters played by Dylan Minnette ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Dylan_Minnette>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Frank Herbert's Children of Dune ?", "Who married fictional characters played by Frank Herbert's Children of Dune ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Frank_Herbert's_Children_of_Dune>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Guy Wilson (actor) ?", "Who married fictional characters played by Guy Wilson (actor) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Guy_Wilson_(actor)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Harold Warrender ?", "Who married fictional characters played by Harold Warrender ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Harold_Warrender>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Ian Carmichael ?", "Who married fictional characters played by Ian Carmichael ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ian_Carmichael>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Ian Somerhalder ?", "Who married fictional characters played by Ian Somerhalder ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ian_Somerhalder>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by James Patrick Stuart ?", "Who married fictional characters played by James Patrick Stuart ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/James_Patrick_Stuart>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Jason Behr ?", "Who married fictional characters played by Jason Behr ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jason_Behr>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Jayne Atkinson ?", "Who married fictional characters played by Jayne Atkinson ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jayne_Atkinson>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Sarah Jessica Parker ?", "Who married fictional characters played by Sarah Jessica Parker ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sarah_Jessica_Parker>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Sarah Siddons ?", "Who married fictional characters played by Sarah Siddons ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sarah_Siddons>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Sergei Bondarchuk ?", "Who married fictional characters played by Sergei Bondarchuk ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sergei_Bondarchuk>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Amy Brenneman ?", "Who married fictional characters played by Amy Brenneman ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Amy_Brenneman>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Ana Brenda Contreras ?", "Who married fictional characters played by Ana Brenda Contreras ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ana_Brenda_Contreras>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Andy Griffith ?", "Who married fictional characters played by Andy Griffith ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Andy_Griffith>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Angela Kinsey ?", "Who married fictional characters played by Angela Kinsey ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Angela_Kinsey>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Anjelica Huston ?", "Who married fictional characters played by Anjelica Huston ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Anjelica_Huston>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by AnnaSophia Robb ?", "Who married fictional characters played by AnnaSophia Robb ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/AnnaSophia_Robb>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Anthony Geary ?", "Who married fictional characters played by Anthony Geary ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Anthony_Geary>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Anthony George ?", "Who married fictional characters played by Anthony George ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Anthony_George>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Anthony Hopkins ?", "Who married fictional characters played by Anthony Hopkins ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Anthony_Hopkins>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Arianne Zucker ?", "Who married fictional characters played by Arianne Zucker ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Arianne_Zucker>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Arthur Darvill ?", "Who married fictional characters played by Arthur Darvill ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Arthur_Darvill>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Ashley Bashioum ?", "Who married fictional characters played by Ashley Bashioum ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ashley_Bashioum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Ashley Peldon ?", "Who married fictional characters played by Ashley Peldon ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ashley_Peldon>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Rhea Seehorn ?", "Who married fictional characters played by Rhea Seehorn ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Rhea_Seehorn>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Richard Burgi ?", "Who married fictional characters played by Richard Burgi ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Richard_Burgi>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Tessa Allen ?", "Who married fictional characters played by Tessa Allen ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Tessa_Allen>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by The Carrie Diaries (TV series) ?", "Who married fictional characters played by The Carrie Diaries (TV series) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/The_Carrie_Diaries_(TV_series)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Adrian Paul ?", "Who married fictional characters played by Adrian Paul ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Adrian_Paul>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Aidan Barton ?", "Who married fictional characters played by Aidan Barton ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Aidan_Barton>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Brooke Shields ?", "Who married fictional characters played by Brooke Shields ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Brooke_Shields>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Bryton James ?", "Who married fictional characters played by Bryton James ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Bryton_James>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Kyle Lowder ?", "Who married fictional characters played by Kyle Lowder ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kyle_Lowder>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Lara Parker ?", "Who married fictional characters played by Lara Parker ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lara_Parker>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Laura Allen ?", "Who married fictional characters played by Laura Allen ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Laura_Allen>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Laura Michelle Kelly ?", "Who married fictional characters played by Laura Michelle Kelly ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Laura_Michelle_Kelly>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Leah Remini ?", "Who married fictional characters played by Leah Remini ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Leah_Remini>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by The Star Wars Holiday Special ?", "Who married fictional characters played by The Star Wars Holiday Special ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/The_Star_Wars_Holiday_Special>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Dan Gauthier ?", "Who married fictional characters played by Dan Gauthier ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Dan_Gauthier>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Daniel Olbrychski ?", "Who married fictional characters played by Daniel Olbrychski ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Daniel_Olbrychski>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Daniella Alonso ?", "Who married fictional characters played by Daniella Alonso ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Daniella_Alonso>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Daryl Hannah ?", "Who married fictional characters played by Daryl Hannah ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Daryl_Hannah>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by Dave Malloy ?", "Who married fictional characters played by Dave Malloy ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Dave_Malloy>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married fictional characters played by David Boreanaz ?", "Who married fictional characters played by David Boreanaz ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/David_Boreanaz>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Luana Patten ?", "Who married persons married to Luana Patten ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luana_Patten> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Luc Leestemaker ?", "Who married persons married to Luc Leestemaker ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luc_Leestemaker> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Luca Zingaretti ?", "Who married persons married to Luca Zingaretti ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luca_Zingaretti> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Lucia Bosè ?", "Who married persons married to Lucia Bosè ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucia_Bosè> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Lucia Moholy ?", "Who married persons married to Lucia Moholy ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucia_Moholy> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Lucilla ?", "Who married persons married to Lucilla ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucilla> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Lucius Verus ?", "Who married persons married to Lucius Verus ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucius_Verus> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Lucy Turnbull ?", "Who married persons married to Lucy Turnbull ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucy_Turnbull> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Lucé Vela ?", "Who married persons married to Lucé Vela ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucé_Vela> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Ludovico III Gonzaga, Marquis of Mantua ?", "Who married persons married to Ludovico III Gonzaga, Marquis of Mantua ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludovico_III_Gonzaga,_Marquis_of_Mantua> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Ludu Daw Amar ?", "Who married persons married to Ludu Daw Amar ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludu_Daw_Amar> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Ludu U Hla ?", "Who married persons married to Ludu U Hla ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludu_U_Hla> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Luis Fortuño ?", "Who married persons married to Luis Fortuño ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luis_Fortuño> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Luisa Ranieri ?", "Who married persons married to Luisa Ranieri ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luisa_Ranieri> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Lysette Anthony ?", "Who married persons married to Lysette Anthony ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lysette_Anthony> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to László Moholy-Nagy ?", "Who married persons married to László Moholy-Nagy ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/László_Moholy-Nagy> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to M. N. Rajam ?", "Who married persons married to M. N. Rajam ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/M._N._Rajam> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Mae West ?", "Who married persons married to Mae West ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mae_West> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Magdalena Graaf ?", "Who married persons married to Magdalena Graaf ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Magdalena_Graaf> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Malcolm Turnbull ?", "Who married persons married to Malcolm Turnbull ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Malcolm_Turnbull> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Cornelia Elgood ?", "Who married persons married to Cornelia Elgood ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cornelia_Elgood> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to V. N. Janaki ?", "Who married persons married to V. N. Janaki ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/V._N._Janaki> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Valeriy Borzov ?", "Who married persons married to Valeriy Borzov ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Valeriy_Borzov> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Vantile Whitfield ?", "Who married persons married to Vantile Whitfield ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Vantile_Whitfield> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Vere Harmsworth, 3rd Viscount Rothermere ?", "Who married persons married to Vere Harmsworth, 3rd Viscount Rothermere ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Vere_Harmsworth,_3rd_Viscount_Rothermere> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to List of Queer as Folk characters ?", "Who married persons married to List of Queer as Folk characters ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/List_of_Queer_as_Folk_characters> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to R. Bindu ?", "Who married persons married to R. Bindu ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/R._Bindu> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Marie Say ?", "Who married persons married to Marie Say ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Marie_Say> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Marieme Faye Sall ?", "Who married persons married to Marieme Faye Sall ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Marieme_Faye_Sall> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Peyton Sawyer ?", "Who married persons married to Peyton Sawyer ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Peyton_Sawyer> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to George Grierson (printer) ?", "Who married persons married to George Grierson (printer) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/George_Grierson_(printer)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Margaret of Foix-Candale ?", "Who married persons married to Margaret of Foix-Candale ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Margaret_of_Foix-Candale> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Thomas Hassan ?", "Who married persons married to Thomas Hassan ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Thomas_Hassan> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Hyman B. Samuels ?", "Who married persons married to Hyman B. Samuels ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hyman_B._Samuels> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Suriyothai ?", "Who married persons married to Suriyothai ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Suriyothai> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Manuel Sadosky ?", "Who married persons married to Manuel Sadosky ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Manuel_Sadosky> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Blanche of Namur ?", "Who married persons married to Blanche of Namur ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Blanche_of_Namur> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Bořivoj I, Duke of Bohemia ?", "Who married persons married to Bořivoj I, Duke of Bohemia ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bořivoj_I,_Duke_of_Bohemia> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Deirdre O'Connell ?", "Who married persons married to Deirdre O'Connell ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Deirdre_O'Connell> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Desha Breckinridge ?", "Who married persons married to Desha Breckinridge ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Desha_Breckinridge> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Desmond FitzGerald (politician) ?", "Who married persons married to Desmond FitzGerald (politician) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Diahann Carroll ?", "Who married persons married to Diahann Carroll ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Diahann_Carroll> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Dick Cheney ?", "Who married persons married to Dick Cheney ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dick_Cheney> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Dock J. Jordan ?", "Who married persons married to Dock J. Jordan ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dock_J._Jordan> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Gladys McConnell ?", "Who married persons married to Gladys McConnell ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gladys_McConnell> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Gladys Vanderbilt Széchenyi ?", "Who married persons married to Gladys Vanderbilt Széchenyi ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gladys_Vanderbilt_Széchenyi> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Gloria Carrá ?", "Who married persons married to Gloria Carrá ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gloria_Carrá> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Greg Penner ?", "Who married persons married to Greg Penner ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Greg_Penner> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Grigori Aleksandrov ?", "Who married persons married to Grigori Aleksandrov ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Grigori_Aleksandrov> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Gu Yong ?", "Who married persons married to Gu Yong ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gu_Yong> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Kevin Seal ?", "Who married persons married to Kevin Seal ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kevin_Seal> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Khalida Safarova ?", "Who married persons married to Khalida Safarova ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Khalida_Safarova> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Khan Ataur Rahman ?", "Who married persons married to Khan Ataur Rahman ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Khan_Ataur_Rahman> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Kim Hunter ?", "Who married persons married to Kim Hunter ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kim_Hunter> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Kishore Kumar ?", "Who married persons married to Kishore Kumar ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kishore_Kumar> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Koji Yamamoto (actor) ?", "Who married persons married to Koji Yamamoto (actor) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Koji_Yamamoto_(actor)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Kothamangalam Subbu ?", "Who married persons married to Kothamangalam Subbu ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kothamangalam_Subbu> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Kristine Miller ?", "Who married persons married to Kristine Miller ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kristine_Miller> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Prince Sahle Selassie ?", "Who married persons married to Prince Sahle Selassie ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Prince_Sahle_Selassie> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Prince Xavier of Bourbon-Parma ?", "Who married persons married to Prince Xavier of Bourbon-Parma ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Prince_Xavier_of_Bourbon-Parma> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Puranmal ?", "Who married persons married to Puranmal ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Puranmal> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Quang Trung ?", "Who married persons married to Quang Trung ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Quang_Trung> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Queen Ratna of Nepal ?", "Who married persons married to Queen Ratna of Nepal ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Queen_Ratna_of_Nepal> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Queen Wonchang ?", "Who married persons married to Queen Wonchang ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Queen_Wonchang> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Quinn Martin ?", "Who married persons married to Quinn Martin ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Quinn_Martin> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Rachel Miner ?", "Who married persons married to Rachel Miner ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rachel_Miner> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Rachel Portman ?", "Who married persons married to Rachel Portman ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rachel_Portman> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Ragnheiður Melsteð ?", "Who married persons married to Ragnheiður Melsteð ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ragnheiður_Melsteð> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Howard F. Ahmanson Sr. ?", "Who married persons married to Howard F. Ahmanson Sr. ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Howard_F._Ahmanson_Sr.> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Julia the Younger ?", "Who married persons married to Julia the Younger ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Julia_the_Younger> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Richard Lane (writer) ?", "Who married persons married to Richard Lane (writer) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Richard_Lane_(writer)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to James II of Cyprus ?", "Who married persons married to James II of Cyprus ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/James_II_of_Cyprus> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Phoebe Halliwell ?", "Who married persons married to Phoebe Halliwell ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Phoebe_Halliwell> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to J. T. Hellstrom ?", "Who married persons married to J. T. Hellstrom ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/J._T._Hellstrom> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Shizuko Hoshi ?", "Who married persons married to Shizuko Hoshi ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Shizuko_Hoshi> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Alan Halsall ?", "Who married persons married to Alan Halsall ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alan_Halsall> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Alan Quartermaine (General Hospital) ?", "Who married persons married to Alan Quartermaine (General Hospital) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alan_Quartermaine_(General_Hospital)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Albert Parsons ?", "Who married persons married to Albert Parsons ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Albert_Parsons> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Albert S. Ruddy ?", "Who married persons married to Albert S. Ruddy ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Albert_S._Ruddy> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Alex O'Loughlin ?", "Who married persons married to Alex O'Loughlin ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alex_O'Loughlin> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Alexander Godunov ?", "Who married persons married to Alexander Godunov ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alexander_Godunov> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Alexander Wells (California judge) ?", "Who married persons married to Alexander Wells (California judge) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alexander_Wells_(California_judge)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Alexandre de Lesseps ?", "Who married persons married to Alexandre de Lesseps ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alexandre_de_Lesseps> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Alexandrine de Bleschamp ?", "Who married persons married to Alexandrine de Bleschamp ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alexandrine_de_Bleschamp> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Alfonso I d'Este, Duke of Ferrara ?", "Who married persons married to Alfonso I d'Este, Duke of Ferrara ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alfonso_I_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Alfonso of Aragon (1481–1500) ?", "Who married persons married to Alfonso of Aragon (1481–1500) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alfonso_of_Aragon_(1481–1500)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Alfred Lunt ?", "Who married persons married to Alfred Lunt ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alfred_Lunt> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Alistair Petrie ?", "Who married persons married to Alistair Petrie ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alistair_Petrie> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Allan Edwall ?", "Who married persons married to Allan Edwall ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Allan_Edwall> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Allen Paulson ?", "Who married persons married to Allen Paulson ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Allen_Paulson> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Allen Tate ?", "Who married persons married to Allen Tate ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Allen_Tate> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Cathal Goan ?", "Who married persons married to Cathal Goan ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cathal_Goan> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Chamlong Srimuang ?", "Who married persons married to Chamlong Srimuang ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chamlong_Srimuang> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Charles, Count of Valois ?", "Who married persons married to Charles, Count of Valois ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charles,_Count_of_Valois> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Charles Howard, 1st Earl of Nottingham ?", "Who married persons married to Charles Howard, 1st Earl of Nottingham ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charles_Howard,_1st_Earl_of_Nottingham> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Charles Hulme ?", "Who married persons married to Charles Hulme ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charles_Hulme> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Charles III Philip, Elector Palatine ?", "Who married persons married to Charles III Philip, Elector Palatine ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charles_III_Philip,_Elector_Palatine> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Charles III William, Margrave of Baden-Durlach ?", "Who married persons married to Charles III William, Margrave of Baden-Durlach ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charles_III_William,_Margrave_of_Baden-Durlach> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Charles Townshend ?", "Who married persons married to Charles Townshend ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charles_Townshend> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons married to Charlton Heston ?", "Who married persons married to Charlton Heston ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charlton_Heston> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in A.D.O.R. ?", "Who married persons born in A.D.O.R. ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A.D.O.R.> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in A.L. Monsohn Lithography ?", "Who married persons born in A.L. Monsohn Lithography ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A.L._Monsohn_Lithography> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in A. A. Khan (academic) ?", "Who married persons born in A. A. Khan (academic) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A._A._Khan_(academic)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in A. B. Lull ?", "Who married persons born in A. B. Lull ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A._B._Lull> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in A. C. Shanmugam ?", "Who married persons born in A. C. Shanmugam ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A._C._Shanmugam> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in A. C. Wise ?", "Who married persons born in A. C. Wise ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A._C._Wise> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in A. G. K. Gokhale ?", "Who married persons born in A. G. K. Gokhale ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A._G._K._Gokhale> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in A. Ganeshkumar ?", "Who married persons born in A. Ganeshkumar ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A._Ganeshkumar> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in A. J. Benza ?", "Who married persons born in A. J. Benza ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A._J._Benza> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in A. J. Bernheim Brush ?", "Who married persons born in A. J. Bernheim Brush ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A._J._Bernheim_Brush> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in A. Johnkumar ?", "Who married persons born in A. Johnkumar ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A._Johnkumar> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in A. K. Narain ?", "Who married persons born in A. K. Narain ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A._K._Narain> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in A. M. Mathai ?", "Who married persons born in A. M. Mathai ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A._M._Mathai> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in A. N. Gopal ?", "Who married persons born in A. N. Gopal ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A._N._Gopal> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in A. Rajagopal ?", "Who married persons born in A. Rajagopal ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A._Rajagopal> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in A. Ranganadha Rao ?", "Who married persons born in A. Ranganadha Rao ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A._Ranganadha_Rao> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in A. Sheriff ?", "Who married persons born in A. Sheriff ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A._Sheriff> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in A. T. Smith ?", "Who married persons born in A. T. Smith ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A._T._Smith> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in A. V. Gurava Reddy ?", "Who married persons born in A. V. Gurava Reddy ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A._V._Gurava_Reddy> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in A. Wess Mitchell ?", "Who married persons born in A. Wess Mitchell ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A._Wess_Mitchell> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Love Ablish ?", "Who married persons born in Love Ablish ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Love_Ablish> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lovebug Starski ?", "Who married persons born in Lovebug Starski ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lovebug_Starski> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Loveleen Kaur Sasan ?", "Who married persons born in Loveleen Kaur Sasan ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Loveleen_Kaur_Sasan> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lovemore Majaivana ?", "Who married persons born in Lovemore Majaivana ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lovemore_Majaivana> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lovemore Moyo ?", "Who married persons born in Lovemore Moyo ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lovemore_Moyo> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lovepreet Singh ?", "Who married persons born in Lovepreet Singh ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lovepreet_Singh> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lovie Simone ?", "Who married persons born in Lovie Simone ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lovie_Simone> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Low Ki ?", "Who married persons born in Low Ki ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Low_Ki> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lowell A. Reed Jr. ?", "Who married persons born in Lowell A. Reed Jr. ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lowell_A._Reed_Jr.> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lowell Bergman ?", "Who married persons born in Lowell Bergman ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lowell_Bergman> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lowell Blair Nesbitt ?", "Who married persons born in Lowell Blair Nesbitt ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lowell_Blair_Nesbitt> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lowell Ganz ?", "Who married persons born in Lowell Ganz ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lowell_Ganz> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lowell George ?", "Who married persons born in Lowell George ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lowell_George> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lowell Green ?", "Who married persons born in Lowell Green ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lowell_Green> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lowell McAdam ?", "Who married persons born in Lowell McAdam ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lowell_McAdam> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lowell Norland ?", "Who married persons born in Lowell Norland ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lowell_Norland> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lowell Thomas ?", "Who married persons born in Lowell Thomas ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lowell_Thomas> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Loyal Blaine Aldrich ?", "Who married persons born in Loyal Blaine Aldrich ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Loyal_Blaine_Aldrich> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Loyce W. Turner ?", "Who married persons born in Loyce W. Turner ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Loyce_W._Turner> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Loyd Gentry Jr. ?", "Who married persons born in Loyd Gentry Jr. ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Loyd_Gentry_Jr.> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Loyd Grossman ?", "Who married persons born in Loyd Grossman ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Loyd_Grossman> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Loyd Lewis ?", "Who married persons born in Loyd Lewis ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Loyd_Lewis> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Loïc Dufau ?", "Who married persons born in Loïc Dufau ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Loïc_Dufau> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Loïc Meillard ?", "Who married persons born in Loïc Meillard ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Loïc_Meillard> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in LuAnn Tafoya ?", "Who married persons born in LuAnn Tafoya ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/LuAnn_Tafoya> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luana Anders ?", "Who married persons born in Luana Anders ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luana_Anders> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luana Bühler ?", "Who married persons born in Luana Bühler ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luana_Bühler> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luba (singer) ?", "Who married persons born in Luba (singer) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luba_(singer)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luc-Normand Tellier ?", "Who married persons born in Luc-Normand Tellier ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luc-Normand_Tellier> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luc Beausoleil ?", "Who married persons born in Luc Beausoleil ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luc_Beausoleil> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luc Borrelli ?", "Who married persons born in Luc Borrelli ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luc_Borrelli> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luc Cartillier ?", "Who married persons born in Luc Cartillier ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luc_Cartillier> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luc Chatel ?", "Who married persons born in Luc Chatel ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luc_Chatel> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luc Lafortune ?", "Who married persons born in Luc Lafortune ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luc_Lafortune> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luc Poirier ?", "Who married persons born in Luc Poirier ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luc_Poirier> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luc Robitaille ?", "Who married persons born in Luc Robitaille ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luc_Robitaille> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luc Rocheleau ?", "Who married persons born in Luc Rocheleau ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luc_Rocheleau> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luc Salvas ?", "Who married persons born in Luc Salvas ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luc_Salvas> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luc Thériault ?", "Who married persons born in Luc Thériault ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luc_Thériault> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luc Vinet ?", "Who married persons born in Luc Vinet ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luc_Vinet> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luca Aerni ?", "Who married persons born in Luca Aerni ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luca_Aerni> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luca Caputi ?", "Who married persons born in Luca Caputi ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luca_Caputi> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luca Cereda ?", "Who married persons born in Luca Cereda ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luca_Cereda> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luca Denicolà ?", "Who married persons born in Luca Denicolà ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luca_Denicolà> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luca Fazzini ?", "Who married persons born in Luca Fazzini ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luca_Fazzini> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luca Forte (footballer) ?", "Who married persons born in Luca Forte (footballer) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luca_Forte_(footballer)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luca Hollenstein ?", "Who married persons born in Luca Hollenstein ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luca_Hollenstein> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luca Hänni ?", "Who married persons born in Luca Hänni ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luca_Hänni> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luca Ladner ?", "Who married persons born in Luca Ladner ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luca_Ladner> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luca Lewis ?", "Who married persons born in Luca Lewis ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luca_Lewis> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luca Petrasso ?", "Who married persons born in Luca Petrasso ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luca_Petrasso> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luca Turilli ?", "Who married persons born in Luca Turilli ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luca_Turilli> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luca Zidane ?", "Who married persons born in Luca Zidane ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luca_Zidane> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Luca de la Torre ?", "Who married persons born in Luca de la Torre ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luca_de_la_Torre> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lucas Arzán ?", "Who married persons born in Lucas Arzán ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_Arzán> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lucas Auer ?", "Who married persons born in Lucas Auer ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_Auer> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lucas Brunner ?", "Who married persons born in Lucas Brunner ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_Brunner> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lucas Cavallini ?", "Who married persons born in Lucas Cavallini ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_Cavallini> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lucas De Rossi ?", "Who married persons born in Lucas De Rossi ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_De_Rossi> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lucas Eberle ?", "Who married persons born in Lucas Eberle ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_Eberle> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lucas Elliot Eberl ?", "Who married persons born in Lucas Elliot Eberl ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_Elliot_Eberl> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lucas Giolito ?", "Who married persons born in Lucas Giolito ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_Giolito> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lucas Hernandez ?", "Who married persons born in Lucas Hernandez ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_Hernandez> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lucas Martin ?", "Who married persons born in Lucas Martin ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_Martin> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lucas Perrin ?", "Who married persons born in Lucas Perrin ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_Perrin> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lucas Prata ?", "Who married persons born in Lucas Prata ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_Prata> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lucas Rastello ?", "Who married persons born in Lucas Rastello ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_Rastello> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lucas Reiner ?", "Who married persons born in Lucas Reiner ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_Reiner> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lucas Till ?", "Who married persons born in Lucas Till ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_Till> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lucia Romanov-Stark ?", "Who married persons born in Lucia Romanov-Stark ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucia_Romanov-Stark> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lucia Toader ?", "Who married persons born in Lucia Toader ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucia_Toader> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lucian Asanache ?", "Who married persons born in Lucian Asanache ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucian_Asanache> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lucian Blaga ?", "Who married persons born in Lucian Blaga ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucian_Blaga> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lucian Boia ?", "Who married persons born in Lucian Boia ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucian_Boia> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lucian Bot ?", "Who married persons born in Lucian Bot ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucian_Bot> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lucian Bratu ?", "Who married persons born in Lucian Bratu ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucian_Bratu> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lucian Burchel ?", "Who married persons born in Lucian Burchel ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucian_Burchel> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lucian Burdujan ?", "Who married persons born in Lucian Burdujan ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucian_Burdujan> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lucian Bute ?", "Who married persons born in Lucian Bute ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucian_Bute> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in Lucian Buzan ?", "Who married persons born in Lucian Buzan ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucian_Buzan> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Lynn Herring ?", "Which person plays fictional characters played by Lynn Herring ?", "Who played fictional characters played by Lynn Herring ?", "Who plays fictional characters played by Lynn Herring ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynn_Herring>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Madelaine Petsch ?", "Which person plays fictional characters played by Madelaine Petsch ?", "Who played fictional characters played by Madelaine Petsch ?", "Who plays fictional characters played by Madelaine Petsch ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madelaine_Petsch>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Maggie Q ?", "Which person plays fictional characters played by Maggie Q ?", "Who played fictional characters played by Maggie Q ?", "Who plays fictional characters played by Maggie Q ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Maggie_Q>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Maleficent (film) ?", "Which person plays fictional characters played by Maleficent (film) ?", "Who played fictional characters played by Maleficent (film) ?", "Who plays fictional characters played by Maleficent (film) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Maleficent_(film)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Carrie Southworth ?", "Which person plays fictional characters played by Carrie Southworth ?", "Who played fictional characters played by Carrie Southworth ?", "Who plays fictional characters played by Carrie Southworth ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Carrie_Southworth>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Van Hansis ?", "Which person plays fictional characters played by Van Hansis ?", "Who played fictional characters played by Van Hansis ?", "Who plays fictional characters played by Van Hansis ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Van_Hansis>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Vanessa A. Williams ?", "Which person plays fictional characters played by Vanessa A. Williams ?", "Who played fictional characters played by Vanessa A. Williams ?", "Who plays fictional characters played by Vanessa A. Williams ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Vanessa_A._Williams>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Sara Woods ?", "Which person plays fictional characters played by Sara Woods ?", "Who played fictional characters played by Sara Woods ?", "Who plays fictional characters played by Sara Woods ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sara_Woods>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Pippa Guard ?", "Which person plays fictional characters played by Pippa Guard ?", "Who played fictional characters played by Pippa Guard ?", "Who plays fictional characters played by Pippa Guard ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Pippa_Guard>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Blake Berris ?", "Which person plays fictional characters played by Blake Berris ?", "Who played fictional characters played by Blake Berris ?", "Who plays fictional characters played by Blake Berris ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Blake_Berris>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Bobbie Eakes ?", "Which person plays fictional characters played by Bobbie Eakes ?", "Who played fictional characters played by Bobbie Eakes ?", "Who plays fictional characters played by Bobbie Eakes ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Bobbie_Eakes>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Bradford Anderson ?", "Which person plays fictional characters played by Bradford Anderson ?", "Who played fictional characters played by Bradford Anderson ?", "Who plays fictional characters played by Bradford Anderson ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Bradford_Anderson>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Descendants (2015 film) ?", "Which person plays fictional characters played by Descendants (2015 film) ?", "Who played fictional characters played by Descendants (2015 film) ?", "Who plays fictional characters played by Descendants (2015 film) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Descendants_(2015_film)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Diane Neal ?", "Which person plays fictional characters played by Diane Neal ?", "Who played fictional characters played by Diane Neal ?", "Who plays fictional characters played by Diane Neal ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Diane_Neal>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Diane Sommerfield ?", "Which person plays fictional characters played by Diane Sommerfield ?", "Who played fictional characters played by Diane Sommerfield ?", "Who plays fictional characters played by Diane Sommerfield ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Diane_Sommerfield>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Diego Luna ?", "Which person plays fictional characters played by Diego Luna ?", "Who played fictional characters played by Diego Luna ?", "Who plays fictional characters played by Diego Luna ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Diego_Luna>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Don Gilet ?", "Which person plays fictional characters played by Don Gilet ?", "Who played fictional characters played by Don Gilet ?", "Who plays fictional characters played by Don Gilet ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Don_Gilet>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Andy Umberger ?", "Which person plays fictional characters played by Andy Umberger ?", "Who played fictional characters played by Andy Umberger ?", "Who plays fictional characters played by Andy Umberger ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Andy_Umberger>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Goran Višnjić ?", "Which person plays fictional characters played by Goran Višnjić ?", "Who played fictional characters played by Goran Višnjić ?", "Who plays fictional characters played by Goran Višnjić ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Goran_Višnjić>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Greg Vaughan ?", "Which person plays fictional characters played by Greg Vaughan ?", "Who played fictional characters played by Greg Vaughan ?", "Who plays fictional characters played by Greg Vaughan ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Greg_Vaughan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Kestie Morassi ?", "Which person plays fictional characters played by Kestie Morassi ?", "Who played fictional characters played by Kestie Morassi ?", "Who plays fictional characters played by Kestie Morassi ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kestie_Morassi>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Kevin Kennedy (actor) ?", "Which person plays fictional characters played by Kevin Kennedy (actor) ?", "Who played fictional characters played by Kevin Kennedy (actor) ?", "Who plays fictional characters played by Kevin Kennedy (actor) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kevin_Kennedy_(actor)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Kristen Bell ?", "Which person plays fictional characters played by Kristen Bell ?", "Who played fictional characters played by Kristen Bell ?", "Who plays fictional characters played by Kristen Bell ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kristen_Bell>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Kristin Chenoweth ?", "Which person plays fictional characters played by Kristin Chenoweth ?", "Who played fictional characters played by Kristin Chenoweth ?", "Who plays fictional characters played by Kristin Chenoweth ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kristin_Chenoweth>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Kristine Sutherland ?", "Which person plays fictional characters played by Kristine Sutherland ?", "Who played fictional characters played by Kristine Sutherland ?", "Who plays fictional characters played by Kristine Sutherland ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kristine_Sutherland>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Queen Latifah ?", "Which person plays fictional characters played by Queen Latifah ?", "Who played fictional characters played by Queen Latifah ?", "Who plays fictional characters played by Queen Latifah ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Queen_Latifah>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Ralph Fiennes ?", "Which person plays fictional characters played by Ralph Fiennes ?", "Who played fictional characters played by Ralph Fiennes ?", "Who plays fictional characters played by Ralph Fiennes ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ralph_Fiennes>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Alex Walkinshaw ?", "Which person plays fictional characters played by Alex Walkinshaw ?", "Who played fictional characters played by Alex Walkinshaw ?", "Who plays fictional characters played by Alex Walkinshaw ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Alex_Walkinshaw>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Alexandra Chando ?", "Which person plays fictional characters played by Alexandra Chando ?", "Who played fictional characters played by Alexandra Chando ?", "Who plays fictional characters played by Alexandra Chando ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Alexandra_Chando>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Catherine Bach ?", "Which person plays fictional characters played by Catherine Bach ?", "Who played fictional characters played by Catherine Bach ?", "Who plays fictional characters played by Catherine Bach ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Catherine_Bach>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Catrin Stewart ?", "Which person plays fictional characters played by Catrin Stewart ?", "Who played fictional characters played by Catrin Stewart ?", "Who plays fictional characters played by Catrin Stewart ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Catrin_Stewart>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Chad Michael Murray ?", "Which person plays fictional characters played by Chad Michael Murray ?", "Who played fictional characters played by Chad Michael Murray ?", "Who plays fictional characters played by Chad Michael Murray ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Chad_Michael_Murray>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Charisma Carpenter ?", "Which person plays fictional characters played by Charisma Carpenter ?", "Who played fictional characters played by Charisma Carpenter ?", "Who plays fictional characters played by Charisma Carpenter ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Charisma_Carpenter>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Charles Gray (actor) ?", "Which person plays fictional characters played by Charles Gray (actor) ?", "Who played fictional characters played by Charles Gray (actor) ?", "Who plays fictional characters played by Charles Gray (actor) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Charles_Gray_(actor)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Cheryl Blossom ?", "Which person plays fictional characters played by Cheryl Blossom ?", "Who played fictional characters played by Cheryl Blossom ?", "Who plays fictional characters played by Cheryl Blossom ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Cheryl_Blossom>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Nina Arvesen ?", "Which person plays fictional characters played by Nina Arvesen ?", "Who played fictional characters played by Nina Arvesen ?", "Who plays fictional characters played by Nina Arvesen ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Nina_Arvesen>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Noah Hathaway ?", "Which person plays fictional characters played by Noah Hathaway ?", "Who played fictional characters played by Noah Hathaway ?", "Who plays fictional characters played by Noah Hathaway ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Noah_Hathaway>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Noni Ioannidou ?", "Which person plays fictional characters played by Noni Ioannidou ?", "Who played fictional characters played by Noni Ioannidou ?", "Who plays fictional characters played by Noni Ioannidou ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Noni_Ioannidou>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Kohji Moritsugu ?", "Which person plays fictional characters played by Kohji Moritsugu ?", "Who played fictional characters played by Kohji Moritsugu ?", "Who plays fictional characters played by Kohji Moritsugu ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kohji_Moritsugu>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Azura Skye ?", "Which person plays fictional characters played by Azura Skye ?", "Who played fictional characters played by Azura Skye ?", "Who plays fictional characters played by Azura Skye ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Azura_Skye>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Logan O'Brien ?", "Which person plays fictional characters played by Logan O'Brien ?", "Who played fictional characters played by Logan O'Brien ?", "Who plays fictional characters played by Logan O'Brien ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Logan_O'Brien>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Lois Wilson (actress) ?", "Which person plays fictional characters played by Lois Wilson (actress) ?", "Who played fictional characters played by Lois Wilson (actress) ?", "Who plays fictional characters played by Lois Wilson (actress) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lois_Wilson_(actress)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Camila Mendes ?", "Which person plays fictional characters played by Camila Mendes ?", "Who played fictional characters played by Camila Mendes ?", "Who plays fictional characters played by Camila Mendes ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Camila_Mendes>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Carel Struycken ?", "Which person plays fictional characters played by Carel Struycken ?", "Who played fictional characters played by Carel Struycken ?", "Who plays fictional characters played by Carel Struycken ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Carel_Struycken>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Carey Mulligan ?", "Which person plays fictional characters played by Carey Mulligan ?", "Who played fictional characters played by Carey Mulligan ?", "Who plays fictional characters played by Carey Mulligan ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Carey_Mulligan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Chloë Grace Moretz ?", "Which person plays fictional characters played by Chloë Grace Moretz ?", "Who played fictional characters played by Chloë Grace Moretz ?", "Who plays fictional characters played by Chloë Grace Moretz ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Chloë_Grace_Moretz>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Christoph Waltz ?", "Which person plays fictional characters played by Christoph Waltz ?", "Who played fictional characters played by Christoph Waltz ?", "Who plays fictional characters played by Christoph Waltz ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Christoph_Waltz>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Clare Kramer ?", "Which person plays fictional characters played by Clare Kramer ?", "Who played fictional characters played by Clare Kramer ?", "Who plays fictional characters played by Clare Kramer ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Clare_Kramer>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Clementine Ford ?", "Which person plays fictional characters played by Clementine Ford ?", "Who played fictional characters played by Clementine Ford ?", "Who plays fictional characters played by Clementine Ford ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Clementine_Ford>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Gareth Hale ?", "Which person plays fictional characters played by Gareth Hale ?", "Who played fictional characters played by Gareth Hale ?", "Who plays fictional characters played by Gareth Hale ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Gareth_Hale>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by George Hertzberg ?", "Which person plays fictional characters played by George Hertzberg ?", "Who played fictional characters played by George Hertzberg ?", "Who plays fictional characters played by George Hertzberg ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/George_Hertzberg>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by George Kennedy ?", "Which person plays fictional characters played by George Kennedy ?", "Who played fictional characters played by George Kennedy ?", "Who plays fictional characters played by George Kennedy ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/George_Kennedy>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Jean-Claude Van Damme ?", "Which person plays fictional characters played by Jean-Claude Van Damme ?", "Who played fictional characters played by Jean-Claude Van Damme ?", "Who plays fictional characters played by Jean-Claude Van Damme ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jean-Claude_Van_Damme>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Jeffrey DeMunn ?", "Which person plays fictional characters played by Jeffrey DeMunn ?", "Who played fictional characters played by Jeffrey DeMunn ?", "Who plays fictional characters played by Jeffrey DeMunn ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jeffrey_DeMunn>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Jeremy Sisto ?", "Which person plays fictional characters played by Jeremy Sisto ?", "Who played fictional characters played by Jeremy Sisto ?", "Who plays fictional characters played by Jeremy Sisto ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jeremy_Sisto>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Jessica Simpson ?", "Which person plays fictional characters played by Jessica Simpson ?", "Who played fictional characters played by Jessica Simpson ?", "Who plays fictional characters played by Jessica Simpson ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jessica_Simpson>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Jodelle Ferland ?", "Which person plays fictional characters played by Jodelle Ferland ?", "Who played fictional characters played by Jodelle Ferland ?", "Who plays fictional characters played by Jodelle Ferland ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jodelle_Ferland>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Joey Luthman ?", "Which person plays fictional characters played by Joey Luthman ?", "Who played fictional characters played by Joey Luthman ?", "Who plays fictional characters played by Joey Luthman ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Joey_Luthman>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by John DeSantis ?", "Which person plays fictional characters played by John DeSantis ?", "Who played fictional characters played by John DeSantis ?", "Who plays fictional characters played by John DeSantis ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/John_DeSantis>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by John Goodman ?", "Which person plays fictional characters played by John Goodman ?", "Who played fictional characters played by John Goodman ?", "Who plays fictional characters played by John Goodman ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/John_Goodman>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by John Hollis ?", "Which person plays fictional characters played by John Hollis ?", "Who played fictional characters played by John Hollis ?", "Who plays fictional characters played by John Hollis ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/John_Hollis>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by John Huston ?", "Which person plays fictional characters played by John Huston ?", "Who played fictional characters played by John Huston ?", "Who plays fictional characters played by John Huston ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/John_Huston>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by John J. York ?", "Which person plays fictional characters played by John J. York ?", "Who played fictional characters played by John J. York ?", "Who plays fictional characters played by John J. York ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/John_J._York>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by John Leguizamo ?", "Which person plays fictional characters played by John Leguizamo ?", "Who played fictional characters played by John Leguizamo ?", "Who plays fictional characters played by John Leguizamo ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/John_Leguizamo>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Bernard Lee ?", "Which person plays fictional characters played by Bernard Lee ?", "Who played fictional characters played by Bernard Lee ?", "Who plays fictional characters played by Bernard Lee ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Bernard_Lee>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Betty Field ?", "Which person plays fictional characters played by Betty Field ?", "Who played fictional characters played by Betty Field ?", "Who plays fictional characters played by Betty Field ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Betty_Field>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Karen Kopins ?", "Which person plays fictional characters played by Karen Kopins ?", "Who played fictional characters played by Karen Kopins ?", "Who plays fictional characters played by Karen Kopins ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Karen_Kopins>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Kassandra Clementi ?", "Which person plays fictional characters played by Kassandra Clementi ?", "Who played fictional characters played by Kassandra Clementi ?", "Who plays fictional characters played by Kassandra Clementi ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kassandra_Clementi>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Kelli Barrett ?", "Which person plays fictional characters played by Kelli Barrett ?", "Who played fictional characters played by Kelli Barrett ?", "Who plays fictional characters played by Kelli Barrett ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kelli_Barrett>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Kelly Kruger ?", "Which person plays fictional characters played by Kelly Kruger ?", "Who played fictional characters played by Kelly Kruger ?", "Who plays fictional characters played by Kelly Kruger ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kelly_Kruger>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Kent McCord ?", "Which person plays fictional characters played by Kent McCord ?", "Who played fictional characters played by Kent McCord ?", "Who plays fictional characters played by Kent McCord ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kent_McCord>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Lincoln Younes ?", "Which person plays fictional characters played by Lincoln Younes ?", "Who played fictional characters played by Lincoln Younes ?", "Who plays fictional characters played by Lincoln Younes ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lincoln_Younes>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Linda Lusardi ?", "Which person plays fictional characters played by Linda Lusardi ?", "Who played fictional characters played by Linda Lusardi ?", "Who plays fictional characters played by Linda Lusardi ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Linda_Lusardi>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Linzi Hateley ?", "Which person plays fictional characters played by Linzi Hateley ?", "Who played fictional characters played by Linzi Hateley ?", "Who plays fictional characters played by Linzi Hateley ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Linzi_Hateley>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Lisa McCune ?", "Which person plays fictional characters played by Lisa McCune ?", "Who played fictional characters played by Lisa McCune ?", "Who plays fictional characters played by Lisa McCune ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lisa_McCune>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Yvonne Zima ?", "Which person plays fictional characters played by Yvonne Zima ?", "Who played fictional characters played by Yvonne Zima ?", "Who plays fictional characters played by Yvonne Zima ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Yvonne_Zima>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Zachary James ?", "Which person plays fictional characters played by Zachary James ?", "Who played fictional characters played by Zachary James ?", "Who plays fictional characters played by Zachary James ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Zachary_James>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Zoe Henry ?", "Which person plays fictional characters played by Zoe Henry ?", "Who played fictional characters played by Zoe Henry ?", "Who plays fictional characters played by Zoe Henry ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Zoe_Henry>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Zöe Lucker ?", "Which person plays fictional characters played by Zöe Lucker ?", "Who played fictional characters played by Zöe Lucker ?", "Who plays fictional characters played by Zöe Lucker ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Zöe_Lucker>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Jirō Dan ?", "Which person plays fictional characters played by Jirō Dan ?", "Who played fictional characters played by Jirō Dan ?", "Who plays fictional characters played by Jirō Dan ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jirō_Dan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Bin Furuya ?", "Which person plays fictional characters played by Bin Furuya ?", "Who played fictional characters played by Bin Furuya ?", "Who plays fictional characters played by Bin Furuya ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Bin_Furuya>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Michiel Huisman ?", "Which person plays fictional characters played by Michiel Huisman ?", "Who played fictional characters played by Michiel Huisman ?", "Who plays fictional characters played by Michiel Huisman ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Michiel_Huisman>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Midge Klump ?", "Which person plays fictional characters played by Midge Klump ?", "Who played fictional characters played by Midge Klump ?", "Who plays fictional characters played by Midge Klump ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Midge_Klump>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Mira Sorvino ?", "Which person plays fictional characters played by Mira Sorvino ?", "Who played fictional characters played by Mira Sorvino ?", "Who plays fictional characters played by Mira Sorvino ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mira_Sorvino>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Misha Collins ?", "Which person plays fictional characters played by Misha Collins ?", "Who played fictional characters played by Misha Collins ?", "Who plays fictional characters played by Misha Collins ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Misha_Collins>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Ryan Carnes ?", "Which person plays fictional characters played by Ryan Carnes ?", "Who played fictional characters played by Ryan Carnes ?", "Who plays fictional characters played by Ryan Carnes ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ryan_Carnes>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Ryoko Kobayashi ?", "Which person plays fictional characters played by Ryoko Kobayashi ?", "Who played fictional characters played by Ryoko Kobayashi ?", "Who plays fictional characters played by Ryoko Kobayashi ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ryoko_Kobayashi>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Saburō Shinoda ?", "Which person plays fictional characters played by Saburō Shinoda ?", "Who played fictional characters played by Saburō Shinoda ?", "Who plays fictional characters played by Saburō Shinoda ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Saburō_Shinoda>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Sal Stowers ?", "Which person plays fictional characters played by Sal Stowers ?", "Who played fictional characters played by Sal Stowers ?", "Who plays fictional characters played by Sal Stowers ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sal_Stowers>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Sam Neill ?", "Which person plays fictional characters played by Sam Neill ?", "Who played fictional characters played by Sam Neill ?", "Who plays fictional characters played by Sam Neill ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sam_Neill>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Naoko Kamio ?", "Which person plays fictional characters played by Naoko Kamio ?", "Who played fictional characters played by Naoko Kamio ?", "Who plays fictional characters played by Naoko Kamio ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Naoko_Kamio>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Rachel Kimsey ?", "Which person plays fictional characters played by Rachel Kimsey ?", "Who played fictional characters played by Rachel Kimsey ?", "Who plays fictional characters played by Rachel Kimsey ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Rachel_Kimsey>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Hugh Simon ?", "Which person plays fictional characters played by Hugh Simon ?", "Who played fictional characters played by Hugh Simon ?", "Who plays fictional characters played by Hugh Simon ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Hugh_Simon>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Donald Pleasence ?", "Which person plays fictional characters played by Donald Pleasence ?", "Who played fictional characters played by Donald Pleasence ?", "Who plays fictional characters played by Donald Pleasence ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Donald_Pleasence>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Donovan Scott ?", "Which person plays fictional characters played by Donovan Scott ?", "Who played fictional characters played by Donovan Scott ?", "Who plays fictional characters played by Donovan Scott ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Donovan_Scott>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Douglass Watson ?", "Which person plays fictional characters played by Douglass Watson ?", "Who played fictional characters played by Douglass Watson ?", "Who plays fictional characters played by Douglass Watson ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Douglass_Watson>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Ed Skrein ?", "Which person plays fictional characters played by Ed Skrein ?", "Who played fictional characters played by Ed Skrein ?", "Who plays fictional characters played by Ed Skrein ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ed_Skrein>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Edward Fox (actor) ?", "Which person plays fictional characters played by Edward Fox (actor) ?", "Who played fictional characters played by Edward Fox (actor) ?", "Who plays fictional characters played by Edward Fox (actor) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Edward_Fox_(actor)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Frank Bank ?", "Which person plays fictional characters played by Frank Bank ?", "Who played fictional characters played by Frank Bank ?", "Who plays fictional characters played by Frank Bank ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Frank_Bank>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played fictional characters played by Frank Oz ?", "Which person plays fictional characters played by Frank Oz ?", "Who played fictional characters played by Frank Oz ?", "Who plays fictional characters played by Frank Oz ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Frank_Oz>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Lucas Scott ?", "Which person plays persons married to Lucas Scott ?", "Who played persons married to Lucas Scott ?", "Who plays persons married to Lucas Scott ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_Scott> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Cassandra Rawlins ?", "Which person plays persons married to Cassandra Rawlins ?", "Who played persons married to Cassandra Rawlins ?", "Who plays persons married to Cassandra Rawlins ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cassandra_Rawlins> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Katja Brandner ?", "Which person plays persons married to Katja Brandner ?", "Who played persons married to Katja Brandner ?", "Who plays persons married to Katja Brandner ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Katja_Brandner> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Seeley Booth ?", "Which person plays persons married to Seeley Booth ?", "Who played persons married to Seeley Booth ?", "Who plays persons married to Seeley Booth ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Seeley_Booth> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Temperance \"Bones\" Brennan ?", "Which person plays persons married to Temperance \"Bones\" Brennan ?", "Who played persons married to Temperance \"Bones\" Brennan ?", "Who plays persons married to Temperance \"Bones\" Brennan ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Temperance_%22Bones%22_Brennan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Peyton Sawyer ?", "Which person plays persons married to Peyton Sawyer ?", "Who played persons married to Peyton Sawyer ?", "Who plays persons married to Peyton Sawyer ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Peyton_Sawyer> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Karl Mayer ?", "Which person plays persons married to Karl Mayer ?", "Who played persons married to Karl Mayer ?", "Who plays persons married to Karl Mayer ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Karl_Mayer> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Liz Parker ?", "Which person plays persons married to Liz Parker ?", "Who played persons married to Liz Parker ?", "Who plays persons married to Liz Parker ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Liz_Parker> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Max Evans (Roswell) ?", "Which person plays persons married to Max Evans (Roswell) ?", "Who played persons married to Max Evans (Roswell) ?", "Who plays persons married to Max Evans (Roswell) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Max_Evans_(Roswell)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Susan Mayer ?", "Which person plays persons married to Susan Mayer ?", "Who played persons married to Susan Mayer ?", "Who plays persons married to Susan Mayer ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Susan_Mayer> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Kim Sullivan Hughes ?", "Which person plays persons married to Kim Sullivan Hughes ?", "Who played persons married to Kim Sullivan Hughes ?", "Who plays persons married to Kim Sullivan Hughes ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kim_Sullivan_Hughes> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Phoebe Halliwell ?", "Which person plays persons married to Phoebe Halliwell ?", "Who played persons married to Phoebe Halliwell ?", "Who plays persons married to Phoebe Halliwell ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Phoebe_Halliwell> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to J. T. Hellstrom ?", "Which person plays persons married to J. T. Hellstrom ?", "Who played persons married to J. T. Hellstrom ?", "Who plays persons married to J. T. Hellstrom ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/J._T._Hellstrom> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Terri Schuester ?", "Which person plays persons married to Terri Schuester ?", "Who played persons married to Terri Schuester ?", "Who plays persons married to Terri Schuester ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Terri_Schuester> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Elena Gilbert ?", "Which person plays persons married to Elena Gilbert ?", "Who played persons married to Elena Gilbert ?", "Who plays persons married to Elena Gilbert ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elena_Gilbert> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Alan Quartermaine (General Hospital) ?", "Which person plays persons married to Alan Quartermaine (General Hospital) ?", "Who played persons married to Alan Quartermaine (General Hospital) ?", "Who plays persons married to Alan Quartermaine (General Hospital) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alan_Quartermaine_(General_Hospital)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Alex Marick ?", "Which person plays persons married to Alex Marick ?", "Who played persons married to Alex Marick ?", "Who plays persons married to Alex Marick ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alex_Marick> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Amy Pond ?", "Which person plays persons married to Amy Pond ?", "Who played persons married to Amy Pond ?", "Who plays persons married to Amy Pond ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Amy_Pond> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Nora Hanen ?", "Which person plays persons married to Nora Hanen ?", "Who played persons married to Nora Hanen ?", "Who plays persons married to Nora Hanen ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nora_Hanen> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Charlotte King ?", "Which person plays persons married to Charlotte King ?", "Who played persons married to Charlotte King ?", "Who plays persons married to Charlotte King ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charlotte_King> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Dexter Morgan ?", "Which person plays persons married to Dexter Morgan ?", "Who played persons married to Dexter Morgan ?", "Who plays persons married to Dexter Morgan ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dexter_Morgan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Natasha Rostova ?", "Which person plays persons married to Natasha Rostova ?", "Who played persons married to Natasha Rostova ?", "Who plays persons married to Natasha Rostova ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Natasha_Rostova> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Rex Van de Kamp ?", "Which person plays persons married to Rex Van de Kamp ?", "Who played persons married to Rex Van de Kamp ?", "Who plays persons married to Rex Van de Kamp ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rex_Van_de_Kamp> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Helen Crump ?", "Which person plays persons married to Helen Crump ?", "Who played persons married to Helen Crump ?", "Who plays persons married to Helen Crump ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Helen_Crump> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Michael Britten ?", "Which person plays persons married to Michael Britten ?", "Who played persons married to Michael Britten ?", "Who plays persons married to Michael Britten ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Michael_Britten> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to List of The Young and the Restless characters (2000s) ?", "Which person plays persons married to List of The Young and the Restless characters (2000s) ?", "Who played persons married to List of The Young and the Restless characters (2000s) ?", "Who plays persons married to List of The Young and the Restless characters (2000s) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/List_of_The_Young_and_the_Restless_characters_(2000s)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Dan Stewart (As the World Turns) ?", "Which person plays persons married to Dan Stewart (As the World Turns) ?", "Who played persons married to Dan Stewart (As the World Turns) ?", "Who plays persons married to Dan Stewart (As the World Turns) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dan_Stewart_(As_the_World_Turns)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Jack McFarland ?", "Which person plays persons married to Jack McFarland ?", "Who played persons married to Jack McFarland ?", "Who plays persons married to Jack McFarland ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jack_McFarland> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Aleksandra Billewiczówna ?", "Which person plays persons married to Aleksandra Billewiczówna ?", "Who played persons married to Aleksandra Billewiczówna ?", "Who plays persons married to Aleksandra Billewiczówna ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Aleksandra_Billewiczówna> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Emma Pillsbury ?", "Which person plays persons married to Emma Pillsbury ?", "Who played persons married to Emma Pillsbury ?", "Who plays persons married to Emma Pillsbury ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Emma_Pillsbury> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Harriet Vane ?", "Which person plays persons married to Harriet Vane ?", "Who played persons married to Harriet Vane ?", "Who plays persons married to Harriet Vane ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Harriet_Vane> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Beth Clemmons ?", "Which person plays persons married to Beth Clemmons ?", "Who played persons married to Beth Clemmons ?", "Who plays persons married to Beth Clemmons ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Beth_Clemmons> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Kelly Cramer ?", "Which person plays persons married to Kelly Cramer ?", "Who played persons married to Kelly Cramer ?", "Who plays persons married to Kelly Cramer ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kelly_Cramer> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Basil Fawlty ?", "Which person plays persons married to Basil Fawlty ?", "Who played persons married to Basil Fawlty ?", "Who plays persons married to Basil Fawlty ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Basil_Fawlty> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Lisa Grimaldi ?", "Which person plays persons married to Lisa Grimaldi ?", "Who played persons married to Lisa Grimaldi ?", "Who plays persons married to Lisa Grimaldi ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lisa_Grimaldi> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to List of General Hospital characters (1980s) ?", "Which person plays persons married to List of General Hospital characters (1980s) ?", "Who played persons married to List of General Hospital characters (1980s) ?", "Who plays persons married to List of General Hospital characters (1980s) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/List_of_General_Hospital_characters_(1980s)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to List of General Hospital characters (1990s) ?", "Which person plays persons married to List of General Hospital characters (1990s) ?", "Who played persons married to List of General Hospital characters (1990s) ?", "Who plays persons married to List of General Hospital characters (1990s) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/List_of_General_Hospital_characters_(1990s)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to List of General Hospital characters (2010s) ?", "Which person plays persons married to List of General Hospital characters (2010s) ?", "Who played persons married to List of General Hospital characters (2010s) ?", "Who plays persons married to List of General Hospital characters (2010s) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/List_of_General_Hospital_characters_(2010s)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to List of One Life to Live characters (1980s) ?", "Which person plays persons married to List of One Life to Live characters (1980s) ?", "Who played persons married to List of One Life to Live characters (1980s) ?", "Who plays persons married to List of One Life to Live characters (1980s) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/List_of_One_Life_to_Live_characters_(1980s)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to List of One Life to Live characters (1990s) ?", "Which person plays persons married to List of One Life to Live characters (1990s) ?", "Who played persons married to List of One Life to Live characters (1990s) ?", "Who plays persons married to List of One Life to Live characters (1990s) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/List_of_One_Life_to_Live_characters_(1990s)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to List of One Life to Live characters (2000s) ?", "Which person plays persons married to List of One Life to Live characters (2000s) ?", "Who played persons married to List of One Life to Live characters (2000s) ?", "Who plays persons married to List of One Life to Live characters (2000s) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/List_of_One_Life_to_Live_characters_(2000s)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to List of One Life to Live characters (2010s) ?", "Which person plays persons married to List of One Life to Live characters (2010s) ?", "Who played persons married to List of One Life to Live characters (2010s) ?", "Who plays persons married to List of One Life to Live characters (2010s) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/List_of_One_Life_to_Live_characters_(2010s)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Orson Hodge ?", "Which person plays persons married to Orson Hodge ?", "Who played persons married to Orson Hodge ?", "Who plays persons married to Orson Hodge ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Orson_Hodge> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Othello (character) ?", "Which person plays persons married to Othello (character) ?", "Who played persons married to Othello (character) ?", "Who plays persons married to Othello (character) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Othello_(character)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Bill Buchanan ?", "Which person plays persons married to Bill Buchanan ?", "Who played persons married to Bill Buchanan ?", "Who plays persons married to Bill Buchanan ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bill_Buchanan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Michael Mancini ?", "Which person plays persons married to Michael Mancini ?", "Who played persons married to Michael Mancini ?", "Who plays persons married to Michael Mancini ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Michael_Mancini> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Mike Delfino ?", "Which person plays persons married to Mike Delfino ?", "Who played persons married to Mike Delfino ?", "Who plays persons married to Mike Delfino ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mike_Delfino> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Sami Brady ?", "Which person plays persons married to Sami Brady ?", "Who played persons married to Sami Brady ?", "Who plays persons married to Sami Brady ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sami_Brady> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to James Bellamy (Upstairs, Downstairs) ?", "Which person plays persons married to James Bellamy (Upstairs, Downstairs) ?", "Who played persons married to James Bellamy (Upstairs, Downstairs) ?", "Who plays persons married to James Bellamy (Upstairs, Downstairs) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/James_Bellamy_(Upstairs,_Downstairs)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to John McBain (character) ?", "Which person plays persons married to John McBain (character) ?", "Who played persons married to John McBain (character) ?", "Who plays persons married to John McBain (character) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_McBain_(character)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Mara Jade ?", "Which person plays persons married to Mara Jade ?", "Who played persons married to Mara Jade ?", "Who plays persons married to Mara Jade ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mara_Jade> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Hélène Kuragina ?", "Which person plays persons married to Hélène Kuragina ?", "Who played persons married to Hélène Kuragina ?", "Who plays persons married to Hélène Kuragina ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hélène_Kuragina> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Katara (Avatar: The Last Airbender) ?", "Which person plays persons married to Katara (Avatar: The Last Airbender) ?", "Who played persons married to Katara (Avatar: The Last Airbender) ?", "Who plays persons married to Katara (Avatar: The Last Airbender) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Katara_(Avatar:_The_Last_Airbender)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Kevin Walker (Brothers & Sisters) ?", "Which person plays persons married to Kevin Walker (Brothers & Sisters) ?", "Who played persons married to Kevin Walker (Brothers & Sisters) ?", "Who plays persons married to Kevin Walker (Brothers & Sisters) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kevin_Walker_(Brothers_&_Sisters)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to King of Hearts (Alice's Adventures in Wonderland) ?", "Which person plays persons married to King of Hearts (Alice's Adventures in Wonderland) ?", "Who played persons married to King of Hearts (Alice's Adventures in Wonderland) ?", "Who plays persons married to King of Hearts (Alice's Adventures in Wonderland) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/King_of_Hearts_(Alice's_Adventures_in_Wonderland)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Michael Vaughn ?", "Which person plays persons married to Michael Vaughn ?", "Who played persons married to Michael Vaughn ?", "Who plays persons married to Michael Vaughn ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Michael_Vaughn> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Roseanne Conner ?", "Which person plays persons married to Roseanne Conner ?", "Who played persons married to Roseanne Conner ?", "Who plays persons married to Roseanne Conner ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Roseanne_Conner> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Dwight Schrute ?", "Which person plays persons married to Dwight Schrute ?", "Who played persons married to Dwight Schrute ?", "Who plays persons married to Dwight Schrute ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dwight_Schrute> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to April Ludgate ?", "Which person plays persons married to April Ludgate ?", "Who played persons married to April Ludgate ?", "Who plays persons married to April Ludgate ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/April_Ludgate> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to April Stevens Ewing ?", "Which person plays persons married to April Stevens Ewing ?", "Who played persons married to April Stevens Ewing ?", "Who plays persons married to April Stevens Ewing ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/April_Stevens_Ewing> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Jack Hodgins (Bones) ?", "Which person plays persons married to Jack Hodgins (Bones) ?", "Who played persons married to Jack Hodgins (Bones) ?", "Who plays persons married to Jack Hodgins (Bones) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jack_Hodgins_(Bones)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Saul Goodman ?", "Which person plays persons married to Saul Goodman ?", "Who played persons married to Saul Goodman ?", "Who plays persons married to Saul Goodman ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Saul_Goodman> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Gomez Addams ?", "Which person plays persons married to Gomez Addams ?", "Who played persons married to Gomez Addams ?", "Who plays persons married to Gomez Addams ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gomez_Addams> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Johnny Rose ?", "Which person plays persons married to Johnny Rose ?", "Who played persons married to Johnny Rose ?", "Who plays persons married to Johnny Rose ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Johnny_Rose> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to André DiMera ?", "Which person plays persons married to André DiMera ?", "Who played persons married to André DiMera ?", "Who plays persons married to André DiMera ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/André_DiMera> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Asa Buchanan ?", "Which person plays persons married to Asa Buchanan ?", "Who played persons married to Asa Buchanan ?", "Who plays persons married to Asa Buchanan ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Asa_Buchanan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Ashley Abbott ?", "Which person plays persons married to Ashley Abbott ?", "Who played persons married to Ashley Abbott ?", "Who plays persons married to Ashley Abbott ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ashley_Abbott> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Red Forman ?", "Which person plays persons married to Red Forman ?", "Who played persons married to Red Forman ?", "Who plays persons married to Red Forman ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Red_Forman> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Abby Lockhart ?", "Which person plays persons married to Abby Lockhart ?", "Who played persons married to Abby Lockhart ?", "Who plays persons married to Abby Lockhart ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Abby_Lockhart> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Bo Brady ?", "Which person plays persons married to Bo Brady ?", "Who played persons married to Bo Brady ?", "Who plays persons married to Bo Brady ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bo_Brady> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Traci Abbott ?", "Which person plays persons married to Traci Abbott ?", "Who played persons married to Traci Abbott ?", "Who plays persons married to Traci Abbott ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Traci_Abbott> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Tracy Quartermaine ?", "Which person plays persons married to Tracy Quartermaine ?", "Who played persons married to Tracy Quartermaine ?", "Who plays persons married to Tracy Quartermaine ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tracy_Quartermaine> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Michael Bourne ?", "Which person plays persons married to Michael Bourne ?", "Who played persons married to Michael Bourne ?", "Who plays persons married to Michael Bourne ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Michael_Bourne> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Alexis Colby ?", "Which person plays persons married to Alexis Colby ?", "Who played persons married to Alexis Colby ?", "Who plays persons married to Alexis Colby ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alexis_Colby> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Barnabas Collins ?", "Which person plays persons married to Barnabas Collins ?", "Who played persons married to Barnabas Collins ?", "Who plays persons married to Barnabas Collins ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Barnabas_Collins> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Laura Spencer (General Hospital) ?", "Which person plays persons married to Laura Spencer (General Hospital) ?", "Who played persons married to Laura Spencer (General Hospital) ?", "Who plays persons married to Laura Spencer (General Hospital) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Laura_Spencer_(General_Hospital)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Dante Falconeri ?", "Which person plays persons married to Dante Falconeri ?", "Who played persons married to Dante Falconeri ?", "Who plays persons married to Dante Falconeri ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dante_Falconeri> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Callie Torres ?", "Which person plays persons married to Callie Torres ?", "Who played persons married to Callie Torres ?", "Who plays persons married to Callie Torres ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Callie_Torres> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Robert McCallister (Brothers & Sisters) ?", "Which person plays persons married to Robert McCallister (Brothers & Sisters) ?", "Who played persons married to Robert McCallister (Brothers & Sisters) ?", "Who plays persons married to Robert McCallister (Brothers & Sisters) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Robert_McCallister_(Brothers_&_Sisters)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Victor Kiriakis ?", "Which person plays persons married to Victor Kiriakis ?", "Who played persons married to Victor Kiriakis ?", "Who plays persons married to Victor Kiriakis ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Victor_Kiriakis> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Pete Wilder ?", "Which person plays persons married to Pete Wilder ?", "Who played persons married to Pete Wilder ?", "Who plays persons married to Pete Wilder ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Pete_Wilder> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Scott Baldwin ?", "Which person plays persons married to Scott Baldwin ?", "Who played persons married to Scott Baldwin ?", "Who plays persons married to Scott Baldwin ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Scott_Baldwin> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Nathalie Brandner ?", "Which person plays persons married to Nathalie Brandner ?", "Who played persons married to Nathalie Brandner ?", "Who plays persons married to Nathalie Brandner ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nathalie_Brandner> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Phillip Spaulding ?", "Which person plays persons married to Phillip Spaulding ?", "Who played persons married to Phillip Spaulding ?", "Who plays persons married to Phillip Spaulding ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Phillip_Spaulding> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Steve Austin (character) ?", "Which person plays persons married to Steve Austin (character) ?", "Who played persons married to Steve Austin (character) ?", "Who plays persons married to Steve Austin (character) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Steve_Austin_(character)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Doug Heffernan ?", "Which person plays persons married to Doug Heffernan ?", "Who played persons married to Doug Heffernan ?", "Who plays persons married to Doug Heffernan ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Doug_Heffernan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Khal Drogo ?", "Which person plays persons married to Khal Drogo ?", "Who played persons married to Khal Drogo ?", "Who plays persons married to Khal Drogo ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Khal_Drogo> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Eugene Porter ?", "Which person plays persons married to Eugene Porter ?", "Who played persons married to Eugene Porter ?", "Who plays persons married to Eugene Porter ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Eugene_Porter> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Erica Kane ?", "Which person plays persons married to Erica Kane ?", "Who played persons married to Erica Kane ?", "Who plays persons married to Erica Kane ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Erica_Kane> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Hilary Curtis ?", "Which person plays persons married to Hilary Curtis ?", "Who played persons married to Hilary Curtis ?", "Who plays persons married to Hilary Curtis ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hilary_Curtis> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Morgan Corinthos ?", "Which person plays persons married to Morgan Corinthos ?", "Who played persons married to Morgan Corinthos ?", "Who plays persons married to Morgan Corinthos ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Morgan_Corinthos> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Mr. Big (Sex and the City) ?", "Which person plays persons married to Mr. Big (Sex and the City) ?", "Who played persons married to Mr. Big (Sex and the City) ?", "Who plays persons married to Mr. Big (Sex and the City) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mr._Big_(Sex_and_the_City)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Brian Wheatley ?", "Which person plays persons married to Brian Wheatley ?", "Who played persons married to Brian Wheatley ?", "Who plays persons married to Brian Wheatley ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Brian_Wheatley> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Brittany Pierce ?", "Which person plays persons married to Brittany Pierce ?", "Who played persons married to Brittany Pierce ?", "Who plays persons married to Brittany Pierce ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Brittany_Pierce> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Marlena Evans ?", "Which person plays persons married to Marlena Evans ?", "Who played persons married to Marlena Evans ?", "Who plays persons married to Marlena Evans ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Marlena_Evans> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Blake Carrington ?", "Which person plays persons married to Blake Carrington ?", "Who played persons married to Blake Carrington ?", "Who plays persons married to Blake Carrington ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Blake_Carrington> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Chi-Chi (Dragon Ball) ?", "Which person plays persons married to Chi-Chi (Dragon Ball) ?", "Who played persons married to Chi-Chi (Dragon Ball) ?", "Who plays persons married to Chi-Chi (Dragon Ball) ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chi-Chi_(Dragon_Ball)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Chloe Lane ?", "Which person plays persons married to Chloe Lane ?", "Who played persons married to Chloe Lane ?", "Who plays persons married to Chloe Lane ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chloe_Lane> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Chuck Bartowski ?", "Which person plays persons married to Chuck Bartowski ?", "Who played persons married to Chuck Bartowski ?", "Who plays persons married to Chuck Bartowski ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chuck_Bartowski> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person played persons married to Theresa Donovan ?", "Which person plays persons married to Theresa Donovan ?", "Who played persons married to Theresa Donovan ?", "Who plays persons married to Theresa Donovan ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Theresa_Donovan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by fictional characters played by Steve Whitmire?", "Which fictional character was played by fictional characters played by Steve Whitmire?", "Which fictional characters are played by fictional characters played by Steve Whitmire?", "Which fictional characters were played by fictional characters played by Steve Whitmire?", "Who is played by fictional characters played by Steve Whitmire?", "Who was played by fictional characters played by Steve Whitmire?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Steve_Whitmire>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by fictional characters played by Matt Vogel (puppeteer)?", "Which fictional character was played by fictional characters played by Matt Vogel (puppeteer)?", "Which fictional characters are played by fictional characters played by Matt Vogel (puppeteer)?", "Which fictional characters were played by fictional characters played by Matt Vogel (puppeteer)?", "Who is played by fictional characters played by Matt Vogel (puppeteer)?", "Who was played by fictional characters played by Matt Vogel (puppeteer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Matt_Vogel_(puppeteer)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by fictional characters played by Madelaine Petsch?", "Which fictional character was played by fictional characters played by Madelaine Petsch?", "Which fictional characters are played by fictional characters played by Madelaine Petsch?", "Which fictional characters were played by fictional characters played by Madelaine Petsch?", "Who is played by fictional characters played by Madelaine Petsch?", "Who was played by fictional characters played by Madelaine Petsch?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madelaine_Petsch>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by fictional characters played by It (2017 film)?", "Which fictional character was played by fictional characters played by It (2017 film)?", "Which fictional characters are played by fictional characters played by It (2017 film)?", "Which fictional characters were played by fictional characters played by It (2017 film)?", "Who is played by fictional characters played by It (2017 film)?", "Who was played by fictional characters played by It (2017 film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/It_(2017_film)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by fictional characters played by It (miniseries)?", "Which fictional character was played by fictional characters played by It (miniseries)?", "Which fictional characters are played by fictional characters played by It (miniseries)?", "Which fictional characters were played by fictional characters played by It (miniseries)?", "Who is played by fictional characters played by It (miniseries)?", "Who was played by fictional characters played by It (miniseries)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/It_(miniseries)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by fictional characters played by It Chapter Two?", "Which fictional character was played by fictional characters played by It Chapter Two?", "Which fictional characters are played by fictional characters played by It Chapter Two?", "Which fictional characters were played by fictional characters played by It Chapter Two?", "Who is played by fictional characters played by It Chapter Two?", "Who was played by fictional characters played by It Chapter Two?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/It_Chapter_Two>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by fictional characters played by Jackson Robert Scott?", "Which fictional character was played by fictional characters played by Jackson Robert Scott?", "Which fictional characters are played by fictional characters played by Jackson Robert Scott?", "Which fictional characters were played by fictional characters played by Jackson Robert Scott?", "Who is played by fictional characters played by Jackson Robert Scott?", "Who was played by fictional characters played by Jackson Robert Scott?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jackson_Robert_Scott>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by fictional characters played by Tony Dakota?", "Which fictional character was played by fictional characters played by Tony Dakota?", "Which fictional characters are played by fictional characters played by Tony Dakota?", "Which fictional characters were played by fictional characters played by Tony Dakota?", "Who is played by fictional characters played by Tony Dakota?", "Who was played by fictional characters played by Tony Dakota?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Tony_Dakota>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by fictional characters played by Hirofumi Fukuzawa?", "Which fictional character was played by fictional characters played by Hirofumi Fukuzawa?", "Which fictional characters are played by fictional characters played by Hirofumi Fukuzawa?", "Which fictional characters were played by fictional characters played by Hirofumi Fukuzawa?", "Who is played by fictional characters played by Hirofumi Fukuzawa?", "Who was played by fictional characters played by Hirofumi Fukuzawa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Hirofumi_Fukuzawa>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by fictional characters played by Akira Ohashi?", "Which fictional character was played by fictional characters played by Akira Ohashi?", "Which fictional characters are played by fictional characters played by Akira Ohashi?", "Which fictional characters were played by fictional characters played by Akira Ohashi?", "Who is played by fictional characters played by Akira Ohashi?", "Who was played by fictional characters played by Akira Ohashi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Akira_Ohashi>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by fictional characters played by Teruo Aragaki?", "Which fictional character was played by fictional characters played by Teruo Aragaki?", "Which fictional characters are played by fictional characters played by Teruo Aragaki?", "Which fictional characters were played by fictional characters played by Teruo Aragaki?", "Who is played by fictional characters played by Teruo Aragaki?", "Who was played by fictional characters played by Teruo Aragaki?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Teruo_Aragaki>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by fictional characters played by Mary Poppins (character)?", "Which fictional character was played by fictional characters played by Mary Poppins (character)?", "Which fictional characters are played by fictional characters played by Mary Poppins (character)?", "Which fictional characters were played by fictional characters played by Mary Poppins (character)?", "Who is played by fictional characters played by Mary Poppins (character)?", "Who was played by fictional characters played by Mary Poppins (character)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mary_Poppins_(character)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by fictional characters played by Debi Derryberry?", "Which fictional character was played by fictional characters played by Debi Derryberry?", "Which fictional characters are played by fictional characters played by Debi Derryberry?", "Which fictional characters were played by fictional characters played by Debi Derryberry?", "Who is played by fictional characters played by Debi Derryberry?", "Who was played by fictional characters played by Debi Derryberry?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Debi_Derryberry>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by fictional characters played by Emilija Baranac?", "Which fictional character was played by fictional characters played by Emilija Baranac?", "Which fictional characters are played by fictional characters played by Emilija Baranac?", "Which fictional characters were played by fictional characters played by Emilija Baranac?", "Who is played by fictional characters played by Emilija Baranac?", "Who was played by fictional characters played by Emilija Baranac?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Emilija_Baranac>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by fictional characters played by Kevin Clash?", "Which fictional character was played by fictional characters played by Kevin Clash?", "Which fictional characters are played by fictional characters played by Kevin Clash?", "Which fictional characters were played by fictional characters played by Kevin Clash?", "Who is played by fictional characters played by Kevin Clash?", "Who was played by fictional characters played by Kevin Clash?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kevin_Clash>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by fictional characters played by Ryan Dillon?", "Which fictional character was played by fictional characters played by Ryan Dillon?", "Which fictional characters are played by fictional characters played by Ryan Dillon?", "Which fictional characters were played by fictional characters played by Ryan Dillon?", "Who is played by fictional characters played by Ryan Dillon?", "Who was played by fictional characters played by Ryan Dillon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ryan_Dillon>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by fictional characters played by Elmo?", "Which fictional character was played by fictional characters played by Elmo?", "Which fictional characters are played by fictional characters played by Elmo?", "Which fictional characters were played by fictional characters played by Elmo?", "Who is played by fictional characters played by Elmo?", "Who was played by fictional characters played by Elmo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Elmo>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by fictional characters played by Tonya Williams?", "Which fictional character was played by fictional characters played by Tonya Williams?", "Which fictional characters are played by fictional characters played by Tonya Williams?", "Which fictional characters were played by fictional characters played by Tonya Williams?", "Who is played by fictional characters played by Tonya Williams?", "Who was played by fictional characters played by Tonya Williams?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Tonya_Williams>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Luc Leestemaker?", "Which fictional character was played by persons married to Luc Leestemaker?", "Which fictional characters are played by persons married to Luc Leestemaker?", "Which fictional characters were played by persons married to Luc Leestemaker?", "Who is played by persons married to Luc Leestemaker?", "Who was played by persons married to Luc Leestemaker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luc_Leestemaker> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Lucille Ball?", "Which fictional character was played by persons married to Lucille Ball?", "Which fictional characters are played by persons married to Lucille Ball?", "Which fictional characters were played by persons married to Lucille Ball?", "Who is played by persons married to Lucille Ball?", "Who was played by persons married to Lucille Ball?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucille_Ball> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Luisa Ranieri?", "Which fictional character was played by persons married to Luisa Ranieri?", "Which fictional characters are played by persons married to Luisa Ranieri?", "Which fictional characters were played by persons married to Luisa Ranieri?", "Who is played by persons married to Luisa Ranieri?", "Who was played by persons married to Luisa Ranieri?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luisa_Ranieri> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Veronique Peck?", "Which fictional character was played by persons married to Veronique Peck?", "Which fictional characters are played by persons married to Veronique Peck?", "Which fictional characters were played by persons married to Veronique Peck?", "Who is played by persons married to Veronique Peck?", "Who was played by persons married to Veronique Peck?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Veronique_Peck> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Brandon Barash?", "Which fictional character was played by persons married to Brandon Barash?", "Which fictional characters are played by persons married to Brandon Barash?", "Which fictional characters were played by persons married to Brandon Barash?", "Who is played by persons married to Brandon Barash?", "Who was played by persons married to Brandon Barash?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Brandon_Barash> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Gloria Carrá?", "Which fictional character was played by persons married to Gloria Carrá?", "Which fictional characters are played by persons married to Gloria Carrá?", "Which fictional characters were played by persons married to Gloria Carrá?", "Who is played by persons married to Gloria Carrá?", "Who was played by persons married to Gloria Carrá?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gloria_Carrá> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Gordon Scott?", "Which fictional character was played by persons married to Gordon Scott?", "Which fictional characters are played by persons married to Gordon Scott?", "Which fictional characters were played by persons married to Gordon Scott?", "Who is played by persons married to Gordon Scott?", "Who was played by persons married to Gordon Scott?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gordon_Scott> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Gry Molvær Hivju?", "Which fictional character was played by persons married to Gry Molvær Hivju?", "Which fictional characters are played by persons married to Gry Molvær Hivju?", "Which fictional characters were played by persons married to Gry Molvær Hivju?", "Who is played by persons married to Gry Molvær Hivju?", "Who was played by persons married to Gry Molvær Hivju?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gry_Molvær_Hivju> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Grynet Molvig?", "Which fictional character was played by persons married to Grynet Molvig?", "Which fictional characters are played by persons married to Grynet Molvig?", "Which fictional characters were played by persons married to Grynet Molvig?", "Who is played by persons married to Grynet Molvig?", "Who was played by persons married to Grynet Molvig?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Grynet_Molvig> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Kirsten Storms?", "Which fictional character was played by persons married to Kirsten Storms?", "Which fictional characters are played by persons married to Kirsten Storms?", "Which fictional characters were played by persons married to Kirsten Storms?", "Who is played by persons married to Kirsten Storms?", "Who was played by persons married to Kirsten Storms?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kirsten_Storms> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Rachel Gordon?", "Which fictional character was played by persons married to Rachel Gordon?", "Which fictional characters are played by persons married to Rachel Gordon?", "Which fictional characters were played by persons married to Rachel Gordon?", "Who is played by persons married to Rachel Gordon?", "Who was played by persons married to Rachel Gordon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rachel_Gordon> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Rachel Rosenthal?", "Which fictional character was played by persons married to Rachel Rosenthal?", "Which fictional characters are played by persons married to Rachel Rosenthal?", "Which fictional characters were played by persons married to Rachel Rosenthal?", "Who is played by persons married to Rachel Rosenthal?", "Who was played by persons married to Rachel Rosenthal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rachel_Rosenthal> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Alan Halsall?", "Which fictional character was played by persons married to Alan Halsall?", "Which fictional characters are played by persons married to Alan Halsall?", "Which fictional characters were played by persons married to Alan Halsall?", "Who is played by persons married to Alan Halsall?", "Who was played by persons married to Alan Halsall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alan_Halsall> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Alan Thicke?", "Which fictional character was played by persons married to Alan Thicke?", "Which fictional characters are played by persons married to Alan Thicke?", "Which fictional characters were played by persons married to Alan Thicke?", "Who is played by persons married to Alan Thicke?", "Who was played by persons married to Alan Thicke?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alan_Thicke> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Alec Baldwin?", "Which fictional character was played by persons married to Alec Baldwin?", "Which fictional characters are played by persons married to Alec Baldwin?", "Which fictional characters were played by persons married to Alec Baldwin?", "Who is played by persons married to Alec Baldwin?", "Who was played by persons married to Alec Baldwin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alec_Baldwin> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Catherine FitzGerald?", "Which fictional character was played by persons married to Catherine FitzGerald?", "Which fictional characters are played by persons married to Catherine FitzGerald?", "Which fictional characters were played by persons married to Catherine FitzGerald?", "Who is played by persons married to Catherine FitzGerald?", "Who was played by persons married to Catherine FitzGerald?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Catherine_FitzGerald> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Cecilia Nilsson (actress)?", "Which fictional character was played by persons married to Cecilia Nilsson (actress)?", "Which fictional characters are played by persons married to Cecilia Nilsson (actress)?", "Which fictional characters were played by persons married to Cecilia Nilsson (actress)?", "Who is played by persons married to Cecilia Nilsson (actress)?", "Who was played by persons married to Cecilia Nilsson (actress)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cecilia_Nilsson_(actress)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Chelsea Noble?", "Which fictional character was played by persons married to Chelsea Noble?", "Which fictional characters are played by persons married to Chelsea Noble?", "Which fictional characters were played by persons married to Chelsea Noble?", "Who is played by persons married to Chelsea Noble?", "Who was played by persons married to Chelsea Noble?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chelsea_Noble> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Florenz Ziegfeld Jr.?", "Which fictional character was played by persons married to Florenz Ziegfeld Jr.?", "Which fictional characters are played by persons married to Florenz Ziegfeld Jr.?", "Which fictional characters were played by persons married to Florenz Ziegfeld Jr.?", "Who is played by persons married to Florenz Ziegfeld Jr.?", "Who was played by persons married to Florenz Ziegfeld Jr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Florenz_Ziegfeld_Jr.> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Nispal Singh?", "Which fictional character was played by persons married to Nispal Singh?", "Which fictional characters are played by persons married to Nispal Singh?", "Which fictional characters were played by persons married to Nispal Singh?", "Who is played by persons married to Nispal Singh?", "Who was played by persons married to Nispal Singh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nispal_Singh> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Noah Bean?", "Which fictional character was played by persons married to Noah Bean?", "Which fictional characters are played by persons married to Noah Bean?", "Which fictional characters were played by persons married to Noah Bean?", "Who is played by persons married to Noah Bean?", "Who was played by persons married to Noah Bean?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Noah_Bean> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Noah Danby?", "Which fictional character was played by persons married to Noah Danby?", "Which fictional characters are played by persons married to Noah Danby?", "Which fictional characters were played by persons married to Noah Danby?", "Who is played by persons married to Noah Danby?", "Who was played by persons married to Noah Danby?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Noah_Danby> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Mithu Chakrabarty?", "Which fictional character was played by persons married to Mithu Chakrabarty?", "Which fictional characters are played by persons married to Mithu Chakrabarty?", "Which fictional characters were played by persons married to Mithu Chakrabarty?", "Who is played by persons married to Mithu Chakrabarty?", "Who was played by persons married to Mithu Chakrabarty?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mithu_Chakrabarty> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Touriya Haoud?", "Which fictional character was played by persons married to Touriya Haoud?", "Which fictional characters are played by persons married to Touriya Haoud?", "Which fictional characters were played by persons married to Touriya Haoud?", "Who is played by persons married to Touriya Haoud?", "Who was played by persons married to Touriya Haoud?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Touriya_Haoud> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to B. J. Ward (actress)?", "Which fictional character was played by persons married to B. J. Ward (actress)?", "Which fictional characters are played by persons married to B. J. Ward (actress)?", "Which fictional characters were played by persons married to B. J. Ward (actress)?", "Who is played by persons married to B. J. Ward (actress)?", "Who was played by persons married to B. J. Ward (actress)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/B._J._Ward_(actress)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Barry Cahill (actor)?", "Which fictional character was played by persons married to Barry Cahill (actor)?", "Which fictional characters are played by persons married to Barry Cahill (actor)?", "Which fictional characters were played by persons married to Barry Cahill (actor)?", "Who is played by persons married to Barry Cahill (actor)?", "Who was played by persons married to Barry Cahill (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Barry_Cahill_(actor)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Camila Sodi?", "Which fictional character was played by persons married to Camila Sodi?", "Which fictional characters are played by persons married to Camila Sodi?", "Which fictional characters were played by persons married to Camila Sodi?", "Who is played by persons married to Camila Sodi?", "Who was played by persons married to Camila Sodi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Camila_Sodi> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Camilla Sacre-Dallerup?", "Which fictional character was played by persons married to Camilla Sacre-Dallerup?", "Which fictional characters are played by persons married to Camilla Sacre-Dallerup?", "Which fictional characters were played by persons married to Camilla Sacre-Dallerup?", "Who is played by persons married to Camilla Sacre-Dallerup?", "Who was played by persons married to Camilla Sacre-Dallerup?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Camilla_Sacre-Dallerup> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Carmine Giovinazzo?", "Which fictional character was played by persons married to Carmine Giovinazzo?", "Which fictional characters are played by persons married to Carmine Giovinazzo?", "Which fictional characters were played by persons married to Carmine Giovinazzo?", "Who is played by persons married to Carmine Giovinazzo?", "Who was played by persons married to Carmine Giovinazzo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carmine_Giovinazzo> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Carol Arthur?", "Which fictional character was played by persons married to Carol Arthur?", "Which fictional characters are played by persons married to Carol Arthur?", "Which fictional characters were played by persons married to Carol Arthur?", "Who is played by persons married to Carol Arthur?", "Who was played by persons married to Carol Arthur?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carol_Arthur> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Chris Evans (presenter)?", "Which fictional character was played by persons married to Chris Evans (presenter)?", "Which fictional characters are played by persons married to Chris Evans (presenter)?", "Which fictional characters were played by persons married to Chris Evans (presenter)?", "Who is played by persons married to Chris Evans (presenter)?", "Who was played by persons married to Chris Evans (presenter)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chris_Evans_(presenter)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Christie Brinkley?", "Which fictional character was played by persons married to Christie Brinkley?", "Which fictional characters are played by persons married to Christie Brinkley?", "Which fictional characters were played by persons married to Christie Brinkley?", "Who is played by persons married to Christie Brinkley?", "Who was played by persons married to Christie Brinkley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Christie_Brinkley> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Christopher Lambert?", "Which fictional character was played by persons married to Christopher Lambert?", "Which fictional characters are played by persons married to Christopher Lambert?", "Which fictional characters were played by persons married to Christopher Lambert?", "Who is played by persons married to Christopher Lambert?", "Who was played by persons married to Christopher Lambert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Christopher_Lambert> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Cindy Ambuehl?", "Which fictional character was played by persons married to Cindy Ambuehl?", "Which fictional characters are played by persons married to Cindy Ambuehl?", "Which fictional characters were played by persons married to Cindy Ambuehl?", "Who is played by persons married to Cindy Ambuehl?", "Who was played by persons married to Cindy Ambuehl?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cindy_Ambuehl> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Clarence Williams III?", "Which fictional character was played by persons married to Clarence Williams III?", "Which fictional characters are played by persons married to Clarence Williams III?", "Which fictional characters were played by persons married to Clarence Williams III?", "Who is played by persons married to Clarence Williams III?", "Who was played by persons married to Clarence Williams III?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Clarence_Williams_III> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Garfield Morgan?", "Which fictional character was played by persons married to Garfield Morgan?", "Which fictional characters are played by persons married to Garfield Morgan?", "Which fictional characters were played by persons married to Garfield Morgan?", "Who is played by persons married to Garfield Morgan?", "Who was played by persons married to Garfield Morgan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Garfield_Morgan> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Gary Morton?", "Which fictional character was played by persons married to Gary Morton?", "Which fictional characters are played by persons married to Gary Morton?", "Which fictional characters were played by persons married to Gary Morton?", "Who is played by persons married to Gary Morton?", "Who was played by persons married to Gary Morton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gary_Morton> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Gary Oldman?", "Which fictional character was played by persons married to Gary Oldman?", "Which fictional characters are played by persons married to Gary Oldman?", "Which fictional characters were played by persons married to Gary Oldman?", "Who is played by persons married to Gary Oldman?", "Who was played by persons married to Gary Oldman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gary_Oldman> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to George Hearn?", "Which fictional character was played by persons married to George Hearn?", "Which fictional characters are played by persons married to George Hearn?", "Which fictional characters were played by persons married to George Hearn?", "Who is played by persons married to George Hearn?", "Who was played by persons married to George Hearn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/George_Hearn> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Jennifer Aniston?", "Which fictional character was played by persons married to Jennifer Aniston?", "Which fictional characters are played by persons married to Jennifer Aniston?", "Which fictional characters were played by persons married to Jennifer Aniston?", "Who is played by persons married to Jennifer Aniston?", "Who was played by persons married to Jennifer Aniston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jennifer_Aniston> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Jennifer Esposito?", "Which fictional character was played by persons married to Jennifer Esposito?", "Which fictional characters are played by persons married to Jennifer Esposito?", "Which fictional characters were played by persons married to Jennifer Esposito?", "Who is played by persons married to Jennifer Esposito?", "Who was played by persons married to Jennifer Esposito?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jennifer_Esposito> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Jennifer Schwalbach Smith?", "Which fictional character was played by persons married to Jennifer Schwalbach Smith?", "Which fictional characters are played by persons married to Jennifer Schwalbach Smith?", "Which fictional characters were played by persons married to Jennifer Schwalbach Smith?", "Who is played by persons married to Jennifer Schwalbach Smith?", "Who was played by persons married to Jennifer Schwalbach Smith?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jennifer_Schwalbach_Smith> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Jenny Lumet?", "Which fictional character was played by persons married to Jenny Lumet?", "Which fictional characters are played by persons married to Jenny Lumet?", "Which fictional characters were played by persons married to Jenny Lumet?", "Who is played by persons married to Jenny Lumet?", "Who was played by persons married to Jenny Lumet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jenny_Lumet> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Jill Latiano?", "Which fictional character was played by persons married to Jill Latiano?", "Which fictional characters are played by persons married to Jill Latiano?", "Which fictional characters were played by persons married to Jill Latiano?", "Who is played by persons married to Jill Latiano?", "Who was played by persons married to Jill Latiano?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jill_Latiano> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Joan Blondell?", "Which fictional character was played by persons married to Joan Blondell?", "Which fictional characters are played by persons married to Joan Blondell?", "Which fictional characters were played by persons married to Joan Blondell?", "Who is played by persons married to Joan Blondell?", "Who was played by persons married to Joan Blondell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joan_Blondell> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Joan Valerie?", "Which fictional character was played by persons married to Joan Valerie?", "Which fictional characters are played by persons married to Joan Valerie?", "Which fictional characters were played by persons married to Joan Valerie?", "Who is played by persons married to Joan Valerie?", "Who was played by persons married to Joan Valerie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joan_Valerie> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Joanne Mitchell?", "Which fictional character was played by persons married to Joanne Mitchell?", "Which fictional characters are played by persons married to Joanne Mitchell?", "Which fictional characters were played by persons married to Joanne Mitchell?", "Who is played by persons married to Joanne Mitchell?", "Who was played by persons married to Joanne Mitchell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joanne_Mitchell> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Joanne Whalley?", "Which fictional character was played by persons married to Joanne Whalley?", "Which fictional characters are played by persons married to Joanne Whalley?", "Which fictional characters were played by persons married to Joanne Whalley?", "Who is played by persons married to Joanne Whalley?", "Who was played by persons married to Joanne Whalley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joanne_Whalley> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to John Billingsley?", "Which fictional character was played by persons married to John Billingsley?", "Which fictional characters are played by persons married to John Billingsley?", "Which fictional characters were played by persons married to John Billingsley?", "Who is played by persons married to John Billingsley?", "Who was played by persons married to John Billingsley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_Billingsley> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to John Clark (actor)?", "Which fictional character was played by persons married to John Clark (actor)?", "Which fictional characters are played by persons married to John Clark (actor)?", "Which fictional characters were played by persons married to John Clark (actor)?", "Who is played by persons married to John Clark (actor)?", "Who was played by persons married to John Clark (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_Clark_(actor)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to John Malkovich?", "Which fictional character was played by persons married to John Malkovich?", "Which fictional characters are played by persons married to John Malkovich?", "Which fictional characters were played by persons married to John Malkovich?", "Who is played by persons married to John Malkovich?", "Who was played by persons married to John Malkovich?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_Malkovich> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Ben Koldyke?", "Which fictional character was played by persons married to Ben Koldyke?", "Which fictional characters are played by persons married to Ben Koldyke?", "Which fictional characters were played by persons married to Ben Koldyke?", "Who is played by persons married to Ben Koldyke?", "Who was played by persons married to Ben Koldyke?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ben_Koldyke> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Katherine LaNasa?", "Which fictional character was played by persons married to Katherine LaNasa?", "Which fictional characters are played by persons married to Katherine LaNasa?", "Which fictional characters were played by persons married to Katherine LaNasa?", "Who is played by persons married to Katherine LaNasa?", "Who was played by persons married to Katherine LaNasa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Katherine_LaNasa> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Kathryn Hays?", "Which fictional character was played by persons married to Kathryn Hays?", "Which fictional characters are played by persons married to Kathryn Hays?", "Which fictional characters were played by persons married to Kathryn Hays?", "Who is played by persons married to Kathryn Hays?", "Who was played by persons married to Kathryn Hays?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kathryn_Hays> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Katie Lee (chef)?", "Which fictional character was played by persons married to Katie Lee (chef)?", "Which fictional characters are played by persons married to Katie Lee (chef)?", "Which fictional characters were played by persons married to Katie Lee (chef)?", "Who is played by persons married to Katie Lee (chef)?", "Who was played by persons married to Katie Lee (chef)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Katie_Lee_(chef)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Keith Larsen?", "Which fictional character was played by persons married to Keith Larsen?", "Which fictional characters are played by persons married to Keith Larsen?", "Which fictional characters were played by persons married to Keith Larsen?", "Who is played by persons married to Keith Larsen?", "Who was played by persons married to Keith Larsen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Keith_Larsen> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Ken Campbell?", "Which fictional character was played by persons married to Ken Campbell?", "Which fictional characters are played by persons married to Ken Campbell?", "Which fictional characters were played by persons married to Ken Campbell?", "Who is played by persons married to Ken Campbell?", "Who was played by persons married to Ken Campbell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ken_Campbell> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Lee Mead?", "Which fictional character was played by persons married to Lee Mead?", "Which fictional characters are played by persons married to Lee Mead?", "Which fictional characters were played by persons married to Lee Mead?", "Who is played by persons married to Lee Mead?", "Who was played by persons married to Lee Mead?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lee_Mead> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Lesley Judd?", "Which fictional character was played by persons married to Lesley Judd?", "Which fictional characters are played by persons married to Lesley Judd?", "Which fictional characters were played by persons married to Lesley Judd?", "Who is played by persons married to Lesley Judd?", "Who was played by persons married to Lesley Judd?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lesley_Judd> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Lincoln Townley?", "Which fictional character was played by persons married to Lincoln Townley?", "Which fictional characters are played by persons married to Lincoln Townley?", "Which fictional characters were played by persons married to Lincoln Townley?", "Who is played by persons married to Lincoln Townley?", "Who was played by persons married to Lincoln Townley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lincoln_Townley> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Zach Gilford?", "Which fictional character was played by persons married to Zach Gilford?", "Which fictional characters are played by persons married to Zach Gilford?", "Which fictional characters were played by persons married to Zach Gilford?", "Who is played by persons married to Zach Gilford?", "Who was played by persons married to Zach Gilford?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Zach_Gilford> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Nobby Clark (photographer)?", "Which fictional character was played by persons married to Nobby Clark (photographer)?", "Which fictional characters are played by persons married to Nobby Clark (photographer)?", "Which fictional characters were played by persons married to Nobby Clark (photographer)?", "Who is played by persons married to Nobby Clark (photographer)?", "Who was played by persons married to Nobby Clark (photographer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nobby_Clark_(photographer)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Michael Jayston?", "Which fictional character was played by persons married to Michael Jayston?", "Which fictional characters are played by persons married to Michael Jayston?", "Which fictional characters were played by persons married to Michael Jayston?", "Who is played by persons married to Michael Jayston?", "Who was played by persons married to Michael Jayston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Michael_Jayston> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Michelle Phillips?", "Which fictional character was played by persons married to Michelle Phillips?", "Which fictional characters are played by persons married to Michelle Phillips?", "Which fictional characters were played by persons married to Michelle Phillips?", "Who is played by persons married to Michelle Phillips?", "Who was played by persons married to Michelle Phillips?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Michelle_Phillips> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Ryan Reynolds?", "Which fictional character was played by persons married to Ryan Reynolds?", "Which fictional characters are played by persons married to Ryan Reynolds?", "Which fictional characters were played by persons married to Ryan Reynolds?", "Who is played by persons married to Ryan Reynolds?", "Who was played by persons married to Ryan Reynolds?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ryan_Reynolds> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Sam Sorbo?", "Which fictional character was played by persons married to Sam Sorbo?", "Which fictional characters are played by persons married to Sam Sorbo?", "Which fictional characters were played by persons married to Sam Sorbo?", "Who is played by persons married to Sam Sorbo?", "Who was played by persons married to Sam Sorbo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sam_Sorbo> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Early life and career of Gene Roddenberry?", "Which fictional character was played by persons married to Early life and career of Gene Roddenberry?", "Which fictional characters are played by persons married to Early life and career of Gene Roddenberry?", "Which fictional characters were played by persons married to Early life and career of Gene Roddenberry?", "Who is played by persons married to Early life and career of Gene Roddenberry?", "Who was played by persons married to Early life and career of Gene Roddenberry?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Early_life_and_career_of_Gene_Roddenberry> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Eden Hartford?", "Which fictional character was played by persons married to Eden Hartford?", "Which fictional characters are played by persons married to Eden Hartford?", "Which fictional characters were played by persons married to Eden Hartford?", "Who is played by persons married to Eden Hartford?", "Who was played by persons married to Eden Hartford?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Eden_Hartford> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Franco Nero?", "Which fictional character was played by persons married to Franco Nero?", "Which fictional characters are played by persons married to Franco Nero?", "Which fictional characters were played by persons married to Franco Nero?", "Who is played by persons married to Franco Nero?", "Who was played by persons married to Franco Nero?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Franco_Nero> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to François Olivennes?", "Which fictional character was played by persons married to François Olivennes?", "Which fictional characters are played by persons married to François Olivennes?", "Which fictional characters were played by persons married to François Olivennes?", "Who is played by persons married to François Olivennes?", "Who was played by persons married to François Olivennes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/François_Olivennes> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Gustaw Holoubek?", "Which fictional character was played by persons married to Gustaw Holoubek?", "Which fictional characters are played by persons married to Gustaw Holoubek?", "Which fictional characters were played by persons married to Gustaw Holoubek?", "Who is played by persons married to Gustaw Holoubek?", "Who was played by persons married to Gustaw Holoubek?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gustaw_Holoubek> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Hal Holbrook?", "Which fictional character was played by persons married to Hal Holbrook?", "Which fictional characters are played by persons married to Hal Holbrook?", "Which fictional characters were played by persons married to Hal Holbrook?", "Who is played by persons married to Hal Holbrook?", "Who was played by persons married to Hal Holbrook?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hal_Holbrook> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Hugo Ballin?", "Which fictional character was played by persons married to Hugo Ballin?", "Which fictional characters are played by persons married to Hugo Ballin?", "Which fictional characters were played by persons married to Hugo Ballin?", "Who is played by persons married to Hugo Ballin?", "Who was played by persons married to Hugo Ballin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hugo_Ballin> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Jack Wagner (actor)?", "Which fictional character was played by persons married to Jack Wagner (actor)?", "Which fictional characters are played by persons married to Jack Wagner (actor)?", "Which fictional characters were played by persons married to Jack Wagner (actor)?", "Who is played by persons married to Jack Wagner (actor)?", "Who was played by persons married to Jack Wagner (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jack_Wagner_(actor)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Jack Wrather?", "Which fictional character was played by persons married to Jack Wrather?", "Which fictional characters are played by persons married to Jack Wrather?", "Which fictional characters were played by persons married to Jack Wrather?", "Who is played by persons married to Jack Wrather?", "Who was played by persons married to Jack Wrather?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jack_Wrather> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Jane Kaczmarek?", "Which fictional character was played by persons married to Jane Kaczmarek?", "Which fictional characters are played by persons married to Jane Kaczmarek?", "Which fictional characters were played by persons married to Jane Kaczmarek?", "Who is played by persons married to Jane Kaczmarek?", "Who was played by persons married to Jane Kaczmarek?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jane_Kaczmarek> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Jane Powell?", "Which fictional character was played by persons married to Jane Powell?", "Which fictional characters are played by persons married to Jane Powell?", "Which fictional characters were played by persons married to Jane Powell?", "Who is played by persons married to Jane Powell?", "Who was played by persons married to Jane Powell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jane_Powell> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Sebastian Roché?", "Which fictional character was played by persons married to Sebastian Roché?", "Which fictional characters are played by persons married to Sebastian Roché?", "Which fictional characters were played by persons married to Sebastian Roché?", "Who is played by persons married to Sebastian Roché?", "Who was played by persons married to Sebastian Roché?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sebastian_Roché> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Paul Antony-Barber?", "Which fictional character was played by persons married to Paul Antony-Barber?", "Which fictional characters are played by persons married to Paul Antony-Barber?", "Which fictional characters were played by persons married to Paul Antony-Barber?", "Who is played by persons married to Paul Antony-Barber?", "Who was played by persons married to Paul Antony-Barber?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Paul_Antony-Barber> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Amy Landecker?", "Which fictional character was played by persons married to Amy Landecker?", "Which fictional characters are played by persons married to Amy Landecker?", "Which fictional characters were played by persons married to Amy Landecker?", "Who is played by persons married to Amy Landecker?", "Who was played by persons married to Amy Landecker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Amy_Landecker> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Andrew Taylor (painter)?", "Which fictional character was played by persons married to Andrew Taylor (painter)?", "Which fictional characters are played by persons married to Andrew Taylor (painter)?", "Which fictional characters were played by persons married to Andrew Taylor (painter)?", "Who is played by persons married to Andrew Taylor (painter)?", "Who was played by persons married to Andrew Taylor (painter)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Andrew_Taylor_(painter)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Angelina Jolie?", "Which fictional character was played by persons married to Angelina Jolie?", "Which fictional characters are played by persons married to Angelina Jolie?", "Which fictional characters were played by persons married to Angelina Jolie?", "Who is played by persons married to Angelina Jolie?", "Who was played by persons married to Angelina Jolie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Angelina_Jolie> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Anna Brecon?", "Which fictional character was played by persons married to Anna Brecon?", "Which fictional characters are played by persons married to Anna Brecon?", "Which fictional characters were played by persons married to Anna Brecon?", "Who is played by persons married to Anna Brecon?", "Who was played by persons married to Anna Brecon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Anna_Brecon> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Anne Aubrey?", "Which fictional character was played by persons married to Anne Aubrey?", "Which fictional characters are played by persons married to Anne Aubrey?", "Which fictional characters were played by persons married to Anne Aubrey?", "Who is played by persons married to Anne Aubrey?", "Who was played by persons married to Anne Aubrey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Anne_Aubrey> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Anthony Havelock-Allan?", "Which fictional character was played by persons married to Anthony Havelock-Allan?", "Which fictional characters are played by persons married to Anthony Havelock-Allan?", "Which fictional characters were played by persons married to Anthony Havelock-Allan?", "Who is played by persons married to Anthony Havelock-Allan?", "Who was played by persons married to Anthony Havelock-Allan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Anthony_Havelock-Allan> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Archie Pitt?", "Which fictional character was played by persons married to Archie Pitt?", "Which fictional characters are played by persons married to Archie Pitt?", "Which fictional characters were played by persons married to Archie Pitt?", "Who is played by persons married to Archie Pitt?", "Who was played by persons married to Archie Pitt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Archie_Pitt> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Aretha Franklin?", "Which fictional character was played by persons married to Aretha Franklin?", "Which fictional characters are played by persons married to Aretha Franklin?", "Which fictional characters were played by persons married to Aretha Franklin?", "Who is played by persons married to Aretha Franklin?", "Who was played by persons married to Aretha Franklin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Aretha_Franklin> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Arthur L. Carter?", "Which fictional character was played by persons married to Arthur L. Carter?", "Which fictional characters are played by persons married to Arthur L. Carter?", "Which fictional characters were played by persons married to Arthur L. Carter?", "Who is played by persons married to Arthur L. Carter?", "Who was played by persons married to Arthur L. Carter?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Arthur_L._Carter> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Audrey Christie?", "Which fictional character was played by persons married to Audrey Christie?", "Which fictional characters are played by persons married to Audrey Christie?", "Which fictional characters were played by persons married to Audrey Christie?", "Who is played by persons married to Audrey Christie?", "Who was played by persons married to Audrey Christie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Audrey_Christie> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Olga Schoberová?", "Which fictional character was played by persons married to Olga Schoberová?", "Which fictional characters are played by persons married to Olga Schoberová?", "Which fictional characters were played by persons married to Olga Schoberová?", "Who is played by persons married to Olga Schoberová?", "Who was played by persons married to Olga Schoberová?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Olga_Schoberová> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Owain Yeoman?", "Which fictional character was played by persons married to Owain Yeoman?", "Which fictional characters are played by persons married to Owain Yeoman?", "Which fictional characters were played by persons married to Owain Yeoman?", "Who is played by persons married to Owain Yeoman?", "Who was played by persons married to Owain Yeoman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Owain_Yeoman> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Rebecca Breeds?", "Which fictional character was played by persons married to Rebecca Breeds?", "Which fictional characters are played by persons married to Rebecca Breeds?", "Which fictional characters were played by persons married to Rebecca Breeds?", "Who is played by persons married to Rebecca Breeds?", "Who was played by persons married to Rebecca Breeds?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rebecca_Breeds> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Renn Hawkey?", "Which fictional character was played by persons married to Renn Hawkey?", "Which fictional characters are played by persons married to Renn Hawkey?", "Which fictional characters were played by persons married to Renn Hawkey?", "Who is played by persons married to Renn Hawkey?", "Who was played by persons married to Renn Hawkey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Renn_Hawkey> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Richard A. Colla?", "Which fictional character was played by persons married to Richard A. Colla?", "Which fictional characters are played by persons married to Richard A. Colla?", "Which fictional characters were played by persons married to Richard A. Colla?", "Who is played by persons married to Richard A. Colla?", "Who was played by persons married to Richard A. Colla?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Richard_A._Colla> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Richard Fidler?", "Which fictional character was played by persons married to Richard Fidler?", "Which fictional characters are played by persons married to Richard Fidler?", "Which fictional characters were played by persons married to Richard Fidler?", "Who is played by persons married to Richard Fidler?", "Who was played by persons married to Richard Fidler?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Richard_Fidler> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Richard Schaal?", "Which fictional character was played by persons married to Richard Schaal?", "Which fictional characters are played by persons married to Richard Schaal?", "Which fictional characters were played by persons married to Richard Schaal?", "Who is played by persons married to Richard Schaal?", "Who was played by persons married to Richard Schaal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Richard_Schaal> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Patricia Maynard?", "Which fictional character was played by persons married to Patricia Maynard?", "Which fictional characters are played by persons married to Patricia Maynard?", "Which fictional characters were played by persons married to Patricia Maynard?", "Who is played by persons married to Patricia Maynard?", "Who was played by persons married to Patricia Maynard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Patricia_Maynard> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Adam Rayner?", "Which fictional character was played by persons married to Adam Rayner?", "Which fictional characters are played by persons married to Adam Rayner?", "Which fictional characters were played by persons married to Adam Rayner?", "Who is played by persons married to Adam Rayner?", "Who was played by persons married to Adam Rayner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Adam_Rayner> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Adam Reid?", "Which fictional character was played by persons married to Adam Reid?", "Which fictional characters are played by persons married to Adam Reid?", "Which fictional characters were played by persons married to Adam Reid?", "Who is played by persons married to Adam Reid?", "Who was played by persons married to Adam Reid?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Adam_Reid> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons married to Brooke Hayward?", "Which fictional character was played by persons married to Brooke Hayward?", "Which fictional characters are played by persons married to Brooke Hayward?", "Which fictional characters were played by persons married to Brooke Hayward?", "Who is played by persons married to Brooke Hayward?", "Who was played by persons married to Brooke Hayward?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Brooke_Hayward> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in A. J. Bernheim Brush?", "Which fictional character was played by persons born in A. J. Bernheim Brush?", "Which fictional characters are played by persons born in A. J. Bernheim Brush?", "Which fictional characters were played by persons born in A. J. Bernheim Brush?", "Who is played by persons born in A. J. Bernheim Brush?", "Who was played by persons born in A. J. Bernheim Brush?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A._J._Bernheim_Brush> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in A. T. Smith?", "Which fictional character was played by persons born in A. T. Smith?", "Which fictional characters are played by persons born in A. T. Smith?", "Which fictional characters were played by persons born in A. T. Smith?", "Who is played by persons born in A. T. Smith?", "Who was played by persons born in A. T. Smith?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A._T._Smith> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Low Ki?", "Which fictional character was played by persons born in Low Ki?", "Which fictional characters are played by persons born in Low Ki?", "Which fictional characters were played by persons born in Low Ki?", "Who is played by persons born in Low Ki?", "Who was played by persons born in Low Ki?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Low_Ki> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lowell Blair Nesbitt?", "Which fictional character was played by persons born in Lowell Blair Nesbitt?", "Which fictional characters are played by persons born in Lowell Blair Nesbitt?", "Which fictional characters were played by persons born in Lowell Blair Nesbitt?", "Who is played by persons born in Lowell Blair Nesbitt?", "Who was played by persons born in Lowell Blair Nesbitt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lowell_Blair_Nesbitt> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lowell Green?", "Which fictional character was played by persons born in Lowell Green?", "Which fictional characters are played by persons born in Lowell Green?", "Which fictional characters were played by persons born in Lowell Green?", "Who is played by persons born in Lowell Green?", "Who was played by persons born in Lowell Green?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lowell_Green> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lowell McAdam?", "Which fictional character was played by persons born in Lowell McAdam?", "Which fictional characters are played by persons born in Lowell McAdam?", "Which fictional characters were played by persons born in Lowell McAdam?", "Who is played by persons born in Lowell McAdam?", "Who was played by persons born in Lowell McAdam?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lowell_McAdam> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lowell Norland?", "Which fictional character was played by persons born in Lowell Norland?", "Which fictional characters are played by persons born in Lowell Norland?", "Which fictional characters were played by persons born in Lowell Norland?", "Who is played by persons born in Lowell Norland?", "Who was played by persons born in Lowell Norland?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lowell_Norland> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lowell Thomas?", "Which fictional character was played by persons born in Lowell Thomas?", "Which fictional characters are played by persons born in Lowell Thomas?", "Which fictional characters were played by persons born in Lowell Thomas?", "Who is played by persons born in Lowell Thomas?", "Who was played by persons born in Lowell Thomas?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lowell_Thomas> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Loyal Blaine Aldrich?", "Which fictional character was played by persons born in Loyal Blaine Aldrich?", "Which fictional characters are played by persons born in Loyal Blaine Aldrich?", "Which fictional characters were played by persons born in Loyal Blaine Aldrich?", "Who is played by persons born in Loyal Blaine Aldrich?", "Who was played by persons born in Loyal Blaine Aldrich?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Loyal_Blaine_Aldrich> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Loyce W. Turner?", "Which fictional character was played by persons born in Loyce W. Turner?", "Which fictional characters are played by persons born in Loyce W. Turner?", "Which fictional characters were played by persons born in Loyce W. Turner?", "Who is played by persons born in Loyce W. Turner?", "Who was played by persons born in Loyce W. Turner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Loyce_W._Turner> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Loyd Gentry Jr.?", "Which fictional character was played by persons born in Loyd Gentry Jr.?", "Which fictional characters are played by persons born in Loyd Gentry Jr.?", "Which fictional characters were played by persons born in Loyd Gentry Jr.?", "Who is played by persons born in Loyd Gentry Jr.?", "Who was played by persons born in Loyd Gentry Jr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Loyd_Gentry_Jr.> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in LuAnn Tafoya?", "Which fictional character was played by persons born in LuAnn Tafoya?", "Which fictional characters are played by persons born in LuAnn Tafoya?", "Which fictional characters were played by persons born in LuAnn Tafoya?", "Who is played by persons born in LuAnn Tafoya?", "Who was played by persons born in LuAnn Tafoya?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/LuAnn_Tafoya> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luc Chatel?", "Which fictional character was played by persons born in Luc Chatel?", "Which fictional characters are played by persons born in Luc Chatel?", "Which fictional characters were played by persons born in Luc Chatel?", "Who is played by persons born in Luc Chatel?", "Who was played by persons born in Luc Chatel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luc_Chatel> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luca Lewis?", "Which fictional character was played by persons born in Luca Lewis?", "Which fictional characters are played by persons born in Luca Lewis?", "Which fictional characters were played by persons born in Luca Lewis?", "Who is played by persons born in Luca Lewis?", "Who was played by persons born in Luca Lewis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luca_Lewis> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lucas Elliot Eberl?", "Which fictional character was played by persons born in Lucas Elliot Eberl?", "Which fictional characters are played by persons born in Lucas Elliot Eberl?", "Which fictional characters were played by persons born in Lucas Elliot Eberl?", "Who is played by persons born in Lucas Elliot Eberl?", "Who was played by persons born in Lucas Elliot Eberl?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_Elliot_Eberl> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lucas Martin?", "Which fictional character was played by persons born in Lucas Martin?", "Which fictional characters are played by persons born in Lucas Martin?", "Which fictional characters were played by persons born in Lucas Martin?", "Who is played by persons born in Lucas Martin?", "Who was played by persons born in Lucas Martin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_Martin> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lucas Prata?", "Which fictional character was played by persons born in Lucas Prata?", "Which fictional characters are played by persons born in Lucas Prata?", "Which fictional characters were played by persons born in Lucas Prata?", "Who is played by persons born in Lucas Prata?", "Who was played by persons born in Lucas Prata?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_Prata> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lucien Keith?", "Which fictional character was played by persons born in Lucien Keith?", "Which fictional characters are played by persons born in Lucien Keith?", "Which fictional characters were played by persons born in Lucien Keith?", "Who is played by persons born in Lucien Keith?", "Who was played by persons born in Lucien Keith?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucien_Keith> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lucien Shaw?", "Which fictional character was played by persons born in Lucien Shaw?", "Which fictional characters are played by persons born in Lucien Shaw?", "Which fictional characters were played by persons born in Lucien Shaw?", "Who is played by persons born in Lucien Shaw?", "Who was played by persons born in Lucien Shaw?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucien_Shaw> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lucien Stephen Crandall?", "Which fictional character was played by persons born in Lucien Stephen Crandall?", "Which fictional characters are played by persons born in Lucien Stephen Crandall?", "Which fictional characters were played by persons born in Lucien Stephen Crandall?", "Who is played by persons born in Lucien Stephen Crandall?", "Who was played by persons born in Lucien Stephen Crandall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucien_Stephen_Crandall> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lucille Hegamin?", "Which fictional character was played by persons born in Lucille Hegamin?", "Which fictional characters are played by persons born in Lucille Hegamin?", "Which fictional characters were played by persons born in Lucille Hegamin?", "Who is played by persons born in Lucille Hegamin?", "Who was played by persons born in Lucille Hegamin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucille_Hegamin> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lucius Horatio Stockton?", "Which fictional character was played by persons born in Lucius Horatio Stockton?", "Which fictional characters are played by persons born in Lucius Horatio Stockton?", "Which fictional characters were played by persons born in Lucius Horatio Stockton?", "Who is played by persons born in Lucius Horatio Stockton?", "Who was played by persons born in Lucius Horatio Stockton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucius_Horatio_Stockton> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lucy Ann Johnson?", "Which fictional character was played by persons born in Lucy Ann Johnson?", "Which fictional characters are played by persons born in Lucy Ann Johnson?", "Which fictional characters were played by persons born in Lucy Ann Johnson?", "Who is played by persons born in Lucy Ann Johnson?", "Who was played by persons born in Lucy Ann Johnson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucy_Ann_Johnson> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lucy Flores?", "Which fictional character was played by persons born in Lucy Flores?", "Which fictional characters are played by persons born in Lucy Flores?", "Which fictional characters were played by persons born in Lucy Flores?", "Who is played by persons born in Lucy Flores?", "Who was played by persons born in Lucy Flores?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucy_Flores> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lucy Tyler-Sharman?", "Which fictional character was played by persons born in Lucy Tyler-Sharman?", "Which fictional characters are played by persons born in Lucy Tyler-Sharman?", "Which fictional characters were played by persons born in Lucy Tyler-Sharman?", "Who is played by persons born in Lucy Tyler-Sharman?", "Who was played by persons born in Lucy Tyler-Sharman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucy_Tyler-Sharman> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luigi Fioravanti?", "Which fictional character was played by persons born in Luigi Fioravanti?", "Which fictional characters are played by persons born in Luigi Fioravanti?", "Which fictional characters were played by persons born in Luigi Fioravanti?", "Who is played by persons born in Luigi Fioravanti?", "Who was played by persons born in Luigi Fioravanti?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luigi_Fioravanti> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luigi Waites?", "Which fictional character was played by persons born in Luigi Waites?", "Which fictional characters are played by persons born in Luigi Waites?", "Which fictional characters were played by persons born in Luigi Waites?", "Who is played by persons born in Luigi Waites?", "Who was played by persons born in Luigi Waites?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luigi_Waites> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luigi Zaninelli?", "Which fictional character was played by persons born in Luigi Zaninelli?", "Which fictional characters are played by persons born in Luigi Zaninelli?", "Which fictional characters were played by persons born in Luigi Zaninelli?", "Who is played by persons born in Luigi Zaninelli?", "Who was played by persons born in Luigi Zaninelli?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luigi_Zaninelli> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luis Alberto Moreno?", "Which fictional character was played by persons born in Luis Alberto Moreno?", "Which fictional characters are played by persons born in Luis Alberto Moreno?", "Which fictional characters were played by persons born in Luis Alberto Moreno?", "Who is played by persons born in Luis Alberto Moreno?", "Who was played by persons born in Luis Alberto Moreno?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luis_Alberto_Moreno> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luis Beza?", "Which fictional character was played by persons born in Luis Beza?", "Which fictional characters are played by persons born in Luis Beza?", "Which fictional characters were played by persons born in Luis Beza?", "Who is played by persons born in Luis Beza?", "Who was played by persons born in Luis Beza?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luis_Beza> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luis Cálix?", "Which fictional character was played by persons born in Luis Cálix?", "Which fictional characters are played by persons born in Luis Cálix?", "Which fictional characters were played by persons born in Luis Cálix?", "Who is played by persons born in Luis Cálix?", "Who was played by persons born in Luis Cálix?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luis_Cálix> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luis Dubuc?", "Which fictional character was played by persons born in Luis Dubuc?", "Which fictional characters are played by persons born in Luis Dubuc?", "Which fictional characters were played by persons born in Luis Dubuc?", "Who is played by persons born in Luis Dubuc?", "Who was played by persons born in Luis Dubuc?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luis_Dubuc> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luis Felipe Fernandes?", "Which fictional character was played by persons born in Luis Felipe Fernandes?", "Which fictional characters are played by persons born in Luis Felipe Fernandes?", "Which fictional characters were played by persons born in Luis Felipe Fernandes?", "Who is played by persons born in Luis Felipe Fernandes?", "Who was played by persons born in Luis Felipe Fernandes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luis_Felipe_Fernandes> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luis Moscoso?", "Which fictional character was played by persons born in Luis Moscoso?", "Which fictional characters are played by persons born in Luis Moscoso?", "Which fictional characters were played by persons born in Luis Moscoso?", "Who is played by persons born in Luis Moscoso?", "Who was played by persons born in Luis Moscoso?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luis_Moscoso> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luis Resto (musician)?", "Which fictional character was played by persons born in Luis Resto (musician)?", "Which fictional characters are played by persons born in Luis Resto (musician)?", "Which fictional characters were played by persons born in Luis Resto (musician)?", "Who is played by persons born in Luis Resto (musician)?", "Who was played by persons born in Luis Resto (musician)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luis_Resto_(musician)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luis Zamudio?", "Which fictional character was played by persons born in Luis Zamudio?", "Which fictional characters are played by persons born in Luis Zamudio?", "Which fictional characters were played by persons born in Luis Zamudio?", "Who is played by persons born in Luis Zamudio?", "Who was played by persons born in Luis Zamudio?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luis_Zamudio> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luise Clayborn Kaish?", "Which fictional character was played by persons born in Luise Clayborn Kaish?", "Which fictional characters are played by persons born in Luise Clayborn Kaish?", "Which fictional characters were played by persons born in Luise Clayborn Kaish?", "Who is played by persons born in Luise Clayborn Kaish?", "Who was played by persons born in Luise Clayborn Kaish?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luise_Clayborn_Kaish> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luke \"Long Gone\" Miles?", "Which fictional character was played by persons born in Luke \"Long Gone\" Miles?", "Which fictional characters are played by persons born in Luke \"Long Gone\" Miles?", "Which fictional characters were played by persons born in Luke \"Long Gone\" Miles?", "Who is played by persons born in Luke \"Long Gone\" Miles?", "Who was played by persons born in Luke \"Long Gone\" Miles?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luke_%22Long_Gone%22_Miles> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luke Caudillo?", "Which fictional character was played by persons born in Luke Caudillo?", "Which fictional characters are played by persons born in Luke Caudillo?", "Which fictional characters were played by persons born in Luke Caudillo?", "Who is played by persons born in Luke Caudillo?", "Who was played by persons born in Luke Caudillo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luke_Caudillo> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luke Chueh?", "Which fictional character was played by persons born in Luke Chueh?", "Which fictional characters are played by persons born in Luke Chueh?", "Which fictional characters were played by persons born in Luke Chueh?", "Who is played by persons born in Luke Chueh?", "Who was played by persons born in Luke Chueh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luke_Chueh> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luke Cummo?", "Which fictional character was played by persons born in Luke Cummo?", "Which fictional characters are played by persons born in Luke Cummo?", "Which fictional characters were played by persons born in Luke Cummo?", "Who is played by persons born in Luke Cummo?", "Who was played by persons born in Luke Cummo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luke_Cummo> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luke Edward Wright?", "Which fictional character was played by persons born in Luke Edward Wright?", "Which fictional characters are played by persons born in Luke Edward Wright?", "Which fictional characters were played by persons born in Luke Edward Wright?", "Who is played by persons born in Luke Edward Wright?", "Who was played by persons born in Luke Edward Wright?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luke_Edward_Wright> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luke Hauswirth?", "Which fictional character was played by persons born in Luke Hauswirth?", "Which fictional characters are played by persons born in Luke Hauswirth?", "Which fictional characters were played by persons born in Luke Hauswirth?", "Who is played by persons born in Luke Hauswirth?", "Who was played by persons born in Luke Hauswirth?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luke_Hauswirth> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luke Jordan?", "Which fictional character was played by persons born in Luke Jordan?", "Which fictional characters are played by persons born in Luke Jordan?", "Which fictional characters were played by persons born in Luke Jordan?", "Who is played by persons born in Luke Jordan?", "Who was played by persons born in Luke Jordan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luke_Jordan> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luke Stewart?", "Which fictional character was played by persons born in Luke Stewart?", "Which fictional characters are played by persons born in Luke Stewart?", "Which fictional characters were played by persons born in Luke Stewart?", "Who is played by persons born in Luke Stewart?", "Who was played by persons born in Luke Stewart?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luke_Stewart> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luke Winters?", "Which fictional character was played by persons born in Luke Winters?", "Which fictional characters are played by persons born in Luke Winters?", "Which fictional characters were played by persons born in Luke Winters?", "Who is played by persons born in Luke Winters?", "Who was played by persons born in Luke Winters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luke_Winters> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lumumba Sayers?", "Which fictional character was played by persons born in Lumumba Sayers?", "Which fictional characters are played by persons born in Lumumba Sayers?", "Which fictional characters were played by persons born in Lumumba Sayers?", "Who is played by persons born in Lumumba Sayers?", "Who was played by persons born in Lumumba Sayers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lumumba_Sayers> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luques Curtis?", "Which fictional character was played by persons born in Luques Curtis?", "Which fictional characters are played by persons born in Luques Curtis?", "Which fictional characters were played by persons born in Luques Curtis?", "Who is played by persons born in Luques Curtis?", "Who was played by persons born in Luques Curtis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luques_Curtis> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luria Petrucci?", "Which fictional character was played by persons born in Luria Petrucci?", "Which fictional characters are played by persons born in Luria Petrucci?", "Which fictional characters were played by persons born in Luria Petrucci?", "Who is played by persons born in Luria Petrucci?", "Who was played by persons born in Luria Petrucci?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luria_Petrucci> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lurrie Bell?", "Which fictional character was played by persons born in Lurrie Bell?", "Which fictional characters are played by persons born in Lurrie Bell?", "Which fictional characters were played by persons born in Lurrie Bell?", "Who is played by persons born in Lurrie Bell?", "Who was played by persons born in Lurrie Bell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lurrie_Bell> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luther Blount?", "Which fictional character was played by persons born in Luther Blount?", "Which fictional characters are played by persons born in Luther Blount?", "Which fictional characters were played by persons born in Luther Blount?", "Who is played by persons born in Luther Blount?", "Who was played by persons born in Luther Blount?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luther_Blount> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luther Reigns?", "Which fictional character was played by persons born in Luther Reigns?", "Which fictional characters are played by persons born in Luther Reigns?", "Which fictional characters were played by persons born in Luther Reigns?", "Who is played by persons born in Luther Reigns?", "Who was played by persons born in Luther Reigns?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luther_Reigns> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luther S. Dixon?", "Which fictional character was played by persons born in Luther S. Dixon?", "Which fictional characters are played by persons born in Luther S. Dixon?", "Which fictional characters were played by persons born in Luther S. Dixon?", "Who is played by persons born in Luther S. Dixon?", "Who was played by persons born in Luther S. Dixon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luther_S._Dixon> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luther Tucker?", "Which fictional character was played by persons born in Luther Tucker?", "Which fictional characters are played by persons born in Luther Tucker?", "Which fictional characters were played by persons born in Luther Tucker?", "Who is played by persons born in Luther Tucker?", "Who was played by persons born in Luther Tucker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luther_Tucker> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Luther Whiting Mason?", "Which fictional character was played by persons born in Luther Whiting Mason?", "Which fictional characters are played by persons born in Luther Whiting Mason?", "Which fictional characters were played by persons born in Luther Whiting Mason?", "Who is played by persons born in Luther Whiting Mason?", "Who was played by persons born in Luther Whiting Mason?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luther_Whiting_Mason> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lydia Jordan?", "Which fictional character was played by persons born in Lydia Jordan?", "Which fictional characters are played by persons born in Lydia Jordan?", "Which fictional characters were played by persons born in Lydia Jordan?", "Who is played by persons born in Lydia Jordan?", "Who was played by persons born in Lydia Jordan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lydia_Jordan> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lydia Kay Griggsby?", "Which fictional character was played by persons born in Lydia Kay Griggsby?", "Which fictional characters are played by persons born in Lydia Kay Griggsby?", "Which fictional characters were played by persons born in Lydia Kay Griggsby?", "Who is played by persons born in Lydia Kay Griggsby?", "Who was played by persons born in Lydia Kay Griggsby?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lydia_Kay_Griggsby> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lydia Polgreen?", "Which fictional character was played by persons born in Lydia Polgreen?", "Which fictional characters are played by persons born in Lydia Polgreen?", "Which fictional characters were played by persons born in Lydia Polgreen?", "Who is played by persons born in Lydia Polgreen?", "Who was played by persons born in Lydia Polgreen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lydia_Polgreen> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lyle Beerbohm?", "Which fictional character was played by persons born in Lyle Beerbohm?", "Which fictional characters are played by persons born in Lyle Beerbohm?", "Which fictional characters were played by persons born in Lyle Beerbohm?", "Who is played by persons born in Lyle Beerbohm?", "Who was played by persons born in Lyle Beerbohm?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lyle_Beerbohm> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lyle Blackburn?", "Which fictional character was played by persons born in Lyle Blackburn?", "Which fictional characters are played by persons born in Lyle Blackburn?", "Which fictional characters were played by persons born in Lyle Blackburn?", "Who is played by persons born in Lyle Blackburn?", "Who was played by persons born in Lyle Blackburn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lyle_Blackburn> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lyle Yorks?", "Which fictional character was played by persons born in Lyle Yorks?", "Which fictional characters are played by persons born in Lyle Yorks?", "Which fictional characters were played by persons born in Lyle Yorks?", "Who is played by persons born in Lyle Yorks?", "Who was played by persons born in Lyle Yorks?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lyle_Yorks> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lyman Cornelius Smith?", "Which fictional character was played by persons born in Lyman Cornelius Smith?", "Which fictional characters are played by persons born in Lyman Cornelius Smith?", "Which fictional characters were played by persons born in Lyman Cornelius Smith?", "Who is played by persons born in Lyman Cornelius Smith?", "Who was played by persons born in Lyman Cornelius Smith?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lyman_Cornelius_Smith> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lyman Drake?", "Which fictional character was played by persons born in Lyman Drake?", "Which fictional characters are played by persons born in Lyman Drake?", "Which fictional characters were played by persons born in Lyman Drake?", "Who is played by persons born in Lyman Drake?", "Who was played by persons born in Lyman Drake?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lyman_Drake> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lyman Ogilby?", "Which fictional character was played by persons born in Lyman Ogilby?", "Which fictional characters are played by persons born in Lyman Ogilby?", "Which fictional characters were played by persons born in Lyman Ogilby?", "Who is played by persons born in Lyman Ogilby?", "Who was played by persons born in Lyman Ogilby?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lyman_Ogilby> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lyman Stewart?", "Which fictional character was played by persons born in Lyman Stewart?", "Which fictional characters are played by persons born in Lyman Stewart?", "Which fictional characters were played by persons born in Lyman Stewart?", "Who is played by persons born in Lyman Stewart?", "Who was played by persons born in Lyman Stewart?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lyman_Stewart> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lyn-Genet Recitas?", "Which fictional character was played by persons born in Lyn-Genet Recitas?", "Which fictional characters are played by persons born in Lyn-Genet Recitas?", "Which fictional characters were played by persons born in Lyn-Genet Recitas?", "Who is played by persons born in Lyn-Genet Recitas?", "Who was played by persons born in Lyn-Genet Recitas?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lyn-Genet_Recitas> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lynch Davidson?", "Which fictional character was played by persons born in Lynch Davidson?", "Which fictional characters are played by persons born in Lynch Davidson?", "Which fictional characters were played by persons born in Lynch Davidson?", "Who is played by persons born in Lynch Davidson?", "Who was played by persons born in Lynch Davidson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lynch_Davidson> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lynda Baquero?", "Which fictional character was played by persons born in Lynda Baquero?", "Which fictional characters are played by persons born in Lynda Baquero?", "Which fictional characters were played by persons born in Lynda Baquero?", "Who is played by persons born in Lynda Baquero?", "Who was played by persons born in Lynda Baquero?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lynda_Baquero> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lynda Goodfriend?", "Which fictional character was played by persons born in Lynda Goodfriend?", "Which fictional characters are played by persons born in Lynda Goodfriend?", "Which fictional characters were played by persons born in Lynda Goodfriend?", "Who is played by persons born in Lynda Goodfriend?", "Who was played by persons born in Lynda Goodfriend?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lynda_Goodfriend> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lyndsay Meyer?", "Which fictional character was played by persons born in Lyndsay Meyer?", "Which fictional characters are played by persons born in Lyndsay Meyer?", "Which fictional characters were played by persons born in Lyndsay Meyer?", "Who is played by persons born in Lyndsay Meyer?", "Who was played by persons born in Lyndsay Meyer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lyndsay_Meyer> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lyndsay Petruny?", "Which fictional character was played by persons born in Lyndsay Petruny?", "Which fictional characters are played by persons born in Lyndsay Petruny?", "Which fictional characters were played by persons born in Lyndsay Petruny?", "Who is played by persons born in Lyndsay Petruny?", "Who was played by persons born in Lyndsay Petruny?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lyndsay_Petruny> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lyndsay Wall?", "Which fictional character was played by persons born in Lyndsay Wall?", "Which fictional characters are played by persons born in Lyndsay Wall?", "Which fictional characters were played by persons born in Lyndsay Wall?", "Who is played by persons born in Lyndsay Wall?", "Who was played by persons born in Lyndsay Wall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lyndsay_Wall> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lynn Conkwright?", "Which fictional character was played by persons born in Lynn Conkwright?", "Which fictional characters are played by persons born in Lynn Conkwright?", "Which fictional characters were played by persons born in Lynn Conkwright?", "Who is played by persons born in Lynn Conkwright?", "Who was played by persons born in Lynn Conkwright?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lynn_Conkwright> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lynn Davis (photographer)?", "Which fictional character was played by persons born in Lynn Davis (photographer)?", "Which fictional characters are played by persons born in Lynn Davis (photographer)?", "Which fictional characters were played by persons born in Lynn Davis (photographer)?", "Who is played by persons born in Lynn Davis (photographer)?", "Who was played by persons born in Lynn Davis (photographer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lynn_Davis_(photographer)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lynn Fitch?", "Which fictional character was played by persons born in Lynn Fitch?", "Which fictional characters are played by persons born in Lynn Fitch?", "Which fictional characters were played by persons born in Lynn Fitch?", "Who is played by persons born in Lynn Fitch?", "Who was played by persons born in Lynn Fitch?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lynn_Fitch> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lynn Hauldren?", "Which fictional character was played by persons born in Lynn Hauldren?", "Which fictional characters are played by persons born in Lynn Hauldren?", "Which fictional characters were played by persons born in Lynn Hauldren?", "Who is played by persons born in Lynn Hauldren?", "Who was played by persons born in Lynn Hauldren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lynn_Hauldren> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lynn J. Bush?", "Which fictional character was played by persons born in Lynn J. Bush?", "Which fictional characters are played by persons born in Lynn J. Bush?", "Which fictional characters were played by persons born in Lynn J. Bush?", "Who is played by persons born in Lynn J. Bush?", "Who was played by persons born in Lynn J. Bush?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lynn_J._Bush> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lynn Nakamoto?", "Which fictional character was played by persons born in Lynn Nakamoto?", "Which fictional characters are played by persons born in Lynn Nakamoto?", "Which fictional characters were played by persons born in Lynn Nakamoto?", "Who is played by persons born in Lynn Nakamoto?", "Who was played by persons born in Lynn Nakamoto?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lynn_Nakamoto> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lynn Povich?", "Which fictional character was played by persons born in Lynn Povich?", "Which fictional characters are played by persons born in Lynn Povich?", "Which fictional characters were played by persons born in Lynn Povich?", "Who is played by persons born in Lynn Povich?", "Who was played by persons born in Lynn Povich?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lynn_Povich> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lynn Seidemann?", "Which fictional character was played by persons born in Lynn Seidemann?", "Which fictional characters are played by persons born in Lynn Seidemann?", "Which fictional characters were played by persons born in Lynn Seidemann?", "Who is played by persons born in Lynn Seidemann?", "Who was played by persons born in Lynn Seidemann?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lynn_Seidemann> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lynn Shores?", "Which fictional character was played by persons born in Lynn Shores?", "Which fictional characters are played by persons born in Lynn Shores?", "Which fictional characters were played by persons born in Lynn Shores?", "Who is played by persons born in Lynn Shores?", "Who was played by persons born in Lynn Shores?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lynn_Shores> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lynn Turner (murderer)?", "Which fictional character was played by persons born in Lynn Turner (murderer)?", "Which fictional characters are played by persons born in Lynn Turner (murderer)?", "Which fictional characters were played by persons born in Lynn Turner (murderer)?", "Who is played by persons born in Lynn Turner (murderer)?", "Who was played by persons born in Lynn Turner (murderer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lynn_Turner_(murderer)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lynn Venable?", "Which fictional character was played by persons born in Lynn Venable?", "Which fictional characters are played by persons born in Lynn Venable?", "Which fictional characters were played by persons born in Lynn Venable?", "Who is played by persons born in Lynn Venable?", "Who was played by persons born in Lynn Venable?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lynn_Venable> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lynn Woolsey?", "Which fictional character was played by persons born in Lynn Woolsey?", "Which fictional characters are played by persons born in Lynn Woolsey?", "Which fictional characters were played by persons born in Lynn Woolsey?", "Who is played by persons born in Lynn Woolsey?", "Who was played by persons born in Lynn Woolsey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lynn_Woolsey> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lynn Wyatt?", "Which fictional character was played by persons born in Lynn Wyatt?", "Which fictional characters are played by persons born in Lynn Wyatt?", "Which fictional characters were played by persons born in Lynn Wyatt?", "Who is played by persons born in Lynn Wyatt?", "Who was played by persons born in Lynn Wyatt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lynn_Wyatt> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lynn Yeakel?", "Which fictional character was played by persons born in Lynn Yeakel?", "Which fictional characters are played by persons born in Lynn Yeakel?", "Which fictional characters were played by persons born in Lynn Yeakel?", "Who is played by persons born in Lynn Yeakel?", "Who was played by persons born in Lynn Yeakel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lynn_Yeakel> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lynne Arvon?", "Which fictional character was played by persons born in Lynne Arvon?", "Which fictional characters are played by persons born in Lynne Arvon?", "Which fictional characters were played by persons born in Lynne Arvon?", "Who is played by persons born in Lynne Arvon?", "Who was played by persons born in Lynne Arvon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lynne_Arvon> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lynne Austin?", "Which fictional character was played by persons born in Lynne Austin?", "Which fictional characters are played by persons born in Lynne Austin?", "Which fictional characters were played by persons born in Lynne Austin?", "Who is played by persons born in Lynne Austin?", "Who was played by persons born in Lynne Austin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lynne_Austin> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lynnette Cole?", "Which fictional character was played by persons born in Lynnette Cole?", "Which fictional characters are played by persons born in Lynnette Cole?", "Which fictional characters were played by persons born in Lynnette Cole?", "Who is played by persons born in Lynnette Cole?", "Who was played by persons born in Lynnette Cole?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lynnette_Cole> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lynwood Slim?", "Which fictional character was played by persons born in Lynwood Slim?", "Which fictional characters are played by persons born in Lynwood Slim?", "Which fictional characters were played by persons born in Lynwood Slim?", "Who is played by persons born in Lynwood Slim?", "Who was played by persons born in Lynwood Slim?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lynwood_Slim> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Lysander Spooner?", "Which fictional character was played by persons born in Lysander Spooner?", "Which fictional characters are played by persons born in Lysander Spooner?", "Which fictional characters were played by persons born in Lysander Spooner?", "Who is played by persons born in Lysander Spooner?", "Who was played by persons born in Lysander Spooner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lysander_Spooner> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in Léonie Adams?", "Which fictional character was played by persons born in Léonie Adams?", "Which fictional characters are played by persons born in Léonie Adams?", "Which fictional characters were played by persons born in Léonie Adams?", "Who is played by persons born in Léonie Adams?", "Who was played by persons born in Léonie Adams?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Léonie_Adams> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in M. C. A. Hogarth?", "Which fictional character was played by persons born in M. C. A. Hogarth?", "Which fictional characters are played by persons born in M. C. A. Hogarth?", "Which fictional characters were played by persons born in M. C. A. Hogarth?", "Who is played by persons born in M. C. A. Hogarth?", "Who was played by persons born in M. C. A. Hogarth?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/M._C._A._Hogarth> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in M. Caldwell Butler?", "Which fictional character was played by persons born in M. Caldwell Butler?", "Which fictional characters are played by persons born in M. Caldwell Butler?", "Which fictional characters were played by persons born in M. Caldwell Butler?", "Who is played by persons born in M. Caldwell Butler?", "Who was played by persons born in M. Caldwell Butler?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/M._Caldwell_Butler> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in M. Edward Fawcett?", "Which fictional character was played by persons born in M. Edward Fawcett?", "Which fictional characters are played by persons born in M. Edward Fawcett?", "Which fictional characters were played by persons born in M. Edward Fawcett?", "Who is played by persons born in M. Edward Fawcett?", "Who was played by persons born in M. Edward Fawcett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/M._Edward_Fawcett> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in M. Evelina Galang?", "Which fictional character was played by persons born in M. Evelina Galang?", "Which fictional characters are played by persons born in M. Evelina Galang?", "Which fictional characters were played by persons born in M. Evelina Galang?", "Who is played by persons born in M. Evelina Galang?", "Who was played by persons born in M. Evelina Galang?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/M._Evelina_Galang> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in M. George Henry?", "Which fictional character was played by persons born in M. George Henry?", "Which fictional characters are played by persons born in M. George Henry?", "Which fictional characters were played by persons born in M. George Henry?", "Who is played by persons born in M. George Henry?", "Who was played by persons born in M. George Henry?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/M._George_Henry> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in M. Hoke Smith?", "Which fictional character was played by persons born in M. Hoke Smith?", "Which fictional characters are played by persons born in M. Hoke Smith?", "Which fictional characters were played by persons born in M. Hoke Smith?", "Who is played by persons born in M. Hoke Smith?", "Who was played by persons born in M. Hoke Smith?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/M._Hoke_Smith> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in M. Jane Brady?", "Which fictional character was played by persons born in M. Jane Brady?", "Which fictional characters are played by persons born in M. Jane Brady?", "Which fictional characters were played by persons born in M. Jane Brady?", "Who is played by persons born in M. Jane Brady?", "Who was played by persons born in M. Jane Brady?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/M._Jane_Brady> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which fictional character is played by persons born in M. Jerome Diamond?", "Which fictional character was played by persons born in M. Jerome Diamond?", "Which fictional characters are played by persons born in M. Jerome Diamond?", "Which fictional characters were played by persons born in M. Jerome Diamond?", "Who is played by persons born in M. Jerome Diamond?", "Who was played by persons born in M. Jerome Diamond?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/M._Jerome_Diamond> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Luke Macfarlane?", "Which person was married to fictional characters played by Luke Macfarlane?", "Which persons are married to fictional characters played by Luke Macfarlane?", "Which persons were married to fictional characters played by Luke Macfarlane?", "Who is married to fictional characters played by Luke Macfarlane?", "Who was married to fictional characters played by Luke Macfarlane?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Macfarlane>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Lynn Herring?", "Which person was married to fictional characters played by Lynn Herring?", "Which persons are married to fictional characters played by Lynn Herring?", "Which persons were married to fictional characters played by Lynn Herring?", "Who is married to fictional characters played by Lynn Herring?", "Who was married to fictional characters played by Lynn Herring?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynn_Herring>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Lysette Anthony?", "Which person was married to fictional characters played by Lysette Anthony?", "Which persons are married to fictional characters played by Lysette Anthony?", "Which persons were married to fictional characters played by Lysette Anthony?", "Who is married to fictional characters played by Lysette Anthony?", "Who was married to fictional characters played by Lysette Anthony?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lysette_Anthony>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Maleficent (film)?", "Which person was married to fictional characters played by Maleficent (film)?", "Which persons are married to fictional characters played by Maleficent (film)?", "Which persons were married to fictional characters played by Maleficent (film)?", "Who is married to fictional characters played by Maleficent (film)?", "Who was married to fictional characters played by Maleficent (film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Maleficent_(film)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Sara Woods?", "Which person was married to fictional characters played by Sara Woods?", "Which persons are married to fictional characters played by Sara Woods?", "Which persons were married to fictional characters played by Sara Woods?", "Who is married to fictional characters played by Sara Woods?", "Who was married to fictional characters played by Sara Woods?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sara_Woods>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Billie Lourd?", "Which person was married to fictional characters played by Billie Lourd?", "Which persons are married to fictional characters played by Billie Lourd?", "Which persons were married to fictional characters played by Billie Lourd?", "Who is married to fictional characters played by Billie Lourd?", "Who was married to fictional characters played by Billie Lourd?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Billie_Lourd>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Dennis Franz?", "Which person was married to fictional characters played by Dennis Franz?", "Which persons are married to fictional characters played by Dennis Franz?", "Which persons were married to fictional characters played by Dennis Franz?", "Who is married to fictional characters played by Dennis Franz?", "Who was married to fictional characters played by Dennis Franz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Dennis_Franz>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Descendants (2015 film)?", "Which person was married to fictional characters played by Descendants (2015 film)?", "Which persons are married to fictional characters played by Descendants (2015 film)?", "Which persons were married to fictional characters played by Descendants (2015 film)?", "Who is married to fictional characters played by Descendants (2015 film)?", "Who was married to fictional characters played by Descendants (2015 film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Descendants_(2015_film)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Diahann Carroll?", "Which person was married to fictional characters played by Diahann Carroll?", "Which persons are married to fictional characters played by Diahann Carroll?", "Which persons were married to fictional characters played by Diahann Carroll?", "Who is married to fictional characters played by Diahann Carroll?", "Who was married to fictional characters played by Diahann Carroll?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Diahann_Carroll>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Goran Višnjić?", "Which person was married to fictional characters played by Goran Višnjić?", "Which persons are married to fictional characters played by Goran Višnjić?", "Which persons were married to fictional characters played by Goran Višnjić?", "Who is married to fictional characters played by Goran Višnjić?", "Who was married to fictional characters played by Goran Višnjić?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Goran_Višnjić>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Grant Show?", "Which person was married to fictional characters played by Grant Show?", "Which persons are married to fictional characters played by Grant Show?", "Which persons were married to fictional characters played by Grant Show?", "Who is married to fictional characters played by Grant Show?", "Who was married to fictional characters played by Grant Show?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Grant_Show>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Greg Vaughan?", "Which person was married to fictional characters played by Greg Vaughan?", "Which persons are married to fictional characters played by Greg Vaughan?", "Which persons were married to fictional characters played by Greg Vaughan?", "Who is married to fictional characters played by Greg Vaughan?", "Who was married to fictional characters played by Greg Vaughan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Greg_Vaughan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Kermit the Frog?", "Which person was married to fictional characters played by Kermit the Frog?", "Which persons are married to fictional characters played by Kermit the Frog?", "Which persons were married to fictional characters played by Kermit the Frog?", "Who is married to fictional characters played by Kermit the Frog?", "Who was married to fictional characters played by Kermit the Frog?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kermit_the_Frog>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Khary Payton?", "Which person was married to fictional characters played by Khary Payton?", "Which persons are married to fictional characters played by Khary Payton?", "Which persons were married to fictional characters played by Khary Payton?", "Who is married to fictional characters played by Khary Payton?", "Who was married to fictional characters played by Khary Payton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Khary_Payton>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Krista Allen?", "Which person was married to fictional characters played by Krista Allen?", "Which persons are married to fictional characters played by Krista Allen?", "Which persons were married to fictional characters played by Krista Allen?", "Who is married to fictional characters played by Krista Allen?", "Who was married to fictional characters played by Krista Allen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Krista_Allen>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Krista Tesreau?", "Which person was married to fictional characters played by Krista Tesreau?", "Which persons are married to fictional characters played by Krista Tesreau?", "Which persons were married to fictional characters played by Krista Tesreau?", "Who is married to fictional characters played by Krista Tesreau?", "Who was married to fictional characters played by Krista Tesreau?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Krista_Tesreau>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Kristen Alderson?", "Which person was married to fictional characters played by Kristen Alderson?", "Which persons are married to fictional characters played by Kristen Alderson?", "Which persons were married to fictional characters played by Kristen Alderson?", "Who is married to fictional characters played by Kristen Alderson?", "Who was married to fictional characters played by Kristen Alderson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kristen_Alderson>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Kristin Chenoweth?", "Which person was married to fictional characters played by Kristin Chenoweth?", "Which persons are married to fictional characters played by Kristin Chenoweth?", "Which persons were married to fictional characters played by Kristin Chenoweth?", "Who is married to fictional characters played by Kristin Chenoweth?", "Who was married to fictional characters played by Kristin Chenoweth?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kristin_Chenoweth>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Prunella Scales?", "Which person was married to fictional characters played by Prunella Scales?", "Which persons are married to fictional characters played by Prunella Scales?", "Which persons were married to fictional characters played by Prunella Scales?", "Who is married to fictional characters played by Prunella Scales?", "Who was married to fictional characters played by Prunella Scales?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Prunella_Scales>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Alexander Beyer?", "Which person was married to fictional characters played by Alexander Beyer?", "Which persons are married to fictional characters played by Alexander Beyer?", "Which persons were married to fictional characters played by Alexander Beyer?", "Who is married to fictional characters played by Alexander Beyer?", "Who was married to fictional characters played by Alexander Beyer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Alexander_Beyer>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Allan Kayser?", "Which person was married to fictional characters played by Allan Kayser?", "Which persons are married to fictional characters played by Allan Kayser?", "Which persons were married to fictional characters played by Allan Kayser?", "Who is married to fictional characters played by Allan Kayser?", "Who was married to fictional characters played by Allan Kayser?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Allan_Kayser>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Catherine O'Hara?", "Which person was married to fictional characters played by Catherine O'Hara?", "Which persons are married to fictional characters played by Catherine O'Hara?", "Which persons were married to fictional characters played by Catherine O'Hara?", "Who is married to fictional characters played by Catherine O'Hara?", "Who was married to fictional characters played by Catherine O'Hara?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Catherine_O'Hara>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Catherine Zeta-Jones?", "Which person was married to fictional characters played by Catherine Zeta-Jones?", "Which persons are married to fictional characters played by Catherine Zeta-Jones?", "Which persons were married to fictional characters played by Catherine Zeta-Jones?", "Who is married to fictional characters played by Catherine Zeta-Jones?", "Who was married to fictional characters played by Catherine Zeta-Jones?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Catherine_Zeta-Jones>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Chad Michael Murray?", "Which person was married to fictional characters played by Chad Michael Murray?", "Which persons are married to fictional characters played by Chad Michael Murray?", "Which persons were married to fictional characters played by Chad Michael Murray?", "Who is married to fictional characters played by Chad Michael Murray?", "Who was married to fictional characters played by Chad Michael Murray?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Chad_Michael_Murray>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Charlton Heston?", "Which person was married to fictional characters played by Charlton Heston?", "Which persons are married to fictional characters played by Charlton Heston?", "Which persons were married to fictional characters played by Charlton Heston?", "Who is married to fictional characters played by Charlton Heston?", "Who was married to fictional characters played by Charlton Heston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Charlton_Heston>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Nina Arvesen?", "Which person was married to fictional characters played by Nina Arvesen?", "Which persons are married to fictional characters played by Nina Arvesen?", "Which persons were married to fictional characters played by Nina Arvesen?", "Who is married to fictional characters played by Nina Arvesen?", "Who was married to fictional characters played by Nina Arvesen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Nina_Arvesen>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Noah Ringer?", "Which person was married to fictional characters played by Noah Ringer?", "Which persons are married to fictional characters played by Noah Ringer?", "Which persons were married to fictional characters played by Noah Ringer?", "Who is married to fictional characters played by Noah Ringer?", "Who was married to fictional characters played by Noah Ringer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Noah_Ringer>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Noni Ioannidou?", "Which person was married to fictional characters played by Noni Ioannidou?", "Which persons are married to fictional characters played by Noni Ioannidou?", "Which persons were married to fictional characters played by Noni Ioannidou?", "Who is married to fictional characters played by Noni Ioannidou?", "Who was married to fictional characters played by Noni Ioannidou?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Noni_Ioannidou>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Okieriete Onaodowan?", "Which person was married to fictional characters played by Okieriete Onaodowan?", "Which persons are married to fictional characters played by Okieriete Onaodowan?", "Which persons were married to fictional characters played by Okieriete Onaodowan?", "Who is married to fictional characters played by Okieriete Onaodowan?", "Who was married to fictional characters played by Okieriete Onaodowan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Okieriete_Onaodowan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Mitch Pileggi?", "Which person was married to fictional characters played by Mitch Pileggi?", "Which persons are married to fictional characters played by Mitch Pileggi?", "Which persons were married to fictional characters played by Mitch Pileggi?", "Who is married to fictional characters played by Mitch Pileggi?", "Who was married to fictional characters played by Mitch Pileggi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mitch_Pileggi>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Nathalie Kelley?", "Which person was married to fictional characters played by Nathalie Kelley?", "Which persons are married to fictional characters played by Nathalie Kelley?", "Which persons were married to fictional characters played by Nathalie Kelley?", "Who is married to fictional characters played by Nathalie Kelley?", "Who was married to fictional characters played by Nathalie Kelley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Nathalie_Kelley>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Barbara Crampton?", "Which person was married to fictional characters played by Barbara Crampton?", "Which persons are married to fictional characters played by Barbara Crampton?", "Which persons were married to fictional characters played by Barbara Crampton?", "Who is married to fictional characters played by Barbara Crampton?", "Who was married to fictional characters played by Barbara Crampton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Barbara_Crampton>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Barbara Hershey?", "Which person was married to fictional characters played by Barbara Hershey?", "Which persons are married to fictional characters played by Barbara Hershey?", "Which persons were married to fictional characters played by Barbara Hershey?", "Who is married to fictional characters played by Barbara Hershey?", "Who was married to fictional characters played by Barbara Hershey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Barbara_Hershey>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Carolyn Jones?", "Which person was married to fictional characters played by Carolyn Jones?", "Which persons are married to fictional characters played by Carolyn Jones?", "Which persons were married to fictional characters played by Carolyn Jones?", "Who is married to fictional characters played by Carolyn Jones?", "Who was married to fictional characters played by Carolyn Jones?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Carolyn_Jones>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Carrie Fisher?", "Which person was married to fictional characters played by Carrie Fisher?", "Which persons are married to fictional characters played by Carrie Fisher?", "Which persons were married to fictional characters played by Carrie Fisher?", "Who is married to fictional characters played by Carrie Fisher?", "Who was married to fictional characters played by Carrie Fisher?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Carrie_Fisher>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Chris Pratt?", "Which person was married to fictional characters played by Chris Pratt?", "Which persons are married to fictional characters played by Chris Pratt?", "Which persons were married to fictional characters played by Chris Pratt?", "Who is married to fictional characters played by Chris Pratt?", "Who was married to fictional characters played by Chris Pratt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Chris_Pratt>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Christian Serratos?", "Which person was married to fictional characters played by Christian Serratos?", "Which persons are married to fictional characters played by Christian Serratos?", "Which persons were married to fictional characters played by Christian Serratos?", "Who is married to fictional characters played by Christian Serratos?", "Who was married to fictional characters played by Christian Serratos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Christian_Serratos>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Claude Jade?", "Which person was married to fictional characters played by Claude Jade?", "Which persons are married to fictional characters played by Claude Jade?", "Which persons were married to fictional characters played by Claude Jade?", "Who is married to fictional characters played by Claude Jade?", "Who was married to fictional characters played by Claude Jade?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Claude_Jade>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Giancarlo Giannini?", "Which person was married to fictional characters played by Giancarlo Giannini?", "Which persons are married to fictional characters played by Giancarlo Giannini?", "Which persons were married to fictional characters played by Giancarlo Giannini?", "Who is married to fictional characters played by Giancarlo Giannini?", "Who was married to fictional characters played by Giancarlo Giannini?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Giancarlo_Giannini>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Jeanine Mason?", "Which person was married to fictional characters played by Jeanine Mason?", "Which persons are married to fictional characters played by Jeanine Mason?", "Which persons were married to fictional characters played by Jeanine Mason?", "Who is married to fictional characters played by Jeanine Mason?", "Who was married to fictional characters played by Jeanine Mason?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jeanine_Mason>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Jennifer Garner?", "Which person was married to fictional characters played by Jennifer Garner?", "Which persons are married to fictional characters played by Jennifer Garner?", "Which persons were married to fictional characters played by Jennifer Garner?", "Who is married to fictional characters played by Jennifer Garner?", "Who was married to fictional characters played by Jennifer Garner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jennifer_Garner>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Jimmy Smits?", "Which person was married to fictional characters played by Jimmy Smits?", "Which persons are married to fictional characters played by Jimmy Smits?", "Which persons were married to fictional characters played by Jimmy Smits?", "Who is married to fictional characters played by Jimmy Smits?", "Who was married to fictional characters played by Jimmy Smits?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jimmy_Smits>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Joey Luthman?", "Which person was married to fictional characters played by Joey Luthman?", "Which persons are married to fictional characters played by Joey Luthman?", "Which persons were married to fictional characters played by Joey Luthman?", "Who is married to fictional characters played by Joey Luthman?", "Who was married to fictional characters played by Joey Luthman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Joey_Luthman>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by John Goodman?", "Which person was married to fictional characters played by John Goodman?", "Which persons are married to fictional characters played by John Goodman?", "Which persons were married to fictional characters played by John Goodman?", "Who is married to fictional characters played by John Goodman?", "Who was married to fictional characters played by John Goodman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/John_Goodman>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by John J. York?", "Which person was married to fictional characters played by John J. York?", "Which persons are married to fictional characters played by John J. York?", "Which persons were married to fictional characters played by John J. York?", "Who is married to fictional characters played by John J. York?", "Who was married to fictional characters played by John J. York?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/John_J._York>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Bebe Neuwirth?", "Which person was married to fictional characters played by Bebe Neuwirth?", "Which persons are married to fictional characters played by Bebe Neuwirth?", "Which persons were married to fictional characters played by Bebe Neuwirth?", "Who is married to fictional characters played by Bebe Neuwirth?", "Who was married to fictional characters played by Bebe Neuwirth?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Bebe_Neuwirth>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Betty White?", "Which person was married to fictional characters played by Betty White?", "Which persons are married to fictional characters played by Betty White?", "Which persons were married to fictional characters played by Betty White?", "Who is married to fictional characters played by Betty White?", "Who was married to fictional characters played by Betty White?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Betty_White>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Beverly Archer?", "Which person was married to fictional characters played by Beverly Archer?", "Which persons are married to fictional characters played by Beverly Archer?", "Which persons were married to fictional characters played by Beverly Archer?", "Who is married to fictional characters played by Beverly Archer?", "Who was married to fictional characters played by Beverly Archer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Beverly_Archer>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Kassie DePaiva?", "Which person was married to fictional characters played by Kassie DePaiva?", "Which persons are married to fictional characters played by Kassie DePaiva?", "Which persons were married to fictional characters played by Kassie DePaiva?", "Who is married to fictional characters played by Kassie DePaiva?", "Who was married to fictional characters played by Kassie DePaiva?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kassie_DePaiva>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Kathryn Hays?", "Which person was married to fictional characters played by Kathryn Hays?", "Which persons are married to fictional characters played by Kathryn Hays?", "Which persons were married to fictional characters played by Kathryn Hays?", "Who is married to fictional characters played by Kathryn Hays?", "Who was married to fictional characters played by Kathryn Hays?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kathryn_Hays>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Kathy Bates?", "Which person was married to fictional characters played by Kathy Bates?", "Which persons are married to fictional characters played by Kathy Bates?", "Which persons were married to fictional characters played by Kathy Bates?", "Who is married to fictional characters played by Kathy Bates?", "Who was married to fictional characters played by Kathy Bates?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kathy_Bates>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Ken Berry?", "Which person was married to fictional characters played by Ken Berry?", "Which persons are married to fictional characters played by Ken Berry?", "Which persons were married to fictional characters played by Ken Berry?", "Who is married to fictional characters played by Ken Berry?", "Who was married to fictional characters played by Ken Berry?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ken_Berry>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Lexi Ainsworth?", "Which person was married to fictional characters played by Lexi Ainsworth?", "Which persons are married to fictional characters played by Lexi Ainsworth?", "Which persons were married to fictional characters played by Lexi Ainsworth?", "Who is married to fictional characters played by Lexi Ainsworth?", "Who was married to fictional characters played by Lexi Ainsworth?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lexi_Ainsworth>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Linda Evans?", "Which person was married to fictional characters played by Linda Evans?", "Which persons are married to fictional characters played by Linda Evans?", "Which persons were married to fictional characters played by Linda Evans?", "Who is married to fictional characters played by Linda Evans?", "Who was married to fictional characters played by Linda Evans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Linda_Evans>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Lindsay Wagner?", "Which person was married to fictional characters played by Lindsay Wagner?", "Which persons are married to fictional characters played by Lindsay Wagner?", "Which persons were married to fictional characters played by Lindsay Wagner?", "Who is married to fictional characters played by Lindsay Wagner?", "Who was married to fictional characters played by Lindsay Wagner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lindsay_Wagner>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Lindsey Morgan?", "Which person was married to fictional characters played by Lindsey Morgan?", "Which persons are married to fictional characters played by Lindsey Morgan?", "Which persons were married to fictional characters played by Lindsey Morgan?", "Who is married to fictional characters played by Lindsey Morgan?", "Who was married to fictional characters played by Lindsey Morgan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lindsey_Morgan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Lisa Rinna?", "Which person was married to fictional characters played by Lisa Rinna?", "Which persons are married to fictional characters played by Lisa Rinna?", "Which persons were married to fictional characters played by Lisa Rinna?", "Who is married to fictional characters played by Lisa Rinna?", "Who was married to fictional characters played by Lisa Rinna?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lisa_Rinna>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Teri Hatcher?", "Which person was married to fictional characters played by Teri Hatcher?", "Which persons are married to fictional characters played by Teri Hatcher?", "Which persons were married to fictional characters played by Teri Hatcher?", "Who is married to fictional characters played by Teri Hatcher?", "Who was married to fictional characters played by Teri Hatcher?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Teri_Hatcher>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Yvonne Strahovski?", "Which person was married to fictional characters played by Yvonne Strahovski?", "Which persons are married to fictional characters played by Yvonne Strahovski?", "Which persons were married to fictional characters played by Yvonne Strahovski?", "Who is married to fictional characters played by Yvonne Strahovski?", "Who was married to fictional characters played by Yvonne Strahovski?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Yvonne_Strahovski>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Kimberley Simms?", "Which person was married to fictional characters played by Kimberley Simms?", "Which persons are married to fictional characters played by Kimberley Simms?", "Which persons were married to fictional characters played by Kimberley Simms?", "Who is married to fictional characters played by Kimberley Simms?", "Who was married to fictional characters played by Kimberley Simms?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kimberley_Simms>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Michael Jackson?", "Which person was married to fictional characters played by Michael Jackson?", "Which persons are married to fictional characters played by Michael Jackson?", "Which persons were married to fictional characters played by Michael Jackson?", "Who is married to fictional characters played by Michael Jackson?", "Who was married to fictional characters played by Michael Jackson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Michael_Jackson>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Michael Michele?", "Which person was married to fictional characters played by Michael Michele?", "Which persons are married to fictional characters played by Michael Michele?", "Which persons were married to fictional characters played by Michael Michele?", "Who is married to fictional characters played by Michael Michele?", "Who was married to fictional characters played by Michael Michele?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Michael_Michele>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Michael Nader?", "Which person was married to fictional characters played by Michael Nader?", "Which persons are married to fictional characters played by Michael Nader?", "Which persons were married to fictional characters played by Michael Nader?", "Who is married to fictional characters played by Michael Nader?", "Who was married to fictional characters played by Michael Nader?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Michael_Nader>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Michaela Conlin?", "Which person was married to fictional characters played by Michaela Conlin?", "Which persons are married to fictional characters played by Michaela Conlin?", "Which persons were married to fictional characters played by Michaela Conlin?", "Who is married to fictional characters played by Michaela Conlin?", "Who was married to fictional characters played by Michaela Conlin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Michaela_Conlin>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Michelle Clunie?", "Which person was married to fictional characters played by Michelle Clunie?", "Which persons are married to fictional characters played by Michelle Clunie?", "Which persons were married to fictional characters played by Michelle Clunie?", "Who is married to fictional characters played by Michelle Clunie?", "Who was married to fictional characters played by Michelle Clunie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Michelle_Clunie>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Mili Avital?", "Which person was married to fictional characters played by Mili Avital?", "Which persons are married to fictional characters played by Mili Avital?", "Which persons were married to fictional characters played by Mili Avital?", "Who is married to fictional characters played by Mili Avital?", "Who was married to fictional characters played by Mili Avital?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mili_Avital>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Rue McClanahan?", "Which person was married to fictional characters played by Rue McClanahan?", "Which persons are married to fictional characters played by Rue McClanahan?", "Which persons were married to fictional characters played by Rue McClanahan?", "Who is married to fictional characters played by Rue McClanahan?", "Who was married to fictional characters played by Rue McClanahan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Rue_McClanahan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Sam Behrens?", "Which person was married to fictional characters played by Sam Behrens?", "Which persons are married to fictional characters played by Sam Behrens?", "Which persons were married to fictional characters played by Sam Behrens?", "Who is married to fictional characters played by Sam Behrens?", "Who was married to fictional characters played by Sam Behrens?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sam_Behrens>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Makyla Smith?", "Which person was married to fictional characters played by Makyla Smith?", "Which persons are married to fictional characters played by Makyla Smith?", "Which persons were married to fictional characters played by Makyla Smith?", "Who is married to fictional characters played by Makyla Smith?", "Who was married to fictional characters played by Makyla Smith?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Makyla_Smith>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Dorothy Lyman?", "Which person was married to fictional characters played by Dorothy Lyman?", "Which persons are married to fictional characters played by Dorothy Lyman?", "Which persons were married to fictional characters played by Dorothy Lyman?", "Who is married to fictional characters played by Dorothy Lyman?", "Who was married to fictional characters played by Dorothy Lyman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Dorothy_Lyman>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Dorothy and the Witches of Oz?", "Which person was married to fictional characters played by Dorothy and the Witches of Oz?", "Which persons are married to fictional characters played by Dorothy and the Witches of Oz?", "Which persons were married to fictional characters played by Dorothy and the Witches of Oz?", "Who is married to fictional characters played by Dorothy and the Witches of Oz?", "Who was married to fictional characters played by Dorothy and the Witches of Oz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Dorothy_and_the_Witches_of_Oz>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Douglass Watson?", "Which person was married to fictional characters played by Douglass Watson?", "Which persons are married to fictional characters played by Douglass Watson?", "Which persons were married to fictional characters played by Douglass Watson?", "Who is married to fictional characters played by Douglass Watson?", "Who was married to fictional characters played by Douglass Watson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Douglass_Watson>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Dragonball Evolution?", "Which person was married to fictional characters played by Dragonball Evolution?", "Which persons are married to fictional characters played by Dragonball Evolution?", "Which persons were married to fictional characters played by Dragonball Evolution?", "Who is married to fictional characters played by Dragonball Evolution?", "Who was married to fictional characters played by Dragonball Evolution?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Dragonball_Evolution>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Drea de Matteo?", "Which person was married to fictional characters played by Drea de Matteo?", "Which persons are married to fictional characters played by Drea de Matteo?", "Which persons were married to fictional characters played by Drea de Matteo?", "Who is married to fictional characters played by Drea de Matteo?", "Who was married to fictional characters played by Drea de Matteo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Drea_de_Matteo>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Frank Herbert's Children of Dune?", "Which person was married to fictional characters played by Frank Herbert's Children of Dune?", "Which persons are married to fictional characters played by Frank Herbert's Children of Dune?", "Which persons were married to fictional characters played by Frank Herbert's Children of Dune?", "Who is married to fictional characters played by Frank Herbert's Children of Dune?", "Who was married to fictional characters played by Frank Herbert's Children of Dune?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Frank_Herbert's_Children_of_Dune>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Guy Wilson (actor)?", "Which person was married to fictional characters played by Guy Wilson (actor)?", "Which persons are married to fictional characters played by Guy Wilson (actor)?", "Which persons were married to fictional characters played by Guy Wilson (actor)?", "Who is married to fictional characters played by Guy Wilson (actor)?", "Who was married to fictional characters played by Guy Wilson (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Guy_Wilson_(actor)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Hal Sparks?", "Which person was married to fictional characters played by Hal Sparks?", "Which persons are married to fictional characters played by Hal Sparks?", "Which persons were married to fictional characters played by Hal Sparks?", "Who is married to fictional characters played by Hal Sparks?", "Who was married to fictional characters played by Hal Sparks?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Hal_Sparks>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Harold Warrender?", "Which person was married to fictional characters played by Harold Warrender?", "Which persons are married to fictional characters played by Harold Warrender?", "Which persons were married to fictional characters played by Harold Warrender?", "Who is married to fictional characters played by Harold Warrender?", "Who was married to fictional characters played by Harold Warrender?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Harold_Warrender>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Harris Allan?", "Which person was married to fictional characters played by Harris Allan?", "Which persons are married to fictional characters played by Harris Allan?", "Which persons were married to fictional characters played by Harris Allan?", "Who is married to fictional characters played by Harris Allan?", "Who was married to fictional characters played by Harris Allan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Harris_Allan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Ian Carmichael?", "Which person was married to fictional characters played by Ian Carmichael?", "Which persons are married to fictional characters played by Ian Carmichael?", "Which persons were married to fictional characters played by Ian Carmichael?", "Who is married to fictional characters played by Ian Carmichael?", "Who was married to fictional characters played by Ian Carmichael?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ian_Carmichael>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Ian Somerhalder?", "Which person was married to fictional characters played by Ian Somerhalder?", "Which persons are married to fictional characters played by Ian Somerhalder?", "Which persons were married to fictional characters played by Ian Somerhalder?", "Who is married to fictional characters played by Ian Somerhalder?", "Who was married to fictional characters played by Ian Somerhalder?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ian_Somerhalder>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Ingvild Deila?", "Which person was married to fictional characters played by Ingvild Deila?", "Which persons are married to fictional characters played by Ingvild Deila?", "Which persons were married to fictional characters played by Ingvild Deila?", "Who is married to fictional characters played by Ingvild Deila?", "Who was married to fictional characters played by Ingvild Deila?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ingvild_Deila>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Isobelle Molloy?", "Which person was married to fictional characters played by Isobelle Molloy?", "Which persons are married to fictional characters played by Isobelle Molloy?", "Which persons were married to fictional characters played by Isobelle Molloy?", "Who is married to fictional characters played by Isobelle Molloy?", "Who was married to fictional characters played by Isobelle Molloy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Isobelle_Molloy>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Jack Huston?", "Which person was married to fictional characters played by Jack Huston?", "Which persons are married to fictional characters played by Jack Huston?", "Which persons were married to fictional characters played by Jack Huston?", "Who is married to fictional characters played by Jack Huston?", "Who was married to fictional characters played by Jack Huston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jack_Huston>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Jack Wetherall?", "Which person was married to fictional characters played by Jack Wetherall?", "Which persons are married to fictional characters played by Jack Wetherall?", "Which persons were married to fictional characters played by Jack Wetherall?", "Who is married to fictional characters played by Jack Wetherall?", "Who was married to fictional characters played by Jack Wetherall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jack_Wetherall>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Jackson Browne?", "Which person was married to fictional characters played by Jackson Browne?", "Which persons are married to fictional characters played by Jackson Browne?", "Which persons were married to fictional characters played by Jackson Browne?", "Who is married to fictional characters played by Jackson Browne?", "Who was married to fictional characters played by Jackson Browne?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jackson_Browne>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Jacob Young?", "Which person was married to fictional characters played by Jacob Young?", "Which persons are married to fictional characters played by Jacob Young?", "Which persons were married to fictional characters played by Jacob Young?", "Who is married to fictional characters played by Jacob Young?", "Who was married to fictional characters played by Jacob Young?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jacob_Young>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by James Patrick Stuart?", "Which person was married to fictional characters played by James Patrick Stuart?", "Which persons are married to fictional characters played by James Patrick Stuart?", "Which persons were married to fictional characters played by James Patrick Stuart?", "Who is married to fictional characters played by James Patrick Stuart?", "Who was married to fictional characters played by James Patrick Stuart?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/James_Patrick_Stuart>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Jason Behr?", "Which person was married to fictional characters played by Jason Behr?", "Which persons are married to fictional characters played by Jason Behr?", "Which persons were married to fictional characters played by Jason Behr?", "Who is married to fictional characters played by Jason Behr?", "Who was married to fictional characters played by Jason Behr?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jason_Behr>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Jayne Atkinson?", "Which person was married to fictional characters played by Jayne Atkinson?", "Which persons are married to fictional characters played by Jayne Atkinson?", "Which persons were married to fictional characters played by Jayne Atkinson?", "Who is married to fictional characters played by Jayne Atkinson?", "Who was married to fictional characters played by Jayne Atkinson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jayne_Atkinson>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Sarah Jessica Parker?", "Which person was married to fictional characters played by Sarah Jessica Parker?", "Which persons are married to fictional characters played by Sarah Jessica Parker?", "Which persons were married to fictional characters played by Sarah Jessica Parker?", "Who is married to fictional characters played by Sarah Jessica Parker?", "Who was married to fictional characters played by Sarah Jessica Parker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sarah_Jessica_Parker>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Sergei Bondarchuk?", "Which person was married to fictional characters played by Sergei Bondarchuk?", "Which persons are married to fictional characters played by Sergei Bondarchuk?", "Which persons were married to fictional characters played by Sergei Bondarchuk?", "Who is married to fictional characters played by Sergei Bondarchuk?", "Who was married to fictional characters played by Sergei Bondarchuk?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sergei_Bondarchuk>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Amy Brenneman?", "Which person was married to fictional characters played by Amy Brenneman?", "Which persons are married to fictional characters played by Amy Brenneman?", "Which persons were married to fictional characters played by Amy Brenneman?", "Who is married to fictional characters played by Amy Brenneman?", "Who was married to fictional characters played by Amy Brenneman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Amy_Brenneman>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Ana Brenda Contreras?", "Which person was married to fictional characters played by Ana Brenda Contreras?", "Which persons are married to fictional characters played by Ana Brenda Contreras?", "Which persons were married to fictional characters played by Ana Brenda Contreras?", "Who is married to fictional characters played by Ana Brenda Contreras?", "Who was married to fictional characters played by Ana Brenda Contreras?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ana_Brenda_Contreras>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Andy Griffith?", "Which person was married to fictional characters played by Andy Griffith?", "Which persons are married to fictional characters played by Andy Griffith?", "Which persons were married to fictional characters played by Andy Griffith?", "Who is married to fictional characters played by Andy Griffith?", "Who was married to fictional characters played by Andy Griffith?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Andy_Griffith>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Angela Kinsey?", "Which person was married to fictional characters played by Angela Kinsey?", "Which persons are married to fictional characters played by Angela Kinsey?", "Which persons were married to fictional characters played by Angela Kinsey?", "Who is married to fictional characters played by Angela Kinsey?", "Who was married to fictional characters played by Angela Kinsey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Angela_Kinsey>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Angelina Jolie?", "Which person was married to fictional characters played by Angelina Jolie?", "Which persons are married to fictional characters played by Angelina Jolie?", "Which persons were married to fictional characters played by Angelina Jolie?", "Who is married to fictional characters played by Angelina Jolie?", "Who was married to fictional characters played by Angelina Jolie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Angelina_Jolie>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Anjelica Huston?", "Which person was married to fictional characters played by Anjelica Huston?", "Which persons are married to fictional characters played by Anjelica Huston?", "Which persons were married to fictional characters played by Anjelica Huston?", "Who is married to fictional characters played by Anjelica Huston?", "Who was married to fictional characters played by Anjelica Huston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Anjelica_Huston>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by AnnaSophia Robb?", "Which person was married to fictional characters played by AnnaSophia Robb?", "Which persons are married to fictional characters played by AnnaSophia Robb?", "Which persons were married to fictional characters played by AnnaSophia Robb?", "Who is married to fictional characters played by AnnaSophia Robb?", "Who was married to fictional characters played by AnnaSophia Robb?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/AnnaSophia_Robb>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to fictional characters played by Anna Karina?", "Which person was married to fictional characters played by Anna Karina?", "Which persons are married to fictional characters played by Anna Karina?", "Which persons were married to fictional characters played by Anna Karina?", "Who is married to fictional characters played by Anna Karina?", "Who was married to fictional characters played by Anna Karina?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Anna_Karina>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Luc Leestemaker?", "Which person was married to persons married to Luc Leestemaker?", "Which persons are married to persons married to Luc Leestemaker?", "Which persons were married to persons married to Luc Leestemaker?", "Who is married to persons married to Luc Leestemaker?", "Who was married to persons married to Luc Leestemaker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luc_Leestemaker> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Luca Zingaretti?", "Which person was married to persons married to Luca Zingaretti?", "Which persons are married to persons married to Luca Zingaretti?", "Which persons were married to persons married to Luca Zingaretti?", "Who is married to persons married to Luca Zingaretti?", "Who was married to persons married to Luca Zingaretti?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luca_Zingaretti> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Lucia Moholy?", "Which person was married to persons married to Lucia Moholy?", "Which persons are married to persons married to Lucia Moholy?", "Which persons were married to persons married to Lucia Moholy?", "Who is married to persons married to Lucia Moholy?", "Who was married to persons married to Lucia Moholy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucia_Moholy> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Lucilla?", "Which person was married to persons married to Lucilla?", "Which persons are married to persons married to Lucilla?", "Which persons were married to persons married to Lucilla?", "Who is married to persons married to Lucilla?", "Who was married to persons married to Lucilla?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucilla> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Lucius Verus?", "Which person was married to persons married to Lucius Verus?", "Which persons are married to persons married to Lucius Verus?", "Which persons were married to persons married to Lucius Verus?", "Who is married to persons married to Lucius Verus?", "Who was married to persons married to Lucius Verus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucius_Verus> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Lucy Turnbull?", "Which person was married to persons married to Lucy Turnbull?", "Which persons are married to persons married to Lucy Turnbull?", "Which persons were married to persons married to Lucy Turnbull?", "Who is married to persons married to Lucy Turnbull?", "Who was married to persons married to Lucy Turnbull?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucy_Turnbull> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Lucé Vela?", "Which person was married to persons married to Lucé Vela?", "Which persons are married to persons married to Lucé Vela?", "Which persons were married to persons married to Lucé Vela?", "Who is married to persons married to Lucé Vela?", "Who was married to persons married to Lucé Vela?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucé_Vela> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Ludu Daw Amar?", "Which person was married to persons married to Ludu Daw Amar?", "Which persons are married to persons married to Ludu Daw Amar?", "Which persons were married to persons married to Ludu Daw Amar?", "Who is married to persons married to Ludu Daw Amar?", "Who was married to persons married to Ludu Daw Amar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludu_Daw_Amar> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Ludu U Hla?", "Which person was married to persons married to Ludu U Hla?", "Which persons are married to persons married to Ludu U Hla?", "Which persons were married to persons married to Ludu U Hla?", "Who is married to persons married to Ludu U Hla?", "Who was married to persons married to Ludu U Hla?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludu_U_Hla> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Luis Fortuño?", "Which person was married to persons married to Luis Fortuño?", "Which persons are married to persons married to Luis Fortuño?", "Which persons were married to persons married to Luis Fortuño?", "Who is married to persons married to Luis Fortuño?", "Who was married to persons married to Luis Fortuño?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luis_Fortuño> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Luisa Ranieri?", "Which person was married to persons married to Luisa Ranieri?", "Which persons are married to persons married to Luisa Ranieri?", "Which persons were married to persons married to Luisa Ranieri?", "Who is married to persons married to Luisa Ranieri?", "Who was married to persons married to Luisa Ranieri?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luisa_Ranieri> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Lynn Whitfield?", "Which person was married to persons married to Lynn Whitfield?", "Which persons are married to persons married to Lynn Whitfield?", "Which persons were married to persons married to Lynn Whitfield?", "Who is married to persons married to Lynn Whitfield?", "Who was married to persons married to Lynn Whitfield?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lynn_Whitfield> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Lysette Anthony?", "Which person was married to persons married to Lysette Anthony?", "Which persons are married to persons married to Lysette Anthony?", "Which persons were married to persons married to Lysette Anthony?", "Who is married to persons married to Lysette Anthony?", "Who was married to persons married to Lysette Anthony?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lysette_Anthony> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to László Moholy-Nagy?", "Which person was married to persons married to László Moholy-Nagy?", "Which persons are married to persons married to László Moholy-Nagy?", "Which persons were married to persons married to László Moholy-Nagy?", "Who is married to persons married to László Moholy-Nagy?", "Who was married to persons married to László Moholy-Nagy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/László_Moholy-Nagy> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to M. G. Ramachandran?", "Which person was married to persons married to M. G. Ramachandran?", "Which persons are married to persons married to M. G. Ramachandran?", "Which persons were married to persons married to M. G. Ramachandran?", "Who is married to persons married to M. G. Ramachandran?", "Who was married to persons married to M. G. Ramachandran?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/M._G._Ramachandran> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Malcolm Turnbull?", "Which person was married to persons married to Malcolm Turnbull?", "Which persons are married to persons married to Malcolm Turnbull?", "Which persons were married to persons married to Malcolm Turnbull?", "Who is married to persons married to Malcolm Turnbull?", "Who was married to persons married to Malcolm Turnbull?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Malcolm_Turnbull> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Maldev Rathore?", "Which person was married to persons married to Maldev Rathore?", "Which persons are married to persons married to Maldev Rathore?", "Which persons were married to persons married to Maldev Rathore?", "Who is married to persons married to Maldev Rathore?", "Who was married to persons married to Maldev Rathore?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maldev_Rathore> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Utaybah bin Abu Lahab?", "Which person was married to persons married to Utaybah bin Abu Lahab?", "Which persons are married to persons married to Utaybah bin Abu Lahab?", "Which persons were married to persons married to Utaybah bin Abu Lahab?", "Who is married to persons married to Utaybah bin Abu Lahab?", "Who was married to persons married to Utaybah bin Abu Lahab?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Utaybah_bin_Abu_Lahab> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to V. N. Janaki?", "Which person was married to persons married to V. N. Janaki?", "Which persons are married to persons married to V. N. Janaki?", "Which persons were married to persons married to V. N. Janaki?", "Who is married to persons married to V. N. Janaki?", "Who was married to persons married to V. N. Janaki?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/V._N._Janaki> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Val Butnaru?", "Which person was married to persons married to Val Butnaru?", "Which persons are married to persons married to Val Butnaru?", "Which persons were married to persons married to Val Butnaru?", "Who is married to persons married to Val Butnaru?", "Who was married to persons married to Val Butnaru?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Val_Butnaru> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Valentina Butnaru?", "Which person was married to persons married to Valentina Butnaru?", "Which persons are married to persons married to Valentina Butnaru?", "Which persons were married to persons married to Valentina Butnaru?", "Who is married to persons married to Valentina Butnaru?", "Who was married to persons married to Valentina Butnaru?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Valentina_Butnaru> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Vantile Whitfield?", "Which person was married to persons married to Vantile Whitfield?", "Which persons are married to persons married to Vantile Whitfield?", "Which persons were married to persons married to Vantile Whitfield?", "Who is married to persons married to Vantile Whitfield?", "Who was married to persons married to Vantile Whitfield?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Vantile_Whitfield> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Vera Tschechowa?", "Which person was married to persons married to Vera Tschechowa?", "Which persons are married to persons married to Vera Tschechowa?", "Which persons were married to persons married to Vera Tschechowa?", "Who is married to persons married to Vera Tschechowa?", "Who was married to persons married to Vera Tschechowa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Vera_Tschechowa> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Vere Harmsworth, 3rd Viscount Rothermere?", "Which person was married to persons married to Vere Harmsworth, 3rd Viscount Rothermere?", "Which persons are married to persons married to Vere Harmsworth, 3rd Viscount Rothermere?", "Which persons were married to persons married to Vere Harmsworth, 3rd Viscount Rothermere?", "Who is married to persons married to Vere Harmsworth, 3rd Viscount Rothermere?", "Who was married to persons married to Vere Harmsworth, 3rd Viscount Rothermere?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Vere_Harmsworth,_3rd_Viscount_Rothermere> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Marie Say?", "Which person was married to persons married to Marie Say?", "Which persons are married to persons married to Marie Say?", "Which persons were married to persons married to Marie Say?", "Who is married to persons married to Marie Say?", "Who was married to persons married to Marie Say?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Marie_Say> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Marieme Faye Sall?", "Which person was married to persons married to Marieme Faye Sall?", "Which persons are married to persons married to Marieme Faye Sall?", "Which persons were married to persons married to Marieme Faye Sall?", "Who is married to persons married to Marieme Faye Sall?", "Who was married to persons married to Marieme Faye Sall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Marieme_Faye_Sall> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Peyton Sawyer?", "Which person was married to persons married to Peyton Sawyer?", "Which persons are married to persons married to Peyton Sawyer?", "Which persons were married to persons married to Peyton Sawyer?", "Who is married to persons married to Peyton Sawyer?", "Who was married to persons married to Peyton Sawyer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Peyton_Sawyer> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Rusudan of Circassia?", "Which person was married to persons married to Rusudan of Circassia?", "Which persons are married to persons married to Rusudan of Circassia?", "Which persons were married to persons married to Rusudan of Circassia?", "Who is married to persons married to Rusudan of Circassia?", "Who was married to persons married to Rusudan of Circassia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rusudan_of_Circassia> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Sandhya Shantaram?", "Which person was married to persons married to Sandhya Shantaram?", "Which persons are married to persons married to Sandhya Shantaram?", "Which persons were married to persons married to Sandhya Shantaram?", "Who is married to persons married to Sandhya Shantaram?", "Who was married to persons married to Sandhya Shantaram?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sandhya_Shantaram> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Solomonia Saburova?", "Which person was married to persons married to Solomonia Saburova?", "Which persons are married to persons married to Solomonia Saburova?", "Which persons were married to persons married to Solomonia Saburova?", "Who is married to persons married to Solomonia Saburova?", "Who was married to persons married to Solomonia Saburova?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Solomonia_Saburova> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to George Grierson (printer)?", "Which person was married to persons married to George Grierson (printer)?", "Which persons are married to persons married to George Grierson (printer)?", "Which persons were married to persons married to George Grierson (printer)?", "Who is married to persons married to George Grierson (printer)?", "Who was married to persons married to George Grierson (printer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/George_Grierson_(printer)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Thomas Hassan?", "Which person was married to persons married to Thomas Hassan?", "Which persons are married to persons married to Thomas Hassan?", "Which persons were married to persons married to Thomas Hassan?", "Who is married to persons married to Thomas Hassan?", "Who was married to persons married to Thomas Hassan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Thomas_Hassan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Hyman B. Samuels?", "Which person was married to persons married to Hyman B. Samuels?", "Which persons are married to persons married to Hyman B. Samuels?", "Which persons were married to persons married to Hyman B. Samuels?", "Who is married to persons married to Hyman B. Samuels?", "Who was married to persons married to Hyman B. Samuels?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hyman_B._Samuels> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Suriyothai?", "Which person was married to persons married to Suriyothai?", "Which persons are married to persons married to Suriyothai?", "Which persons were married to persons married to Suriyothai?", "Who is married to persons married to Suriyothai?", "Who was married to persons married to Suriyothai?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Suriyothai> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Manuel Sadosky?", "Which person was married to persons married to Manuel Sadosky?", "Which persons are married to persons married to Manuel Sadosky?", "Which persons were married to persons married to Manuel Sadosky?", "Who is married to persons married to Manuel Sadosky?", "Who was married to persons married to Manuel Sadosky?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Manuel_Sadosky> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Bjørn Sand?", "Which person was married to persons married to Bjørn Sand?", "Which persons are married to persons married to Bjørn Sand?", "Which persons were married to persons married to Bjørn Sand?", "Who is married to persons married to Bjørn Sand?", "Who was married to persons married to Bjørn Sand?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bjørn_Sand> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Blanche of Namur?", "Which person was married to persons married to Blanche of Namur?", "Which persons are married to persons married to Blanche of Namur?", "Which persons were married to persons married to Blanche of Namur?", "Who is married to persons married to Blanche of Namur?", "Who was married to persons married to Blanche of Namur?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Blanche_of_Namur> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Derya Alabora?", "Which person was married to persons married to Derya Alabora?", "Which persons are married to persons married to Derya Alabora?", "Which persons were married to persons married to Derya Alabora?", "Who is married to persons married to Derya Alabora?", "Who was married to persons married to Derya Alabora?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Derya_Alabora> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Desmond FitzGerald (politician)?", "Which person was married to persons married to Desmond FitzGerald (politician)?", "Which persons are married to persons married to Desmond FitzGerald (politician)?", "Which persons were married to persons married to Desmond FitzGerald (politician)?", "Who is married to persons married to Desmond FitzGerald (politician)?", "Who was married to persons married to Desmond FitzGerald (politician)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Diana Wellesley, Duchess of Wellington?", "Which person was married to persons married to Diana Wellesley, Duchess of Wellington?", "Which persons are married to persons married to Diana Wellesley, Duchess of Wellington?", "Which persons were married to persons married to Diana Wellesley, Duchess of Wellington?", "Who is married to persons married to Diana Wellesley, Duchess of Wellington?", "Who was married to persons married to Diana Wellesley, Duchess of Wellington?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Diana_Wellesley,_Duchess_of_Wellington> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Dick Cheney?", "Which person was married to persons married to Dick Cheney?", "Which persons are married to persons married to Dick Cheney?", "Which persons were married to persons married to Dick Cheney?", "Who is married to persons married to Dick Cheney?", "Who was married to persons married to Dick Cheney?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dick_Cheney> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Gladys Vanderbilt Széchenyi?", "Which person was married to persons married to Gladys Vanderbilt Széchenyi?", "Which persons are married to persons married to Gladys Vanderbilt Széchenyi?", "Which persons were married to persons married to Gladys Vanderbilt Széchenyi?", "Who is married to persons married to Gladys Vanderbilt Széchenyi?", "Who was married to persons married to Gladys Vanderbilt Széchenyi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gladys_Vanderbilt_Széchenyi> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Gloria Carrá?", "Which person was married to persons married to Gloria Carrá?", "Which persons are married to persons married to Gloria Carrá?", "Which persons were married to persons married to Gloria Carrá?", "Who is married to persons married to Gloria Carrá?", "Who was married to persons married to Gloria Carrá?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gloria_Carrá> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Greg Penner?", "Which person was married to persons married to Greg Penner?", "Which persons are married to persons married to Greg Penner?", "Which persons were married to persons married to Greg Penner?", "Who is married to persons married to Greg Penner?", "Who was married to persons married to Greg Penner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Greg_Penner> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Grigori Aleksandrov?", "Which person was married to persons married to Grigori Aleksandrov?", "Which persons are married to persons married to Grigori Aleksandrov?", "Which persons were married to persons married to Grigori Aleksandrov?", "Who is married to persons married to Grigori Aleksandrov?", "Who was married to persons married to Grigori Aleksandrov?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Grigori_Aleksandrov> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Kevin Seal?", "Which person was married to persons married to Kevin Seal?", "Which persons are married to persons married to Kevin Seal?", "Which persons were married to persons married to Kevin Seal?", "Who is married to persons married to Kevin Seal?", "Who was married to persons married to Kevin Seal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kevin_Seal> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Khalida Safarova?", "Which person was married to persons married to Khalida Safarova?", "Which persons are married to persons married to Khalida Safarova?", "Which persons were married to persons married to Khalida Safarova?", "Who is married to persons married to Khalida Safarova?", "Who was married to persons married to Khalida Safarova?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Khalida_Safarova> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Khan Ataur Rahman?", "Which person was married to persons married to Khan Ataur Rahman?", "Which persons are married to persons married to Khan Ataur Rahman?", "Which persons were married to persons married to Khan Ataur Rahman?", "Who is married to persons married to Khan Ataur Rahman?", "Who was married to persons married to Khan Ataur Rahman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Khan_Ataur_Rahman> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Kishore Kumar?", "Which person was married to persons married to Kishore Kumar?", "Which persons are married to persons married to Kishore Kumar?", "Which persons were married to persons married to Kishore Kumar?", "Who is married to persons married to Kishore Kumar?", "Who was married to persons married to Kishore Kumar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kishore_Kumar> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Koji Yamamoto (actor)?", "Which person was married to persons married to Koji Yamamoto (actor)?", "Which persons are married to persons married to Koji Yamamoto (actor)?", "Which persons were married to persons married to Koji Yamamoto (actor)?", "Who is married to persons married to Koji Yamamoto (actor)?", "Who was married to persons married to Koji Yamamoto (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Koji_Yamamoto_(actor)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Kothamangalam Subbu?", "Which person was married to persons married to Kothamangalam Subbu?", "Which persons are married to persons married to Kothamangalam Subbu?", "Which persons were married to persons married to Kothamangalam Subbu?", "Who is married to persons married to Kothamangalam Subbu?", "Who was married to persons married to Kothamangalam Subbu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kothamangalam_Subbu> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Krishnachandran?", "Which person was married to persons married to Krishnachandran?", "Which persons are married to persons married to Krishnachandran?", "Which persons were married to persons married to Krishnachandran?", "Who is married to persons married to Krishnachandran?", "Who was married to persons married to Krishnachandran?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Krishnachandran> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Prince Sahle Selassie?", "Which person was married to persons married to Prince Sahle Selassie?", "Which persons are married to persons married to Prince Sahle Selassie?", "Which persons were married to persons married to Prince Sahle Selassie?", "Who is married to persons married to Prince Sahle Selassie?", "Who was married to persons married to Prince Sahle Selassie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Prince_Sahle_Selassie> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Prince Xavier of Bourbon-Parma?", "Which person was married to persons married to Prince Xavier of Bourbon-Parma?", "Which persons are married to persons married to Prince Xavier of Bourbon-Parma?", "Which persons were married to persons married to Prince Xavier of Bourbon-Parma?", "Who is married to persons married to Prince Xavier of Bourbon-Parma?", "Who was married to persons married to Prince Xavier of Bourbon-Parma?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Prince_Xavier_of_Bourbon-Parma> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Priya Bapat?", "Which person was married to persons married to Priya Bapat?", "Which persons are married to persons married to Priya Bapat?", "Which persons were married to persons married to Priya Bapat?", "Who is married to persons married to Priya Bapat?", "Who was married to persons married to Priya Bapat?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Priya_Bapat> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Puranmal?", "Which person was married to persons married to Puranmal?", "Which persons are married to persons married to Puranmal?", "Which persons were married to persons married to Puranmal?", "Who is married to persons married to Puranmal?", "Who was married to persons married to Puranmal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Puranmal> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Pwa Saw?", "Which person was married to persons married to Pwa Saw?", "Which persons are married to persons married to Pwa Saw?", "Which persons were married to persons married to Pwa Saw?", "Who is married to persons married to Pwa Saw?", "Who was married to persons married to Pwa Saw?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Pwa_Saw> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Queen Ratna of Nepal?", "Which person was married to persons married to Queen Ratna of Nepal?", "Which persons are married to persons married to Queen Ratna of Nepal?", "Which persons were married to persons married to Queen Ratna of Nepal?", "Who is married to persons married to Queen Ratna of Nepal?", "Who was married to persons married to Queen Ratna of Nepal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Queen_Ratna_of_Nepal> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Quinn Martin?", "Which person was married to persons married to Quinn Martin?", "Which persons are married to persons married to Quinn Martin?", "Which persons were married to persons married to Quinn Martin?", "Who is married to persons married to Quinn Martin?", "Who was married to persons married to Quinn Martin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Quinn_Martin> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Qutlugh Nigar Khanum?", "Which person was married to persons married to Qutlugh Nigar Khanum?", "Which persons are married to persons married to Qutlugh Nigar Khanum?", "Which persons were married to persons married to Qutlugh Nigar Khanum?", "Who is married to persons married to Qutlugh Nigar Khanum?", "Who was married to persons married to Qutlugh Nigar Khanum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Qutlugh_Nigar_Khanum> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Rachel Miner?", "Which person was married to persons married to Rachel Miner?", "Which persons are married to persons married to Rachel Miner?", "Which persons were married to persons married to Rachel Miner?", "Who is married to persons married to Rachel Miner?", "Who was married to persons married to Rachel Miner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rachel_Miner> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Rachel Portman?", "Which person was married to persons married to Rachel Portman?", "Which persons are married to persons married to Rachel Portman?", "Which persons were married to persons married to Rachel Portman?", "Who is married to persons married to Rachel Portman?", "Who was married to persons married to Rachel Portman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rachel_Portman> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Rajeshwari Sachdev?", "Which person was married to persons married to Rajeshwari Sachdev?", "Which persons are married to persons married to Rajeshwari Sachdev?", "Which persons were married to persons married to Rajeshwari Sachdev?", "Who is married to persons married to Rajeshwari Sachdev?", "Who was married to persons married to Rajeshwari Sachdev?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rajeshwari_Sachdev> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Howard F. Ahmanson Sr.?", "Which person was married to persons married to Howard F. Ahmanson Sr.?", "Which persons are married to persons married to Howard F. Ahmanson Sr.?", "Which persons were married to persons married to Howard F. Ahmanson Sr.?", "Who is married to persons married to Howard F. Ahmanson Sr.?", "Who was married to persons married to Howard F. Ahmanson Sr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Howard_F._Ahmanson_Sr.> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to James II of Cyprus?", "Which person was married to persons married to James II of Cyprus?", "Which persons are married to persons married to James II of Cyprus?", "Which persons were married to persons married to James II of Cyprus?", "Who is married to persons married to James II of Cyprus?", "Who was married to persons married to James II of Cyprus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/James_II_of_Cyprus> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Phoebe Halliwell?", "Which person was married to persons married to Phoebe Halliwell?", "Which persons are married to persons married to Phoebe Halliwell?", "Which persons were married to persons married to Phoebe Halliwell?", "Who is married to persons married to Phoebe Halliwell?", "Who was married to persons married to Phoebe Halliwell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Phoebe_Halliwell> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Shizuko Hoshi?", "Which person was married to persons married to Shizuko Hoshi?", "Which persons are married to persons married to Shizuko Hoshi?", "Which persons were married to persons married to Shizuko Hoshi?", "Who is married to persons married to Shizuko Hoshi?", "Who was married to persons married to Shizuko Hoshi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Shizuko_Hoshi> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Alan Halsall?", "Which person was married to persons married to Alan Halsall?", "Which persons are married to persons married to Alan Halsall?", "Which persons were married to persons married to Alan Halsall?", "Who is married to persons married to Alan Halsall?", "Who was married to persons married to Alan Halsall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alan_Halsall> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Alan Quartermaine (General Hospital)?", "Which person was married to persons married to Alan Quartermaine (General Hospital)?", "Which persons are married to persons married to Alan Quartermaine (General Hospital)?", "Which persons were married to persons married to Alan Quartermaine (General Hospital)?", "Who is married to persons married to Alan Quartermaine (General Hospital)?", "Who was married to persons married to Alan Quartermaine (General Hospital)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alan_Quartermaine_(General_Hospital)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Albert Parsons?", "Which person was married to persons married to Albert Parsons?", "Which persons are married to persons married to Albert Parsons?", "Which persons were married to persons married to Albert Parsons?", "Who is married to persons married to Albert Parsons?", "Who was married to persons married to Albert Parsons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Albert_Parsons> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Albert S. Ruddy?", "Which person was married to persons married to Albert S. Ruddy?", "Which persons are married to persons married to Albert S. Ruddy?", "Which persons were married to persons married to Albert S. Ruddy?", "Who is married to persons married to Albert S. Ruddy?", "Who was married to persons married to Albert S. Ruddy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Albert_S._Ruddy> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Alex O'Loughlin?", "Which person was married to persons married to Alex O'Loughlin?", "Which persons are married to persons married to Alex O'Loughlin?", "Which persons were married to persons married to Alex O'Loughlin?", "Who is married to persons married to Alex O'Loughlin?", "Who was married to persons married to Alex O'Loughlin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alex_O'Loughlin> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Alexander Godunov?", "Which person was married to persons married to Alexander Godunov?", "Which persons are married to persons married to Alexander Godunov?", "Which persons were married to persons married to Alexander Godunov?", "Who is married to persons married to Alexander Godunov?", "Who was married to persons married to Alexander Godunov?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alexander_Godunov> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Alexandre de Lesseps?", "Which person was married to persons married to Alexandre de Lesseps?", "Which persons are married to persons married to Alexandre de Lesseps?", "Which persons were married to persons married to Alexandre de Lesseps?", "Who is married to persons married to Alexandre de Lesseps?", "Who was married to persons married to Alexandre de Lesseps?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alexandre_de_Lesseps> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Alexandrine de Bleschamp?", "Which person was married to persons married to Alexandrine de Bleschamp?", "Which persons are married to persons married to Alexandrine de Bleschamp?", "Which persons were married to persons married to Alexandrine de Bleschamp?", "Who is married to persons married to Alexandrine de Bleschamp?", "Who was married to persons married to Alexandrine de Bleschamp?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alexandrine_de_Bleschamp> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Alfonso I d'Este, Duke of Ferrara?", "Which person was married to persons married to Alfonso I d'Este, Duke of Ferrara?", "Which persons are married to persons married to Alfonso I d'Este, Duke of Ferrara?", "Which persons were married to persons married to Alfonso I d'Este, Duke of Ferrara?", "Who is married to persons married to Alfonso I d'Este, Duke of Ferrara?", "Who was married to persons married to Alfonso I d'Este, Duke of Ferrara?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alfonso_I_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Alfonso of Aragon (1481–1500)?", "Which person was married to persons married to Alfonso of Aragon (1481–1500)?", "Which persons are married to persons married to Alfonso of Aragon (1481–1500)?", "Which persons were married to persons married to Alfonso of Aragon (1481–1500)?", "Who is married to persons married to Alfonso of Aragon (1481–1500)?", "Who was married to persons married to Alfonso of Aragon (1481–1500)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alfonso_of_Aragon_(1481–1500)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Alfred Lunt?", "Which person was married to persons married to Alfred Lunt?", "Which persons are married to persons married to Alfred Lunt?", "Which persons were married to persons married to Alfred Lunt?", "Who is married to persons married to Alfred Lunt?", "Who was married to persons married to Alfred Lunt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alfred_Lunt> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Ali?", "Which person was married to persons married to Ali?", "Which persons are married to persons married to Ali?", "Which persons were married to persons married to Ali?", "Who is married to persons married to Ali?", "Who was married to persons married to Ali?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ali> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Alistair Petrie?", "Which person was married to persons married to Alistair Petrie?", "Which persons are married to persons married to Alistair Petrie?", "Which persons were married to persons married to Alistair Petrie?", "Who is married to persons married to Alistair Petrie?", "Who was married to persons married to Alistair Petrie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alistair_Petrie> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Allan Turpin?", "Which person was married to persons married to Allan Turpin?", "Which persons are married to persons married to Allan Turpin?", "Which persons were married to persons married to Allan Turpin?", "Who is married to persons married to Allan Turpin?", "Who was married to persons married to Allan Turpin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Allan_Turpin> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Allen Paulson?", "Which person was married to persons married to Allen Paulson?", "Which persons are married to persons married to Allen Paulson?", "Which persons were married to persons married to Allen Paulson?", "Who is married to persons married to Allen Paulson?", "Who was married to persons married to Allen Paulson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Allen_Paulson> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Alma Adamkienė?", "Which person was married to persons married to Alma Adamkienė?", "Which persons are married to persons married to Alma Adamkienė?", "Which persons were married to persons married to Alma Adamkienė?", "Who is married to persons married to Alma Adamkienė?", "Who was married to persons married to Alma Adamkienė?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alma_Adamkienė> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Charles, Count of Valois?", "Which person was married to persons married to Charles, Count of Valois?", "Which persons are married to persons married to Charles, Count of Valois?", "Which persons were married to persons married to Charles, Count of Valois?", "Who is married to persons married to Charles, Count of Valois?", "Who was married to persons married to Charles, Count of Valois?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charles,_Count_of_Valois> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Charles III Philip, Elector Palatine?", "Which person was married to persons married to Charles III Philip, Elector Palatine?", "Which persons are married to persons married to Charles III Philip, Elector Palatine?", "Which persons were married to persons married to Charles III Philip, Elector Palatine?", "Who is married to persons married to Charles III Philip, Elector Palatine?", "Who was married to persons married to Charles III Philip, Elector Palatine?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charles_III_Philip,_Elector_Palatine> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Charles III William, Margrave of Baden-Durlach?", "Which person was married to persons married to Charles III William, Margrave of Baden-Durlach?", "Which persons are married to persons married to Charles III William, Margrave of Baden-Durlach?", "Which persons were married to persons married to Charles III William, Margrave of Baden-Durlach?", "Who is married to persons married to Charles III William, Margrave of Baden-Durlach?", "Who was married to persons married to Charles III William, Margrave of Baden-Durlach?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charles_III_William,_Margrave_of_Baden-Durlach> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Charles XI of Sweden?", "Which person was married to persons married to Charles XI of Sweden?", "Which persons are married to persons married to Charles XI of Sweden?", "Which persons were married to persons married to Charles XI of Sweden?", "Who is married to persons married to Charles XI of Sweden?", "Who was married to persons married to Charles XI of Sweden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charles_XI_of_Sweden> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Charlton Heston?", "Which person was married to persons married to Charlton Heston?", "Which persons are married to persons married to Charlton Heston?", "Which persons were married to persons married to Charlton Heston?", "Who is married to persons married to Charlton Heston?", "Who was married to persons married to Charlton Heston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charlton_Heston> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Chetan Anand (director)?", "Which person was married to persons married to Chetan Anand (director)?", "Which persons are married to persons married to Chetan Anand (director)?", "Which persons were married to persons married to Chetan Anand (director)?", "Who is married to persons married to Chetan Anand (director)?", "Who was married to persons married to Chetan Anand (director)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chetan_Anand_(director)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Florence Reed?", "Which person was married to persons married to Florence Reed?", "Which persons are married to persons married to Florence Reed?", "Which persons were married to persons married to Florence Reed?", "Who is married to persons married to Florence Reed?", "Who was married to persons married to Florence Reed?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Florence_Reed> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Anand Mohan Singh?", "Which person was married to persons married to Anand Mohan Singh?", "Which persons are married to persons married to Anand Mohan Singh?", "Which persons were married to persons married to Anand Mohan Singh?", "Who is married to persons married to Anand Mohan Singh?", "Who was married to persons married to Anand Mohan Singh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Anand_Mohan_Singh> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Nieves Navarro?", "Which person was married to persons married to Nieves Navarro?", "Which persons are married to persons married to Nieves Navarro?", "Which persons were married to persons married to Nieves Navarro?", "Who is married to persons married to Nieves Navarro?", "Who was married to persons married to Nieves Navarro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nieves_Navarro> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Nijō Motohiro?", "Which person was married to persons married to Nijō Motohiro?", "Which persons are married to persons married to Nijō Motohiro?", "Which persons were married to persons married to Nijō Motohiro?", "Who is married to persons married to Nijō Motohiro?", "Who was married to persons married to Nijō Motohiro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nijō_Motohiro> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Nilmini Tennakoon?", "Which person was married to persons married to Nilmini Tennakoon?", "Which persons are married to persons married to Nilmini Tennakoon?", "Which persons were married to persons married to Nilmini Tennakoon?", "Who is married to persons married to Nilmini Tennakoon?", "Who was married to persons married to Nilmini Tennakoon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nilmini_Tennakoon> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Nitin Sahrawat?", "Which person was married to persons married to Nitin Sahrawat?", "Which persons are married to persons married to Nitin Sahrawat?", "Which persons were married to persons married to Nitin Sahrawat?", "Who is married to persons married to Nitin Sahrawat?", "Who was married to persons married to Nitin Sahrawat?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nitin_Sahrawat> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Nnamdi Azikiwe?", "Which person was married to persons married to Nnamdi Azikiwe?", "Which persons are married to persons married to Nnamdi Azikiwe?", "Which persons were married to persons married to Nnamdi Azikiwe?", "Who is married to persons married to Nnamdi Azikiwe?", "Who was married to persons married to Nnamdi Azikiwe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nnamdi_Azikiwe> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Noah Bean?", "Which person was married to persons married to Noah Bean?", "Which persons are married to persons married to Noah Bean?", "Which persons were married to persons married to Noah Bean?", "Who is married to persons married to Noah Bean?", "Who was married to persons married to Noah Bean?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Noah_Bean> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Noriko Shinohara?", "Which person was married to persons married to Noriko Shinohara?", "Which persons are married to persons married to Noriko Shinohara?", "Which persons were married to persons married to Noriko Shinohara?", "Who is married to persons married to Noriko Shinohara?", "Who was married to persons married to Noriko Shinohara?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Noriko_Shinohara> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Olafr Havrevold?", "Which person was married to persons married to Olafr Havrevold?", "Which persons are married to persons married to Olafr Havrevold?", "Which persons were married to persons married to Olafr Havrevold?", "Who is married to persons married to Olafr Havrevold?", "Who was married to persons married to Olafr Havrevold?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Olafr_Havrevold> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons married to Charlotte King?", "Which person was married to persons married to Charlotte King?", "Which persons are married to persons married to Charlotte King?", "Which persons were married to persons married to Charlotte King?", "Who is married to persons married to Charlotte King?", "Who was married to persons married to Charlotte King?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charlotte_King> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "130",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons born in Charles E. King?", "Which person was married to persons born in Charles E. King?", "Which persons are married to persons born in Charles E. King?", "Which persons were married to persons born in Charles E. King?", "Who is married to persons born in Charles E. King?", "Who was married to persons born in Charles E. King?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charles_E._King> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "130",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons born in Carlos Roberto Reina?", "Which person was married to persons born in Carlos Roberto Reina?", "Which persons are married to persons born in Carlos Roberto Reina?", "Which persons were married to persons born in Carlos Roberto Reina?", "Who is married to persons born in Carlos Roberto Reina?", "Who was married to persons born in Carlos Roberto Reina?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carlos_Roberto_Reina> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "130",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons born in Roland de Velville?", "Which person was married to persons born in Roland de Velville?", "Which persons are married to persons born in Roland de Velville?", "Which persons were married to persons born in Roland de Velville?", "Who is married to persons born in Roland de Velville?", "Who was married to persons born in Roland de Velville?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Roland_de_Velville> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "130",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons born in Philip Louis, Duke of Schleswig-Holstein-Sonderburg-Wiesenburg?", "Which person was married to persons born in Philip Louis, Duke of Schleswig-Holstein-Sonderburg-Wiesenburg?", "Which persons are married to persons born in Philip Louis, Duke of Schleswig-Holstein-Sonderburg-Wiesenburg?", "Which persons were married to persons born in Philip Louis, Duke of Schleswig-Holstein-Sonderburg-Wiesenburg?", "Who is married to persons born in Philip Louis, Duke of Schleswig-Holstein-Sonderburg-Wiesenburg?", "Who was married to persons born in Philip Louis, Duke of Schleswig-Holstein-Sonderburg-Wiesenburg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Philip_Louis,_Duke_of_Schleswig-Holstein-Sonderburg-Wiesenburg> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "130",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Which person is married to persons born in Juan Carlos Sistos?", "Which person was married to persons born in Juan Carlos Sistos?", "Which persons are married to persons born in Juan Carlos Sistos?", "Which persons were married to persons born in Juan Carlos Sistos?", "Who is married to persons born in Juan Carlos Sistos?", "Who was married to persons born in Juan Carlos Sistos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Juan_Carlos_Sistos> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Luc Leestemaker?", "What was born in persons married to Luc Leestemaker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luc_Leestemaker> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Luca Zingaretti?", "What was born in persons married to Luca Zingaretti?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luca_Zingaretti> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Lucia Bosè?", "What was born in persons married to Lucia Bosè?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucia_Bosè> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Lucia Moholy?", "What was born in persons married to Lucia Moholy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucia_Moholy> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Lucy Turnbull?", "What was born in persons married to Lucy Turnbull?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucy_Turnbull> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Lucé Vela?", "What was born in persons married to Lucé Vela?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucé_Vela> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Ludu Daw Amar?", "What was born in persons married to Ludu Daw Amar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludu_Daw_Amar> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Ludu U Hla?", "What was born in persons married to Ludu U Hla?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludu_U_Hla> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Luisa Ranieri?", "What was born in persons married to Luisa Ranieri?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luisa_Ranieri> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Lynn Whitfield?", "What was born in persons married to Lynn Whitfield?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lynn_Whitfield> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Lysette Anthony?", "What was born in persons married to Lysette Anthony?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lysette_Anthony> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to László Moholy-Nagy?", "What was born in persons married to László Moholy-Nagy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/László_Moholy-Nagy> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to M. G. Ramachandran?", "What was born in persons married to M. G. Ramachandran?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/M._G._Ramachandran> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Magdalena Graaf?", "What was born in persons married to Magdalena Graaf?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Magdalena_Graaf> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Malcolm Turnbull?", "What was born in persons married to Malcolm Turnbull?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Malcolm_Turnbull> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to V. N. Janaki?", "What was born in persons married to V. N. Janaki?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/V._N._Janaki> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Val Butnaru?", "What was born in persons married to Val Butnaru?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Val_Butnaru> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Valentina Butnaru?", "What was born in persons married to Valentina Butnaru?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Valentina_Butnaru> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Valeriy Borzov?", "What was born in persons married to Valeriy Borzov?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Valeriy_Borzov> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Vantile Whitfield?", "What was born in persons married to Vantile Whitfield?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Vantile_Whitfield> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Vera Tschechowa?", "What was born in persons married to Vera Tschechowa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Vera_Tschechowa> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Veronika Franz and Severin Fiala?", "What was born in persons married to Veronika Franz and Severin Fiala?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Veronika_Franz_and_Severin_Fiala> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Marieme Faye Sall?", "What was born in persons married to Marieme Faye Sall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Marieme_Faye_Sall> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Sandhya Shantaram?", "What was born in persons married to Sandhya Shantaram?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sandhya_Shantaram> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Thomas Hassan?", "What was born in persons married to Thomas Hassan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Thomas_Hassan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Hyman B. Samuels?", "What was born in persons married to Hyman B. Samuels?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hyman_B._Samuels> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Manuel Sadosky?", "What was born in persons married to Manuel Sadosky?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Manuel_Sadosky> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Bjørn Sand?", "What was born in persons married to Bjørn Sand?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bjørn_Sand> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Deirdre O'Connell?", "What was born in persons married to Deirdre O'Connell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Deirdre_O'Connell> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Derya Alabora?", "What was born in persons married to Derya Alabora?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Derya_Alabora> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Desha Breckinridge?", "What was born in persons married to Desha Breckinridge?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Desha_Breckinridge> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Desmond FitzGerald (politician)?", "What was born in persons married to Desmond FitzGerald (politician)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Diana Wellesley, Duchess of Wellington?", "What was born in persons married to Diana Wellesley, Duchess of Wellington?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Diana_Wellesley,_Duchess_of_Wellington> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Dick Cheney?", "What was born in persons married to Dick Cheney?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dick_Cheney> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Gladys Vanderbilt Széchenyi?", "What was born in persons married to Gladys Vanderbilt Széchenyi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gladys_Vanderbilt_Széchenyi> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Gloria Carrá?", "What was born in persons married to Gloria Carrá?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gloria_Carrá> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Grigori Aleksandrov?", "What was born in persons married to Grigori Aleksandrov?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Grigori_Aleksandrov> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Kevin Seal?", "What was born in persons married to Kevin Seal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kevin_Seal> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Khalida Safarova?", "What was born in persons married to Khalida Safarova?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Khalida_Safarova> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Khan Ataur Rahman?", "What was born in persons married to Khan Ataur Rahman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Khan_Ataur_Rahman> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Kishore Kumar?", "What was born in persons married to Kishore Kumar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kishore_Kumar> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Koji Yamamoto (actor)?", "What was born in persons married to Koji Yamamoto (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Koji_Yamamoto_(actor)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Kothamangalam Subbu?", "What was born in persons married to Kothamangalam Subbu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kothamangalam_Subbu> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Krishnachandran?", "What was born in persons married to Krishnachandran?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Krishnachandran> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Priya Bapat?", "What was born in persons married to Priya Bapat?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Priya_Bapat> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Quinn Martin?", "What was born in persons married to Quinn Martin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Quinn_Martin> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Rachel Miner?", "What was born in persons married to Rachel Miner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rachel_Miner> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Rachel Portman?", "What was born in persons married to Rachel Portman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rachel_Portman> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Ragnheiður Melsteð?", "What was born in persons married to Ragnheiður Melsteð?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ragnheiður_Melsteð> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Rajeshwari Sachdev?", "What was born in persons married to Rajeshwari Sachdev?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rajeshwari_Sachdev> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Howard F. Ahmanson Sr.?", "What was born in persons married to Howard F. Ahmanson Sr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Howard_F._Ahmanson_Sr.> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Shizuko Hoshi?", "What was born in persons married to Shizuko Hoshi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Shizuko_Hoshi> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Albert S. Ruddy?", "What was born in persons married to Albert S. Ruddy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Albert_S._Ruddy> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Alex O'Loughlin?", "What was born in persons married to Alex O'Loughlin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alex_O'Loughlin> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Alexander Godunov?", "What was born in persons married to Alexander Godunov?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alexander_Godunov> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Alexandre de Lesseps?", "What was born in persons married to Alexandre de Lesseps?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alexandre_de_Lesseps> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Alfred Lunt?", "What was born in persons married to Alfred Lunt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alfred_Lunt> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Alistair Petrie?", "What was born in persons married to Alistair Petrie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alistair_Petrie> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Allan Turpin?", "What was born in persons married to Allan Turpin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Allan_Turpin> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Allen Paulson?", "What was born in persons married to Allen Paulson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Allen_Paulson> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Alma Adamkienė?", "What was born in persons married to Alma Adamkienė?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alma_Adamkienė> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Altiero Spinelli?", "What was born in persons married to Altiero Spinelli?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Altiero_Spinelli> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Charlton Heston?", "What was born in persons married to Charlton Heston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charlton_Heston> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Florence Reed?", "What was born in persons married to Florence Reed?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Florence_Reed> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Anand Mohan Singh?", "What was born in persons married to Anand Mohan Singh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Anand_Mohan_Singh> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Nieves Navarro?", "What was born in persons married to Nieves Navarro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nieves_Navarro> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Nijō Motohiro?", "What was born in persons married to Nijō Motohiro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nijō_Motohiro> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Nikolai Karachentsov?", "What was born in persons married to Nikolai Karachentsov?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nikolai_Karachentsov> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Nilmini Tennakoon?", "What was born in persons married to Nilmini Tennakoon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nilmini_Tennakoon> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Nirmal Kumar?", "What was born in persons married to Nirmal Kumar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nirmal_Kumar> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Nitin Sahrawat?", "What was born in persons married to Nitin Sahrawat?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nitin_Sahrawat> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Nnamdi Azikiwe?", "What was born in persons married to Nnamdi Azikiwe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nnamdi_Azikiwe> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Noah Bean?", "What was born in persons married to Noah Bean?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Noah_Bean> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Olafr Havrevold?", "What was born in persons married to Olafr Havrevold?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Olafr_Havrevold> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Diana Laura Riojas?", "What was born in persons married to Diana Laura Riojas?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Diana_Laura_Riojas> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to George I, Landgrave of Hesse-Darmstadt?", "What was born in persons married to George I, Landgrave of Hesse-Darmstadt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/George_I,_Landgrave_of_Hesse-Darmstadt> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Louis John Gardella?", "What was born in persons married to Louis John Gardella?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Louis_John_Gardella> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Sawsan Gabra Ayoub Khalil?", "What was born in persons married to Sawsan Gabra Ayoub Khalil?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sawsan_Gabra_Ayoub_Khalil> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Sulochana Gadgil?", "What was born in persons married to Sulochana Gadgil?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sulochana_Gadgil> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Ramabai Peshwa?", "What was born in persons married to Ramabai Peshwa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ramabai_Peshwa> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Azam Farahi?", "What was born in persons married to Azam Farahi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Azam_Farahi> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Aïssata Issoufou Mahamadou?", "What was born in persons married to Aïssata Issoufou Mahamadou?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Aïssata_Issoufou_Mahamadou> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Baburaj (actor)?", "What was born in persons married to Baburaj (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Baburaj_(actor)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Barbara Stühlmeyer?", "What was born in persons married to Barbara Stühlmeyer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Barbara_Stühlmeyer> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Barbara of Brandenburg, Marquise of Mantua?", "What was born in persons married to Barbara of Brandenburg, Marquise of Mantua?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Barbara_of_Brandenburg,_Marquise_of_Mantua> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Barry Levinson?", "What was born in persons married to Barry Levinson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Barry_Levinson> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Liya Akhedzhakova?", "What was born in persons married to Liya Akhedzhakova?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Liya_Akhedzhakova> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Lord Frederick Cavendish?", "What was born in persons married to Lord Frederick Cavendish?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lord_Frederick_Cavendish> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Louis-Ferdinand Céline?", "What was born in persons married to Louis-Ferdinand Céline?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Louis-Ferdinand_Céline> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Caitlin Stasey?", "What was born in persons married to Caitlin Stasey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Caitlin_Stasey> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Cal Rampton?", "What was born in persons married to Cal Rampton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cal_Rampton> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Candace Cameron Bure?", "What was born in persons married to Candace Cameron Bure?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Candace_Cameron_Bure> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Carl Sagan?", "What was born in persons married to Carl Sagan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carl_Sagan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Carla Arocha?", "What was born in persons married to Carla Arocha?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carla_Arocha> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Carmine Giovinazzo?", "What was born in persons married to Carmine Giovinazzo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carmine_Giovinazzo> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Carolina Rivas?", "What was born in persons married to Carolina Rivas?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carolina_Rivas> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Caroline St-Hilaire?", "What was born in persons married to Caroline St-Hilaire?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Caroline_St-Hilaire> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Catarina de Lencastre, Viscountess of Balsemão?", "What was born in persons married to Catarina de Lencastre, Viscountess of Balsemão?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Catarina_de_Lencastre,_Viscountess_of_Balsemão> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Chien-Shiung Wu?", "What was born in persons married to Chien-Shiung Wu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chien-Shiung_Wu> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons married to Chitrasena?", "What was born in persons married to Chitrasena?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chitrasena> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in Paul Noonan?", "What was born in persons born in Paul Noonan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Paul_Noonan> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in Paul Conlin?", "What was born in persons born in Paul Conlin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Paul_Conlin> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in Tom McKay (athlete)?", "What was born in persons born in Tom McKay (athlete)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tom_McKay_(athlete)> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in Juan Carlos Sistos?", "What was born in persons born in Juan Carlos Sistos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Juan_Carlos_Sistos> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in Georgi Petrov (footballer, born 1974)?", "What was born in persons born in Georgi Petrov (footballer, born 1974)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Georgi_Petrov_(footballer,_born_1974)> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in Atanas Fidanin?", "What was born in persons born in Atanas Fidanin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Atanas_Fidanin> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in Tsvetana Sotirova?", "What was born in persons born in Tsvetana Sotirova?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tsvetana_Sotirova> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in Dame Stoykov?", "What was born in persons born in Dame Stoykov?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dame_Stoykov> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in Mario Metushev?", "What was born in persons born in Mario Metushev?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mario_Metushev> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in Mauro Radaelli?", "What was born in persons born in Mauro Radaelli?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mauro_Radaelli> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in Philip Louis, Duke of Schleswig-Holstein-Sonderburg-Wiesenburg?", "What was born in persons born in Philip Louis, Duke of Schleswig-Holstein-Sonderburg-Wiesenburg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Philip_Louis,_Duke_of_Schleswig-Holstein-Sonderburg-Wiesenburg> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in Carlos Roberto Reina?", "What was born in persons born in Carlos Roberto Reina?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carlos_Roberto_Reina> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in Ulises Torres?", "What was born in persons born in Ulises Torres?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ulises_Torres> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in Alessandro Mori Nunes?", "What was born in persons born in Alessandro Mori Nunes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alessandro_Mori_Nunes> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in João Paulo (footballer, born 1983)?", "What was born in persons born in João Paulo (footballer, born 1983)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/João_Paulo_(footballer,_born_1983)> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in Jorge Novak?", "What was born in persons born in Jorge Novak?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jorge_Novak> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in Abdullahi Balarabe Salame?", "What was born in persons born in Abdullahi Balarabe Salame?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Abdullahi_Balarabe_Salame> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in Jhonata de Lima Ferreira?", "What was born in persons born in Jhonata de Lima Ferreira?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jhonata_de_Lima_Ferreira> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in Jennifer Dickson?", "What was born in persons born in Jennifer Dickson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jennifer_Dickson> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in Steve Dodd?", "What was born in persons born in Steve Dodd?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Steve_Dodd> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in Rangel Valchanov?", "What was born in persons born in Rangel Valchanov?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rangel_Valchanov> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in Eri Ogihara?", "What was born in persons born in Eri Ogihara?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Eri_Ogihara> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in Heather Rankin (curler)?", "What was born in persons born in Heather Rankin (curler)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Heather_Rankin_(curler)> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in Carolyn Rodrigues?", "What was born in persons born in Carolyn Rodrigues?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carolyn_Rodrigues> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in Henry Augustine Tayloe?", "What was born in persons born in Henry Augustine Tayloe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Henry_Augustine_Tayloe> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in Perla Morones?", "What was born in persons born in Perla Morones?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Perla_Morones> <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Mabel Cook Cole?", "What was developed by persons married to Mabel Cook Cole?", "Which work is developed by persons married to Mabel Cook Cole?", "Which work was developed by persons married to Mabel Cook Cole?", "Which works are developed by persons married to Mabel Cook Cole?", "Which works were developed by persons married to Mabel Cook Cole?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mabel_Cook_Cole> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Letícia Persiles?", "What was developed by persons married to Letícia Persiles?", "Which work is developed by persons married to Letícia Persiles?", "Which work was developed by persons married to Letícia Persiles?", "Which works are developed by persons married to Letícia Persiles?", "Which works were developed by persons married to Letícia Persiles?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Letícia_Persiles> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Tereza Seiblitz?", "What was developed by persons married to Tereza Seiblitz?", "Which work is developed by persons married to Tereza Seiblitz?", "Which work was developed by persons married to Tereza Seiblitz?", "Which works are developed by persons married to Tereza Seiblitz?", "Which works were developed by persons married to Tereza Seiblitz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tereza_Seiblitz> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Patrick Sean Smith?", "What was developed by persons married to Patrick Sean Smith?", "Which work is developed by persons married to Patrick Sean Smith?", "Which work was developed by persons married to Patrick Sean Smith?", "Which works are developed by persons married to Patrick Sean Smith?", "Which works were developed by persons married to Patrick Sean Smith?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Patrick_Sean_Smith> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Cynthia Lamontagne?", "What was developed by persons married to Cynthia Lamontagne?", "Which work is developed by persons married to Cynthia Lamontagne?", "Which work was developed by persons married to Cynthia Lamontagne?", "Which works are developed by persons married to Cynthia Lamontagne?", "Which works were developed by persons married to Cynthia Lamontagne?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cynthia_Lamontagne> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Kristen Cloke?", "What was developed by persons married to Kristen Cloke?", "Which work is developed by persons married to Kristen Cloke?", "Which work was developed by persons married to Kristen Cloke?", "Which works are developed by persons married to Kristen Cloke?", "Which works were developed by persons married to Kristen Cloke?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kristen_Cloke> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Jennifer Schwalbach Smith?", "What was developed by persons married to Jennifer Schwalbach Smith?", "Which work is developed by persons married to Jennifer Schwalbach Smith?", "Which work was developed by persons married to Jennifer Schwalbach Smith?", "Which works are developed by persons married to Jennifer Schwalbach Smith?", "Which works were developed by persons married to Jennifer Schwalbach Smith?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jennifer_Schwalbach_Smith> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Jill Latiano?", "What was developed by persons married to Jill Latiano?", "Which work is developed by persons married to Jill Latiano?", "Which work was developed by persons married to Jill Latiano?", "Which works are developed by persons married to Jill Latiano?", "Which works were developed by persons married to Jill Latiano?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jill_Latiano> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Emily Short?", "What was developed by persons married to Emily Short?", "Which work is developed by persons married to Emily Short?", "Which work was developed by persons married to Emily Short?", "Which works are developed by persons married to Emily Short?", "Which works were developed by persons married to Emily Short?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Emily_Short> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Annie Potts?", "What was developed by persons married to Annie Potts?", "Which work is developed by persons married to Annie Potts?", "Which work was developed by persons married to Annie Potts?", "Which works are developed by persons married to Annie Potts?", "Which works were developed by persons married to Annie Potts?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Annie_Potts> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Rose Leslie?", "What was developed by persons married to Rose Leslie?", "Which work is developed by persons married to Rose Leslie?", "Which work was developed by persons married to Rose Leslie?", "Which works are developed by persons married to Rose Leslie?", "Which works were developed by persons married to Rose Leslie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rose_Leslie> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Susanne Daniels?", "What was developed by persons married to Susanne Daniels?", "Which work is developed by persons married to Susanne Daniels?", "Which work was developed by persons married to Susanne Daniels?", "Which works are developed by persons married to Susanne Daniels?", "Which works were developed by persons married to Susanne Daniels?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Susanne_Daniels> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Julie Wilson Nimmo?", "What was developed by persons married to Julie Wilson Nimmo?", "Which work is developed by persons married to Julie Wilson Nimmo?", "Which work was developed by persons married to Julie Wilson Nimmo?", "Which works are developed by persons married to Julie Wilson Nimmo?", "Which works were developed by persons married to Julie Wilson Nimmo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Julie_Wilson_Nimmo> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Rachel Ramras?", "What was developed by persons married to Rachel Ramras?", "Which work is developed by persons married to Rachel Ramras?", "Which work was developed by persons married to Rachel Ramras?", "Which works are developed by persons married to Rachel Ramras?", "Which works were developed by persons married to Rachel Ramras?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rachel_Ramras> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Bonnie Lythgoe?", "What was developed by persons married to Bonnie Lythgoe?", "Which work is developed by persons married to Bonnie Lythgoe?", "Which work was developed by persons married to Bonnie Lythgoe?", "Which works are developed by persons married to Bonnie Lythgoe?", "Which works were developed by persons married to Bonnie Lythgoe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bonnie_Lythgoe> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Lita Grey?", "What was developed by persons married to Lita Grey?", "Which work is developed by persons married to Lita Grey?", "Which work was developed by persons married to Lita Grey?", "Which works are developed by persons married to Lita Grey?", "Which works were developed by persons married to Lita Grey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lita_Grey> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Mildred Harris?", "What was developed by persons married to Mildred Harris?", "Which work is developed by persons married to Mildred Harris?", "Which work was developed by persons married to Mildred Harris?", "Which works are developed by persons married to Mildred Harris?", "Which works were developed by persons married to Mildred Harris?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mildred_Harris> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Bonnie MacBird?", "What was developed by persons married to Bonnie MacBird?", "Which work is developed by persons married to Bonnie MacBird?", "Which work was developed by persons married to Bonnie MacBird?", "Which works are developed by persons married to Bonnie MacBird?", "Which works were developed by persons married to Bonnie MacBird?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bonnie_MacBird> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Oona O'Neill?", "What was developed by persons married to Oona O'Neill?", "Which work is developed by persons married to Oona O'Neill?", "Which work was developed by persons married to Oona O'Neill?", "Which works are developed by persons married to Oona O'Neill?", "Which works were developed by persons married to Oona O'Neill?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Oona_O'Neill> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Paulette Goddard?", "What was developed by persons married to Paulette Goddard?", "Which work is developed by persons married to Paulette Goddard?", "Which work was developed by persons married to Paulette Goddard?", "Which works are developed by persons married to Paulette Goddard?", "Which works were developed by persons married to Paulette Goddard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Paulette_Goddard> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Gowri Pandit?", "What was developed by persons married to Gowri Pandit?", "Which work is developed by persons married to Gowri Pandit?", "Which work was developed by persons married to Gowri Pandit?", "Which works are developed by persons married to Gowri Pandit?", "Which works were developed by persons married to Gowri Pandit?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gowri_Pandit> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Terry Amburgey?", "What was developed by persons married to Terry Amburgey?", "Which work is developed by persons married to Terry Amburgey?", "Which work was developed by persons married to Terry Amburgey?", "Which works are developed by persons married to Terry Amburgey?", "Which works were developed by persons married to Terry Amburgey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Terry_Amburgey> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Molly Ostertag?", "What was developed by persons married to Molly Ostertag?", "Which work is developed by persons married to Molly Ostertag?", "Which work was developed by persons married to Molly Ostertag?", "Which works are developed by persons married to Molly Ostertag?", "Which works were developed by persons married to Molly Ostertag?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Molly_Ostertag> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Frances Lear?", "What was developed by persons married to Frances Lear?", "Which work is developed by persons married to Frances Lear?", "Which work was developed by persons married to Frances Lear?", "Which works are developed by persons married to Frances Lear?", "Which works were developed by persons married to Frances Lear?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Frances_Lear> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Maurice de Rothschild?", "What was developed by persons married to Maurice de Rothschild?", "Which work is developed by persons married to Maurice de Rothschild?", "Which work was developed by persons married to Maurice de Rothschild?", "Which works are developed by persons married to Maurice de Rothschild?", "Which works were developed by persons married to Maurice de Rothschild?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maurice_de_Rothschild> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Valerie Curtin?", "What was developed by persons married to Valerie Curtin?", "Which work is developed by persons married to Valerie Curtin?", "Which work was developed by persons married to Valerie Curtin?", "Which works are developed by persons married to Valerie Curtin?", "Which works were developed by persons married to Valerie Curtin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Valerie_Curtin> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Noura Ghazi?", "What was developed by persons married to Noura Ghazi?", "Which work is developed by persons married to Noura Ghazi?", "Which work was developed by persons married to Noura Ghazi?", "Which works are developed by persons married to Noura Ghazi?", "Which works were developed by persons married to Noura Ghazi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Noura_Ghazi> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Carlene Watkins?", "What was developed by persons married to Carlene Watkins?", "Which work is developed by persons married to Carlene Watkins?", "Which work was developed by persons married to Carlene Watkins?", "Which works are developed by persons married to Carlene Watkins?", "Which works were developed by persons married to Carlene Watkins?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carlene_Watkins> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Lisa Howard (Canadian actress)?", "What was developed by persons married to Lisa Howard (Canadian actress)?", "Which work is developed by persons married to Lisa Howard (Canadian actress)?", "Which work was developed by persons married to Lisa Howard (Canadian actress)?", "Which works are developed by persons married to Lisa Howard (Canadian actress)?", "Which works were developed by persons married to Lisa Howard (Canadian actress)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lisa_Howard_(Canadian_actress)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Zumbi?", "What was developed by persons married to Zumbi?", "Which work is developed by persons married to Zumbi?", "Which work was developed by persons married to Zumbi?", "Which works are developed by persons married to Zumbi?", "Which works were developed by persons married to Zumbi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Zumbi> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Laura Marks?", "What was developed by persons married to Laura Marks?", "Which work is developed by persons married to Laura Marks?", "Which work was developed by persons married to Laura Marks?", "Which works are developed by persons married to Laura Marks?", "Which works were developed by persons married to Laura Marks?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Laura_Marks> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Rosie Shuster?", "What was developed by persons married to Rosie Shuster?", "Which work is developed by persons married to Rosie Shuster?", "Which work was developed by persons married to Rosie Shuster?", "Which works are developed by persons married to Rosie Shuster?", "Which works were developed by persons married to Rosie Shuster?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rosie_Shuster> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Kim Myers?", "What was developed by persons married to Kim Myers?", "Which work is developed by persons married to Kim Myers?", "Which work was developed by persons married to Kim Myers?", "Which works are developed by persons married to Kim Myers?", "Which works were developed by persons married to Kim Myers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kim_Myers> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Carlos Lacámara?", "What was developed by persons married to Carlos Lacámara?", "Which work is developed by persons married to Carlos Lacámara?", "Which work was developed by persons married to Carlos Lacámara?", "Which works are developed by persons married to Carlos Lacámara?", "Which works were developed by persons married to Carlos Lacámara?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carlos_Lacámara> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Karen Witter?", "What was developed by persons married to Karen Witter?", "Which work is developed by persons married to Karen Witter?", "Which work was developed by persons married to Karen Witter?", "Which works are developed by persons married to Karen Witter?", "Which works were developed by persons married to Karen Witter?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Karen_Witter> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Madeleine Astor?", "What was developed by persons married to Madeleine Astor?", "Which work is developed by persons married to Madeleine Astor?", "Which work was developed by persons married to Madeleine Astor?", "Which works are developed by persons married to Madeleine Astor?", "Which works were developed by persons married to Madeleine Astor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Madeleine_Astor> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Graham Nelson?", "What was developed by persons married to Graham Nelson?", "Which work is developed by persons married to Graham Nelson?", "Which work was developed by persons married to Graham Nelson?", "Which works are developed by persons married to Graham Nelson?", "Which works were developed by persons married to Graham Nelson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Graham_Nelson> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Alison Snowden?", "What was developed by persons married to Alison Snowden?", "Which work is developed by persons married to Alison Snowden?", "Which work was developed by persons married to Alison Snowden?", "Which works are developed by persons married to Alison Snowden?", "Which works were developed by persons married to Alison Snowden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alison_Snowden> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Ava Lowle Willing?", "What was developed by persons married to Ava Lowle Willing?", "Which work is developed by persons married to Ava Lowle Willing?", "Which work was developed by persons married to Ava Lowle Willing?", "Which works are developed by persons married to Ava Lowle Willing?", "Which works were developed by persons married to Ava Lowle Willing?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ava_Lowle_Willing> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Martha Baird Rockefeller?", "What was developed by persons married to Martha Baird Rockefeller?", "Which work is developed by persons married to Martha Baird Rockefeller?", "Which work was developed by persons married to Martha Baird Rockefeller?", "Which works are developed by persons married to Martha Baird Rockefeller?", "Which works were developed by persons married to Martha Baird Rockefeller?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Martha_Baird_Rockefeller> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Amal Clooney?", "What was developed by persons married to Amal Clooney?", "Which work is developed by persons married to Amal Clooney?", "Which work was developed by persons married to Amal Clooney?", "Which works are developed by persons married to Amal Clooney?", "Which works were developed by persons married to Amal Clooney?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Amal_Clooney> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Abby Aldrich Rockefeller?", "What was developed by persons married to Abby Aldrich Rockefeller?", "Which work is developed by persons married to Abby Aldrich Rockefeller?", "Which work was developed by persons married to Abby Aldrich Rockefeller?", "Which works are developed by persons married to Abby Aldrich Rockefeller?", "Which works were developed by persons married to Abby Aldrich Rockefeller?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Abby_Aldrich_Rockefeller> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Talia Balsam?", "What was developed by persons married to Talia Balsam?", "Which work is developed by persons married to Talia Balsam?", "Which work was developed by persons married to Talia Balsam?", "Which works are developed by persons married to Talia Balsam?", "Which works were developed by persons married to Talia Balsam?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Talia_Balsam> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Nancy Juvonen?", "What was developed by persons married to Nancy Juvonen?", "Which work is developed by persons married to Nancy Juvonen?", "Which work was developed by persons married to Nancy Juvonen?", "Which works are developed by persons married to Nancy Juvonen?", "Which works were developed by persons married to Nancy Juvonen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nancy_Juvonen> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Elise Doganieri?", "What was developed by persons married to Elise Doganieri?", "Which work is developed by persons married to Elise Doganieri?", "Which work was developed by persons married to Elise Doganieri?", "Which works are developed by persons married to Elise Doganieri?", "Which works were developed by persons married to Elise Doganieri?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elise_Doganieri> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Ellen Bry?", "What was developed by persons married to Ellen Bry?", "Which work is developed by persons married to Ellen Bry?", "Which work was developed by persons married to Ellen Bry?", "Which works are developed by persons married to Ellen Bry?", "Which works were developed by persons married to Ellen Bry?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ellen_Bry> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Mellody Hobson?", "What was developed by persons married to Mellody Hobson?", "Which work is developed by persons married to Mellody Hobson?", "Which work was developed by persons married to Mellody Hobson?", "Which works are developed by persons married to Mellody Hobson?", "Which works were developed by persons married to Mellody Hobson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mellody_Hobson> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Marcia Lucas?", "What was developed by persons married to Marcia Lucas?", "Which work is developed by persons married to Marcia Lucas?", "Which work was developed by persons married to Marcia Lucas?", "Which works are developed by persons married to Marcia Lucas?", "Which works were developed by persons married to Marcia Lucas?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Marcia_Lucas> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Wishnutama?", "What was developed by persons married to Wishnutama?", "Which work is developed by persons married to Wishnutama?", "Which work was developed by persons married to Wishnutama?", "Which works are developed by persons married to Wishnutama?", "Which works were developed by persons married to Wishnutama?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Wishnutama> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Joyce Burditt?", "What was developed by persons married to Joyce Burditt?", "Which work is developed by persons married to Joyce Burditt?", "Which work was developed by persons married to Joyce Burditt?", "Which works are developed by persons married to Joyce Burditt?", "Which works were developed by persons married to Joyce Burditt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joyce_Burditt> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Christa Miller?", "What was developed by persons married to Christa Miller?", "Which work is developed by persons married to Christa Miller?", "Which work was developed by persons married to Christa Miller?", "Which works are developed by persons married to Christa Miller?", "Which works were developed by persons married to Christa Miller?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Christa_Miller> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Duke Hayward?", "What was developed by persons married to Duke Hayward?", "Which work is developed by persons married to Duke Hayward?", "Which work was developed by persons married to Duke Hayward?", "Which works are developed by persons married to Duke Hayward?", "Which works were developed by persons married to Duke Hayward?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Duke_Hayward> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Vivien Alcock?", "What was developed by persons married to Vivien Alcock?", "Which work is developed by persons married to Vivien Alcock?", "Which work was developed by persons married to Vivien Alcock?", "Which works are developed by persons married to Vivien Alcock?", "Which works were developed by persons married to Vivien Alcock?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Vivien_Alcock> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Pippa Scott?", "What was developed by persons married to Pippa Scott?", "Which work is developed by persons married to Pippa Scott?", "Which work was developed by persons married to Pippa Scott?", "Which works are developed by persons married to Pippa Scott?", "Which works were developed by persons married to Pippa Scott?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Pippa_Scott> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Elizabeth Whitmere?", "What was developed by persons married to Elizabeth Whitmere?", "Which work is developed by persons married to Elizabeth Whitmere?", "Which work was developed by persons married to Elizabeth Whitmere?", "Which works are developed by persons married to Elizabeth Whitmere?", "Which works were developed by persons married to Elizabeth Whitmere?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elizabeth_Whitmere> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Megyn Price?", "What was developed by persons married to Megyn Price?", "Which work is developed by persons married to Megyn Price?", "Which work was developed by persons married to Megyn Price?", "Which works are developed by persons married to Megyn Price?", "Which works were developed by persons married to Megyn Price?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Megyn_Price> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Melinda Gates?", "What was developed by persons married to Melinda Gates?", "Which work is developed by persons married to Melinda Gates?", "Which work was developed by persons married to Melinda Gates?", "Which works are developed by persons married to Melinda Gates?", "Which works were developed by persons married to Melinda Gates?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Melinda_Gates> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Meredith L. Patterson?", "What was developed by persons married to Meredith L. Patterson?", "Which work is developed by persons married to Meredith L. Patterson?", "Which work was developed by persons married to Meredith L. Patterson?", "Which works are developed by persons married to Meredith L. Patterson?", "Which works were developed by persons married to Meredith L. Patterson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Meredith_L._Patterson> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Jennifer Tilly?", "What was developed by persons married to Jennifer Tilly?", "Which work is developed by persons married to Jennifer Tilly?", "Which work was developed by persons married to Jennifer Tilly?", "Which works are developed by persons married to Jennifer Tilly?", "Which works were developed by persons married to Jennifer Tilly?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jennifer_Tilly> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Kate Fleetwood?", "What was developed by persons married to Kate Fleetwood?", "Which work is developed by persons married to Kate Fleetwood?", "Which work was developed by persons married to Kate Fleetwood?", "Which works are developed by persons married to Kate Fleetwood?", "Which works were developed by persons married to Kate Fleetwood?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kate_Fleetwood> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Sharon Shore?", "What was developed by persons married to Sharon Shore?", "Which work is developed by persons married to Sharon Shore?", "Which work was developed by persons married to Sharon Shore?", "Which works are developed by persons married to Sharon Shore?", "Which works were developed by persons married to Sharon Shore?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sharon_Shore> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Julie Dretzin?", "What was developed by persons married to Julie Dretzin?", "Which work is developed by persons married to Julie Dretzin?", "Which work was developed by persons married to Julie Dretzin?", "Which works are developed by persons married to Julie Dretzin?", "Which works were developed by persons married to Julie Dretzin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Julie_Dretzin> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Mara Brock Akil?", "What was developed by persons married to Mara Brock Akil?", "Which work is developed by persons married to Mara Brock Akil?", "Which work was developed by persons married to Mara Brock Akil?", "Which works are developed by persons married to Mara Brock Akil?", "Which works were developed by persons married to Mara Brock Akil?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mara_Brock_Akil> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Suzanne Martin?", "What was developed by persons married to Suzanne Martin?", "Which work is developed by persons married to Suzanne Martin?", "Which work was developed by persons married to Suzanne Martin?", "Which works are developed by persons married to Suzanne Martin?", "Which works were developed by persons married to Suzanne Martin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Suzanne_Martin> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Ivana Trump?", "What was developed by persons married to Ivana Trump?", "Which work is developed by persons married to Ivana Trump?", "Which work was developed by persons married to Ivana Trump?", "Which works are developed by persons married to Ivana Trump?", "Which works were developed by persons married to Ivana Trump?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ivana_Trump> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Pamela Hensley?", "What was developed by persons married to Pamela Hensley?", "Which work is developed by persons married to Pamela Hensley?", "Which work was developed by persons married to Pamela Hensley?", "Which works are developed by persons married to Pamela Hensley?", "Which works were developed by persons married to Pamela Hensley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Pamela_Hensley> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Eric Zicklin?", "What was developed by persons married to Eric Zicklin?", "Which work is developed by persons married to Eric Zicklin?", "Which work was developed by persons married to Eric Zicklin?", "Which works are developed by persons married to Eric Zicklin?", "Which works were developed by persons married to Eric Zicklin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Eric_Zicklin> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Melania Trump?", "What was developed by persons married to Melania Trump?", "Which work is developed by persons married to Melania Trump?", "Which work was developed by persons married to Melania Trump?", "Which works are developed by persons married to Melania Trump?", "Which works were developed by persons married to Melania Trump?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Melania_Trump> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Marla Maples?", "What was developed by persons married to Marla Maples?", "Which work is developed by persons married to Marla Maples?", "Which work was developed by persons married to Marla Maples?", "Which works are developed by persons married to Marla Maples?", "Which works were developed by persons married to Marla Maples?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Marla_Maples> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Cheryl Saban?", "What was developed by persons married to Cheryl Saban?", "Which work is developed by persons married to Cheryl Saban?", "Which work was developed by persons married to Cheryl Saban?", "Which works are developed by persons married to Cheryl Saban?", "Which works were developed by persons married to Cheryl Saban?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cheryl_Saban> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Leona Helmsley?", "What was developed by persons married to Leona Helmsley?", "Which work is developed by persons married to Leona Helmsley?", "Which work was developed by persons married to Leona Helmsley?", "Which works are developed by persons married to Leona Helmsley?", "Which works were developed by persons married to Leona Helmsley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Leona_Helmsley> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to James Cameron?", "What was developed by persons married to James Cameron?", "Which work is developed by persons married to James Cameron?", "Which work was developed by persons married to James Cameron?", "Which works are developed by persons married to James Cameron?", "Which works were developed by persons married to James Cameron?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/James_Cameron> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Arlene Klasky?", "What was developed by persons married to Arlene Klasky?", "Which work is developed by persons married to Arlene Klasky?", "Which work was developed by persons married to Arlene Klasky?", "Which works are developed by persons married to Arlene Klasky?", "Which works were developed by persons married to Arlene Klasky?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Arlene_Klasky> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Elinor Donahue?", "What was developed by persons married to Elinor Donahue?", "Which work is developed by persons married to Elinor Donahue?", "Which work was developed by persons married to Elinor Donahue?", "Which works are developed by persons married to Elinor Donahue?", "Which works were developed by persons married to Elinor Donahue?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elinor_Donahue> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Jonathan Hensleigh?", "What was developed by persons married to Jonathan Hensleigh?", "Which work is developed by persons married to Jonathan Hensleigh?", "Which work was developed by persons married to Jonathan Hensleigh?", "Which works are developed by persons married to Jonathan Hensleigh?", "Which works were developed by persons married to Jonathan Hensleigh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jonathan_Hensleigh> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Mary Anne MacLeod Trump?", "What was developed by persons married to Mary Anne MacLeod Trump?", "Which work is developed by persons married to Mary Anne MacLeod Trump?", "Which work was developed by persons married to Mary Anne MacLeod Trump?", "Which works are developed by persons married to Mary Anne MacLeod Trump?", "Which works were developed by persons married to Mary Anne MacLeod Trump?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mary_Anne_MacLeod_Trump> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Natasha Halevi?", "What was developed by persons married to Natasha Halevi?", "Which work is developed by persons married to Natasha Halevi?", "Which work was developed by persons married to Natasha Halevi?", "Which works are developed by persons married to Natasha Halevi?", "Which works were developed by persons married to Natasha Halevi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Natasha_Halevi> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Soleil Moon Frye?", "What was developed by persons married to Soleil Moon Frye?", "Which work is developed by persons married to Soleil Moon Frye?", "Which work was developed by persons married to Soleil Moon Frye?", "Which works are developed by persons married to Soleil Moon Frye?", "Which works were developed by persons married to Soleil Moon Frye?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Soleil_Moon_Frye> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Constance Dowling?", "What was developed by persons married to Constance Dowling?", "Which work is developed by persons married to Constance Dowling?", "Which work was developed by persons married to Constance Dowling?", "Which works are developed by persons married to Constance Dowling?", "Which works were developed by persons married to Constance Dowling?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Constance_Dowling> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Katie Ford (CEO)?", "What was developed by persons married to Katie Ford (CEO)?", "Which work is developed by persons married to Katie Ford (CEO)?", "Which work was developed by persons married to Katie Ford (CEO)?", "Which works are developed by persons married to Katie Ford (CEO)?", "Which works were developed by persons married to Katie Ford (CEO)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Katie_Ford_(CEO)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Eden Riegel?", "What was developed by persons married to Eden Riegel?", "Which work is developed by persons married to Eden Riegel?", "Which work was developed by persons married to Eden Riegel?", "Which works are developed by persons married to Eden Riegel?", "Which works were developed by persons married to Eden Riegel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Eden_Riegel> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Scott Weinger?", "What was developed by persons married to Scott Weinger?", "Which work is developed by persons married to Scott Weinger?", "Which work was developed by persons married to Scott Weinger?", "Which works are developed by persons married to Scott Weinger?", "Which works were developed by persons married to Scott Weinger?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Scott_Weinger> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Gábor Csupó?", "What was developed by persons married to Gábor Csupó?", "Which work is developed by persons married to Gábor Csupó?", "Which work was developed by persons married to Gábor Csupó?", "Which works are developed by persons married to Gábor Csupó?", "Which works were developed by persons married to Gábor Csupó?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gábor_Csupó> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Estelle Lefébure?", "What was developed by persons married to Estelle Lefébure?", "Which work is developed by persons married to Estelle Lefébure?", "Which work was developed by persons married to Estelle Lefébure?", "Which works are developed by persons married to Estelle Lefébure?", "Which works were developed by persons married to Estelle Lefébure?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Estelle_Lefébure> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Giannina Facio?", "What was developed by persons married to Giannina Facio?", "Which work is developed by persons married to Giannina Facio?", "Which work was developed by persons married to Giannina Facio?", "Which works are developed by persons married to Giannina Facio?", "Which works were developed by persons married to Giannina Facio?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Giannina_Facio> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Hanna Azoulay Hasfari?", "What was developed by persons married to Hanna Azoulay Hasfari?", "Which work is developed by persons married to Hanna Azoulay Hasfari?", "Which work was developed by persons married to Hanna Azoulay Hasfari?", "Which works are developed by persons married to Hanna Azoulay Hasfari?", "Which works were developed by persons married to Hanna Azoulay Hasfari?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hanna_Azoulay_Hasfari> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Lorraine Adams?", "What was developed by persons married to Lorraine Adams?", "Which work is developed by persons married to Lorraine Adams?", "Which work was developed by persons married to Lorraine Adams?", "Which works are developed by persons married to Lorraine Adams?", "Which works were developed by persons married to Lorraine Adams?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lorraine_Adams> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Laetitia Garriott de Cayeux?", "What was developed by persons married to Laetitia Garriott de Cayeux?", "Which work is developed by persons married to Laetitia Garriott de Cayeux?", "Which work was developed by persons married to Laetitia Garriott de Cayeux?", "Which works are developed by persons married to Laetitia Garriott de Cayeux?", "Which works were developed by persons married to Laetitia Garriott de Cayeux?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Laetitia_Garriott_de_Cayeux> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Rosanna Huffman?", "What was developed by persons married to Rosanna Huffman?", "Which work is developed by persons married to Rosanna Huffman?", "Which work was developed by persons married to Rosanna Huffman?", "Which works are developed by persons married to Rosanna Huffman?", "Which works were developed by persons married to Rosanna Huffman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rosanna_Huffman> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Erik Stocklin?", "What was developed by persons married to Erik Stocklin?", "Which work is developed by persons married to Erik Stocklin?", "Which work was developed by persons married to Erik Stocklin?", "Which works are developed by persons married to Erik Stocklin?", "Which works were developed by persons married to Erik Stocklin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Erik_Stocklin> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Daniela Simpson?", "What was developed by persons married to Daniela Simpson?", "Which work is developed by persons married to Daniela Simpson?", "Which work was developed by persons married to Daniela Simpson?", "Which works are developed by persons married to Daniela Simpson?", "Which works were developed by persons married to Daniela Simpson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Daniela_Simpson> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Emmanuelle Arsan?", "What was developed by persons married to Emmanuelle Arsan?", "Which work is developed by persons married to Emmanuelle Arsan?", "Which work was developed by persons married to Emmanuelle Arsan?", "Which works are developed by persons married to Emmanuelle Arsan?", "Which works were developed by persons married to Emmanuelle Arsan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Emmanuelle_Arsan> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Lindsay Price?", "What was developed by persons married to Lindsay Price?", "Which work is developed by persons married to Lindsay Price?", "Which work was developed by persons married to Lindsay Price?", "Which works are developed by persons married to Lindsay Price?", "Which works were developed by persons married to Lindsay Price?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lindsay_Price> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Cynthia Sikes Yorkin?", "What was developed by persons married to Cynthia Sikes Yorkin?", "Which work is developed by persons married to Cynthia Sikes Yorkin?", "Which work was developed by persons married to Cynthia Sikes Yorkin?", "Which works are developed by persons married to Cynthia Sikes Yorkin?", "Which works were developed by persons married to Cynthia Sikes Yorkin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cynthia_Sikes_Yorkin> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Peg Yorkin?", "What was developed by persons married to Peg Yorkin?", "Which work is developed by persons married to Peg Yorkin?", "Which work was developed by persons married to Peg Yorkin?", "Which works are developed by persons married to Peg Yorkin?", "Which works were developed by persons married to Peg Yorkin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Peg_Yorkin> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Zsa Zsa Gabor?", "What was developed by persons married to Zsa Zsa Gabor?", "Which work is developed by persons married to Zsa Zsa Gabor?", "Which work was developed by persons married to Zsa Zsa Gabor?", "Which works are developed by persons married to Zsa Zsa Gabor?", "Which works were developed by persons married to Zsa Zsa Gabor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Zsa_Zsa_Gabor> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Samira Wiley?", "What was developed by persons married to Samira Wiley?", "Which work is developed by persons married to Samira Wiley?", "Which work was developed by persons married to Samira Wiley?", "Which works are developed by persons married to Samira Wiley?", "Which works were developed by persons married to Samira Wiley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Samira_Wiley> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Craig McCracken?", "What was developed by persons married to Craig McCracken?", "Which work is developed by persons married to Craig McCracken?", "Which work was developed by persons married to Craig McCracken?", "Which works are developed by persons married to Craig McCracken?", "Which works were developed by persons married to Craig McCracken?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Craig_McCracken> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Lauren Faust?", "What was developed by persons married to Lauren Faust?", "Which work is developed by persons married to Lauren Faust?", "Which work was developed by persons married to Lauren Faust?", "Which works are developed by persons married to Lauren Faust?", "Which works were developed by persons married to Lauren Faust?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lauren_Faust> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons married to Patricia Marshall?", "What was developed by persons married to Patricia Marshall?", "Which work is developed by persons married to Patricia Marshall?", "Which work was developed by persons married to Patricia Marshall?", "Which works are developed by persons married to Patricia Marshall?", "Which works were developed by persons married to Patricia Marshall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Patricia_Marshall> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in A.G. Syjuco?", "What was developed by persons born in A.G. Syjuco?", "Which work is developed by persons born in A.G. Syjuco?", "Which work was developed by persons born in A.G. Syjuco?", "Which works are developed by persons born in A.G. Syjuco?", "Which works were developed by persons born in A.G. Syjuco?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A.G._Syjuco> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in A. Mangalam?", "What was developed by persons born in A. Mangalam?", "Which work is developed by persons born in A. Mangalam?", "Which work was developed by persons born in A. Mangalam?", "Which works are developed by persons born in A. Mangalam?", "Which works were developed by persons born in A. Mangalam?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A._Mangalam> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lovisa Berndtsson?", "What was developed by persons born in Lovisa Berndtsson?", "Which work is developed by persons born in Lovisa Berndtsson?", "Which work was developed by persons born in Lovisa Berndtsson?", "Which works are developed by persons born in Lovisa Berndtsson?", "Which works were developed by persons born in Lovisa Berndtsson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lovisa_Berndtsson> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lovisa Lennartsson?", "What was developed by persons born in Lovisa Lennartsson?", "Which work is developed by persons born in Lovisa Lennartsson?", "Which work was developed by persons born in Lovisa Lennartsson?", "Which works are developed by persons born in Lovisa Lennartsson?", "Which works were developed by persons born in Lovisa Lennartsson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lovisa_Lennartsson> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lovisa Selander?", "What was developed by persons born in Lovisa Selander?", "Which work is developed by persons born in Lovisa Selander?", "Which work was developed by persons born in Lovisa Selander?", "Which works are developed by persons born in Lovisa Selander?", "Which works were developed by persons born in Lovisa Selander?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lovisa_Selander> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Low Ji Wen?", "What was developed by persons born in Low Ji Wen?", "Which work is developed by persons born in Low Ji Wen?", "Which work was developed by persons born in Low Ji Wen?", "Which works are developed by persons born in Low Ji Wen?", "Which works were developed by persons born in Low Ji Wen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Low_Ji_Wen> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Low Yen Ling?", "What was developed by persons born in Low Yen Ling?", "Which work is developed by persons born in Low Yen Ling?", "Which work was developed by persons born in Low Yen Ling?", "Which works are developed by persons born in Low Yen Ling?", "Which works were developed by persons born in Low Yen Ling?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Low_Yen_Ling> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lowell Sherman?", "What was developed by persons born in Lowell Sherman?", "Which work is developed by persons born in Lowell Sherman?", "Which work was developed by persons born in Lowell Sherman?", "Which works are developed by persons born in Lowell Sherman?", "Which works were developed by persons born in Lowell Sherman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lowell_Sherman> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lowell Thomas?", "What was developed by persons born in Lowell Thomas?", "Which work is developed by persons born in Lowell Thomas?", "Which work was developed by persons born in Lowell Thomas?", "Which works are developed by persons born in Lowell Thomas?", "Which works were developed by persons born in Lowell Thomas?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lowell_Thomas> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lowell Weicker?", "What was developed by persons born in Lowell Weicker?", "Which work is developed by persons born in Lowell Weicker?", "Which work was developed by persons born in Lowell Weicker?", "Which works are developed by persons born in Lowell Weicker?", "Which works were developed by persons born in Lowell Weicker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lowell_Weicker> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Loïc Négo?", "What was developed by persons born in Loïc Négo?", "Which work is developed by persons born in Loïc Négo?", "Which work was developed by persons born in Loïc Négo?", "Which works are developed by persons born in Loïc Négo?", "Which works were developed by persons born in Loïc Négo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Loïc_Négo> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lualhati Bautista?", "What was developed by persons born in Lualhati Bautista?", "Which work is developed by persons born in Lualhati Bautista?", "Which work was developed by persons born in Lualhati Bautista?", "Which works are developed by persons born in Lualhati Bautista?", "Which works were developed by persons born in Lualhati Bautista?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lualhati_Bautista> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Luang Por Khun Parissuddho?", "What was developed by persons born in Luang Por Khun Parissuddho?", "Which work is developed by persons born in Luang Por Khun Parissuddho?", "Which work was developed by persons born in Luang Por Khun Parissuddho?", "Which works are developed by persons born in Luang Por Khun Parissuddho?", "Which works were developed by persons born in Luang Por Khun Parissuddho?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luang_Por_Khun_Parissuddho> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Luang Pu Sodh Candasaro?", "What was developed by persons born in Luang Pu Sodh Candasaro?", "Which work is developed by persons born in Luang Pu Sodh Candasaro?", "Which work was developed by persons born in Luang Pu Sodh Candasaro?", "Which works are developed by persons born in Luang Pu Sodh Candasaro?", "Which works were developed by persons born in Luang Pu Sodh Candasaro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luang_Pu_Sodh_Candasaro> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Luang Pu Waen Suciṇṇo?", "What was developed by persons born in Luang Pu Waen Suciṇṇo?", "Which work is developed by persons born in Luang Pu Waen Suciṇṇo?", "Which work was developed by persons born in Luang Pu Waen Suciṇṇo?", "Which works are developed by persons born in Luang Pu Waen Suciṇṇo?", "Which works were developed by persons born in Luang Pu Waen Suciṇṇo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luang_Pu_Waen_Suciṇṇo> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Luangpor Thong?", "What was developed by persons born in Luangpor Thong?", "Which work is developed by persons born in Luangpor Thong?", "Which work was developed by persons born in Luangpor Thong?", "Which works are developed by persons born in Luangpor Thong?", "Which works were developed by persons born in Luangpor Thong?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luangpor_Thong> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Luba Goy?", "What was developed by persons born in Luba Goy?", "Which work is developed by persons born in Luba Goy?", "Which work was developed by persons born in Luba Goy?", "Which works are developed by persons born in Luba Goy?", "Which works were developed by persons born in Luba Goy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luba_Goy> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Luba Robin Goldsmith?", "What was developed by persons born in Luba Robin Goldsmith?", "Which work is developed by persons born in Luba Robin Goldsmith?", "Which work was developed by persons born in Luba Robin Goldsmith?", "Which works are developed by persons born in Luba Robin Goldsmith?", "Which works were developed by persons born in Luba Robin Goldsmith?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luba_Robin_Goldsmith> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lubanah Mshaweh?", "What was developed by persons born in Lubanah Mshaweh?", "Which work is developed by persons born in Lubanah Mshaweh?", "Which work was developed by persons born in Lubanah Mshaweh?", "Which works are developed by persons born in Lubanah Mshaweh?", "Which works were developed by persons born in Lubanah Mshaweh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lubanah_Mshaweh> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lubna Khalid Al Qasimi?", "What was developed by persons born in Lubna Khalid Al Qasimi?", "Which work is developed by persons born in Lubna Khalid Al Qasimi?", "Which work was developed by persons born in Lubna Khalid Al Qasimi?", "Which works are developed by persons born in Lubna Khalid Al Qasimi?", "Which works were developed by persons born in Lubna Khalid Al Qasimi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lubna_Khalid_Al_Qasimi> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lubomyr Husar?", "What was developed by persons born in Lubomyr Husar?", "Which work is developed by persons born in Lubomyr Husar?", "Which work was developed by persons born in Lubomyr Husar?", "Which works are developed by persons born in Lubomyr Husar?", "Which works were developed by persons born in Lubomyr Husar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lubomyr_Husar> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lubov Azria?", "What was developed by persons born in Lubov Azria?", "Which work is developed by persons born in Lubov Azria?", "Which work was developed by persons born in Lubov Azria?", "Which works are developed by persons born in Lubov Azria?", "Which works were developed by persons born in Lubov Azria?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lubov_Azria> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Luc-Christopher Matutu?", "What was developed by persons born in Luc-Christopher Matutu?", "Which work is developed by persons born in Luc-Christopher Matutu?", "Which work was developed by persons born in Luc-Christopher Matutu?", "Which works are developed by persons born in Luc-Christopher Matutu?", "Which works were developed by persons born in Luc-Christopher Matutu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luc-Christopher_Matutu> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Luc Albert Moreau?", "What was developed by persons born in Luc Albert Moreau?", "Which work is developed by persons born in Luc Albert Moreau?", "Which work was developed by persons born in Luc Albert Moreau?", "Which works are developed by persons born in Luc Albert Moreau?", "Which works were developed by persons born in Luc Albert Moreau?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luc_Albert_Moreau> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Luc Besson?", "What was developed by persons born in Luc Besson?", "Which work is developed by persons born in Luc Besson?", "Which work was developed by persons born in Luc Besson?", "Which works are developed by persons born in Luc Besson?", "Which works were developed by persons born in Luc Besson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luc_Besson> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Luc Hoffmann?", "What was developed by persons born in Luc Hoffmann?", "Which work is developed by persons born in Luc Hoffmann?", "Which work was developed by persons born in Luc Hoffmann?", "Which works are developed by persons born in Luc Hoffmann?", "Which works were developed by persons born in Luc Hoffmann?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luc_Hoffmann> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Luc Moullet?", "What was developed by persons born in Luc Moullet?", "Which work is developed by persons born in Luc Moullet?", "Which work was developed by persons born in Luc Moullet?", "Which works are developed by persons born in Luc Moullet?", "Which works were developed by persons born in Luc Moullet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luc_Moullet> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Luc Ravel?", "What was developed by persons born in Luc Ravel?", "Which work is developed by persons born in Luc Ravel?", "Which work was developed by persons born in Luc Ravel?", "Which works are developed by persons born in Luc Ravel?", "Which works were developed by persons born in Luc Ravel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luc_Ravel> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Luca Amato?", "What was developed by persons born in Luca Amato?", "Which work is developed by persons born in Luca Amato?", "Which work was developed by persons born in Luca Amato?", "Which works are developed by persons born in Luca Amato?", "Which works were developed by persons born in Luca Amato?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luca_Amato> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Luca Engstler?", "What was developed by persons born in Luca Engstler?", "Which work is developed by persons born in Luca Engstler?", "Which work was developed by persons born in Luca Engstler?", "Which works are developed by persons born in Luca Engstler?", "Which works were developed by persons born in Luca Engstler?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luca_Engstler> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Luca Grünwald?", "What was developed by persons born in Luca Grünwald?", "Which work is developed by persons born in Luca Grünwald?", "Which work was developed by persons born in Luca Grünwald?", "Which works are developed by persons born in Luca Grünwald?", "Which works were developed by persons born in Luca Grünwald?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luca_Grünwald> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucas Debargue?", "What was developed by persons born in Lucas Debargue?", "Which work is developed by persons born in Lucas Debargue?", "Which work was developed by persons born in Lucas Debargue?", "Which works are developed by persons born in Lucas Debargue?", "Which works were developed by persons born in Lucas Debargue?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_Debargue> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucas Dolega?", "What was developed by persons born in Lucas Dolega?", "Which work is developed by persons born in Lucas Dolega?", "Which work was developed by persons born in Lucas Dolega?", "Which works are developed by persons born in Lucas Dolega?", "Which works were developed by persons born in Lucas Dolega?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_Dolega> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucas Firnhaber?", "What was developed by persons born in Lucas Firnhaber?", "Which work is developed by persons born in Lucas Firnhaber?", "Which work was developed by persons born in Lucas Firnhaber?", "Which works are developed by persons born in Lucas Firnhaber?", "Which works were developed by persons born in Lucas Firnhaber?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_Firnhaber> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucas Meister?", "What was developed by persons born in Lucas Meister?", "Which work is developed by persons born in Lucas Meister?", "Which work was developed by persons born in Lucas Meister?", "Which works are developed by persons born in Lucas Meister?", "Which works were developed by persons born in Lucas Meister?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_Meister> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucas Nord?", "What was developed by persons born in Lucas Nord?", "Which work is developed by persons born in Lucas Nord?", "Which work was developed by persons born in Lucas Nord?", "Which works are developed by persons born in Lucas Nord?", "Which works were developed by persons born in Lucas Nord?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_Nord> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucas Pellas?", "What was developed by persons born in Lucas Pellas?", "Which work is developed by persons born in Lucas Pellas?", "Which work was developed by persons born in Lucas Pellas?", "Which works are developed by persons born in Lucas Pellas?", "Which works were developed by persons born in Lucas Pellas?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_Pellas> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucas Persson?", "What was developed by persons born in Lucas Persson?", "Which work is developed by persons born in Lucas Persson?", "Which work was developed by persons born in Lucas Persson?", "Which works are developed by persons born in Lucas Persson?", "Which works were developed by persons born in Lucas Persson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_Persson> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucette Destouches?", "What was developed by persons born in Lucette Destouches?", "Which work is developed by persons born in Lucette Destouches?", "Which work was developed by persons born in Lucette Destouches?", "Which works are developed by persons born in Lucette Destouches?", "Which works were developed by persons born in Lucette Destouches?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucette_Destouches> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucette Rådström?", "What was developed by persons born in Lucette Rådström?", "Which work is developed by persons born in Lucette Rådström?", "Which work was developed by persons born in Lucette Rådström?", "Which works are developed by persons born in Lucette Rådström?", "Which works were developed by persons born in Lucette Rådström?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucette_Rådström> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Luchi Cruz-Valdes?", "What was developed by persons born in Luchi Cruz-Valdes?", "Which work is developed by persons born in Luchi Cruz-Valdes?", "Which work was developed by persons born in Luchi Cruz-Valdes?", "Which works are developed by persons born in Luchi Cruz-Valdes?", "Which works were developed by persons born in Luchi Cruz-Valdes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luchi_Cruz-Valdes> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucia Fairchild Fuller?", "What was developed by persons born in Lucia Fairchild Fuller?", "Which work is developed by persons born in Lucia Fairchild Fuller?", "Which work was developed by persons born in Lucia Fairchild Fuller?", "Which works are developed by persons born in Lucia Fairchild Fuller?", "Which works were developed by persons born in Lucia Fairchild Fuller?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucia_Fairchild_Fuller> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucia Joas?", "What was developed by persons born in Lucia Joas?", "Which work is developed by persons born in Lucia Joas?", "Which work was developed by persons born in Lucia Joas?", "Which works are developed by persons born in Lucia Joas?", "Which works were developed by persons born in Lucia Joas?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucia_Joas> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucian K. Truscott IV?", "What was developed by persons born in Lucian K. Truscott IV?", "Which work is developed by persons born in Lucian K. Truscott IV?", "Which work was developed by persons born in Lucian K. Truscott IV?", "Which works are developed by persons born in Lucian K. Truscott IV?", "Which works were developed by persons born in Lucian K. Truscott IV?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucian_K._Truscott_IV> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucian Pintilie?", "What was developed by persons born in Lucian Pintilie?", "Which work is developed by persons born in Lucian Pintilie?", "Which work was developed by persons born in Lucian Pintilie?", "Which works are developed by persons born in Lucian Pintilie?", "Which works were developed by persons born in Lucian Pintilie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucian_Pintilie> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucianne Goldberg?", "What was developed by persons born in Lucianne Goldberg?", "Which work is developed by persons born in Lucianne Goldberg?", "Which work was developed by persons born in Lucianne Goldberg?", "Which works are developed by persons born in Lucianne Goldberg?", "Which works were developed by persons born in Lucianne Goldberg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucianne_Goldberg> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Luciano Di Pardo?", "What was developed by persons born in Luciano Di Pardo?", "Which work is developed by persons born in Luciano Di Pardo?", "Which work was developed by persons born in Luciano Di Pardo?", "Which works are developed by persons born in Luciano Di Pardo?", "Which works were developed by persons born in Luciano Di Pardo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luciano_Di_Pardo> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucie Cousturier?", "What was developed by persons born in Lucie Cousturier?", "Which work is developed by persons born in Lucie Cousturier?", "Which work was developed by persons born in Lucie Cousturier?", "Which works are developed by persons born in Lucie Cousturier?", "Which works were developed by persons born in Lucie Cousturier?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucie_Cousturier> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucie Salhany?", "What was developed by persons born in Lucie Salhany?", "Which work is developed by persons born in Lucie Salhany?", "Which work was developed by persons born in Lucie Salhany?", "Which works are developed by persons born in Lucie Salhany?", "Which works were developed by persons born in Lucie Salhany?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucie_Salhany> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucien-Anatole Prévost-Paradol?", "What was developed by persons born in Lucien-Anatole Prévost-Paradol?", "Which work is developed by persons born in Lucien-Anatole Prévost-Paradol?", "Which work was developed by persons born in Lucien-Anatole Prévost-Paradol?", "Which works are developed by persons born in Lucien-Anatole Prévost-Paradol?", "Which works were developed by persons born in Lucien-Anatole Prévost-Paradol?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucien-Anatole_Prévost-Paradol> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucien Alliot?", "What was developed by persons born in Lucien Alliot?", "Which work is developed by persons born in Lucien Alliot?", "Which work was developed by persons born in Lucien Alliot?", "Which works are developed by persons born in Lucien Alliot?", "Which works were developed by persons born in Lucien Alliot?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucien_Alliot> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucien Baker?", "What was developed by persons born in Lucien Baker?", "Which work is developed by persons born in Lucien Baker?", "Which work was developed by persons born in Lucien Baker?", "Which works are developed by persons born in Lucien Baker?", "Which works were developed by persons born in Lucien Baker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucien_Baker> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucien Chauvière?", "What was developed by persons born in Lucien Chauvière?", "Which work is developed by persons born in Lucien Chauvière?", "Which work was developed by persons born in Lucien Chauvière?", "Which works are developed by persons born in Lucien Chauvière?", "Which works were developed by persons born in Lucien Chauvière?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucien_Chauvière> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucien Daudet?", "What was developed by persons born in Lucien Daudet?", "Which work is developed by persons born in Lucien Daudet?", "Which work was developed by persons born in Lucien Daudet?", "Which works are developed by persons born in Lucien Daudet?", "Which works were developed by persons born in Lucien Daudet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucien_Daudet> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucien Fontanarosa?", "What was developed by persons born in Lucien Fontanarosa?", "Which work is developed by persons born in Lucien Fontanarosa?", "Which work was developed by persons born in Lucien Fontanarosa?", "Which works are developed by persons born in Lucien Fontanarosa?", "Which works were developed by persons born in Lucien Fontanarosa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucien_Fontanarosa> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucien Gaulard?", "What was developed by persons born in Lucien Gaulard?", "Which work is developed by persons born in Lucien Gaulard?", "Which work was developed by persons born in Lucien Gaulard?", "Which works are developed by persons born in Lucien Gaulard?", "Which works were developed by persons born in Lucien Gaulard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucien_Gaulard> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucien Guitry?", "What was developed by persons born in Lucien Guitry?", "Which work is developed by persons born in Lucien Guitry?", "Which work was developed by persons born in Lucien Guitry?", "Which works are developed by persons born in Lucien Guitry?", "Which works were developed by persons born in Lucien Guitry?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucien_Guitry> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucien Hesse?", "What was developed by persons born in Lucien Hesse?", "Which work is developed by persons born in Lucien Hesse?", "Which work was developed by persons born in Lucien Hesse?", "Which works are developed by persons born in Lucien Hesse?", "Which works were developed by persons born in Lucien Hesse?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucien_Hesse> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucien Largé?", "What was developed by persons born in Lucien Largé?", "Which work is developed by persons born in Lucien Largé?", "Which work was developed by persons born in Lucien Largé?", "Which works are developed by persons born in Lucien Largé?", "Which works were developed by persons born in Lucien Largé?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucien_Largé> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucien Lauk?", "What was developed by persons born in Lucien Lauk?", "Which work is developed by persons born in Lucien Lauk?", "Which work was developed by persons born in Lucien Lauk?", "Which works are developed by persons born in Lucien Lauk?", "Which works were developed by persons born in Lucien Lauk?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucien_Lauk> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucien Le Foyer?", "What was developed by persons born in Lucien Le Foyer?", "Which work is developed by persons born in Lucien Le Foyer?", "Which work was developed by persons born in Lucien Le Foyer?", "Which works are developed by persons born in Lucien Le Foyer?", "Which works were developed by persons born in Lucien Le Foyer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucien_Le_Foyer> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucien Szpiro?", "What was developed by persons born in Lucien Szpiro?", "Which work is developed by persons born in Lucien Szpiro?", "Which work was developed by persons born in Lucien Szpiro?", "Which works are developed by persons born in Lucien Szpiro?", "Which works were developed by persons born in Lucien Szpiro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucien_Szpiro> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucien Troupel?", "What was developed by persons born in Lucien Troupel?", "Which work is developed by persons born in Lucien Troupel?", "Which work was developed by persons born in Lucien Troupel?", "Which works are developed by persons born in Lucien Troupel?", "Which works were developed by persons born in Lucien Troupel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucien_Troupel> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucienne Pageot-Rousseaux?", "What was developed by persons born in Lucienne Pageot-Rousseaux?", "Which work is developed by persons born in Lucienne Pageot-Rousseaux?", "Which work was developed by persons born in Lucienne Pageot-Rousseaux?", "Which works are developed by persons born in Lucienne Pageot-Rousseaux?", "Which works were developed by persons born in Lucienne Pageot-Rousseaux?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucienne_Pageot-Rousseaux> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucretia Peabody Hale?", "What was developed by persons born in Lucretia Peabody Hale?", "Which work is developed by persons born in Lucretia Peabody Hale?", "Which work was developed by persons born in Lucretia Peabody Hale?", "Which works are developed by persons born in Lucretia Peabody Hale?", "Which works were developed by persons born in Lucretia Peabody Hale?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucretia_Peabody_Hale> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucy Madox Brown?", "What was developed by persons born in Lucy Madox Brown?", "Which work is developed by persons born in Lucy Madox Brown?", "Which work was developed by persons born in Lucy Madox Brown?", "Which works are developed by persons born in Lucy Madox Brown?", "Which works were developed by persons born in Lucy Madox Brown?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucy_Madox_Brown> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucy O'Reilly Schell?", "What was developed by persons born in Lucy O'Reilly Schell?", "Which work is developed by persons born in Lucy O'Reilly Schell?", "Which work was developed by persons born in Lucy O'Reilly Schell?", "Which works are developed by persons born in Lucy O'Reilly Schell?", "Which works were developed by persons born in Lucy O'Reilly Schell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucy_O'Reilly_Schell> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucy Scherer?", "What was developed by persons born in Lucy Scherer?", "Which work is developed by persons born in Lucy Scherer?", "Which work was developed by persons born in Lucy Scherer?", "Which works are developed by persons born in Lucy Scherer?", "Which works were developed by persons born in Lucy Scherer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucy_Scherer> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucy Stanton (abolitionist)?", "What was developed by persons born in Lucy Stanton (abolitionist)?", "Which work is developed by persons born in Lucy Stanton (abolitionist)?", "Which work was developed by persons born in Lucy Stanton (abolitionist)?", "Which works are developed by persons born in Lucy Stanton (abolitionist)?", "Which works were developed by persons born in Lucy Stanton (abolitionist)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucy_Stanton_(abolitionist)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Lucyna Krawcewicz?", "What was developed by persons born in Lucyna Krawcewicz?", "Which work is developed by persons born in Lucyna Krawcewicz?", "Which work was developed by persons born in Lucyna Krawcewicz?", "Which works are developed by persons born in Lucyna Krawcewicz?", "Which works were developed by persons born in Lucyna Krawcewicz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucyna_Krawcewicz> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludger Wößmann?", "What was developed by persons born in Ludger Wößmann?", "Which work is developed by persons born in Ludger Wößmann?", "Which work was developed by persons born in Ludger Wößmann?", "Which works are developed by persons born in Ludger Wößmann?", "Which works were developed by persons born in Ludger Wößmann?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludger_Wößmann> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludmilla Tchérina?", "What was developed by persons born in Ludmilla Tchérina?", "Which work is developed by persons born in Ludmilla Tchérina?", "Which work was developed by persons born in Ludmilla Tchérina?", "Which works are developed by persons born in Ludmilla Tchérina?", "Which works were developed by persons born in Ludmilla Tchérina?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludmilla_Tchérina> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludovic Halévy?", "What was developed by persons born in Ludovic Halévy?", "Which work is developed by persons born in Ludovic Halévy?", "Which work was developed by persons born in Ludovic Halévy?", "Which works are developed by persons born in Ludovic Halévy?", "Which works were developed by persons born in Ludovic Halévy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludovic_Halévy> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludvig Engsund?", "What was developed by persons born in Ludvig Engsund?", "Which work is developed by persons born in Ludvig Engsund?", "Which work was developed by persons born in Ludvig Engsund?", "Which works are developed by persons born in Ludvig Engsund?", "Which works were developed by persons born in Ludvig Engsund?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludvig_Engsund> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludvig Fjällström?", "What was developed by persons born in Ludvig Fjällström?", "Which work is developed by persons born in Ludvig Fjällström?", "Which work was developed by persons born in Ludvig Fjällström?", "Which works are developed by persons born in Ludvig Fjällström?", "Which works were developed by persons born in Ludvig Fjällström?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludvig_Fjällström> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludvig Fritzson?", "What was developed by persons born in Ludvig Fritzson?", "Which work is developed by persons born in Ludvig Fritzson?", "Which work was developed by persons born in Ludvig Fritzson?", "Which works are developed by persons born in Ludvig Fritzson?", "Which works were developed by persons born in Ludvig Fritzson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludvig_Fritzson> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludvig Lindgren?", "What was developed by persons born in Ludvig Lindgren?", "Which work is developed by persons born in Ludvig Lindgren?", "Which work was developed by persons born in Ludvig Lindgren?", "Which works are developed by persons born in Ludvig Lindgren?", "Which works were developed by persons born in Ludvig Lindgren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludvig_Lindgren> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludvig Öhman?", "What was developed by persons born in Ludvig Öhman?", "Which work is developed by persons born in Ludvig Öhman?", "Which work was developed by persons born in Ludvig Öhman?", "Which works are developed by persons born in Ludvig Öhman?", "Which works were developed by persons born in Ludvig Öhman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludvig_Öhman> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludwig Bamberger?", "What was developed by persons born in Ludwig Bamberger?", "Which work is developed by persons born in Ludwig Bamberger?", "Which work was developed by persons born in Ludwig Bamberger?", "Which works are developed by persons born in Ludwig Bamberger?", "Which works were developed by persons born in Ludwig Bamberger?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludwig_Bamberger> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludwig Berger (director)?", "What was developed by persons born in Ludwig Berger (director)?", "Which work is developed by persons born in Ludwig Berger (director)?", "Which work was developed by persons born in Ludwig Berger (director)?", "Which works are developed by persons born in Ludwig Berger (director)?", "Which works were developed by persons born in Ludwig Berger (director)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludwig_Berger_(director)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludwig Blomstrand?", "What was developed by persons born in Ludwig Blomstrand?", "Which work is developed by persons born in Ludwig Blomstrand?", "Which work was developed by persons born in Ludwig Blomstrand?", "Which works are developed by persons born in Ludwig Blomstrand?", "Which works were developed by persons born in Ludwig Blomstrand?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludwig_Blomstrand> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludwig Bründl?", "What was developed by persons born in Ludwig Bründl?", "Which work is developed by persons born in Ludwig Bründl?", "Which work was developed by persons born in Ludwig Bründl?", "Which works are developed by persons born in Ludwig Bründl?", "Which works were developed by persons born in Ludwig Bründl?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludwig_Bründl> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludwig Börne?", "What was developed by persons born in Ludwig Börne?", "Which work is developed by persons born in Ludwig Börne?", "Which work was developed by persons born in Ludwig Börne?", "Which works are developed by persons born in Ludwig Börne?", "Which works were developed by persons born in Ludwig Börne?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludwig_Börne> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludwig Elsbett?", "What was developed by persons born in Ludwig Elsbett?", "Which work is developed by persons born in Ludwig Elsbett?", "Which work was developed by persons born in Ludwig Elsbett?", "Which works are developed by persons born in Ludwig Elsbett?", "Which works were developed by persons born in Ludwig Elsbett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludwig_Elsbett> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludwig Ernstsson?", "What was developed by persons born in Ludwig Ernstsson?", "Which work is developed by persons born in Ludwig Ernstsson?", "Which work was developed by persons born in Ludwig Ernstsson?", "Which works are developed by persons born in Ludwig Ernstsson?", "Which works were developed by persons born in Ludwig Ernstsson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludwig_Ernstsson> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludwig Fischer?", "What was developed by persons born in Ludwig Fischer?", "Which work is developed by persons born in Ludwig Fischer?", "Which work was developed by persons born in Ludwig Fischer?", "Which works are developed by persons born in Ludwig Fischer?", "Which works were developed by persons born in Ludwig Fischer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludwig_Fischer> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludwig Gattermann?", "What was developed by persons born in Ludwig Gattermann?", "Which work is developed by persons born in Ludwig Gattermann?", "Which work was developed by persons born in Ludwig Gattermann?", "Which works are developed by persons born in Ludwig Gattermann?", "Which works were developed by persons born in Ludwig Gattermann?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludwig_Gattermann> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludwig Gräf?", "What was developed by persons born in Ludwig Gräf?", "Which work is developed by persons born in Ludwig Gräf?", "Which work was developed by persons born in Ludwig Gräf?", "Which works are developed by persons born in Ludwig Gräf?", "Which works were developed by persons born in Ludwig Gräf?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludwig_Gräf> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludwig Göransson?", "What was developed by persons born in Ludwig Göransson?", "Which work is developed by persons born in Ludwig Göransson?", "Which work was developed by persons born in Ludwig Göransson?", "Which works are developed by persons born in Ludwig Göransson?", "Which works were developed by persons born in Ludwig Göransson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludwig_Göransson> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludwig Haas?", "What was developed by persons born in Ludwig Haas?", "Which work is developed by persons born in Ludwig Haas?", "Which work was developed by persons born in Ludwig Haas?", "Which works are developed by persons born in Ludwig Haas?", "Which works were developed by persons born in Ludwig Haas?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludwig_Haas> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludwig Heinrich Philipp Döderlein?", "What was developed by persons born in Ludwig Heinrich Philipp Döderlein?", "Which work is developed by persons born in Ludwig Heinrich Philipp Döderlein?", "Which work was developed by persons born in Ludwig Heinrich Philipp Döderlein?", "Which works are developed by persons born in Ludwig Heinrich Philipp Döderlein?", "Which works were developed by persons born in Ludwig Heinrich Philipp Döderlein?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludwig_Heinrich_Philipp_Döderlein> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludwig Hilberseimer?", "What was developed by persons born in Ludwig Hilberseimer?", "Which work is developed by persons born in Ludwig Hilberseimer?", "Which work was developed by persons born in Ludwig Hilberseimer?", "Which works are developed by persons born in Ludwig Hilberseimer?", "Which works were developed by persons born in Ludwig Hilberseimer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludwig_Hilberseimer> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludwig Hofmann?", "What was developed by persons born in Ludwig Hofmann?", "Which work is developed by persons born in Ludwig Hofmann?", "Which work was developed by persons born in Ludwig Hofmann?", "Which works are developed by persons born in Ludwig Hofmann?", "Which works were developed by persons born in Ludwig Hofmann?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludwig_Hofmann> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludwig Hofmeister?", "What was developed by persons born in Ludwig Hofmeister?", "Which work is developed by persons born in Ludwig Hofmeister?", "Which work was developed by persons born in Ludwig Hofmeister?", "Which works are developed by persons born in Ludwig Hofmeister?", "Which works were developed by persons born in Ludwig Hofmeister?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludwig_Hofmeister> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludwig Janda?", "What was developed by persons born in Ludwig Janda?", "Which work is developed by persons born in Ludwig Janda?", "Which work was developed by persons born in Ludwig Janda?", "Which works are developed by persons born in Ludwig Janda?", "Which works were developed by persons born in Ludwig Janda?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludwig_Janda> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludwig Lachner?", "What was developed by persons born in Ludwig Lachner?", "Which work is developed by persons born in Ludwig Lachner?", "Which work was developed by persons born in Ludwig Lachner?", "Which works are developed by persons born in Ludwig Lachner?", "Which works were developed by persons born in Ludwig Lachner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludwig_Lachner> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludwig Landmann?", "What was developed by persons born in Ludwig Landmann?", "Which work is developed by persons born in Ludwig Landmann?", "Which work was developed by persons born in Ludwig Landmann?", "Which works are developed by persons born in Ludwig Landmann?", "Which works were developed by persons born in Ludwig Landmann?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludwig_Landmann> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludwig Leinberger?", "What was developed by persons born in Ludwig Leinberger?", "Which work is developed by persons born in Ludwig Leinberger?", "Which work was developed by persons born in Ludwig Leinberger?", "Which works are developed by persons born in Ludwig Leinberger?", "Which works were developed by persons born in Ludwig Leinberger?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludwig_Leinberger> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludwig Nissen?", "What was developed by persons born in Ludwig Nissen?", "Which work is developed by persons born in Ludwig Nissen?", "Which work was developed by persons born in Ludwig Nissen?", "Which works are developed by persons born in Ludwig Nissen?", "Which works were developed by persons born in Ludwig Nissen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludwig_Nissen> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "What is developed by persons born in Ludwig Ramberg?", "What was developed by persons born in Ludwig Ramberg?", "Which work is developed by persons born in Ludwig Ramberg?", "Which work was developed by persons born in Ludwig Ramberg?", "Which works are developed by persons born in Ludwig Ramberg?", "Which works were developed by persons born in Ludwig Ramberg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludwig_Ramberg> <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  } ]
}