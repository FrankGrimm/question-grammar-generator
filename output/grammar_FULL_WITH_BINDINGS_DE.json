{
  "grammarEntries" : [ {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Wechselstrommotor?", "Gib mir die Produzenten von Wechselstrommotor?", "Was ist der Produzent von Wechselstrommotor?", "Was sind die Produzenten von Wechselstrommotor?", "Was war der Produzent von Wechselstrommotor?", "Was waren die Produzenten von Wechselstrommotor?", "Welche Organisation ist der Produzent von Wechselstrommotor?", "Welche Organisation war der Produzent von Wechselstrommotor?", "Welche Organisations sind die Produzenten von Wechselstrommotor?", "Welche Organisations waren die Produzenten von Wechselstrommotor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/AC_motor>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Lufia?", "Gib mir die Produzenten von Lufia?", "Was ist der Produzent von Lufia?", "Was sind die Produzenten von Lufia?", "Was war der Produzent von Lufia?", "Was waren die Produzenten von Lufia?", "Welche Organisation ist der Produzent von Lufia?", "Welche Organisation war der Produzent von Lufia?", "Welche Organisations sind die Produzenten von Lufia?", "Welche Organisations waren die Produzenten von Lufia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Lufia>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Bauholz?", "Gib mir die Produzenten von Bauholz?", "Was ist der Produzent von Bauholz?", "Was sind die Produzenten von Bauholz?", "Was war der Produzent von Bauholz?", "Was waren die Produzenten von Bauholz?", "Welche Organisation ist der Produzent von Bauholz?", "Welche Organisation war der Produzent von Bauholz?", "Welche Organisations sind die Produzenten von Bauholz?", "Welche Organisations waren die Produzenten von Bauholz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Lumber>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Luxusgut?", "Gib mir die Produzenten von Luxusgut?", "Was ist der Produzent von Luxusgut?", "Was sind die Produzenten von Luxusgut?", "Was war der Produzent von Luxusgut?", "Was waren die Produzenten von Luxusgut?", "Welche Organisation ist der Produzent von Luxusgut?", "Welche Organisation war der Produzent von Luxusgut?", "Welche Organisations sind die Produzenten von Luxusgut?", "Welche Organisations waren die Produzenten von Luxusgut?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Luxury_goods>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von M&M’s?", "Gib mir die Produzenten von M&M’s?", "Was ist der Produzent von M&M’s?", "Was sind die Produzenten von M&M’s?", "Was war der Produzent von M&M’s?", "Was waren die Produzenten von M&M’s?", "Welche Organisation ist der Produzent von M&M’s?", "Welche Organisation war der Produzent von M&M’s?", "Welche Organisations sind die Produzenten von M&M’s?", "Welche Organisations waren die Produzenten von M&M’s?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/M&M's>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von M16 (Gewehr)?", "Gib mir die Produzenten von M16 (Gewehr)?", "Was ist der Produzent von M16 (Gewehr)?", "Was sind die Produzenten von M16 (Gewehr)?", "Was war der Produzent von M16 (Gewehr)?", "Was waren die Produzenten von M16 (Gewehr)?", "Welche Organisation ist der Produzent von M16 (Gewehr)?", "Welche Organisation war der Produzent von M16 (Gewehr)?", "Welche Organisations sind die Produzenten von M16 (Gewehr)?", "Welche Organisations waren die Produzenten von M16 (Gewehr)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/M16_rifle>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von M939 (5-Ton-Truck)?", "Gib mir die Produzenten von M939 (5-Ton-Truck)?", "Was ist der Produzent von M939 (5-Ton-Truck)?", "Was sind die Produzenten von M939 (5-Ton-Truck)?", "Was war der Produzent von M939 (5-Ton-Truck)?", "Was waren die Produzenten von M939 (5-Ton-Truck)?", "Welche Organisation ist der Produzent von M939 (5-Ton-Truck)?", "Welche Organisation war der Produzent von M939 (5-Ton-Truck)?", "Welche Organisations sind die Produzenten von M939 (5-Ton-Truck)?", "Welche Organisations waren die Produzenten von M939 (5-Ton-Truck)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/M939_series_5-ton_6x6_truck>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von MAG (Computerspiel)?", "Gib mir die Produzenten von MAG (Computerspiel)?", "Was ist der Produzent von MAG (Computerspiel)?", "Was sind die Produzenten von MAG (Computerspiel)?", "Was war der Produzent von MAG (Computerspiel)?", "Was waren die Produzenten von MAG (Computerspiel)?", "Welche Organisation ist der Produzent von MAG (Computerspiel)?", "Welche Organisation war der Produzent von MAG (Computerspiel)?", "Welche Organisations sind die Produzenten von MAG (Computerspiel)?", "Welche Organisations waren die Produzenten von MAG (Computerspiel)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/MAG_(video_game)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Matlab?", "Gib mir die Produzenten von Matlab?", "Was ist der Produzent von Matlab?", "Was sind die Produzenten von Matlab?", "Was war der Produzent von Matlab?", "Was waren die Produzenten von Matlab?", "Welche Organisation ist der Produzent von Matlab?", "Welche Organisation war der Produzent von Matlab?", "Welche Organisations sind die Produzenten von Matlab?", "Welche Organisations waren die Produzenten von Matlab?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/MATLAB>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von MDK (Computerspiel)?", "Gib mir die Produzenten von MDK (Computerspiel)?", "Was ist der Produzent von MDK (Computerspiel)?", "Was sind die Produzenten von MDK (Computerspiel)?", "Was war der Produzent von MDK (Computerspiel)?", "Was waren die Produzenten von MDK (Computerspiel)?", "Welche Organisation ist der Produzent von MDK (Computerspiel)?", "Welche Organisation war der Produzent von MDK (Computerspiel)?", "Welche Organisations sind die Produzenten von MDK (Computerspiel)?", "Welche Organisations waren die Produzenten von MDK (Computerspiel)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/MDK_(video_game)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von MGB (Auto)?", "Gib mir die Produzenten von MGB (Auto)?", "Was ist der Produzent von MGB (Auto)?", "Was sind die Produzenten von MGB (Auto)?", "Was war der Produzent von MGB (Auto)?", "Was waren die Produzenten von MGB (Auto)?", "Welche Organisation ist der Produzent von MGB (Auto)?", "Welche Organisation war der Produzent von MGB (Auto)?", "Welche Organisations sind die Produzenten von MGB (Auto)?", "Welche Organisations waren die Produzenten von MGB (Auto)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/MG_MGB>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von MG Motor UK?", "Gib mir die Produzenten von MG Motor UK?", "Was ist der Produzent von MG Motor UK?", "Was sind die Produzenten von MG Motor UK?", "Was war der Produzent von MG Motor UK?", "Was waren die Produzenten von MG Motor UK?", "Welche Organisation ist der Produzent von MG Motor UK?", "Welche Organisation war der Produzent von MG Motor UK?", "Welche Organisations sind die Produzenten von MG Motor UK?", "Welche Organisations waren die Produzenten von MG Motor UK?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/MG_Motor>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von MIPS-Architektur?", "Gib mir die Produzenten von MIPS-Architektur?", "Was ist der Produzent von MIPS-Architektur?", "Was sind die Produzenten von MIPS-Architektur?", "Was war der Produzent von MIPS-Architektur?", "Was waren die Produzenten von MIPS-Architektur?", "Welche Organisation ist der Produzent von MIPS-Architektur?", "Welche Organisation war der Produzent von MIPS-Architektur?", "Welche Organisations sind die Produzenten von MIPS-Architektur?", "Welche Organisations waren die Produzenten von MIPS-Architektur?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/MIPS_architecture>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von MODE32?", "Gib mir die Produzenten von MODE32?", "Was ist der Produzent von MODE32?", "Was sind die Produzenten von MODE32?", "Was war der Produzent von MODE32?", "Was waren die Produzenten von MODE32?", "Welche Organisation ist der Produzent von MODE32?", "Welche Organisation war der Produzent von MODE32?", "Welche Organisations sind die Produzenten von MODE32?", "Welche Organisations waren die Produzenten von MODE32?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/MODE32>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von MacDraw?", "Gib mir die Produzenten von MacDraw?", "Was ist der Produzent von MacDraw?", "Was sind die Produzenten von MacDraw?", "Was war der Produzent von MacDraw?", "Was waren die Produzenten von MacDraw?", "Welche Organisation ist der Produzent von MacDraw?", "Welche Organisation war der Produzent von MacDraw?", "Welche Organisations sind die Produzenten von MacDraw?", "Welche Organisations waren die Produzenten von MacDraw?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/MacDraw>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von MacOS?", "Gib mir die Produzenten von MacOS?", "Was ist der Produzent von MacOS?", "Was sind die Produzenten von MacOS?", "Was war der Produzent von MacOS?", "Was waren die Produzenten von MacOS?", "Welche Organisation ist der Produzent von MacOS?", "Welche Organisation war der Produzent von MacOS?", "Welche Organisations sind die Produzenten von MacOS?", "Welche Organisations waren die Produzenten von MacOS?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/MacOS>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Mac OS?", "Gib mir die Produzenten von Mac OS?", "Was ist der Produzent von Mac OS?", "Was sind die Produzenten von Mac OS?", "Was war der Produzent von Mac OS?", "Was waren die Produzenten von Mac OS?", "Welche Organisation ist der Produzent von Mac OS?", "Welche Organisation war der Produzent von Mac OS?", "Welche Organisations sind die Produzenten von Mac OS?", "Welche Organisations waren die Produzenten von Mac OS?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/MacOS>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von MacWrite?", "Gib mir die Produzenten von MacWrite?", "Was ist der Produzent von MacWrite?", "Was sind die Produzenten von MacWrite?", "Was war der Produzent von MacWrite?", "Was waren die Produzenten von MacWrite?", "Welche Organisation ist der Produzent von MacWrite?", "Welche Organisation war der Produzent von MacWrite?", "Welche Organisations sind die Produzenten von MacWrite?", "Welche Organisations waren die Produzenten von MacWrite?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/MacWrite>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Mac OS X Snow Leopard?", "Gib mir die Produzenten von Mac OS X Snow Leopard?", "Was ist der Produzent von Mac OS X Snow Leopard?", "Was sind die Produzenten von Mac OS X Snow Leopard?", "Was war der Produzent von Mac OS X Snow Leopard?", "Was waren die Produzenten von Mac OS X Snow Leopard?", "Welche Organisation ist der Produzent von Mac OS X Snow Leopard?", "Welche Organisation war der Produzent von Mac OS X Snow Leopard?", "Welche Organisations sind die Produzenten von Mac OS X Snow Leopard?", "Welche Organisations waren die Produzenten von Mac OS X Snow Leopard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Mac_OS_X_Snow_Leopard>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Macaron?", "Gib mir die Produzenten von Macaron?", "Was ist der Produzent von Macaron?", "Was sind die Produzenten von Macaron?", "Was war der Produzent von Macaron?", "Was waren die Produzenten von Macaron?", "Welche Organisation ist der Produzent von Macaron?", "Welche Organisation war der Produzent von Macaron?", "Welche Organisations sind die Produzenten von Macaron?", "Welche Organisations waren die Produzenten von Macaron?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Macaron>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Machinarium?", "Gib mir die Produzenten von Machinarium?", "Was ist der Produzent von Machinarium?", "Was sind die Produzenten von Machinarium?", "Was war der Produzent von Machinarium?", "Was waren die Produzenten von Machinarium?", "Welche Organisation ist der Produzent von Machinarium?", "Welche Organisation war der Produzent von Machinarium?", "Welche Organisations sind die Produzenten von Machinarium?", "Welche Organisations waren die Produzenten von Machinarium?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Machinarium>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Maschinengewehr?", "Gib mir die Produzenten von Maschinengewehr?", "Was ist der Produzent von Maschinengewehr?", "Was sind die Produzenten von Maschinengewehr?", "Was war der Produzent von Maschinengewehr?", "Was waren die Produzenten von Maschinengewehr?", "Welche Organisation ist der Produzent von Maschinengewehr?", "Welche Organisation war der Produzent von Maschinengewehr?", "Welche Organisations sind die Produzenten von Maschinengewehr?", "Welche Organisations waren die Produzenten von Maschinengewehr?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Machine_gun>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Maschinelles Lernen?", "Gib mir die Produzenten von Maschinelles Lernen?", "Was ist der Produzent von Maschinelles Lernen?", "Was sind die Produzenten von Maschinelles Lernen?", "Was war der Produzent von Maschinelles Lernen?", "Was waren die Produzenten von Maschinelles Lernen?", "Welche Organisation ist der Produzent von Maschinelles Lernen?", "Welche Organisation war der Produzent von Maschinelles Lernen?", "Welche Organisations sind die Produzenten von Maschinelles Lernen?", "Welche Organisations waren die Produzenten von Maschinelles Lernen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Machine_learning>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Macintosh?", "Gib mir die Produzenten von Macintosh?", "Was ist der Produzent von Macintosh?", "Was sind die Produzenten von Macintosh?", "Was war der Produzent von Macintosh?", "Was waren die Produzenten von Macintosh?", "Welche Organisation ist der Produzent von Macintosh?", "Welche Organisation war der Produzent von Macintosh?", "Welche Organisations sind die Produzenten von Macintosh?", "Welche Organisations waren die Produzenten von Macintosh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Macintosh>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Mad Dog McCree?", "Gib mir die Produzenten von Mad Dog McCree?", "Was ist der Produzent von Mad Dog McCree?", "Was sind die Produzenten von Mad Dog McCree?", "Was war der Produzent von Mad Dog McCree?", "Was waren die Produzenten von Mad Dog McCree?", "Welche Organisation ist der Produzent von Mad Dog McCree?", "Welche Organisation war der Produzent von Mad Dog McCree?", "Welche Organisations sind die Produzenten von Mad Dog McCree?", "Welche Organisations waren die Produzenten von Mad Dog McCree?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Mad_Dog_McCree>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Madden NFL?", "Gib mir die Produzenten von Madden NFL?", "Was ist der Produzent von Madden NFL?", "Was sind die Produzenten von Madden NFL?", "Was war der Produzent von Madden NFL?", "Was waren die Produzenten von Madden NFL?", "Welche Organisation ist der Produzent von Madden NFL?", "Welche Organisation war der Produzent von Madden NFL?", "Welche Organisations sind die Produzenten von Madden NFL?", "Welche Organisations waren die Produzenten von Madden NFL?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Madden_NFL>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Madlax?", "Gib mir die Produzenten von Madlax?", "Was ist der Produzent von Madlax?", "Was sind die Produzenten von Madlax?", "Was war der Produzent von Madlax?", "Was waren die Produzenten von Madlax?", "Welche Organisation ist der Produzent von Madlax?", "Welche Organisation war der Produzent von Madlax?", "Welche Organisations sind die Produzenten von Madlax?", "Welche Organisations waren die Produzenten von Madlax?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Madlax>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Mafia III?", "Gib mir die Produzenten von Mafia III?", "Was ist der Produzent von Mafia III?", "Was sind die Produzenten von Mafia III?", "Was war der Produzent von Mafia III?", "Was waren die Produzenten von Mafia III?", "Welche Organisation ist der Produzent von Mafia III?", "Welche Organisation war der Produzent von Mafia III?", "Welche Organisations sind die Produzenten von Mafia III?", "Welche Organisations waren die Produzenten von Mafia III?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Mafia_III>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Mage Knight?", "Gib mir die Produzenten von Mage Knight?", "Was ist der Produzent von Mage Knight?", "Was sind die Produzenten von Mage Knight?", "Was war der Produzent von Mage Knight?", "Was waren die Produzenten von Mage Knight?", "Welche Organisation ist der Produzent von Mage Knight?", "Welche Organisation war der Produzent von Mage Knight?", "Welche Organisations sind die Produzenten von Mage Knight?", "Welche Organisations waren die Produzenten von Mage Knight?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Mage_Knight>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Magic: The Gathering?", "Gib mir die Produzenten von Magic: The Gathering?", "Was ist der Produzent von Magic: The Gathering?", "Was sind die Produzenten von Magic: The Gathering?", "Was war der Produzent von Magic: The Gathering?", "Was waren die Produzenten von Magic: The Gathering?", "Welche Organisation ist der Produzent von Magic: The Gathering?", "Welche Organisation war der Produzent von Magic: The Gathering?", "Welche Organisations sind die Produzenten von Magic: The Gathering?", "Welche Organisations waren die Produzenten von Magic: The Gathering?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Magic:_The_Gathering>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Mamfies Abenteuer?", "Gib mir die Produzenten von Mamfies Abenteuer?", "Was ist der Produzent von Mamfies Abenteuer?", "Was sind die Produzenten von Mamfies Abenteuer?", "Was war der Produzent von Mamfies Abenteuer?", "Was waren die Produzenten von Mamfies Abenteuer?", "Welche Organisation ist der Produzent von Mamfies Abenteuer?", "Welche Organisation war der Produzent von Mamfies Abenteuer?", "Welche Organisations sind die Produzenten von Mamfies Abenteuer?", "Welche Organisations waren die Produzenten von Mamfies Abenteuer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Magic_Adventures_of_Mumfie>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Magic Carpet (Computerspiel)?", "Gib mir die Produzenten von Magic Carpet (Computerspiel)?", "Was ist der Produzent von Magic Carpet (Computerspiel)?", "Was sind die Produzenten von Magic Carpet (Computerspiel)?", "Was war der Produzent von Magic Carpet (Computerspiel)?", "Was waren die Produzenten von Magic Carpet (Computerspiel)?", "Welche Organisation ist der Produzent von Magic Carpet (Computerspiel)?", "Welche Organisation war der Produzent von Magic Carpet (Computerspiel)?", "Welche Organisations sind die Produzenten von Magic Carpet (Computerspiel)?", "Welche Organisations waren die Produzenten von Magic Carpet (Computerspiel)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Magic_Carpet_(video_game)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Magix Music Maker?", "Gib mir die Produzenten von Magix Music Maker?", "Was ist der Produzent von Magix Music Maker?", "Was sind die Produzenten von Magix Music Maker?", "Was war der Produzent von Magix Music Maker?", "Was waren die Produzenten von Magix Music Maker?", "Welche Organisation ist der Produzent von Magix Music Maker?", "Welche Organisation war der Produzent von Magix Music Maker?", "Welche Organisations sind die Produzenten von Magix Music Maker?", "Welche Organisations waren die Produzenten von Magix Music Maker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Magix_Music_Maker>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Magnesit?", "Gib mir die Produzenten von Magnesit?", "Was ist der Produzent von Magnesit?", "Was sind die Produzenten von Magnesit?", "Was war der Produzent von Magnesit?", "Was waren die Produzenten von Magnesit?", "Welche Organisation ist der Produzent von Magnesit?", "Welche Organisation war der Produzent von Magnesit?", "Welche Organisations sind die Produzenten von Magnesit?", "Welche Organisations waren die Produzenten von Magnesit?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Magnesite>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Magnesium?", "Gib mir die Produzenten von Magnesium?", "Was ist der Produzent von Magnesium?", "Was sind die Produzenten von Magnesium?", "Was war der Produzent von Magnesium?", "Was waren die Produzenten von Magnesium?", "Welche Organisation ist der Produzent von Magnesium?", "Welche Organisation war der Produzent von Magnesium?", "Welche Organisations sind die Produzenten von Magnesium?", "Welche Organisations waren die Produzenten von Magnesium?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Magnesium>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Magnesiumchlorid?", "Gib mir die Produzenten von Magnesiumchlorid?", "Was ist der Produzent von Magnesiumchlorid?", "Was sind die Produzenten von Magnesiumchlorid?", "Was war der Produzent von Magnesiumchlorid?", "Was waren die Produzenten von Magnesiumchlorid?", "Welche Organisation ist der Produzent von Magnesiumchlorid?", "Welche Organisation war der Produzent von Magnesiumchlorid?", "Welche Organisations sind die Produzenten von Magnesiumchlorid?", "Welche Organisations waren die Produzenten von Magnesiumchlorid?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Magnesium_chloride>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Magnetresonanztomographie?", "Gib mir die Produzenten von Magnetresonanztomographie?", "Was ist der Produzent von Magnetresonanztomographie?", "Was sind die Produzenten von Magnetresonanztomographie?", "Was war der Produzent von Magnetresonanztomographie?", "Was waren die Produzenten von Magnetresonanztomographie?", "Welche Organisation ist der Produzent von Magnetresonanztomographie?", "Welche Organisation war der Produzent von Magnetresonanztomographie?", "Welche Organisations sind die Produzenten von Magnetresonanztomographie?", "Welche Organisations waren die Produzenten von Magnetresonanztomographie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Magnetic_resonance_imaging>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Mahan-Klasse?", "Gib mir die Produzenten von Mahan-Klasse?", "Was ist der Produzent von Mahan-Klasse?", "Was sind die Produzenten von Mahan-Klasse?", "Was war der Produzent von Mahan-Klasse?", "Was waren die Produzenten von Mahan-Klasse?", "Welche Organisation ist der Produzent von Mahan-Klasse?", "Welche Organisation war der Produzent von Mahan-Klasse?", "Welche Organisations sind die Produzenten von Mahan-Klasse?", "Welche Organisations waren die Produzenten von Mahan-Klasse?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Mahan-class_destroyer>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Briefverteilanlage?", "Gib mir die Produzenten von Briefverteilanlage?", "Was ist der Produzent von Briefverteilanlage?", "Was sind die Produzenten von Briefverteilanlage?", "Was war der Produzent von Briefverteilanlage?", "Was waren die Produzenten von Briefverteilanlage?", "Welche Organisation ist der Produzent von Briefverteilanlage?", "Welche Organisation war der Produzent von Briefverteilanlage?", "Welche Organisations sind die Produzenten von Briefverteilanlage?", "Welche Organisations waren die Produzenten von Briefverteilanlage?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Mail_sorter>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Maine (Loire)?", "Gib mir die Produzenten von Maine (Loire)?", "Was ist der Produzent von Maine (Loire)?", "Was sind die Produzenten von Maine (Loire)?", "Was war der Produzent von Maine (Loire)?", "Was waren die Produzenten von Maine (Loire)?", "Welche Organisation ist der Produzent von Maine (Loire)?", "Welche Organisation war der Produzent von Maine (Loire)?", "Welche Organisations sind die Produzenten von Maine (Loire)?", "Welche Organisations waren die Produzenten von Maine (Loire)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Maine>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Maine?", "Gib mir die Produzenten von Maine?", "Was ist der Produzent von Maine?", "Was sind die Produzenten von Maine?", "Was war der Produzent von Maine?", "Was waren die Produzenten von Maine?", "Welche Organisation ist der Produzent von Maine?", "Welche Organisation war der Produzent von Maine?", "Welche Organisations sind die Produzenten von Maine?", "Welche Organisations waren die Produzenten von Maine?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Maine>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Mais?", "Gib mir die Produzenten von Mais?", "Was ist der Produzent von Mais?", "Was sind die Produzenten von Mais?", "Was war der Produzent von Mais?", "Was waren die Produzenten von Mais?", "Welche Organisation ist der Produzent von Mais?", "Welche Organisation war der Produzent von Mais?", "Welche Organisations sind die Produzenten von Mais?", "Welche Organisations waren die Produzenten von Mais?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Maize>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Majesty: The Fantasy Kingdom Sim?", "Gib mir die Produzenten von Majesty: The Fantasy Kingdom Sim?", "Was ist der Produzent von Majesty: The Fantasy Kingdom Sim?", "Was sind die Produzenten von Majesty: The Fantasy Kingdom Sim?", "Was war der Produzent von Majesty: The Fantasy Kingdom Sim?", "Was waren die Produzenten von Majesty: The Fantasy Kingdom Sim?", "Welche Organisation ist der Produzent von Majesty: The Fantasy Kingdom Sim?", "Welche Organisation war der Produzent von Majesty: The Fantasy Kingdom Sim?", "Welche Organisations sind die Produzenten von Majesty: The Fantasy Kingdom Sim?", "Welche Organisations waren die Produzenten von Majesty: The Fantasy Kingdom Sim?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Majesty:_The_Fantasy_Kingdom_Sim>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Teppich?", "Gib mir die Produzenten von Teppich?", "Was ist der Produzent von Teppich?", "Was sind die Produzenten von Teppich?", "Was war der Produzent von Teppich?", "Was waren die Produzenten von Teppich?", "Welche Organisation ist der Produzent von Teppich?", "Welche Organisation war der Produzent von Teppich?", "Welche Organisations sind die Produzenten von Teppich?", "Welche Organisations waren die Produzenten von Teppich?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Carpet>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Wagen?", "Gib mir die Produzenten von Wagen?", "Was ist der Produzent von Wagen?", "Was sind die Produzenten von Wagen?", "Was war der Produzent von Wagen?", "Was waren die Produzenten von Wagen?", "Welche Organisation ist der Produzent von Wagen?", "Welche Organisation war der Produzent von Wagen?", "Welche Organisations sind die Produzenten von Wagen?", "Welche Organisations waren die Produzenten von Wagen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Carriage>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Patrone (Munition)?", "Gib mir die Produzenten von Patrone (Munition)?", "Was ist der Produzent von Patrone (Munition)?", "Was sind die Produzenten von Patrone (Munition)?", "Was war der Produzent von Patrone (Munition)?", "Was waren die Produzenten von Patrone (Munition)?", "Welche Organisation ist der Produzent von Patrone (Munition)?", "Welche Organisation war der Produzent von Patrone (Munition)?", "Welche Organisations sind die Produzenten von Patrone (Munition)?", "Welche Organisations waren die Produzenten von Patrone (Munition)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Cartridge_(firearms)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Etui?", "Gib mir die Produzenten von Etui?", "Was ist der Produzent von Etui?", "Was sind die Produzenten von Etui?", "Was war der Produzent von Etui?", "Was waren die Produzenten von Etui?", "Welche Organisation ist der Produzent von Etui?", "Welche Organisation war der Produzent von Etui?", "Welche Organisations sind die Produzenten von Etui?", "Welche Organisations waren die Produzenten von Etui?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Case_(goods)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Fallrecht?", "Gib mir die Produzenten von Fallrecht?", "Was ist der Produzent von Fallrecht?", "Was sind die Produzenten von Fallrecht?", "Was war der Produzent von Fallrecht?", "Was waren die Produzenten von Fallrecht?", "Welche Organisation ist der Produzent von Fallrecht?", "Welche Organisation war der Produzent von Fallrecht?", "Welche Organisations sind die Produzenten von Fallrecht?", "Welche Organisations waren die Produzenten von Fallrecht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Case_law>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Casein?", "Gib mir die Produzenten von Casein?", "Was ist der Produzent von Casein?", "Was sind die Produzenten von Casein?", "Was war der Produzent von Casein?", "Was waren die Produzenten von Casein?", "Welche Organisation ist der Produzent von Casein?", "Welche Organisation war der Produzent von Casein?", "Welche Organisations sind die Produzenten von Casein?", "Welche Organisations waren die Produzenten von Casein?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Casein>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Abholgroßmarkt?", "Gib mir die Produzenten von Abholgroßmarkt?", "Was ist der Produzent von Abholgroßmarkt?", "Was sind die Produzenten von Abholgroßmarkt?", "Was war der Produzent von Abholgroßmarkt?", "Was waren die Produzenten von Abholgroßmarkt?", "Welche Organisation ist der Produzent von Abholgroßmarkt?", "Welche Organisation war der Produzent von Abholgroßmarkt?", "Welche Organisations sind die Produzenten von Abholgroßmarkt?", "Welche Organisations waren die Produzenten von Abholgroßmarkt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Cash_and_carry_(wholesale)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Cash Crops?", "Gib mir die Produzenten von Cash Crops?", "Was ist der Produzent von Cash Crops?", "Was sind die Produzenten von Cash Crops?", "Was war der Produzent von Cash Crops?", "Was waren die Produzenten von Cash Crops?", "Welche Organisation ist der Produzent von Cash Crops?", "Welche Organisation war der Produzent von Cash Crops?", "Welche Organisations sind die Produzenten von Cash Crops?", "Welche Organisations waren die Produzenten von Cash Crops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Cash_crop>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Cash Management?", "Gib mir die Produzenten von Cash Management?", "Was ist der Produzent von Cash Management?", "Was sind die Produzenten von Cash Management?", "Was war der Produzent von Cash Management?", "Was waren die Produzenten von Cash Management?", "Welche Organisation ist der Produzent von Cash Management?", "Welche Organisation war der Produzent von Cash Management?", "Welche Organisations sind die Produzenten von Cash Management?", "Welche Organisations waren die Produzenten von Cash Management?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Cash_management>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Treasury?", "Gib mir die Produzenten von Treasury?", "Was ist der Produzent von Treasury?", "Was sind die Produzenten von Treasury?", "Was war der Produzent von Treasury?", "Was waren die Produzenten von Treasury?", "Welche Organisation ist der Produzent von Treasury?", "Welche Organisation war der Produzent von Treasury?", "Welche Organisations sind die Produzenten von Treasury?", "Welche Organisations waren die Produzenten von Treasury?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Cash_management>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Registrierkasse?", "Gib mir die Produzenten von Registrierkasse?", "Was ist der Produzent von Registrierkasse?", "Was sind die Produzenten von Registrierkasse?", "Was war der Produzent von Registrierkasse?", "Was waren die Produzenten von Registrierkasse?", "Welche Organisation ist der Produzent von Registrierkasse?", "Welche Organisation war der Produzent von Registrierkasse?", "Welche Organisations sind die Produzenten von Registrierkasse?", "Welche Organisations waren die Produzenten von Registrierkasse?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Cash_register>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Cashback-System?", "Gib mir die Produzenten von Cashback-System?", "Was ist der Produzent von Cashback-System?", "Was sind die Produzenten von Cashback-System?", "Was war der Produzent von Cashback-System?", "Was waren die Produzenten von Cashback-System?", "Welche Organisation ist der Produzent von Cashback-System?", "Welche Organisation war der Produzent von Cashback-System?", "Welche Organisations sind die Produzenten von Cashback-System?", "Welche Organisations waren die Produzenten von Cashback-System?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Cashback_reward_program>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Bankscheck?", "Gib mir die Produzenten von Bankscheck?", "Was ist der Produzent von Bankscheck?", "Was sind die Produzenten von Bankscheck?", "Was war der Produzent von Bankscheck?", "Was waren die Produzenten von Bankscheck?", "Welche Organisation ist der Produzent von Bankscheck?", "Welche Organisation war der Produzent von Bankscheck?", "Welche Organisations sind die Produzenten von Bankscheck?", "Welche Organisations waren die Produzenten von Bankscheck?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Cashier's_check>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Kaschmirwolle?", "Gib mir die Produzenten von Kaschmirwolle?", "Was ist der Produzent von Kaschmirwolle?", "Was sind die Produzenten von Kaschmirwolle?", "Was war der Produzent von Kaschmirwolle?", "Was waren die Produzenten von Kaschmirwolle?", "Welche Organisation ist der Produzent von Kaschmirwolle?", "Welche Organisation war der Produzent von Kaschmirwolle?", "Welche Organisations sind die Produzenten von Kaschmirwolle?", "Welche Organisations waren die Produzenten von Kaschmirwolle?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Cashmere_wool>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Kassettenrekorder?", "Gib mir die Produzenten von Kassettenrekorder?", "Was ist der Produzent von Kassettenrekorder?", "Was sind die Produzenten von Kassettenrekorder?", "Was war der Produzent von Kassettenrekorder?", "Was waren die Produzenten von Kassettenrekorder?", "Welche Organisation ist der Produzent von Kassettenrekorder?", "Welche Organisation war der Produzent von Kassettenrekorder?", "Welche Organisations sind die Produzenten von Kassettenrekorder?", "Welche Organisations waren die Produzenten von Kassettenrekorder?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Cassette_deck>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Kassiterit?", "Gib mir die Produzenten von Kassiterit?", "Was ist der Produzent von Kassiterit?", "Was sind die Produzenten von Kassiterit?", "Was war der Produzent von Kassiterit?", "Was waren die Produzenten von Kassiterit?", "Welche Organisation ist der Produzent von Kassiterit?", "Welche Organisation war der Produzent von Kassiterit?", "Welche Organisations sind die Produzenten von Kassiterit?", "Welche Organisations waren die Produzenten von Kassiterit?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Cassiterite>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Gusseisen?", "Gib mir die Produzenten von Gusseisen?", "Was ist der Produzent von Gusseisen?", "Was sind die Produzenten von Gusseisen?", "Was war der Produzent von Gusseisen?", "Was waren die Produzenten von Gusseisen?", "Welche Organisation ist der Produzent von Gusseisen?", "Welche Organisation war der Produzent von Gusseisen?", "Welche Organisations sind die Produzenten von Gusseisen?", "Welche Organisations waren die Produzenten von Gusseisen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Cast_iron>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Gießbarkeit?", "Gib mir die Produzenten von Gießbarkeit?", "Was ist der Produzent von Gießbarkeit?", "Was sind die Produzenten von Gießbarkeit?", "Was war der Produzent von Gießbarkeit?", "Was waren die Produzenten von Gießbarkeit?", "Welche Organisation ist der Produzent von Gießbarkeit?", "Welche Organisation war der Produzent von Gießbarkeit?", "Welche Organisations sind die Produzenten von Gießbarkeit?", "Welche Organisations waren die Produzenten von Gießbarkeit?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Castability>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Kastagnetten?", "Gib mir die Produzenten von Kastagnetten?", "Was ist der Produzent von Kastagnetten?", "Was sind die Produzenten von Kastagnetten?", "Was war der Produzent von Kastagnetten?", "Was waren die Produzenten von Kastagnetten?", "Welche Organisation ist der Produzent von Kastagnetten?", "Welche Organisation war der Produzent von Kastagnetten?", "Welche Organisations sind die Produzenten von Kastagnetten?", "Welche Organisations waren die Produzenten von Kastagnetten?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Castanets>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Kastellan?", "Gib mir die Produzenten von Kastellan?", "Was ist der Produzent von Kastellan?", "Was sind die Produzenten von Kastellan?", "Was war der Produzent von Kastellan?", "Was waren die Produzenten von Kastellan?", "Welche Organisation ist der Produzent von Kastellan?", "Welche Organisation war der Produzent von Kastellan?", "Welche Organisations sind die Produzenten von Kastellan?", "Welche Organisations waren die Produzenten von Kastellan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Castellan>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Gießen (Urformen)?", "Gib mir die Produzenten von Gießen (Urformen)?", "Was ist der Produzent von Gießen (Urformen)?", "Was sind die Produzenten von Gießen (Urformen)?", "Was war der Produzent von Gießen (Urformen)?", "Was waren die Produzenten von Gießen (Urformen)?", "Welche Organisation ist der Produzent von Gießen (Urformen)?", "Welche Organisation war der Produzent von Gießen (Urformen)?", "Welche Organisations sind die Produzenten von Gießen (Urformen)?", "Welche Organisations waren die Produzenten von Gießen (Urformen)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Casting>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Gießen (Metall)?", "Gib mir die Produzenten von Gießen (Metall)?", "Was ist der Produzent von Gießen (Metall)?", "Was sind die Produzenten von Gießen (Metall)?", "Was war der Produzent von Gießen (Metall)?", "Was waren die Produzenten von Gießen (Metall)?", "Welche Organisation ist der Produzent von Gießen (Metall)?", "Welche Organisation war der Produzent von Gießen (Metall)?", "Welche Organisations sind die Produzenten von Gießen (Metall)?", "Welche Organisations waren die Produzenten von Gießen (Metall)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Casting_(metalworking)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Casual Game?", "Gib mir die Produzenten von Casual Game?", "Was ist der Produzent von Casual Game?", "Was sind die Produzenten von Casual Game?", "Was war der Produzent von Casual Game?", "Was waren die Produzenten von Casual Game?", "Welche Organisation ist der Produzent von Casual Game?", "Welche Organisation war der Produzent von Casual Game?", "Welche Organisations sind die Produzenten von Casual Game?", "Welche Organisations waren die Produzenten von Casual Game?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Casual_game>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Katzenauge?", "Gib mir die Produzenten von Katzenauge?", "Was ist der Produzent von Katzenauge?", "Was sind die Produzenten von Katzenauge?", "Was war der Produzent von Katzenauge?", "Was waren die Produzenten von Katzenauge?", "Welche Organisation ist der Produzent von Katzenauge?", "Welche Organisation war der Produzent von Katzenauge?", "Welche Organisations sind die Produzenten von Katzenauge?", "Welche Organisations waren die Produzenten von Katzenauge?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Cat's_eye_(road)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Katalogisierung?", "Gib mir die Produzenten von Katalogisierung?", "Was ist der Produzent von Katalogisierung?", "Was sind die Produzenten von Katalogisierung?", "Was war der Produzent von Katalogisierung?", "Was waren die Produzenten von Katalogisierung?", "Welche Organisation ist der Produzent von Katalogisierung?", "Welche Organisation war der Produzent von Katalogisierung?", "Welche Organisations sind die Produzenten von Katalogisierung?", "Welche Organisations waren die Produzenten von Katalogisierung?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Cataloging>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Katalysator?", "Gib mir die Produzenten von Katalysator?", "Was ist der Produzent von Katalysator?", "Was sind die Produzenten von Katalysator?", "Was war der Produzent von Katalysator?", "Was waren die Produzenten von Katalysator?", "Welche Organisation ist der Produzent von Katalysator?", "Welche Organisation war der Produzent von Katalysator?", "Welche Organisations sind die Produzenten von Katalysator?", "Welche Organisations waren die Produzenten von Katalysator?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Catalyst>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Katamaran?", "Gib mir die Produzenten von Katamaran?", "Was ist der Produzent von Katamaran?", "Was sind die Produzenten von Katamaran?", "Was war der Produzent von Katamaran?", "Was waren die Produzenten von Katamaran?", "Welche Organisation ist der Produzent von Katamaran?", "Welche Organisation war der Produzent von Katamaran?", "Welche Organisations sind die Produzenten von Katamaran?", "Welche Organisations waren die Produzenten von Katamaran?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Catamaran>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Catering?", "Gib mir die Produzenten von Catering?", "Was ist der Produzent von Catering?", "Was sind die Produzenten von Catering?", "Was war der Produzent von Catering?", "Was waren die Produzenten von Catering?", "Welche Organisation ist der Produzent von Catering?", "Welche Organisation war der Produzent von Catering?", "Welche Organisations sind die Produzenten von Catering?", "Welche Organisations waren die Produzenten von Catering?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Catering>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Pflanzenkläranlage?", "Gib mir die Produzenten von Pflanzenkläranlage?", "Was ist der Produzent von Pflanzenkläranlage?", "Was sind die Produzenten von Pflanzenkläranlage?", "Was war der Produzent von Pflanzenkläranlage?", "Was waren die Produzenten von Pflanzenkläranlage?", "Welche Organisation ist der Produzent von Pflanzenkläranlage?", "Welche Organisation war der Produzent von Pflanzenkläranlage?", "Welche Organisations sind die Produzenten von Pflanzenkläranlage?", "Welche Organisations waren die Produzenten von Pflanzenkläranlage?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Constructed_wetland>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Verbrauchsmaterial?", "Gib mir die Produzenten von Verbrauchsmaterial?", "Was ist der Produzent von Verbrauchsmaterial?", "Was sind die Produzenten von Verbrauchsmaterial?", "Was war der Produzent von Verbrauchsmaterial?", "Was waren die Produzenten von Verbrauchsmaterial?", "Welche Organisation ist der Produzent von Verbrauchsmaterial?", "Welche Organisation war der Produzent von Verbrauchsmaterial?", "Welche Organisations sind die Produzenten von Verbrauchsmaterial?", "Welche Organisations waren die Produzenten von Verbrauchsmaterial?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Consumables>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Verbraucher?", "Gib mir die Produzenten von Verbraucher?", "Was ist der Produzent von Verbraucher?", "Was sind die Produzenten von Verbraucher?", "Was war der Produzent von Verbraucher?", "Was waren die Produzenten von Verbraucher?", "Welche Organisation ist der Produzent von Verbraucher?", "Welche Organisation war der Produzent von Verbraucher?", "Welche Organisations sind die Produzenten von Verbraucher?", "Welche Organisations waren die Produzenten von Verbraucher?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Consumer>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Stimmfühlungslaut?", "Gib mir die Produzenten von Stimmfühlungslaut?", "Was ist der Produzent von Stimmfühlungslaut?", "Was sind die Produzenten von Stimmfühlungslaut?", "Was war der Produzent von Stimmfühlungslaut?", "Was waren die Produzenten von Stimmfühlungslaut?", "Welche Organisation ist der Produzent von Stimmfühlungslaut?", "Welche Organisation war der Produzent von Stimmfühlungslaut?", "Welche Organisations sind die Produzenten von Stimmfühlungslaut?", "Welche Organisations waren die Produzenten von Stimmfühlungslaut?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Contact_call>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Kontaktlinse?", "Gib mir die Produzenten von Kontaktlinse?", "Was ist der Produzent von Kontaktlinse?", "Was sind die Produzenten von Kontaktlinse?", "Was war der Produzent von Kontaktlinse?", "Was waren die Produzenten von Kontaktlinse?", "Welche Organisation ist der Produzent von Kontaktlinse?", "Welche Organisation war der Produzent von Kontaktlinse?", "Welche Organisations sind die Produzenten von Kontaktlinse?", "Welche Organisations waren die Produzenten von Kontaktlinse?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Contact_lens>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Kontaktloses Bezahlen?", "Gib mir die Produzenten von Kontaktloses Bezahlen?", "Was ist der Produzent von Kontaktloses Bezahlen?", "Was sind die Produzenten von Kontaktloses Bezahlen?", "Was war der Produzent von Kontaktloses Bezahlen?", "Was waren die Produzenten von Kontaktloses Bezahlen?", "Welche Organisation ist der Produzent von Kontaktloses Bezahlen?", "Welche Organisation war der Produzent von Kontaktloses Bezahlen?", "Welche Organisations sind die Produzenten von Kontaktloses Bezahlen?", "Welche Organisations waren die Produzenten von Kontaktloses Bezahlen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Contactless_payment>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Containerbrücke?", "Gib mir die Produzenten von Containerbrücke?", "Was ist der Produzent von Containerbrücke?", "Was sind die Produzenten von Containerbrücke?", "Was war der Produzent von Containerbrücke?", "Was waren die Produzenten von Containerbrücke?", "Welche Organisation ist der Produzent von Containerbrücke?", "Welche Organisation war der Produzent von Containerbrücke?", "Welche Organisations sind die Produzenten von Containerbrücke?", "Welche Organisations waren die Produzenten von Containerbrücke?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Container_crane>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Contentfilter?", "Gib mir die Produzenten von Contentfilter?", "Was ist der Produzent von Contentfilter?", "Was sind die Produzenten von Contentfilter?", "Was war der Produzent von Contentfilter?", "Was waren die Produzenten von Contentfilter?", "Welche Organisation ist der Produzent von Contentfilter?", "Welche Organisation war der Produzent von Contentfilter?", "Welche Organisations sind die Produzenten von Contentfilter?", "Welche Organisations waren die Produzenten von Contentfilter?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Content-control_software>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Content Delivery Network?", "Gib mir die Produzenten von Content Delivery Network?", "Was ist der Produzent von Content Delivery Network?", "Was sind die Produzenten von Content Delivery Network?", "Was war der Produzent von Content Delivery Network?", "Was waren die Produzenten von Content Delivery Network?", "Welche Organisation ist der Produzent von Content Delivery Network?", "Welche Organisation war der Produzent von Content Delivery Network?", "Welche Organisations sind die Produzenten von Content Delivery Network?", "Welche Organisations waren die Produzenten von Content Delivery Network?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Content_delivery_network>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Content-Management?", "Gib mir die Produzenten von Content-Management?", "Was ist der Produzent von Content-Management?", "Was sind die Produzenten von Content-Management?", "Was war der Produzent von Content-Management?", "Was waren die Produzenten von Content-Management?", "Welche Organisation ist der Produzent von Content-Management?", "Welche Organisation war der Produzent von Content-Management?", "Welche Organisations sind die Produzenten von Content-Management?", "Welche Organisations waren die Produzenten von Content-Management?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Content_management>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Content-Management-System?", "Gib mir die Produzenten von Content-Management-System?", "Was ist der Produzent von Content-Management-System?", "Was sind die Produzenten von Content-Management-System?", "Was war der Produzent von Content-Management-System?", "Was waren die Produzenten von Content-Management-System?", "Welche Organisation ist der Produzent von Content-Management-System?", "Welche Organisation war der Produzent von Content-Management-System?", "Welche Organisations sind die Produzenten von Content-Management-System?", "Welche Organisations waren die Produzenten von Content-Management-System?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Content_management_system>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Semantisches Targeting?", "Gib mir die Produzenten von Semantisches Targeting?", "Was ist der Produzent von Semantisches Targeting?", "Was sind die Produzenten von Semantisches Targeting?", "Was war der Produzent von Semantisches Targeting?", "Was waren die Produzenten von Semantisches Targeting?", "Welche Organisation ist der Produzent von Semantisches Targeting?", "Welche Organisation war der Produzent von Semantisches Targeting?", "Welche Organisations sind die Produzenten von Semantisches Targeting?", "Welche Organisations waren die Produzenten von Semantisches Targeting?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Contextual_advertising>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Stufenloses Getriebe?", "Gib mir die Produzenten von Stufenloses Getriebe?", "Was ist der Produzent von Stufenloses Getriebe?", "Was sind die Produzenten von Stufenloses Getriebe?", "Was war der Produzent von Stufenloses Getriebe?", "Was waren die Produzenten von Stufenloses Getriebe?", "Welche Organisation ist der Produzent von Stufenloses Getriebe?", "Welche Organisation war der Produzent von Stufenloses Getriebe?", "Welche Organisations sind die Produzenten von Stufenloses Getriebe?", "Welche Organisations waren die Produzenten von Stufenloses Getriebe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Continuously_variable_transmission>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Kontrafagott?", "Gib mir die Produzenten von Kontrafagott?", "Was ist der Produzent von Kontrafagott?", "Was sind die Produzenten von Kontrafagott?", "Was war der Produzent von Kontrafagott?", "Was waren die Produzenten von Kontrafagott?", "Welche Organisation ist der Produzent von Kontrafagott?", "Welche Organisation war der Produzent von Kontrafagott?", "Welche Organisations sind die Produzenten von Kontrafagott?", "Welche Organisations waren die Produzenten von Kontrafagott?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Contrabassoon>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Differenzkontrakt?", "Gib mir die Produzenten von Differenzkontrakt?", "Was ist der Produzent von Differenzkontrakt?", "Was sind die Produzenten von Differenzkontrakt?", "Was war der Produzent von Differenzkontrakt?", "Was waren die Produzenten von Differenzkontrakt?", "Welche Organisation ist der Produzent von Differenzkontrakt?", "Welche Organisation war der Produzent von Differenzkontrakt?", "Welche Organisations sind die Produzenten von Differenzkontrakt?", "Welche Organisations waren die Produzenten von Differenzkontrakt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Contract_for_difference>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Vertragsmanagement?", "Gib mir die Produzenten von Vertragsmanagement?", "Was ist der Produzent von Vertragsmanagement?", "Was sind die Produzenten von Vertragsmanagement?", "Was war der Produzent von Vertragsmanagement?", "Was waren die Produzenten von Vertragsmanagement?", "Welche Organisation ist der Produzent von Vertragsmanagement?", "Welche Organisation war der Produzent von Vertragsmanagement?", "Welche Organisations sind die Produzenten von Vertragsmanagement?", "Welche Organisations waren die Produzenten von Vertragsmanagement?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Contract_management>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Querlenker?", "Gib mir die Produzenten von Querlenker?", "Was ist der Produzent von Querlenker?", "Was sind die Produzenten von Querlenker?", "Was war der Produzent von Querlenker?", "Was waren die Produzenten von Querlenker?", "Welche Organisation ist der Produzent von Querlenker?", "Welche Organisation war der Produzent von Querlenker?", "Welche Organisations sind die Produzenten von Querlenker?", "Welche Organisations waren die Produzenten von Querlenker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Control_arm>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Regelkreis?", "Gib mir die Produzenten von Regelkreis?", "Was ist der Produzent von Regelkreis?", "Was sind die Produzenten von Regelkreis?", "Was war der Produzent von Regelkreis?", "Was waren die Produzenten von Regelkreis?", "Welche Organisation ist der Produzent von Regelkreis?", "Welche Organisation war der Produzent von Regelkreis?", "Welche Organisations sind die Produzenten von Regelkreis?", "Welche Organisations waren die Produzenten von Regelkreis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Control_system>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Stellventil?", "Gib mir die Produzenten von Stellventil?", "Was ist der Produzent von Stellventil?", "Was sind die Produzenten von Stellventil?", "Was war der Produzent von Stellventil?", "Was waren die Produzenten von Stellventil?", "Welche Organisation ist der Produzent von Stellventil?", "Welche Organisation war der Produzent von Stellventil?", "Welche Organisations sind die Produzenten von Stellventil?", "Welche Organisations waren die Produzenten von Stellventil?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Control_valve>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Autobahn?", "Gib mir die Produzenten von Autobahn?", "Was ist der Produzent von Autobahn?", "Was sind die Produzenten von Autobahn?", "Was war der Produzent von Autobahn?", "Was waren die Produzenten von Autobahn?", "Welche Organisation ist der Produzent von Autobahn?", "Welche Organisation war der Produzent von Autobahn?", "Welche Organisations sind die Produzenten von Autobahn?", "Welche Organisations waren die Produzenten von Autobahn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Controlled-access_highway>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Convenience Food?", "Gib mir die Produzenten von Convenience Food?", "Was ist der Produzent von Convenience Food?", "Was sind die Produzenten von Convenience Food?", "Was war der Produzent von Convenience Food?", "Was waren die Produzenten von Convenience Food?", "Welche Organisation ist der Produzent von Convenience Food?", "Welche Organisation war der Produzent von Convenience Food?", "Welche Organisations sind die Produzenten von Convenience Food?", "Welche Organisations waren die Produzenten von Convenience Food?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Convenience_food>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Convenience Shop?", "Gib mir die Produzenten von Convenience Shop?", "Was ist der Produzent von Convenience Shop?", "Was sind die Produzenten von Convenience Shop?", "Was war der Produzent von Convenience Shop?", "Was waren die Produzenten von Convenience Shop?", "Welche Organisation ist der Produzent von Convenience Shop?", "Welche Organisation war der Produzent von Convenience Shop?", "Welche Organisations sind die Produzenten von Convenience Shop?", "Welche Organisations waren die Produzenten von Convenience Shop?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Convenience_store>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Förderband?", "Gib mir die Produzenten von Förderband?", "Was ist der Produzent von Förderband?", "Was sind die Produzenten von Förderband?", "Was war der Produzent von Förderband?", "Was waren die Produzenten von Förderband?", "Welche Organisation ist der Produzent von Förderband?", "Welche Organisation war der Produzent von Förderband?", "Welche Organisations sind die Produzenten von Förderband?", "Welche Organisations waren die Produzenten von Förderband?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Conveyor_belt>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Panzerförderer?", "Gib mir die Produzenten von Panzerförderer?", "Was ist der Produzent von Panzerförderer?", "Was sind die Produzenten von Panzerförderer?", "Was war der Produzent von Panzerförderer?", "Was waren die Produzenten von Panzerförderer?", "Welche Organisation ist der Produzent von Panzerförderer?", "Welche Organisation war der Produzent von Panzerförderer?", "Welche Organisations sind die Produzenten von Panzerförderer?", "Welche Organisations waren die Produzenten von Panzerförderer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Conveyor_chain>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Kühlmittel?", "Gib mir die Produzenten von Kühlmittel?", "Was ist der Produzent von Kühlmittel?", "Was sind die Produzenten von Kühlmittel?", "Was war der Produzent von Kühlmittel?", "Was waren die Produzenten von Kühlmittel?", "Welche Organisation ist der Produzent von Kühlmittel?", "Welche Organisation war der Produzent von Kühlmittel?", "Welche Organisations sind die Produzenten von Kühlmittel?", "Welche Organisations waren die Produzenten von Kühlmittel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Coolant>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Kühlbox?", "Gib mir die Produzenten von Kühlbox?", "Was ist der Produzent von Kühlbox?", "Was sind die Produzenten von Kühlbox?", "Was war der Produzent von Kühlbox?", "Was waren die Produzenten von Kühlbox?", "Welche Organisation ist der Produzent von Kühlbox?", "Welche Organisation war der Produzent von Kühlbox?", "Welche Organisations sind die Produzenten von Kühlbox?", "Welche Organisations waren die Produzenten von Kühlbox?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Cooler>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Abkühlung?", "Gib mir die Produzenten von Abkühlung?", "Was ist der Produzent von Abkühlung?", "Was sind die Produzenten von Abkühlung?", "Was war der Produzent von Abkühlung?", "Was waren die Produzenten von Abkühlung?", "Welche Organisation ist der Produzent von Abkühlung?", "Welche Organisation war der Produzent von Abkühlung?", "Welche Organisations sind die Produzenten von Abkühlung?", "Welche Organisations waren die Produzenten von Abkühlung?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Cooling>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Koordinatenmessgerät?", "Gib mir die Produzenten von Koordinatenmessgerät?", "Was ist der Produzent von Koordinatenmessgerät?", "Was sind die Produzenten von Koordinatenmessgerät?", "Was war der Produzent von Koordinatenmessgerät?", "Was waren die Produzenten von Koordinatenmessgerät?", "Welche Organisation ist der Produzent von Koordinatenmessgerät?", "Welche Organisation war der Produzent von Koordinatenmessgerät?", "Welche Organisations sind die Produzenten von Koordinatenmessgerät?", "Welche Organisations waren die Produzenten von Koordinatenmessgerät?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Coordinate-measuring_machine>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "ORGANISATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Produzenten von Kupfer?", "Gib mir die Produzenten von Kupfer?", "Was ist der Produzent von Kupfer?", "Was sind die Produzenten von Kupfer?", "Was war der Produzent von Kupfer?", "Was waren die Produzenten von Kupfer?", "Welche Organisation ist der Produzent von Kupfer?", "Welche Organisation war der Produzent von Kupfer?", "Welche Organisations sind die Produzenten von Kupfer?", "Welche Organisations waren die Produzenten von Kupfer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Copper>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Laurel und Hardy: Die Geheimagenten?", "Gib mir die Komponisten für Laurel und Hardy: Die Geheimagenten?", "Welche musikalischer Künstlers sind die Komponisten für Laurel und Hardy: Die Geheimagenten?", "Welche musikalischer Künstlers waren die Komponisten für Laurel und Hardy: Die Geheimagenten?", "Welcher musikalischer Künstler ist der Komponist für Laurel und Hardy: Die Geheimagenten?", "Welcher musikalischer Künstler war der Komponist für Laurel und Hardy: Die Geheimagenten?", "Wer ist der Komponist für Laurel und Hardy: Die Geheimagenten?", "Wer sind die Komponisten für Laurel und Hardy: Die Geheimagenten?", "Wer war der Komponist für Laurel und Hardy: Die Geheimagenten?", "Wer waren die Komponisten für Laurel und Hardy: Die Geheimagenten?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A-Haunting_We_Will_Go_(1942_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für A.D. – Anno Domini?", "Gib mir die Komponisten für A.D. – Anno Domini?", "Welche musikalischer Künstlers sind die Komponisten für A.D. – Anno Domini?", "Welche musikalischer Künstlers waren die Komponisten für A.D. – Anno Domini?", "Welcher musikalischer Künstler ist der Komponist für A.D. – Anno Domini?", "Welcher musikalischer Künstler war der Komponist für A.D. – Anno Domini?", "Wer ist der Komponist für A.D. – Anno Domini?", "Wer sind die Komponisten für A.D. – Anno Domini?", "Wer war der Komponist für A.D. – Anno Domini?", "Wer waren die Komponisten für A.D. – Anno Domini?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A.D._(miniseries)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Apex (Film)?", "Gib mir die Komponisten für Apex (Film)?", "Welche musikalischer Künstlers sind die Komponisten für Apex (Film)?", "Welche musikalischer Künstlers waren die Komponisten für Apex (Film)?", "Welcher musikalischer Künstler ist der Komponist für Apex (Film)?", "Welcher musikalischer Künstler war der Komponist für Apex (Film)?", "Wer ist der Komponist für Apex (Film)?", "Wer sind die Komponisten für Apex (Film)?", "Wer war der Komponist für Apex (Film)?", "Wer waren die Komponisten für Apex (Film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A.P.E.X.> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Love, Simon?", "Gib mir die Komponisten für Love, Simon?", "Welche musikalischer Künstlers sind die Komponisten für Love, Simon?", "Welche musikalischer Künstlers waren die Komponisten für Love, Simon?", "Welcher musikalischer Künstler ist der Komponist für Love, Simon?", "Welcher musikalischer Künstler war der Komponist für Love, Simon?", "Wer ist der Komponist für Love, Simon?", "Wer sind die Komponisten für Love, Simon?", "Wer war der Komponist für Love, Simon?", "Wer waren die Komponisten für Love, Simon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love,_Simon> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Love, Wedding, Marriage – Ein Plan zum Verlieben?", "Gib mir die Komponisten für Love, Wedding, Marriage – Ein Plan zum Verlieben?", "Welche musikalischer Künstlers sind die Komponisten für Love, Wedding, Marriage – Ein Plan zum Verlieben?", "Welche musikalischer Künstlers waren die Komponisten für Love, Wedding, Marriage – Ein Plan zum Verlieben?", "Welcher musikalischer Künstler ist der Komponist für Love, Wedding, Marriage – Ein Plan zum Verlieben?", "Welcher musikalischer Künstler war der Komponist für Love, Wedding, Marriage – Ein Plan zum Verlieben?", "Wer ist der Komponist für Love, Wedding, Marriage – Ein Plan zum Verlieben?", "Wer sind die Komponisten für Love, Wedding, Marriage – Ein Plan zum Verlieben?", "Wer war der Komponist für Love, Wedding, Marriage – Ein Plan zum Verlieben?", "Wer waren die Komponisten für Love, Wedding, Marriage – Ein Plan zum Verlieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love,_Wedding,_Marriage> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Love & Mercy?", "Gib mir die Komponisten für Love & Mercy?", "Welche musikalischer Künstlers sind die Komponisten für Love & Mercy?", "Welche musikalischer Künstlers waren die Komponisten für Love & Mercy?", "Welcher musikalischer Künstler ist der Komponist für Love & Mercy?", "Welcher musikalischer Künstler war der Komponist für Love & Mercy?", "Wer ist der Komponist für Love & Mercy?", "Wer sind die Komponisten für Love & Mercy?", "Wer war der Komponist für Love & Mercy?", "Wer waren die Komponisten für Love & Mercy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_&_Mercy_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Love & Sex?", "Gib mir die Komponisten für Love & Sex?", "Welche musikalischer Künstlers sind die Komponisten für Love & Sex?", "Welche musikalischer Künstlers waren die Komponisten für Love & Sex?", "Welcher musikalischer Künstler ist der Komponist für Love & Sex?", "Welcher musikalischer Künstler war der Komponist für Love & Sex?", "Wer ist der Komponist für Love & Sex?", "Wer sind die Komponisten für Love & Sex?", "Wer war der Komponist für Love & Sex?", "Wer waren die Komponisten für Love & Sex?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_&_Sex> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Liebe 47?", "Gib mir die Komponisten für Liebe 47?", "Welche musikalischer Künstlers sind die Komponisten für Liebe 47?", "Welche musikalischer Künstlers waren die Komponisten für Liebe 47?", "Welcher musikalischer Künstler ist der Komponist für Liebe 47?", "Welcher musikalischer Künstler war der Komponist für Liebe 47?", "Wer ist der Komponist für Liebe 47?", "Wer sind die Komponisten für Liebe 47?", "Wer war der Komponist für Liebe 47?", "Wer waren die Komponisten für Liebe 47?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_'47> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Liebe (1971)?", "Gib mir die Komponisten für Liebe (1971)?", "Welche musikalischer Künstlers sind die Komponisten für Liebe (1971)?", "Welche musikalischer Künstlers waren die Komponisten für Liebe (1971)?", "Welcher musikalischer Künstler ist der Komponist für Liebe (1971)?", "Welcher musikalischer Künstler war der Komponist für Liebe (1971)?", "Wer ist der Komponist für Liebe (1971)?", "Wer sind die Komponisten für Liebe (1971)?", "Wer war der Komponist für Liebe (1971)?", "Wer waren die Komponisten für Liebe (1971)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_(1971_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Love (2011)?", "Gib mir die Komponisten für Love (2011)?", "Welche musikalischer Künstlers sind die Komponisten für Love (2011)?", "Welche musikalischer Künstlers waren die Komponisten für Love (2011)?", "Welcher musikalischer Künstler ist der Komponist für Love (2011)?", "Welcher musikalischer Künstler war der Komponist für Love (2011)?", "Wer ist der Komponist für Love (2011)?", "Wer sind die Komponisten für Love (2011)?", "Wer war der Komponist für Love (2011)?", "Wer waren die Komponisten für Love (2011)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_(2011_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Love (2015)?", "Gib mir die Komponisten für Love (2015)?", "Welche musikalischer Künstlers sind die Komponisten für Love (2015)?", "Welche musikalischer Künstlers waren die Komponisten für Love (2015)?", "Welcher musikalischer Künstler ist der Komponist für Love (2015)?", "Welcher musikalischer Künstler war der Komponist für Love (2015)?", "Wer ist der Komponist für Love (2015)?", "Wer sind die Komponisten für Love (2015)?", "Wer war der Komponist für Love (2015)?", "Wer waren die Komponisten für Love (2015)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_(2015_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Tatsächlich… Liebe?", "Gib mir die Komponisten für Tatsächlich… Liebe?", "Welche musikalischer Künstlers sind die Komponisten für Tatsächlich… Liebe?", "Welche musikalischer Künstlers waren die Komponisten für Tatsächlich… Liebe?", "Welcher musikalischer Künstler ist der Komponist für Tatsächlich… Liebe?", "Welcher musikalischer Künstler war der Komponist für Tatsächlich… Liebe?", "Wer ist der Komponist für Tatsächlich… Liebe?", "Wer sind die Komponisten für Tatsächlich… Liebe?", "Wer war der Komponist für Tatsächlich… Liebe?", "Wer waren die Komponisten für Tatsächlich… Liebe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Actually> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Ruhelose Liebe?", "Gib mir die Komponisten für Ruhelose Liebe?", "Welche musikalischer Künstlers sind die Komponisten für Ruhelose Liebe?", "Welche musikalischer Künstlers waren die Komponisten für Ruhelose Liebe?", "Welcher musikalischer Künstler ist der Komponist für Ruhelose Liebe?", "Welcher musikalischer Künstler war der Komponist für Ruhelose Liebe?", "Wer ist der Komponist für Ruhelose Liebe?", "Wer sind die Komponisten für Ruhelose Liebe?", "Wer war der Komponist für Ruhelose Liebe?", "Wer waren die Komponisten für Ruhelose Liebe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Affair_(1939_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Love Bite – Nichts ist safer als Sex?", "Gib mir die Komponisten für Love Bite – Nichts ist safer als Sex?", "Welche musikalischer Künstlers sind die Komponisten für Love Bite – Nichts ist safer als Sex?", "Welche musikalischer Künstlers waren die Komponisten für Love Bite – Nichts ist safer als Sex?", "Welcher musikalischer Künstler ist der Komponist für Love Bite – Nichts ist safer als Sex?", "Welcher musikalischer Künstler war der Komponist für Love Bite – Nichts ist safer als Sex?", "Wer ist der Komponist für Love Bite – Nichts ist safer als Sex?", "Wer sind die Komponisten für Love Bite – Nichts ist safer als Sex?", "Wer war der Komponist für Love Bite – Nichts ist safer als Sex?", "Wer waren die Komponisten für Love Bite – Nichts ist safer als Sex?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Bite> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Wer liebt, lebt gefährlich?", "Gib mir die Komponisten für Wer liebt, lebt gefährlich?", "Welche musikalischer Künstlers sind die Komponisten für Wer liebt, lebt gefährlich?", "Welche musikalischer Künstlers waren die Komponisten für Wer liebt, lebt gefährlich?", "Welcher musikalischer Künstler ist der Komponist für Wer liebt, lebt gefährlich?", "Welcher musikalischer Künstler war der Komponist für Wer liebt, lebt gefährlich?", "Wer ist der Komponist für Wer liebt, lebt gefährlich?", "Wer sind die Komponisten für Wer liebt, lebt gefährlich?", "Wer war der Komponist für Wer liebt, lebt gefährlich?", "Wer waren die Komponisten für Wer liebt, lebt gefährlich?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Can_Seriously_Damage_Your_Health> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Love Express (2011)?", "Gib mir die Komponisten für Love Express (2011)?", "Welche musikalischer Künstlers sind die Komponisten für Love Express (2011)?", "Welche musikalischer Künstlers waren die Komponisten für Love Express (2011)?", "Welcher musikalischer Künstler ist der Komponist für Love Express (2011)?", "Welcher musikalischer Künstler war der Komponist für Love Express (2011)?", "Wer ist der Komponist für Love Express (2011)?", "Wer sind die Komponisten für Love Express (2011)?", "Wer war der Komponist für Love Express (2011)?", "Wer waren die Komponisten für Love Express (2011)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Express> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Love Happens?", "Gib mir die Komponisten für Love Happens?", "Welche musikalischer Künstlers sind die Komponisten für Love Happens?", "Welche musikalischer Künstlers waren die Komponisten für Love Happens?", "Welcher musikalischer Künstler ist der Komponist für Love Happens?", "Welcher musikalischer Künstler war der Komponist für Love Happens?", "Wer ist der Komponist für Love Happens?", "Wer sind die Komponisten für Love Happens?", "Wer war der Komponist für Love Happens?", "Wer waren die Komponisten für Love Happens?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Happens_(2009_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Love Happy?", "Gib mir die Komponisten für Love Happy?", "Welche musikalischer Künstlers sind die Komponisten für Love Happy?", "Welche musikalischer Künstlers waren die Komponisten für Love Happy?", "Welcher musikalischer Künstler ist der Komponist für Love Happy?", "Welcher musikalischer Künstler war der Komponist für Love Happy?", "Wer ist der Komponist für Love Happy?", "Wer sind die Komponisten für Love Happy?", "Wer war der Komponist für Love Happy?", "Wer waren die Komponisten für Love Happy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Happy> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Liebe und andere …?", "Gib mir die Komponisten für Liebe und andere …?", "Welche musikalischer Künstlers sind die Komponisten für Liebe und andere …?", "Welche musikalischer Künstlers waren die Komponisten für Liebe und andere …?", "Welcher musikalischer Künstler ist der Komponist für Liebe und andere …?", "Welcher musikalischer Künstler war der Komponist für Liebe und andere …?", "Wer ist der Komponist für Liebe und andere …?", "Wer sind die Komponisten für Liebe und andere …?", "Wer war der Komponist für Liebe und andere …?", "Wer waren die Komponisten für Liebe und andere …?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Is_All_There_Is> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Die süße Falle?", "Gib mir die Komponisten für Die süße Falle?", "Welche musikalischer Künstlers sind die Komponisten für Die süße Falle?", "Welche musikalischer Künstlers waren die Komponisten für Die süße Falle?", "Welcher musikalischer Künstler ist der Komponist für Die süße Falle?", "Welcher musikalischer Künstler war der Komponist für Die süße Falle?", "Wer ist der Komponist für Die süße Falle?", "Wer sind die Komponisten für Die süße Falle?", "Wer war der Komponist für Die süße Falle?", "Wer waren die Komponisten für Die süße Falle?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Is_Better_Than_Ever> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für … und ewig bleibt die Liebe?", "Gib mir die Komponisten für … und ewig bleibt die Liebe?", "Welche musikalischer Künstlers sind die Komponisten für … und ewig bleibt die Liebe?", "Welche musikalischer Künstlers waren die Komponisten für … und ewig bleibt die Liebe?", "Welcher musikalischer Künstler ist der Komponist für … und ewig bleibt die Liebe?", "Welcher musikalischer Künstler war der Komponist für … und ewig bleibt die Liebe?", "Wer ist der Komponist für … und ewig bleibt die Liebe?", "Wer sind die Komponisten für … und ewig bleibt die Liebe?", "Wer war der Komponist für … und ewig bleibt die Liebe?", "Wer waren die Komponisten für … und ewig bleibt die Liebe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Is_Forever_(1954_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Operation Comeback?", "Gib mir die Komponisten für Operation Comeback?", "Welche musikalischer Künstlers sind die Komponisten für Operation Comeback?", "Welche musikalischer Künstlers waren die Komponisten für Operation Comeback?", "Welcher musikalischer Künstler ist der Komponist für Operation Comeback?", "Welcher musikalischer Künstler war der Komponist für Operation Comeback?", "Wer ist der Komponist für Operation Comeback?", "Wer sind die Komponisten für Operation Comeback?", "Wer war der Komponist für Operation Comeback?", "Wer waren die Komponisten für Operation Comeback?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Is_Forever_(1982_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Liebe ist nur ein Wort?", "Gib mir die Komponisten für Liebe ist nur ein Wort?", "Welche musikalischer Künstlers sind die Komponisten für Liebe ist nur ein Wort?", "Welche musikalischer Künstlers waren die Komponisten für Liebe ist nur ein Wort?", "Welcher musikalischer Künstler ist der Komponist für Liebe ist nur ein Wort?", "Welcher musikalischer Künstler war der Komponist für Liebe ist nur ein Wort?", "Wer ist der Komponist für Liebe ist nur ein Wort?", "Wer sind die Komponisten für Liebe ist nur ein Wort?", "Wer war der Komponist für Liebe ist nur ein Wort?", "Wer waren die Komponisten für Liebe ist nur ein Wort?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Is_Only_a_Word> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für 40 Millionen suchen einen Mann?", "Gib mir die Komponisten für 40 Millionen suchen einen Mann?", "Welche musikalischer Künstlers sind die Komponisten für 40 Millionen suchen einen Mann?", "Welche musikalischer Künstlers waren die Komponisten für 40 Millionen suchen einen Mann?", "Welcher musikalischer Künstler ist der Komponist für 40 Millionen suchen einen Mann?", "Welcher musikalischer Künstler war der Komponist für 40 Millionen suchen einen Mann?", "Wer ist der Komponist für 40 Millionen suchen einen Mann?", "Wer sind die Komponisten für 40 Millionen suchen einen Mann?", "Wer war der Komponist für 40 Millionen suchen einen Mann?", "Wer waren die Komponisten für 40 Millionen suchen einen Mann?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Is_a_Ball> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Alle Herrlichkeit auf Erden?", "Gib mir die Komponisten für Alle Herrlichkeit auf Erden?", "Welche musikalischer Künstlers sind die Komponisten für Alle Herrlichkeit auf Erden?", "Welche musikalischer Künstlers waren die Komponisten für Alle Herrlichkeit auf Erden?", "Welcher musikalischer Künstler ist der Komponist für Alle Herrlichkeit auf Erden?", "Welcher musikalischer Künstler war der Komponist für Alle Herrlichkeit auf Erden?", "Wer ist der Komponist für Alle Herrlichkeit auf Erden?", "Wer sind die Komponisten für Alle Herrlichkeit auf Erden?", "Wer war der Komponist für Alle Herrlichkeit auf Erden?", "Wer waren die Komponisten für Alle Herrlichkeit auf Erden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Is_a_Many-Splendored_Thing_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Love Is in the Air (Film)?", "Gib mir die Komponisten für Love Is in the Air (Film)?", "Welche musikalischer Künstlers sind die Komponisten für Love Is in the Air (Film)?", "Welche musikalischer Künstlers waren die Komponisten für Love Is in the Air (Film)?", "Welcher musikalischer Künstler ist der Komponist für Love Is in the Air (Film)?", "Welcher musikalischer Künstler war der Komponist für Love Is in the Air (Film)?", "Wer ist der Komponist für Love Is in the Air (Film)?", "Wer sind die Komponisten für Love Is in the Air (Film)?", "Wer war der Komponist für Love Is in the Air (Film)?", "Wer waren die Komponisten für Love Is in the Air (Film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Is_in_the_Air_(2005_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Das verflixte 3. Jahr?", "Gib mir die Komponisten für Das verflixte 3. Jahr?", "Welche musikalischer Künstlers sind die Komponisten für Das verflixte 3. Jahr?", "Welche musikalischer Künstlers waren die Komponisten für Das verflixte 3. Jahr?", "Welcher musikalischer Künstler ist der Komponist für Das verflixte 3. Jahr?", "Welcher musikalischer Künstler war der Komponist für Das verflixte 3. Jahr?", "Wer ist der Komponist für Das verflixte 3. Jahr?", "Wer sind die Komponisten für Das verflixte 3. Jahr?", "Wer war der Komponist für Das verflixte 3. Jahr?", "Wer waren die Komponisten für Das verflixte 3. Jahr?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Lasts_Three_Years> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Love Letter?", "Gib mir die Komponisten für Love Letter?", "Welche musikalischer Künstlers sind die Komponisten für Love Letter?", "Welche musikalischer Künstlers waren die Komponisten für Love Letter?", "Welcher musikalischer Künstler ist der Komponist für Love Letter?", "Welcher musikalischer Künstler war der Komponist für Love Letter?", "Wer ist der Komponist für Love Letter?", "Wer sind die Komponisten für Love Letter?", "Wer war der Komponist für Love Letter?", "Wer waren die Komponisten für Love Letter?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Letter_(1995_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Liebesbriefe (1945)?", "Gib mir die Komponisten für Liebesbriefe (1945)?", "Welche musikalischer Künstlers sind die Komponisten für Liebesbriefe (1945)?", "Welche musikalischer Künstlers waren die Komponisten für Liebesbriefe (1945)?", "Welcher musikalischer Künstler ist der Komponist für Liebesbriefe (1945)?", "Welcher musikalischer Künstler war der Komponist für Liebesbriefe (1945)?", "Wer ist der Komponist für Liebesbriefe (1945)?", "Wer sind die Komponisten für Liebesbriefe (1945)?", "Wer war der Komponist für Liebesbriefe (1945)?", "Wer waren die Komponisten für Liebesbriefe (1945)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Letters_(1945_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Liebesbriefe aus dem Engadin?", "Gib mir die Komponisten für Liebesbriefe aus dem Engadin?", "Welche musikalischer Künstlers sind die Komponisten für Liebesbriefe aus dem Engadin?", "Welche musikalischer Künstlers waren die Komponisten für Liebesbriefe aus dem Engadin?", "Welcher musikalischer Künstler ist der Komponist für Liebesbriefe aus dem Engadin?", "Welcher musikalischer Künstler war der Komponist für Liebesbriefe aus dem Engadin?", "Wer ist der Komponist für Liebesbriefe aus dem Engadin?", "Wer sind die Komponisten für Liebesbriefe aus dem Engadin?", "Wer war der Komponist für Liebesbriefe aus dem Engadin?", "Wer waren die Komponisten für Liebesbriefe aus dem Engadin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Letters_from_Engadin> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Liebesbriefe einer portugiesischen Nonne?", "Gib mir die Komponisten für Liebesbriefe einer portugiesischen Nonne?", "Welche musikalischer Künstlers sind die Komponisten für Liebesbriefe einer portugiesischen Nonne?", "Welche musikalischer Künstlers waren die Komponisten für Liebesbriefe einer portugiesischen Nonne?", "Welcher musikalischer Künstler ist der Komponist für Liebesbriefe einer portugiesischen Nonne?", "Welcher musikalischer Künstler war der Komponist für Liebesbriefe einer portugiesischen Nonne?", "Wer ist der Komponist für Liebesbriefe einer portugiesischen Nonne?", "Wer sind die Komponisten für Liebesbriefe einer portugiesischen Nonne?", "Wer war der Komponist für Liebesbriefe einer portugiesischen Nonne?", "Wer waren die Komponisten für Liebesbriefe einer portugiesischen Nonne?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Letters_of_a_Portuguese_Nun> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Liebesleben?", "Gib mir die Komponisten für Liebesleben?", "Welche musikalischer Künstlers sind die Komponisten für Liebesleben?", "Welche musikalischer Künstlers waren die Komponisten für Liebesleben?", "Welcher musikalischer Künstler ist der Komponist für Liebesleben?", "Welcher musikalischer Künstler war der Komponist für Liebesleben?", "Wer ist der Komponist für Liebesleben?", "Wer sind die Komponisten für Liebesleben?", "Wer war der Komponist für Liebesleben?", "Wer waren die Komponisten für Liebesleben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Life_(2007_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Hab’ mich lieb!?", "Gib mir die Komponisten für Hab’ mich lieb!?", "Welche musikalischer Künstlers sind die Komponisten für Hab’ mich lieb!?", "Welche musikalischer Künstlers waren die Komponisten für Hab’ mich lieb!?", "Welcher musikalischer Künstler ist der Komponist für Hab’ mich lieb!?", "Welcher musikalischer Künstler war der Komponist für Hab’ mich lieb!?", "Wer ist der Komponist für Hab’ mich lieb!?", "Wer sind die Komponisten für Hab’ mich lieb!?", "Wer war der Komponist für Hab’ mich lieb!?", "Wer waren die Komponisten für Hab’ mich lieb!?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Me_(1942_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Liebe mich, wenn du dich traust?", "Gib mir die Komponisten für Liebe mich, wenn du dich traust?", "Welche musikalischer Künstlers sind die Komponisten für Liebe mich, wenn du dich traust?", "Welche musikalischer Künstlers waren die Komponisten für Liebe mich, wenn du dich traust?", "Welcher musikalischer Künstler ist der Komponist für Liebe mich, wenn du dich traust?", "Welcher musikalischer Künstler war der Komponist für Liebe mich, wenn du dich traust?", "Wer ist der Komponist für Liebe mich, wenn du dich traust?", "Wer sind die Komponisten für Liebe mich, wenn du dich traust?", "Wer war der Komponist für Liebe mich, wenn du dich traust?", "Wer waren die Komponisten für Liebe mich, wenn du dich traust?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Me_If_You_Dare_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Tage oder Stunden?", "Gib mir die Komponisten für Tage oder Stunden?", "Welche musikalischer Künstlers sind die Komponisten für Tage oder Stunden?", "Welche musikalischer Künstlers waren die Komponisten für Tage oder Stunden?", "Welcher musikalischer Künstler ist der Komponist für Tage oder Stunden?", "Welcher musikalischer Künstler war der Komponist für Tage oder Stunden?", "Wer ist der Komponist für Tage oder Stunden?", "Wer sind die Komponisten für Tage oder Stunden?", "Wer war der Komponist für Tage oder Stunden?", "Wer waren die Komponisten für Tage oder Stunden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Me_No_More_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Pulverdampf und heiße Lieder?", "Gib mir die Komponisten für Pulverdampf und heiße Lieder?", "Welche musikalischer Künstlers sind die Komponisten für Pulverdampf und heiße Lieder?", "Welche musikalischer Künstlers waren die Komponisten für Pulverdampf und heiße Lieder?", "Welcher musikalischer Künstler ist der Komponist für Pulverdampf und heiße Lieder?", "Welcher musikalischer Künstler war der Komponist für Pulverdampf und heiße Lieder?", "Wer ist der Komponist für Pulverdampf und heiße Lieder?", "Wer sind die Komponisten für Pulverdampf und heiße Lieder?", "Wer war der Komponist für Pulverdampf und heiße Lieder?", "Wer waren die Komponisten für Pulverdampf und heiße Lieder?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Me_Tender_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Schönste, liebe mich?", "Gib mir die Komponisten für Schönste, liebe mich?", "Welche musikalischer Künstlers sind die Komponisten für Schönste, liebe mich?", "Welche musikalischer Künstlers waren die Komponisten für Schönste, liebe mich?", "Welcher musikalischer Künstler ist der Komponist für Schönste, liebe mich?", "Welcher musikalischer Künstler war der Komponist für Schönste, liebe mich?", "Wer ist der Komponist für Schönste, liebe mich?", "Wer sind die Komponisten für Schönste, liebe mich?", "Wer war der Komponist für Schönste, liebe mich?", "Wer waren die Komponisten für Schönste, liebe mich?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Me_Tonight> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Tyrannische Liebe?", "Gib mir die Komponisten für Tyrannische Liebe?", "Welche musikalischer Künstlers sind die Komponisten für Tyrannische Liebe?", "Welche musikalischer Künstlers waren die Komponisten für Tyrannische Liebe?", "Welcher musikalischer Künstler ist der Komponist für Tyrannische Liebe?", "Welcher musikalischer Künstler war der Komponist für Tyrannische Liebe?", "Wer ist der Komponist für Tyrannische Liebe?", "Wer sind die Komponisten für Tyrannische Liebe?", "Wer war der Komponist für Tyrannische Liebe?", "Wer waren die Komponisten für Tyrannische Liebe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Me_or_Leave_Me_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Liebe muß verstanden sein?", "Gib mir die Komponisten für Liebe muß verstanden sein?", "Welche musikalischer Künstlers sind die Komponisten für Liebe muß verstanden sein?", "Welche musikalischer Künstlers waren die Komponisten für Liebe muß verstanden sein?", "Welcher musikalischer Künstler ist der Komponist für Liebe muß verstanden sein?", "Welcher musikalischer Künstler war der Komponist für Liebe muß verstanden sein?", "Wer ist der Komponist für Liebe muß verstanden sein?", "Wer sind die Komponisten für Liebe muß verstanden sein?", "Wer war der Komponist für Liebe muß verstanden sein?", "Wer waren die Komponisten für Liebe muß verstanden sein?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Must_Be_Understood> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Love Potion No. 9 – Der Duft der Liebe?", "Gib mir die Komponisten für Love Potion No. 9 – Der Duft der Liebe?", "Welche musikalischer Künstlers sind die Komponisten für Love Potion No. 9 – Der Duft der Liebe?", "Welche musikalischer Künstlers waren die Komponisten für Love Potion No. 9 – Der Duft der Liebe?", "Welcher musikalischer Künstler ist der Komponist für Love Potion No. 9 – Der Duft der Liebe?", "Welcher musikalischer Künstler war der Komponist für Love Potion No. 9 – Der Duft der Liebe?", "Wer ist der Komponist für Love Potion No. 9 – Der Duft der Liebe?", "Wer sind die Komponisten für Love Potion No. 9 – Der Duft der Liebe?", "Wer war der Komponist für Love Potion No. 9 – Der Duft der Liebe?", "Wer waren die Komponisten für Love Potion No. 9 – Der Duft der Liebe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Potion_No._9_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Love Ranch?", "Gib mir die Komponisten für Love Ranch?", "Welche musikalischer Künstlers sind die Komponisten für Love Ranch?", "Welche musikalischer Künstlers waren die Komponisten für Love Ranch?", "Welcher musikalischer Künstler ist der Komponist für Love Ranch?", "Welcher musikalischer Künstler war der Komponist für Love Ranch?", "Wer ist der Komponist für Love Ranch?", "Wer sind die Komponisten für Love Ranch?", "Wer war der Komponist für Love Ranch?", "Wer waren die Komponisten für Love Ranch?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Ranch> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Chanson der Liebe (2007)?", "Gib mir die Komponisten für Chanson der Liebe (2007)?", "Welche musikalischer Künstlers sind die Komponisten für Chanson der Liebe (2007)?", "Welche musikalischer Künstlers waren die Komponisten für Chanson der Liebe (2007)?", "Welcher musikalischer Künstler ist der Komponist für Chanson der Liebe (2007)?", "Welcher musikalischer Künstler war der Komponist für Chanson der Liebe (2007)?", "Wer ist der Komponist für Chanson der Liebe (2007)?", "Wer sind die Komponisten für Chanson der Liebe (2007)?", "Wer war der Komponist für Chanson der Liebe (2007)?", "Wer waren die Komponisten für Chanson der Liebe (2007)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Songs_(2007_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Love Story (1970)?", "Gib mir die Komponisten für Love Story (1970)?", "Welche musikalischer Künstlers sind die Komponisten für Love Story (1970)?", "Welche musikalischer Künstlers waren die Komponisten für Love Story (1970)?", "Welcher musikalischer Künstler ist der Komponist für Love Story (1970)?", "Welcher musikalischer Künstler war der Komponist für Love Story (1970)?", "Wer ist der Komponist für Love Story (1970)?", "Wer sind die Komponisten für Love Story (1970)?", "Wer war der Komponist für Love Story (1970)?", "Wer waren die Komponisten für Love Story (1970)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Story_(1970_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Amor Estranho Amor?", "Gib mir die Komponisten für Amor Estranho Amor?", "Welche musikalischer Künstlers sind die Komponisten für Amor Estranho Amor?", "Welche musikalischer Künstlers waren die Komponisten für Amor Estranho Amor?", "Welcher musikalischer Künstler ist der Komponist für Amor Estranho Amor?", "Welcher musikalischer Künstler war der Komponist für Amor Estranho Amor?", "Wer ist der Komponist für Amor Estranho Amor?", "Wer sind die Komponisten für Amor Estranho Amor?", "Wer war der Komponist für Amor Estranho Amor?", "Wer waren die Komponisten für Amor Estranho Amor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Strange_Love> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Liebe und Zorn?", "Gib mir die Komponisten für Liebe und Zorn?", "Welche musikalischer Künstlers sind die Komponisten für Liebe und Zorn?", "Welche musikalischer Künstlers waren die Komponisten für Liebe und Zorn?", "Welcher musikalischer Künstler ist der Komponist für Liebe und Zorn?", "Welcher musikalischer Künstler war der Komponist für Liebe und Zorn?", "Wer ist der Komponist für Liebe und Zorn?", "Wer sind die Komponisten für Liebe und Zorn?", "Wer war der Komponist für Liebe und Zorn?", "Wer waren die Komponisten für Liebe und Zorn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_and_Anger_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Ein Mann räumt auf?", "Gib mir die Komponisten für Ein Mann räumt auf?", "Welche musikalischer Künstlers sind die Komponisten für Ein Mann räumt auf?", "Welche musikalischer Künstlers waren die Komponisten für Ein Mann räumt auf?", "Welcher musikalischer Künstler ist der Komponist für Ein Mann räumt auf?", "Welcher musikalischer Künstler war der Komponist für Ein Mann räumt auf?", "Wer ist der Komponist für Ein Mann räumt auf?", "Wer sind die Komponisten für Ein Mann räumt auf?", "Wer war der Komponist für Ein Mann räumt auf?", "Wer waren die Komponisten für Ein Mann räumt auf?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_and_Bullets_(1979_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Fürchten und Lieben?", "Gib mir die Komponisten für Fürchten und Lieben?", "Welche musikalischer Künstlers sind die Komponisten für Fürchten und Lieben?", "Welche musikalischer Künstlers waren die Komponisten für Fürchten und Lieben?", "Welcher musikalischer Künstler ist der Komponist für Fürchten und Lieben?", "Welcher musikalischer Künstler war der Komponist für Fürchten und Lieben?", "Wer ist der Komponist für Fürchten und Lieben?", "Wer sind die Komponisten für Fürchten und Lieben?", "Wer war der Komponist für Fürchten und Lieben?", "Wer waren die Komponisten für Fürchten und Lieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_and_Fear_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Love and Honor – Bushi no ichibun?", "Gib mir die Komponisten für Love and Honor – Bushi no ichibun?", "Welche musikalischer Künstlers sind die Komponisten für Love and Honor – Bushi no ichibun?", "Welche musikalischer Künstlers waren die Komponisten für Love and Honor – Bushi no ichibun?", "Welcher musikalischer Künstler ist der Komponist für Love and Honor – Bushi no ichibun?", "Welcher musikalischer Künstler war der Komponist für Love and Honor – Bushi no ichibun?", "Wer ist der Komponist für Love and Honor – Bushi no ichibun?", "Wer sind die Komponisten für Love and Honor – Bushi no ichibun?", "Wer war der Komponist für Love and Honor – Bushi no ichibun?", "Wer waren die Komponisten für Love and Honor – Bushi no ichibun?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_and_Honor_(2006_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Love and Honor – Liebe ist unbesiegbar?", "Gib mir die Komponisten für Love and Honor – Liebe ist unbesiegbar?", "Welche musikalischer Künstlers sind die Komponisten für Love and Honor – Liebe ist unbesiegbar?", "Welche musikalischer Künstlers waren die Komponisten für Love and Honor – Liebe ist unbesiegbar?", "Welcher musikalischer Künstler ist der Komponist für Love and Honor – Liebe ist unbesiegbar?", "Welcher musikalischer Künstler war der Komponist für Love and Honor – Liebe ist unbesiegbar?", "Wer ist der Komponist für Love and Honor – Liebe ist unbesiegbar?", "Wer sind die Komponisten für Love and Honor – Liebe ist unbesiegbar?", "Wer war der Komponist für Love and Honor – Liebe ist unbesiegbar?", "Wer waren die Komponisten für Love and Honor – Liebe ist unbesiegbar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_and_Honor_(2013_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Love and Other Disasters?", "Gib mir die Komponisten für Love and Other Disasters?", "Welche musikalischer Künstlers sind die Komponisten für Love and Other Disasters?", "Welche musikalischer Künstlers waren die Komponisten für Love and Other Disasters?", "Welcher musikalischer Künstler ist der Komponist für Love and Other Disasters?", "Welcher musikalischer Künstler war der Komponist für Love and Other Disasters?", "Wer ist der Komponist für Love and Other Disasters?", "Wer sind die Komponisten für Love and Other Disasters?", "Wer war der Komponist für Love and Other Disasters?", "Wer waren die Komponisten für Love and Other Disasters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_and_Other_Disasters> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Der Kurschatten (1984)?", "Gib mir die Komponisten für Der Kurschatten (1984)?", "Welche musikalischer Künstlers sind die Komponisten für Der Kurschatten (1984)?", "Welche musikalischer Künstlers waren die Komponisten für Der Kurschatten (1984)?", "Welcher musikalischer Künstler ist der Komponist für Der Kurschatten (1984)?", "Welcher musikalischer Künstler war der Komponist für Der Kurschatten (1984)?", "Wer ist der Komponist für Der Kurschatten (1984)?", "Wer sind die Komponisten für Der Kurschatten (1984)?", "Wer war der Komponist für Der Kurschatten (1984)?", "Wer waren die Komponisten für Der Kurschatten (1984)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_and_Pigeons> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Love and a .45?", "Gib mir die Komponisten für Love and a .45?", "Welche musikalischer Künstlers sind die Komponisten für Love and a .45?", "Welche musikalischer Künstlers waren die Komponisten für Love and a .45?", "Welcher musikalischer Künstler ist der Komponist für Love and a .45?", "Welcher musikalischer Künstler war der Komponist für Love and a .45?", "Wer ist der Komponist für Love and a .45?", "Wer sind die Komponisten für Love and a .45?", "Wer war der Komponist für Love and a .45?", "Wer waren die Komponisten für Love and a .45?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_and_a_.45> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Liebe mit zwanzig?", "Gib mir die Komponisten für Liebe mit zwanzig?", "Welche musikalischer Künstlers sind die Komponisten für Liebe mit zwanzig?", "Welche musikalischer Künstlers waren die Komponisten für Liebe mit zwanzig?", "Welcher musikalischer Künstler ist der Komponist für Liebe mit zwanzig?", "Welcher musikalischer Künstler war der Komponist für Liebe mit zwanzig?", "Wer ist der Komponist für Liebe mit zwanzig?", "Wer sind die Komponisten für Liebe mit zwanzig?", "Wer war der Komponist für Liebe mit zwanzig?", "Wer waren die Komponisten für Liebe mit zwanzig?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_at_Twenty> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Monpti?", "Gib mir die Komponisten für Monpti?", "Welche musikalischer Künstlers sind die Komponisten für Monpti?", "Welche musikalischer Künstlers waren die Komponisten für Monpti?", "Welcher musikalischer Künstler ist der Komponist für Monpti?", "Welcher musikalischer Künstler war der Komponist für Monpti?", "Wer ist der Komponist für Monpti?", "Wer sind die Komponisten für Monpti?", "Wer war der Komponist für Monpti?", "Wer waren die Komponisten für Monpti?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_from_Paris> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für 9½ Wochen in Paris?", "Gib mir die Komponisten für 9½ Wochen in Paris?", "Welche musikalischer Künstlers sind die Komponisten für 9½ Wochen in Paris?", "Welche musikalischer Künstlers waren die Komponisten für 9½ Wochen in Paris?", "Welcher musikalischer Künstler ist der Komponist für 9½ Wochen in Paris?", "Welcher musikalischer Künstler war der Komponist für 9½ Wochen in Paris?", "Wer ist der Komponist für 9½ Wochen in Paris?", "Wer sind die Komponisten für 9½ Wochen in Paris?", "Wer war der Komponist für 9½ Wochen in Paris?", "Wer waren die Komponisten für 9½ Wochen in Paris?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_in_Paris> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Ariane – Liebe am Nachmittag?", "Gib mir die Komponisten für Ariane – Liebe am Nachmittag?", "Welche musikalischer Künstlers sind die Komponisten für Ariane – Liebe am Nachmittag?", "Welche musikalischer Künstlers waren die Komponisten für Ariane – Liebe am Nachmittag?", "Welcher musikalischer Künstler ist der Komponist für Ariane – Liebe am Nachmittag?", "Welcher musikalischer Künstler war der Komponist für Ariane – Liebe am Nachmittag?", "Wer ist der Komponist für Ariane – Liebe am Nachmittag?", "Wer sind die Komponisten für Ariane – Liebe am Nachmittag?", "Wer war der Komponist für Ariane – Liebe am Nachmittag?", "Wer waren die Komponisten für Ariane – Liebe am Nachmittag?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_in_the_Afternoon_(1957_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Die Liebe in den Zeiten der Cholera (Film)?", "Gib mir die Komponisten für Die Liebe in den Zeiten der Cholera (Film)?", "Welche musikalischer Künstlers sind die Komponisten für Die Liebe in den Zeiten der Cholera (Film)?", "Welche musikalischer Künstlers waren die Komponisten für Die Liebe in den Zeiten der Cholera (Film)?", "Welcher musikalischer Künstler ist der Komponist für Die Liebe in den Zeiten der Cholera (Film)?", "Welcher musikalischer Künstler war der Komponist für Die Liebe in den Zeiten der Cholera (Film)?", "Wer ist der Komponist für Die Liebe in den Zeiten der Cholera (Film)?", "Wer sind die Komponisten für Die Liebe in den Zeiten der Cholera (Film)?", "Wer war der Komponist für Die Liebe in den Zeiten der Cholera (Film)?", "Wer waren die Komponisten für Die Liebe in den Zeiten der Cholera (Film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_in_the_Time_of_Cholera_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Liebe auf Eis?", "Gib mir die Komponisten für Liebe auf Eis?", "Welche musikalischer Künstlers sind die Komponisten für Liebe auf Eis?", "Welche musikalischer Künstlers waren die Komponisten für Liebe auf Eis?", "Welcher musikalischer Künstler ist der Komponist für Liebe auf Eis?", "Welcher musikalischer Künstler war der Komponist für Liebe auf Eis?", "Wer ist der Komponist für Liebe auf Eis?", "Wer sind die Komponisten für Liebe auf Eis?", "Wer war der Komponist für Liebe auf Eis?", "Wer waren die Komponisten für Liebe auf Eis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_on_Ice_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Love on the Run?", "Gib mir die Komponisten für Love on the Run?", "Welche musikalischer Künstlers sind die Komponisten für Love on the Run?", "Welche musikalischer Künstlers waren die Komponisten für Love on the Run?", "Welcher musikalischer Künstler ist der Komponist für Love on the Run?", "Welcher musikalischer Künstler war der Komponist für Love on the Run?", "Wer ist der Komponist für Love on the Run?", "Wer sind die Komponisten für Love on the Run?", "Wer war der Komponist für Love on the Run?", "Wer waren die Komponisten für Love on the Run?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_on_the_Run_(1936_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Liebe auf der Flucht?", "Gib mir die Komponisten für Liebe auf der Flucht?", "Welche musikalischer Künstlers sind die Komponisten für Liebe auf der Flucht?", "Welche musikalischer Künstlers waren die Komponisten für Liebe auf der Flucht?", "Welcher musikalischer Künstler ist der Komponist für Liebe auf der Flucht?", "Welcher musikalischer Künstler war der Komponist für Liebe auf der Flucht?", "Wer ist der Komponist für Liebe auf der Flucht?", "Wer sind die Komponisten für Liebe auf der Flucht?", "Wer war der Komponist für Liebe auf der Flucht?", "Wer waren die Komponisten für Liebe auf der Flucht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_on_the_Run_(1979_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Alle Jahre wieder – Weihnachten mit den Coopers?", "Gib mir die Komponisten für Alle Jahre wieder – Weihnachten mit den Coopers?", "Welche musikalischer Künstlers sind die Komponisten für Alle Jahre wieder – Weihnachten mit den Coopers?", "Welche musikalischer Künstlers waren die Komponisten für Alle Jahre wieder – Weihnachten mit den Coopers?", "Welcher musikalischer Künstler ist der Komponist für Alle Jahre wieder – Weihnachten mit den Coopers?", "Welcher musikalischer Künstler war der Komponist für Alle Jahre wieder – Weihnachten mit den Coopers?", "Wer ist der Komponist für Alle Jahre wieder – Weihnachten mit den Coopers?", "Wer sind die Komponisten für Alle Jahre wieder – Weihnachten mit den Coopers?", "Wer war der Komponist für Alle Jahre wieder – Weihnachten mit den Coopers?", "Wer waren die Komponisten für Alle Jahre wieder – Weihnachten mit den Coopers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_the_Coopers> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Love the Hard Way?", "Gib mir die Komponisten für Love the Hard Way?", "Welche musikalischer Künstlers sind die Komponisten für Love the Hard Way?", "Welche musikalischer Künstlers waren die Komponisten für Love the Hard Way?", "Welcher musikalischer Künstler ist der Komponist für Love the Hard Way?", "Welcher musikalischer Künstler war der Komponist für Love the Hard Way?", "Wer ist der Komponist für Love the Hard Way?", "Wer sind die Komponisten für Love the Hard Way?", "Wer war der Komponist für Love the Hard Way?", "Wer waren die Komponisten für Love the Hard Way?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_the_Hard_Way> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Verliebt in einen Fremden?", "Gib mir die Komponisten für Verliebt in einen Fremden?", "Welche musikalischer Künstlers sind die Komponisten für Verliebt in einen Fremden?", "Welche musikalischer Künstlers waren die Komponisten für Verliebt in einen Fremden?", "Welcher musikalischer Künstler ist der Komponist für Verliebt in einen Fremden?", "Welcher musikalischer Künstler war der Komponist für Verliebt in einen Fremden?", "Wer ist der Komponist für Verliebt in einen Fremden?", "Wer sind die Komponisten für Verliebt in einen Fremden?", "Wer war der Komponist für Verliebt in einen Fremden?", "Wer waren die Komponisten für Verliebt in einen Fremden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_with_the_Proper_Stranger> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Lovelace (Film)?", "Gib mir die Komponisten für Lovelace (Film)?", "Welche musikalischer Künstlers sind die Komponisten für Lovelace (Film)?", "Welche musikalischer Künstlers waren die Komponisten für Lovelace (Film)?", "Welcher musikalischer Künstler ist der Komponist für Lovelace (Film)?", "Welcher musikalischer Künstler war der Komponist für Lovelace (Film)?", "Wer ist der Komponist für Lovelace (Film)?", "Wer sind die Komponisten für Lovelace (Film)?", "Wer war der Komponist für Lovelace (Film)?", "Wer waren die Komponisten für Lovelace (Film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lovelace_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Loveless (Film)?", "Gib mir die Komponisten für Loveless (Film)?", "Welche musikalischer Künstlers sind die Komponisten für Loveless (Film)?", "Welche musikalischer Künstlers waren die Komponisten für Loveless (Film)?", "Welcher musikalischer Künstler ist der Komponist für Loveless (Film)?", "Welcher musikalischer Künstler war der Komponist für Loveless (Film)?", "Wer ist der Komponist für Loveless (Film)?", "Wer sind die Komponisten für Loveless (Film)?", "Wer war der Komponist für Loveless (Film)?", "Wer waren die Komponisten für Loveless (Film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loveless_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Immer noch Liebe!?", "Gib mir die Komponisten für Immer noch Liebe!?", "Welche musikalischer Künstlers sind die Komponisten für Immer noch Liebe!?", "Welche musikalischer Künstlers waren die Komponisten für Immer noch Liebe!?", "Welcher musikalischer Künstler ist der Komponist für Immer noch Liebe!?", "Welcher musikalischer Künstler war der Komponist für Immer noch Liebe!?", "Wer ist der Komponist für Immer noch Liebe!?", "Wer sind die Komponisten für Immer noch Liebe!?", "Wer war der Komponist für Immer noch Liebe!?", "Wer waren die Komponisten für Immer noch Liebe!?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lovely,_Still> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Ein Pyjama für zwei?", "Gib mir die Komponisten für Ein Pyjama für zwei?", "Welche musikalischer Künstlers sind die Komponisten für Ein Pyjama für zwei?", "Welche musikalischer Künstlers waren die Komponisten für Ein Pyjama für zwei?", "Welcher musikalischer Künstler ist der Komponist für Ein Pyjama für zwei?", "Welcher musikalischer Künstler war der Komponist für Ein Pyjama für zwei?", "Wer ist der Komponist für Ein Pyjama für zwei?", "Wer sind die Komponisten für Ein Pyjama für zwei?", "Wer war der Komponist für Ein Pyjama für zwei?", "Wer waren die Komponisten für Ein Pyjama für zwei?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lover_Come_Back_(1961_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Loverboy – Liebe auf Bestellung?", "Gib mir die Komponisten für Loverboy – Liebe auf Bestellung?", "Welche musikalischer Künstlers sind die Komponisten für Loverboy – Liebe auf Bestellung?", "Welche musikalischer Künstlers waren die Komponisten für Loverboy – Liebe auf Bestellung?", "Welcher musikalischer Künstler ist der Komponist für Loverboy – Liebe auf Bestellung?", "Welcher musikalischer Künstler war der Komponist für Loverboy – Liebe auf Bestellung?", "Wer ist der Komponist für Loverboy – Liebe auf Bestellung?", "Wer sind die Komponisten für Loverboy – Liebe auf Bestellung?", "Wer war der Komponist für Loverboy – Liebe auf Bestellung?", "Wer waren die Komponisten für Loverboy – Liebe auf Bestellung?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loverboy_(1989_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Loverboy (2005)?", "Gib mir die Komponisten für Loverboy (2005)?", "Welche musikalischer Künstlers sind die Komponisten für Loverboy (2005)?", "Welche musikalischer Künstlers waren die Komponisten für Loverboy (2005)?", "Welcher musikalischer Künstler ist der Komponist für Loverboy (2005)?", "Welcher musikalischer Künstler war der Komponist für Loverboy (2005)?", "Wer ist der Komponist für Loverboy (2005)?", "Wer sind die Komponisten für Loverboy (2005)?", "Wer war der Komponist für Loverboy (2005)?", "Wer waren die Komponisten für Loverboy (2005)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loverboy_(2005_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Liebhaber und andere Fremde?", "Gib mir die Komponisten für Liebhaber und andere Fremde?", "Welche musikalischer Künstlers sind die Komponisten für Liebhaber und andere Fremde?", "Welche musikalischer Künstlers waren die Komponisten für Liebhaber und andere Fremde?", "Welcher musikalischer Künstler ist der Komponist für Liebhaber und andere Fremde?", "Welcher musikalischer Künstler war der Komponist für Liebhaber und andere Fremde?", "Wer ist der Komponist für Liebhaber und andere Fremde?", "Wer sind die Komponisten für Liebhaber und andere Fremde?", "Wer war der Komponist für Liebhaber und andere Fremde?", "Wer waren die Komponisten für Liebhaber und andere Fremde?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lovers_and_Other_Strangers> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Die Liebe einer Blondine?", "Gib mir die Komponisten für Die Liebe einer Blondine?", "Welche musikalischer Künstlers sind die Komponisten für Die Liebe einer Blondine?", "Welche musikalischer Künstlers waren die Komponisten für Die Liebe einer Blondine?", "Welcher musikalischer Künstler ist der Komponist für Die Liebe einer Blondine?", "Welcher musikalischer Künstler war der Komponist für Die Liebe einer Blondine?", "Wer ist der Komponist für Die Liebe einer Blondine?", "Wer sind die Komponisten für Die Liebe einer Blondine?", "Wer war der Komponist für Die Liebe einer Blondine?", "Wer waren die Komponisten für Die Liebe einer Blondine?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loves_of_a_Blonde> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Loving Pablo?", "Gib mir die Komponisten für Loving Pablo?", "Welche musikalischer Künstlers sind die Komponisten für Loving Pablo?", "Welche musikalischer Künstlers waren die Komponisten für Loving Pablo?", "Welcher musikalischer Künstler ist der Komponist für Loving Pablo?", "Welcher musikalischer Künstler war der Komponist für Loving Pablo?", "Wer ist der Komponist für Loving Pablo?", "Wer sind die Komponisten für Loving Pablo?", "Wer war der Komponist für Loving Pablo?", "Wer waren die Komponisten für Loving Pablo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loving_Pablo> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Loving Vincent?", "Gib mir die Komponisten für Loving Vincent?", "Welche musikalischer Künstlers sind die Komponisten für Loving Vincent?", "Welche musikalischer Künstlers waren die Komponisten für Loving Vincent?", "Welcher musikalischer Künstler ist der Komponist für Loving Vincent?", "Welcher musikalischer Künstler war der Komponist für Loving Vincent?", "Wer ist der Komponist für Loving Vincent?", "Wer sind die Komponisten für Loving Vincent?", "Wer war der Komponist für Loving Vincent?", "Wer waren die Komponisten für Loving Vincent?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loving_Vincent> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Gold aus heißer Kehle?", "Gib mir die Komponisten für Gold aus heißer Kehle?", "Welche musikalischer Künstlers sind die Komponisten für Gold aus heißer Kehle?", "Welche musikalischer Künstlers waren die Komponisten für Gold aus heißer Kehle?", "Welcher musikalischer Künstler ist der Komponist für Gold aus heißer Kehle?", "Welcher musikalischer Künstler war der Komponist für Gold aus heißer Kehle?", "Wer ist der Komponist für Gold aus heißer Kehle?", "Wer sind die Komponisten für Gold aus heißer Kehle?", "Wer war der Komponist für Gold aus heißer Kehle?", "Wer waren die Komponisten für Gold aus heißer Kehle?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loving_You_(1957_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Lucas (Film)?", "Gib mir die Komponisten für Lucas (Film)?", "Welche musikalischer Künstlers sind die Komponisten für Lucas (Film)?", "Welche musikalischer Künstlers waren die Komponisten für Lucas (Film)?", "Welcher musikalischer Künstler ist der Komponist für Lucas (Film)?", "Welcher musikalischer Künstler war der Komponist für Lucas (Film)?", "Wer ist der Komponist für Lucas (Film)?", "Wer sind die Komponisten für Lucas (Film)?", "Wer war der Komponist für Lucas (Film)?", "Wer waren die Komponisten für Lucas (Film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucas_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Luce (Film)?", "Gib mir die Komponisten für Luce (Film)?", "Welche musikalischer Künstlers sind die Komponisten für Luce (Film)?", "Welche musikalischer Künstlers waren die Komponisten für Luce (Film)?", "Welcher musikalischer Künstler ist der Komponist für Luce (Film)?", "Welcher musikalischer Künstler war der Komponist für Luce (Film)?", "Wer ist der Komponist für Luce (Film)?", "Wer sind die Komponisten für Luce (Film)?", "Wer war der Komponist für Luce (Film)?", "Wer waren die Komponisten für Luce (Film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luce_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Lucid Dream (Film)?", "Gib mir die Komponisten für Lucid Dream (Film)?", "Welche musikalischer Künstlers sind die Komponisten für Lucid Dream (Film)?", "Welche musikalischer Künstlers waren die Komponisten für Lucid Dream (Film)?", "Welcher musikalischer Künstler ist der Komponist für Lucid Dream (Film)?", "Welcher musikalischer Künstler war der Komponist für Lucid Dream (Film)?", "Wer ist der Komponist für Lucid Dream (Film)?", "Wer sind die Komponisten für Lucid Dream (Film)?", "Wer war der Komponist für Lucid Dream (Film)?", "Wer waren die Komponisten für Lucid Dream (Film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucid_Dream_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Lucie Aubrac (Film)?", "Gib mir die Komponisten für Lucie Aubrac (Film)?", "Welche musikalischer Künstlers sind die Komponisten für Lucie Aubrac (Film)?", "Welche musikalischer Künstlers waren die Komponisten für Lucie Aubrac (Film)?", "Welcher musikalischer Künstler ist der Komponist für Lucie Aubrac (Film)?", "Welcher musikalischer Künstler war der Komponist für Lucie Aubrac (Film)?", "Wer ist der Komponist für Lucie Aubrac (Film)?", "Wer sind die Komponisten für Lucie Aubrac (Film)?", "Wer war der Komponist für Lucie Aubrac (Film)?", "Wer waren die Komponisten für Lucie Aubrac (Film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucie_Aubrac_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Luck by Chance – Liebe, Glück und andere Zufälle?", "Gib mir die Komponisten für Luck by Chance – Liebe, Glück und andere Zufälle?", "Welche musikalischer Künstlers sind die Komponisten für Luck by Chance – Liebe, Glück und andere Zufälle?", "Welche musikalischer Künstlers waren die Komponisten für Luck by Chance – Liebe, Glück und andere Zufälle?", "Welcher musikalischer Künstler ist der Komponist für Luck by Chance – Liebe, Glück und andere Zufälle?", "Welcher musikalischer Künstler war der Komponist für Luck by Chance – Liebe, Glück und andere Zufälle?", "Wer ist der Komponist für Luck by Chance – Liebe, Glück und andere Zufälle?", "Wer sind die Komponisten für Luck by Chance – Liebe, Glück und andere Zufälle?", "Wer war der Komponist für Luck by Chance – Liebe, Glück und andere Zufälle?", "Wer waren die Komponisten für Luck by Chance – Liebe, Glück und andere Zufälle?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luck_by_Chance> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Lucky: No Time for Love?", "Gib mir die Komponisten für Lucky: No Time for Love?", "Welche musikalischer Künstlers sind die Komponisten für Lucky: No Time for Love?", "Welche musikalischer Künstlers waren die Komponisten für Lucky: No Time for Love?", "Welcher musikalischer Künstler ist der Komponist für Lucky: No Time for Love?", "Welcher musikalischer Künstler war der Komponist für Lucky: No Time for Love?", "Wer ist der Komponist für Lucky: No Time for Love?", "Wer sind die Komponisten für Lucky: No Time for Love?", "Wer war der Komponist für Lucky: No Time for Love?", "Wer waren die Komponisten für Lucky: No Time for Love?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucky:_No_Time_for_Love> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Lucky (2011)?", "Gib mir die Komponisten für Lucky (2011)?", "Welche musikalischer Künstlers sind die Komponisten für Lucky (2011)?", "Welche musikalischer Künstlers waren die Komponisten für Lucky (2011)?", "Welcher musikalischer Künstler ist der Komponist für Lucky (2011)?", "Welcher musikalischer Künstler war der Komponist für Lucky (2011)?", "Wer ist der Komponist für Lucky (2011)?", "Wer sind die Komponisten für Lucky (2011)?", "Wer war der Komponist für Lucky (2011)?", "Wer waren die Komponisten für Lucky (2011)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucky_(2011_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Glückskinder?", "Gib mir die Komponisten für Glückskinder?", "Welche musikalischer Künstlers sind die Komponisten für Glückskinder?", "Welche musikalischer Künstlers waren die Komponisten für Glückskinder?", "Welcher musikalischer Künstler ist der Komponist für Glückskinder?", "Welcher musikalischer Künstler war der Komponist für Glückskinder?", "Wer ist der Komponist für Glückskinder?", "Wer sind die Komponisten für Glückskinder?", "Wer war der Komponist für Glückskinder?", "Wer waren die Komponisten für Glückskinder?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucky_Kids> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Lucky Luciano (Film)?", "Gib mir die Komponisten für Lucky Luciano (Film)?", "Welche musikalischer Künstlers sind die Komponisten für Lucky Luciano (Film)?", "Welche musikalischer Künstlers waren die Komponisten für Lucky Luciano (Film)?", "Welcher musikalischer Künstler ist der Komponist für Lucky Luciano (Film)?", "Welcher musikalischer Künstler war der Komponist für Lucky Luciano (Film)?", "Wer ist der Komponist für Lucky Luciano (Film)?", "Wer sind die Komponisten für Lucky Luciano (Film)?", "Wer war der Komponist für Lucky Luciano (Film)?", "Wer waren die Komponisten für Lucky Luciano (Film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucky_Luciano_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Lucky Luke (1991)?", "Gib mir die Komponisten für Lucky Luke (1991)?", "Welche musikalischer Künstlers sind die Komponisten für Lucky Luke (1991)?", "Welche musikalischer Künstlers waren die Komponisten für Lucky Luke (1991)?", "Welcher musikalischer Künstler ist der Komponist für Lucky Luke (1991)?", "Welcher musikalischer Künstler war der Komponist für Lucky Luke (1991)?", "Wer ist der Komponist für Lucky Luke (1991)?", "Wer sind die Komponisten für Lucky Luke (1991)?", "Wer war der Komponist für Lucky Luke (1991)?", "Wer waren die Komponisten für Lucky Luke (1991)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucky_Luke_(1991_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Lucky Luke (2009)?", "Gib mir die Komponisten für Lucky Luke (2009)?", "Welche musikalischer Künstlers sind die Komponisten für Lucky Luke (2009)?", "Welche musikalischer Künstlers waren die Komponisten für Lucky Luke (2009)?", "Welcher musikalischer Künstler ist der Komponist für Lucky Luke (2009)?", "Welcher musikalischer Künstler war der Komponist für Lucky Luke (2009)?", "Wer ist der Komponist für Lucky Luke (2009)?", "Wer sind die Komponisten für Lucky Luke (2009)?", "Wer war der Komponist für Lucky Luke (2009)?", "Wer waren die Komponisten für Lucky Luke (2009)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucky_Luke_(2009_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Lucky Number Slevin?", "Gib mir die Komponisten für Lucky Number Slevin?", "Welche musikalischer Künstlers sind die Komponisten für Lucky Number Slevin?", "Welche musikalischer Künstlers waren die Komponisten für Lucky Number Slevin?", "Welcher musikalischer Künstler ist der Komponist für Lucky Number Slevin?", "Welcher musikalischer Künstler war der Komponist für Lucky Number Slevin?", "Wer ist der Komponist für Lucky Number Slevin?", "Wer sind die Komponisten für Lucky Number Slevin?", "Wer war der Komponist für Lucky Number Slevin?", "Wer waren die Komponisten für Lucky Number Slevin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucky_Number_Slevin> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Lucky Numbers?", "Gib mir die Komponisten für Lucky Numbers?", "Welche musikalischer Künstlers sind die Komponisten für Lucky Numbers?", "Welche musikalischer Künstlers waren die Komponisten für Lucky Numbers?", "Welcher musikalischer Künstler ist der Komponist für Lucky Numbers?", "Welcher musikalischer Künstler war der Komponist für Lucky Numbers?", "Wer ist der Komponist für Lucky Numbers?", "Wer sind die Komponisten für Lucky Numbers?", "Wer war der Komponist für Lucky Numbers?", "Wer waren die Komponisten für Lucky Numbers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucky_Numbers> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Glückspilze (1940)?", "Gib mir die Komponisten für Glückspilze (1940)?", "Welche musikalischer Künstlers sind die Komponisten für Glückspilze (1940)?", "Welche musikalischer Künstlers waren die Komponisten für Glückspilze (1940)?", "Welcher musikalischer Künstler ist der Komponist für Glückspilze (1940)?", "Welcher musikalischer Künstler war der Komponist für Glückspilze (1940)?", "Wer ist der Komponist für Glückspilze (1940)?", "Wer sind die Komponisten für Glückspilze (1940)?", "Wer war der Komponist für Glückspilze (1940)?", "Wer waren die Komponisten für Glückspilze (1940)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucky_Partners> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Der lange Blonde mit den roten Haaren?", "Gib mir die Komponisten für Der lange Blonde mit den roten Haaren?", "Welche musikalischer Künstlers sind die Komponisten für Der lange Blonde mit den roten Haaren?", "Welche musikalischer Künstlers waren die Komponisten für Der lange Blonde mit den roten Haaren?", "Welcher musikalischer Künstler ist der Komponist für Der lange Blonde mit den roten Haaren?", "Welcher musikalischer Künstler war der Komponist für Der lange Blonde mit den roten Haaren?", "Wer ist der Komponist für Der lange Blonde mit den roten Haaren?", "Wer sind die Komponisten für Der lange Blonde mit den roten Haaren?", "Wer war der Komponist für Der lange Blonde mit den roten Haaren?", "Wer waren die Komponisten für Der lange Blonde mit den roten Haaren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucky_Pierre_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Glück im Spiel?", "Gib mir die Komponisten für Glück im Spiel?", "Welche musikalischer Künstlers sind die Komponisten für Glück im Spiel?", "Welche musikalischer Künstlers waren die Komponisten für Glück im Spiel?", "Welcher musikalischer Künstler ist der Komponist für Glück im Spiel?", "Welcher musikalischer Künstler war der Komponist für Glück im Spiel?", "Wer ist der Komponist für Glück im Spiel?", "Wer sind die Komponisten für Glück im Spiel?", "Wer war der Komponist für Glück im Spiel?", "Wer waren die Komponisten für Glück im Spiel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucky_You_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Wie herrlich, eine Frau zu sein?", "Gib mir die Komponisten für Wie herrlich, eine Frau zu sein?", "Welche musikalischer Künstlers sind die Komponisten für Wie herrlich, eine Frau zu sein?", "Welche musikalischer Künstlers waren die Komponisten für Wie herrlich, eine Frau zu sein?", "Welcher musikalischer Künstler ist der Komponist für Wie herrlich, eine Frau zu sein?", "Welcher musikalischer Künstler war der Komponist für Wie herrlich, eine Frau zu sein?", "Wer ist der Komponist für Wie herrlich, eine Frau zu sein?", "Wer sind die Komponisten für Wie herrlich, eine Frau zu sein?", "Wer war der Komponist für Wie herrlich, eine Frau zu sein?", "Wer waren die Komponisten für Wie herrlich, eine Frau zu sein?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucky_to_Be_a_Woman> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Lucrezia Borgia (1953)?", "Gib mir die Komponisten für Lucrezia Borgia (1953)?", "Welche musikalischer Künstlers sind die Komponisten für Lucrezia Borgia (1953)?", "Welche musikalischer Künstlers waren die Komponisten für Lucrezia Borgia (1953)?", "Welcher musikalischer Künstler ist der Komponist für Lucrezia Borgia (1953)?", "Welcher musikalischer Künstler war der Komponist für Lucrezia Borgia (1953)?", "Wer ist der Komponist für Lucrezia Borgia (1953)?", "Wer sind die Komponisten für Lucrezia Borgia (1953)?", "Wer war der Komponist für Lucrezia Borgia (1953)?", "Wer waren die Komponisten für Lucrezia Borgia (1953)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucrèce_Borgia> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Lucy (2014)?", "Gib mir die Komponisten für Lucy (2014)?", "Welche musikalischer Künstlers sind die Komponisten für Lucy (2014)?", "Welche musikalischer Künstlers waren die Komponisten für Lucy (2014)?", "Welcher musikalischer Künstler ist der Komponist für Lucy (2014)?", "Welcher musikalischer Künstler war der Komponist für Lucy (2014)?", "Wer ist der Komponist für Lucy (2014)?", "Wer sind die Komponisten für Lucy (2014)?", "Wer war der Komponist für Lucy (2014)?", "Wer waren die Komponisten für Lucy (2014)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_(2014_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Lucy in the Sky?", "Gib mir die Komponisten für Lucy in the Sky?", "Welche musikalischer Künstlers sind die Komponisten für Lucy in the Sky?", "Welche musikalischer Künstlers waren die Komponisten für Lucy in the Sky?", "Welcher musikalischer Künstler ist der Komponist für Lucy in the Sky?", "Welcher musikalischer Künstler war der Komponist für Lucy in the Sky?", "Wer ist der Komponist für Lucy in the Sky?", "Wer sind die Komponisten für Lucy in the Sky?", "Wer war der Komponist für Lucy in the Sky?", "Wer waren die Komponisten für Lucy in the Sky?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_in_the_Sky> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Ludwig der Zweite, König von Bayern?", "Gib mir die Komponisten für Ludwig der Zweite, König von Bayern?", "Welche musikalischer Künstlers sind die Komponisten für Ludwig der Zweite, König von Bayern?", "Welche musikalischer Künstlers waren die Komponisten für Ludwig der Zweite, König von Bayern?", "Welcher musikalischer Künstler ist der Komponist für Ludwig der Zweite, König von Bayern?", "Welcher musikalischer Künstler war der Komponist für Ludwig der Zweite, König von Bayern?", "Wer ist der Komponist für Ludwig der Zweite, König von Bayern?", "Wer sind die Komponisten für Ludwig der Zweite, König von Bayern?", "Wer war der Komponist für Ludwig der Zweite, König von Bayern?", "Wer waren die Komponisten für Ludwig der Zweite, König von Bayern?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ludwig_II,_King_of_Bavaria> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Das Wiegenlied vom Broadway?", "Gib mir die Komponisten für Das Wiegenlied vom Broadway?", "Welche musikalischer Künstlers sind die Komponisten für Das Wiegenlied vom Broadway?", "Welche musikalischer Künstlers waren die Komponisten für Das Wiegenlied vom Broadway?", "Welcher musikalischer Künstler ist der Komponist für Das Wiegenlied vom Broadway?", "Welcher musikalischer Künstler war der Komponist für Das Wiegenlied vom Broadway?", "Wer ist der Komponist für Das Wiegenlied vom Broadway?", "Wer sind die Komponisten für Das Wiegenlied vom Broadway?", "Wer war der Komponist für Das Wiegenlied vom Broadway?", "Wer waren die Komponisten für Das Wiegenlied vom Broadway?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lullaby_of_Broadway_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Lulu on the Bridge?", "Gib mir die Komponisten für Lulu on the Bridge?", "Welche musikalischer Künstlers sind die Komponisten für Lulu on the Bridge?", "Welche musikalischer Künstlers waren die Komponisten für Lulu on the Bridge?", "Welcher musikalischer Künstler ist der Komponist für Lulu on the Bridge?", "Welcher musikalischer Künstler war der Komponist für Lulu on the Bridge?", "Wer ist der Komponist für Lulu on the Bridge?", "Wer sind die Komponisten für Lulu on the Bridge?", "Wer war der Komponist für Lulu on the Bridge?", "Wer waren die Komponisten für Lulu on the Bridge?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lulu_on_the_Bridge> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Lumpacivagabundus (1936)?", "Gib mir die Komponisten für Lumpacivagabundus (1936)?", "Welche musikalischer Künstlers sind die Komponisten für Lumpacivagabundus (1936)?", "Welche musikalischer Künstlers waren die Komponisten für Lumpacivagabundus (1936)?", "Welcher musikalischer Künstler ist der Komponist für Lumpacivagabundus (1936)?", "Welcher musikalischer Künstler war der Komponist für Lumpacivagabundus (1936)?", "Wer ist der Komponist für Lumpacivagabundus (1936)?", "Wer sind die Komponisten für Lumpacivagabundus (1936)?", "Wer war der Komponist für Lumpacivagabundus (1936)?", "Wer waren die Komponisten für Lumpacivagabundus (1936)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lumpaci_the_Vagabond> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Luna Papa?", "Gib mir die Komponisten für Luna Papa?", "Welche musikalischer Künstlers sind die Komponisten für Luna Papa?", "Welche musikalischer Künstlers waren die Komponisten für Luna Papa?", "Welcher musikalischer Künstler ist der Komponist für Luna Papa?", "Welcher musikalischer Künstler war der Komponist für Luna Papa?", "Wer ist der Komponist für Luna Papa?", "Wer sind die Komponisten für Luna Papa?", "Wer war der Komponist für Luna Papa?", "Wer waren die Komponisten für Luna Papa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luna_Papa> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Komponisten für Luna Park (Film)?", "Gib mir die Komponisten für Luna Park (Film)?", "Welche musikalischer Künstlers sind die Komponisten für Luna Park (Film)?", "Welche musikalischer Künstlers waren die Komponisten für Luna Park (Film)?", "Welcher musikalischer Künstler ist der Komponist für Luna Park (Film)?", "Welcher musikalischer Künstler war der Komponist für Luna Park (Film)?", "Wer ist der Komponist für Luna Park (Film)?", "Wer sind die Komponisten für Luna Park (Film)?", "Wer war der Komponist für Luna Park (Film)?", "Wer waren die Komponisten für Luna Park (Film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luna_Park_(1992_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von 7 Horns 7 Eyes?", "Gib mir die Mitglieder von 7 Horns 7 Eyes?", "Welche Person ist das Mitglied von 7 Horns 7 Eyes?", "Welche Person war das Mitglied von 7 Horns 7 Eyes?", "Welche Persons sind die Mitglieder von 7 Horns 7 Eyes?", "Welche Persons waren die Mitglieder von 7 Horns 7 Eyes?", "Wer ist das Mitglied von 7 Horns 7 Eyes?", "Wer sind die Mitglieder von 7 Horns 7 Eyes?", "Wer war das Mitglied von 7 Horns 7 Eyes?", "Wer waren die Mitglieder von 7 Horns 7 Eyes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/7_Horns_7_Eyes> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von 7 Seconds?", "Gib mir die Mitglieder von 7 Seconds?", "Welche Person ist das Mitglied von 7 Seconds?", "Welche Person war das Mitglied von 7 Seconds?", "Welche Persons sind die Mitglieder von 7 Seconds?", "Welche Persons waren die Mitglieder von 7 Seconds?", "Wer ist das Mitglied von 7 Seconds?", "Wer sind die Mitglieder von 7 Seconds?", "Wer war das Mitglied von 7 Seconds?", "Wer waren die Mitglieder von 7 Seconds?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/7_Seconds_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von 7 Year Bitch?", "Gib mir die Mitglieder von 7 Year Bitch?", "Welche Person ist das Mitglied von 7 Year Bitch?", "Welche Person war das Mitglied von 7 Year Bitch?", "Welche Persons sind die Mitglieder von 7 Year Bitch?", "Welche Persons waren die Mitglieder von 7 Year Bitch?", "Wer ist das Mitglied von 7 Year Bitch?", "Wer sind die Mitglieder von 7 Year Bitch?", "Wer war das Mitglied von 7 Year Bitch?", "Wer waren die Mitglieder von 7 Year Bitch?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/7_Year_Bitch> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von 801 (Band)?", "Gib mir die Mitglieder von 801 (Band)?", "Welche Person ist das Mitglied von 801 (Band)?", "Welche Person war das Mitglied von 801 (Band)?", "Welche Persons sind die Mitglieder von 801 (Band)?", "Welche Persons waren die Mitglieder von 801 (Band)?", "Wer ist das Mitglied von 801 (Band)?", "Wer sind die Mitglieder von 801 (Band)?", "Wer war das Mitglied von 801 (Band)?", "Wer waren die Mitglieder von 801 (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/801_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von 808 State?", "Gib mir die Mitglieder von 808 State?", "Welche Person ist das Mitglied von 808 State?", "Welche Person war das Mitglied von 808 State?", "Welche Persons sind die Mitglieder von 808 State?", "Welche Persons waren die Mitglieder von 808 State?", "Wer ist das Mitglied von 808 State?", "Wer sind die Mitglieder von 808 State?", "Wer war das Mitglied von 808 State?", "Wer waren die Mitglieder von 808 State?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/808_State> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von 98 Degrees?", "Gib mir die Mitglieder von 98 Degrees?", "Welche Person ist das Mitglied von 98 Degrees?", "Welche Person war das Mitglied von 98 Degrees?", "Welche Persons sind die Mitglieder von 98 Degrees?", "Welche Persons waren die Mitglieder von 98 Degrees?", "Wer ist das Mitglied von 98 Degrees?", "Wer sind die Mitglieder von 98 Degrees?", "Wer war das Mitglied von 98 Degrees?", "Wer waren die Mitglieder von 98 Degrees?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/98_Degrees> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von A1 (Band)?", "Gib mir die Mitglieder von A1 (Band)?", "Welche Person ist das Mitglied von A1 (Band)?", "Welche Person war das Mitglied von A1 (Band)?", "Welche Persons sind die Mitglieder von A1 (Band)?", "Welche Persons waren die Mitglieder von A1 (Band)?", "Wer ist das Mitglied von A1 (Band)?", "Wer sind die Mitglieder von A1 (Band)?", "Wer war das Mitglied von A1 (Band)?", "Wer waren die Mitglieder von A1 (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A1_(group)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von AC4?", "Gib mir die Mitglieder von AC4?", "Welche Person ist das Mitglied von AC4?", "Welche Person war das Mitglied von AC4?", "Welche Persons sind die Mitglieder von AC4?", "Welche Persons waren die Mitglieder von AC4?", "Wer ist das Mitglied von AC4?", "Wer sind die Mitglieder von AC4?", "Wer war das Mitglied von AC4?", "Wer waren die Mitglieder von AC4?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AC4> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von AMM (Ensemble)?", "Gib mir die Mitglieder von AMM (Ensemble)?", "Welche Person ist das Mitglied von AMM (Ensemble)?", "Welche Person war das Mitglied von AMM (Ensemble)?", "Welche Persons sind die Mitglieder von AMM (Ensemble)?", "Welche Persons waren die Mitglieder von AMM (Ensemble)?", "Wer ist das Mitglied von AMM (Ensemble)?", "Wer sind die Mitglieder von AMM (Ensemble)?", "Wer war das Mitglied von AMM (Ensemble)?", "Wer waren die Mitglieder von AMM (Ensemble)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AMM_(group)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Love/Hate (Band)?", "Gib mir die Mitglieder von Love/Hate (Band)?", "Welche Person ist das Mitglied von Love/Hate (Band)?", "Welche Person war das Mitglied von Love/Hate (Band)?", "Welche Persons sind die Mitglieder von Love/Hate (Band)?", "Welche Persons waren die Mitglieder von Love/Hate (Band)?", "Wer ist das Mitglied von Love/Hate (Band)?", "Wer sind die Mitglieder von Love/Hate (Band)?", "Wer war das Mitglied von Love/Hate (Band)?", "Wer waren die Mitglieder von Love/Hate (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love/Hate_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Love (Band)?", "Gib mir die Mitglieder von Love (Band)?", "Welche Person ist das Mitglied von Love (Band)?", "Welche Person war das Mitglied von Love (Band)?", "Welche Persons sind die Mitglieder von Love (Band)?", "Welche Persons waren die Mitglieder von Love (Band)?", "Wer ist das Mitglied von Love (Band)?", "Wer sind die Mitglieder von Love (Band)?", "Wer war das Mitglied von Love (Band)?", "Wer waren die Mitglieder von Love (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Love and Death?", "Gib mir die Mitglieder von Love and Death?", "Welche Person ist das Mitglied von Love and Death?", "Welche Person war das Mitglied von Love and Death?", "Welche Persons sind die Mitglieder von Love and Death?", "Welche Persons waren die Mitglieder von Love and Death?", "Wer ist das Mitglied von Love and Death?", "Wer sind die Mitglieder von Love and Death?", "Wer war das Mitglied von Love and Death?", "Wer waren die Mitglieder von Love and Death?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_and_Death_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Lovebugs?", "Gib mir die Mitglieder von Lovebugs?", "Welche Person ist das Mitglied von Lovebugs?", "Welche Person war das Mitglied von Lovebugs?", "Welche Persons sind die Mitglieder von Lovebugs?", "Welche Persons waren die Mitglieder von Lovebugs?", "Wer ist das Mitglied von Lovebugs?", "Wer sind die Mitglieder von Lovebugs?", "Wer war das Mitglied von Lovebugs?", "Wer waren die Mitglieder von Lovebugs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lovebugs_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Lovelyz?", "Gib mir die Mitglieder von Lovelyz?", "Welche Person ist das Mitglied von Lovelyz?", "Welche Person war das Mitglied von Lovelyz?", "Welche Persons sind die Mitglieder von Lovelyz?", "Welche Persons waren die Mitglieder von Lovelyz?", "Wer ist das Mitglied von Lovelyz?", "Wer sind die Mitglieder von Lovelyz?", "Wer war das Mitglied von Lovelyz?", "Wer waren die Mitglieder von Lovelyz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lovelyz> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Loverboy (Band)?", "Gib mir die Mitglieder von Loverboy (Band)?", "Welche Person ist das Mitglied von Loverboy (Band)?", "Welche Person war das Mitglied von Loverboy (Band)?", "Welche Persons sind die Mitglieder von Loverboy (Band)?", "Welche Persons waren die Mitglieder von Loverboy (Band)?", "Wer ist das Mitglied von Loverboy (Band)?", "Wer sind die Mitglieder von Loverboy (Band)?", "Wer war das Mitglied von Loverboy (Band)?", "Wer waren die Mitglieder von Loverboy (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loverboy> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Lukas Graham?", "Gib mir die Mitglieder von Lukas Graham?", "Welche Person ist das Mitglied von Lukas Graham?", "Welche Person war das Mitglied von Lukas Graham?", "Welche Persons sind die Mitglieder von Lukas Graham?", "Welche Persons waren die Mitglieder von Lukas Graham?", "Wer ist das Mitglied von Lukas Graham?", "Wer sind die Mitglieder von Lukas Graham?", "Wer war das Mitglied von Lukas Graham?", "Wer waren die Mitglieder von Lukas Graham?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lukas_Graham> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Ljapis Trubezkoi?", "Gib mir die Mitglieder von Ljapis Trubezkoi?", "Welche Person ist das Mitglied von Ljapis Trubezkoi?", "Welche Person war das Mitglied von Ljapis Trubezkoi?", "Welche Persons sind die Mitglieder von Ljapis Trubezkoi?", "Welche Persons waren die Mitglieder von Ljapis Trubezkoi?", "Wer ist das Mitglied von Ljapis Trubezkoi?", "Wer sind die Mitglieder von Ljapis Trubezkoi?", "Wer war das Mitglied von Ljapis Trubezkoi?", "Wer waren die Mitglieder von Ljapis Trubezkoi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lyapis_Trubetskoy> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Lynch Mob?", "Gib mir die Mitglieder von Lynch Mob?", "Welche Person ist das Mitglied von Lynch Mob?", "Welche Person war das Mitglied von Lynch Mob?", "Welche Persons sind die Mitglieder von Lynch Mob?", "Welche Persons waren die Mitglieder von Lynch Mob?", "Wer ist das Mitglied von Lynch Mob?", "Wer sind die Mitglieder von Lynch Mob?", "Wer war das Mitglied von Lynch Mob?", "Wer waren die Mitglieder von Lynch Mob?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lynch_Mob_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Lynyrd Skynyrd?", "Gib mir die Mitglieder von Lynyrd Skynyrd?", "Welche Person ist das Mitglied von Lynyrd Skynyrd?", "Welche Person war das Mitglied von Lynyrd Skynyrd?", "Welche Persons sind die Mitglieder von Lynyrd Skynyrd?", "Welche Persons waren die Mitglieder von Lynyrd Skynyrd?", "Wer ist das Mitglied von Lynyrd Skynyrd?", "Wer sind die Mitglieder von Lynyrd Skynyrd?", "Wer war das Mitglied von Lynyrd Skynyrd?", "Wer waren die Mitglieder von Lynyrd Skynyrd?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lynyrd_Skynyrd> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Lúnasa?", "Gib mir die Mitglieder von Lúnasa?", "Welche Person ist das Mitglied von Lúnasa?", "Welche Person war das Mitglied von Lúnasa?", "Welche Persons sind die Mitglieder von Lúnasa?", "Welche Persons waren die Mitglieder von Lúnasa?", "Wer ist das Mitglied von Lúnasa?", "Wer sind die Mitglieder von Lúnasa?", "Wer war das Mitglied von Lúnasa?", "Wer waren die Mitglieder von Lúnasa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lúnasa_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von M.O.D.?", "Gib mir die Mitglieder von M.O.D.?", "Welche Person ist das Mitglied von M.O.D.?", "Welche Person war das Mitglied von M.O.D.?", "Welche Persons sind die Mitglieder von M.O.D.?", "Welche Persons waren die Mitglieder von M.O.D.?", "Wer ist das Mitglied von M.O.D.?", "Wer sind die Mitglieder von M.O.D.?", "Wer war das Mitglied von M.O.D.?", "Wer waren die Mitglieder von M.O.D.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/M.O.D.> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von MBLAQ?", "Gib mir die Mitglieder von MBLAQ?", "Welche Person ist das Mitglied von MBLAQ?", "Welche Person war das Mitglied von MBLAQ?", "Welche Persons sind die Mitglieder von MBLAQ?", "Welche Persons waren die Mitglieder von MBLAQ?", "Wer ist das Mitglied von MBLAQ?", "Wer sind die Mitglieder von MBLAQ?", "Wer war das Mitglied von MBLAQ?", "Wer waren die Mitglieder von MBLAQ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MBLAQ> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von MGMT?", "Gib mir die Mitglieder von MGMT?", "Welche Person ist das Mitglied von MGMT?", "Welche Person war das Mitglied von MGMT?", "Welche Persons sind die Mitglieder von MGMT?", "Welche Persons waren die Mitglieder von MGMT?", "Wer ist das Mitglied von MGMT?", "Wer sind die Mitglieder von MGMT?", "Wer war das Mitglied von MGMT?", "Wer waren die Mitglieder von MGMT?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MGMT> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von MKTO?", "Gib mir die Mitglieder von MKTO?", "Welche Person ist das Mitglied von MKTO?", "Welche Person war das Mitglied von MKTO?", "Welche Persons sind die Mitglieder von MKTO?", "Welche Persons waren die Mitglieder von MKTO?", "Wer ist das Mitglied von MKTO?", "Wer sind die Mitglieder von MKTO?", "Wer war das Mitglied von MKTO?", "Wer waren die Mitglieder von MKTO?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MKTO> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von MS MR?", "Gib mir die Mitglieder von MS MR?", "Welche Person ist das Mitglied von MS MR?", "Welche Person war das Mitglied von MS MR?", "Welche Persons sind die Mitglieder von MS MR?", "Welche Persons waren die Mitglieder von MS MR?", "Wer ist das Mitglied von MS MR?", "Wer sind die Mitglieder von MS MR?", "Wer war das Mitglied von MS MR?", "Wer waren die Mitglieder von MS MR?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MS_MR> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von MU330?", "Gib mir die Mitglieder von MU330?", "Welche Person ist das Mitglied von MU330?", "Welche Person war das Mitglied von MU330?", "Welche Persons sind die Mitglieder von MU330?", "Welche Persons waren die Mitglieder von MU330?", "Wer ist das Mitglied von MU330?", "Wer sind die Mitglieder von MU330?", "Wer war das Mitglied von MU330?", "Wer waren die Mitglieder von MU330?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MU330> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Machine Head?", "Gib mir die Mitglieder von Machine Head?", "Welche Person ist das Mitglied von Machine Head?", "Welche Person war das Mitglied von Machine Head?", "Welche Persons sind die Mitglieder von Machine Head?", "Welche Persons waren die Mitglieder von Machine Head?", "Wer ist das Mitglied von Machine Head?", "Wer sind die Mitglieder von Machine Head?", "Wer war das Mitglied von Machine Head?", "Wer waren die Mitglieder von Machine Head?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Machine_Head_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Made Out of Babies?", "Gib mir die Mitglieder von Made Out of Babies?", "Welche Person ist das Mitglied von Made Out of Babies?", "Welche Person war das Mitglied von Made Out of Babies?", "Welche Persons sind die Mitglieder von Made Out of Babies?", "Welche Persons waren die Mitglieder von Made Out of Babies?", "Wer ist das Mitglied von Made Out of Babies?", "Wer sind die Mitglieder von Made Out of Babies?", "Wer war das Mitglied von Made Out of Babies?", "Wer waren die Mitglieder von Made Out of Babies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Made_Out_of_Babies> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Madness?", "Gib mir die Mitglieder von Madness?", "Welche Person ist das Mitglied von Madness?", "Welche Person war das Mitglied von Madness?", "Welche Persons sind die Mitglieder von Madness?", "Welche Persons waren die Mitglieder von Madness?", "Wer ist das Mitglied von Madness?", "Wer sind die Mitglieder von Madness?", "Wer war das Mitglied von Madness?", "Wer waren die Mitglieder von Madness?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Madness_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Mae (Band)?", "Gib mir die Mitglieder von Mae (Band)?", "Welche Person ist das Mitglied von Mae (Band)?", "Welche Person war das Mitglied von Mae (Band)?", "Welche Persons sind die Mitglieder von Mae (Band)?", "Welche Persons waren die Mitglieder von Mae (Band)?", "Wer ist das Mitglied von Mae (Band)?", "Wer sind die Mitglieder von Mae (Band)?", "Wer war das Mitglied von Mae (Band)?", "Wer waren die Mitglieder von Mae (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mae> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Magic (Band)?", "Gib mir die Mitglieder von Magic (Band)?", "Welche Person ist das Mitglied von Magic (Band)?", "Welche Person war das Mitglied von Magic (Band)?", "Welche Persons sind die Mitglieder von Magic (Band)?", "Welche Persons waren die Mitglieder von Magic (Band)?", "Wer ist das Mitglied von Magic (Band)?", "Wer sind die Mitglieder von Magic (Band)?", "Wer war das Mitglied von Magic (Band)?", "Wer waren die Mitglieder von Magic (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Magic!> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Magma (Band)?", "Gib mir die Mitglieder von Magma (Band)?", "Welche Person ist das Mitglied von Magma (Band)?", "Welche Person war das Mitglied von Magma (Band)?", "Welche Persons sind die Mitglieder von Magma (Band)?", "Welche Persons waren die Mitglieder von Magma (Band)?", "Wer ist das Mitglied von Magma (Band)?", "Wer sind die Mitglieder von Magma (Band)?", "Wer war das Mitglied von Magma (Band)?", "Wer waren die Mitglieder von Magma (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Magma_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Magnetic Man?", "Gib mir die Mitglieder von Magnetic Man?", "Welche Person ist das Mitglied von Magnetic Man?", "Welche Person war das Mitglied von Magnetic Man?", "Welche Persons sind die Mitglieder von Magnetic Man?", "Welche Persons waren die Mitglieder von Magnetic Man?", "Wer ist das Mitglied von Magnetic Man?", "Wer sind die Mitglieder von Magnetic Man?", "Wer war das Mitglied von Magnetic Man?", "Wer waren die Mitglieder von Magnetic Man?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Magnetic_Man> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Magnum (Band)?", "Gib mir die Mitglieder von Magnum (Band)?", "Welche Person ist das Mitglied von Magnum (Band)?", "Welche Person war das Mitglied von Magnum (Band)?", "Welche Persons sind die Mitglieder von Magnum (Band)?", "Welche Persons waren die Mitglieder von Magnum (Band)?", "Wer ist das Mitglied von Magnum (Band)?", "Wer sind die Mitglieder von Magnum (Band)?", "Wer war das Mitglied von Magnum (Band)?", "Wer waren die Mitglieder von Magnum (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Magnum_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Kraftwerk Magnum?", "Gib mir die Mitglieder von Kraftwerk Magnum?", "Welche Person ist das Mitglied von Kraftwerk Magnum?", "Welche Person war das Mitglied von Kraftwerk Magnum?", "Welche Persons sind die Mitglieder von Kraftwerk Magnum?", "Welche Persons waren die Mitglieder von Kraftwerk Magnum?", "Wer ist das Mitglied von Kraftwerk Magnum?", "Wer sind die Mitglieder von Kraftwerk Magnum?", "Wer war das Mitglied von Kraftwerk Magnum?", "Wer waren die Mitglieder von Kraftwerk Magnum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Magnum_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Malcolm Lincoln?", "Gib mir die Mitglieder von Malcolm Lincoln?", "Welche Person ist das Mitglied von Malcolm Lincoln?", "Welche Person war das Mitglied von Malcolm Lincoln?", "Welche Persons sind die Mitglieder von Malcolm Lincoln?", "Welche Persons waren die Mitglieder von Malcolm Lincoln?", "Wer ist das Mitglied von Malcolm Lincoln?", "Wer sind die Mitglieder von Malcolm Lincoln?", "Wer war das Mitglied von Malcolm Lincoln?", "Wer waren die Mitglieder von Malcolm Lincoln?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Malcolm_Lincoln> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Carpathian Forest?", "Gib mir die Mitglieder von Carpathian Forest?", "Welche Person ist das Mitglied von Carpathian Forest?", "Welche Person war das Mitglied von Carpathian Forest?", "Welche Persons sind die Mitglieder von Carpathian Forest?", "Welche Persons waren die Mitglieder von Carpathian Forest?", "Wer ist das Mitglied von Carpathian Forest?", "Wer sind die Mitglieder von Carpathian Forest?", "Wer war das Mitglied von Carpathian Forest?", "Wer waren die Mitglieder von Carpathian Forest?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Carpathian_Forest> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Cartel (Hip-Hop-Gruppe)?", "Gib mir die Mitglieder von Cartel (Hip-Hop-Gruppe)?", "Welche Person ist das Mitglied von Cartel (Hip-Hop-Gruppe)?", "Welche Person war das Mitglied von Cartel (Hip-Hop-Gruppe)?", "Welche Persons sind die Mitglieder von Cartel (Hip-Hop-Gruppe)?", "Welche Persons waren die Mitglieder von Cartel (Hip-Hop-Gruppe)?", "Wer ist das Mitglied von Cartel (Hip-Hop-Gruppe)?", "Wer sind die Mitglieder von Cartel (Hip-Hop-Gruppe)?", "Wer war das Mitglied von Cartel (Hip-Hop-Gruppe)?", "Wer waren die Mitglieder von Cartel (Hip-Hop-Gruppe)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Cartel_(rap_group)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Carter The Unstoppable Sex Machine?", "Gib mir die Mitglieder von Carter The Unstoppable Sex Machine?", "Welche Person ist das Mitglied von Carter The Unstoppable Sex Machine?", "Welche Person war das Mitglied von Carter The Unstoppable Sex Machine?", "Welche Persons sind die Mitglieder von Carter The Unstoppable Sex Machine?", "Welche Persons waren die Mitglieder von Carter The Unstoppable Sex Machine?", "Wer ist das Mitglied von Carter The Unstoppable Sex Machine?", "Wer sind die Mitglieder von Carter The Unstoppable Sex Machine?", "Wer war das Mitglied von Carter The Unstoppable Sex Machine?", "Wer waren die Mitglieder von Carter The Unstoppable Sex Machine?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Carter_the_Unstoppable_Sex_Machine> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Casseurs Flowters?", "Gib mir die Mitglieder von Casseurs Flowters?", "Welche Person ist das Mitglied von Casseurs Flowters?", "Welche Person war das Mitglied von Casseurs Flowters?", "Welche Persons sind die Mitglieder von Casseurs Flowters?", "Welche Persons waren die Mitglieder von Casseurs Flowters?", "Wer ist das Mitglied von Casseurs Flowters?", "Wer sind die Mitglieder von Casseurs Flowters?", "Wer war das Mitglied von Casseurs Flowters?", "Wer waren die Mitglieder von Casseurs Flowters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Casseurs_Flowters> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Cassino (Latium)?", "Gib mir die Mitglieder von Cassino (Latium)?", "Welche Person ist das Mitglied von Cassino (Latium)?", "Welche Person war das Mitglied von Cassino (Latium)?", "Welche Persons sind die Mitglieder von Cassino (Latium)?", "Welche Persons waren die Mitglieder von Cassino (Latium)?", "Wer ist das Mitglied von Cassino (Latium)?", "Wer sind die Mitglieder von Cassino (Latium)?", "Wer war das Mitglied von Cassino (Latium)?", "Wer waren die Mitglieder von Cassino (Latium)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Cassino_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Catacombs (amerikanische Band)?", "Gib mir die Mitglieder von Catacombs (amerikanische Band)?", "Welche Person ist das Mitglied von Catacombs (amerikanische Band)?", "Welche Person war das Mitglied von Catacombs (amerikanische Band)?", "Welche Persons sind die Mitglieder von Catacombs (amerikanische Band)?", "Welche Persons waren die Mitglieder von Catacombs (amerikanische Band)?", "Wer ist das Mitglied von Catacombs (amerikanische Band)?", "Wer sind die Mitglieder von Catacombs (amerikanische Band)?", "Wer war das Mitglied von Catacombs (amerikanische Band)?", "Wer waren die Mitglieder von Catacombs (amerikanische Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Catacombs_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Catamenia?", "Gib mir die Mitglieder von Catamenia?", "Welche Person ist das Mitglied von Catamenia?", "Welche Person war das Mitglied von Catamenia?", "Welche Persons sind die Mitglieder von Catamenia?", "Welche Persons waren die Mitglieder von Catamenia?", "Wer ist das Mitglied von Catamenia?", "Wer sind die Mitglieder von Catamenia?", "Wer war das Mitglied von Catamenia?", "Wer waren die Mitglieder von Catamenia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Catamenia_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Coppelius?", "Gib mir die Mitglieder von Coppelius?", "Welche Person ist das Mitglied von Coppelius?", "Welche Person war das Mitglied von Coppelius?", "Welche Persons sind die Mitglieder von Coppelius?", "Welche Persons waren die Mitglieder von Coppelius?", "Wer ist das Mitglied von Coppelius?", "Wer sind die Mitglieder von Coppelius?", "Wer war das Mitglied von Coppelius?", "Wer waren die Mitglieder von Coppelius?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Coppelius> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Cordelia’s Dad?", "Gib mir die Mitglieder von Cordelia’s Dad?", "Welche Person ist das Mitglied von Cordelia’s Dad?", "Welche Person war das Mitglied von Cordelia’s Dad?", "Welche Persons sind die Mitglieder von Cordelia’s Dad?", "Welche Persons waren die Mitglieder von Cordelia’s Dad?", "Wer ist das Mitglied von Cordelia’s Dad?", "Wer sind die Mitglieder von Cordelia’s Dad?", "Wer war das Mitglied von Cordelia’s Dad?", "Wer waren die Mitglieder von Cordelia’s Dad?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Cordelia's_Dad> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Corona (Band)?", "Gib mir die Mitglieder von Corona (Band)?", "Welche Person ist das Mitglied von Corona (Band)?", "Welche Person war das Mitglied von Corona (Band)?", "Welche Persons sind die Mitglieder von Corona (Band)?", "Welche Persons waren die Mitglieder von Corona (Band)?", "Wer ist das Mitglied von Corona (Band)?", "Wer sind die Mitglieder von Corona (Band)?", "Wer war das Mitglied von Corona (Band)?", "Wer waren die Mitglieder von Corona (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Corona_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Ugly Kid Joe?", "Gib mir die Mitglieder von Ugly Kid Joe?", "Welche Person ist das Mitglied von Ugly Kid Joe?", "Welche Person war das Mitglied von Ugly Kid Joe?", "Welche Persons sind die Mitglieder von Ugly Kid Joe?", "Welche Persons waren die Mitglieder von Ugly Kid Joe?", "Wer ist das Mitglied von Ugly Kid Joe?", "Wer sind die Mitglieder von Ugly Kid Joe?", "Wer war das Mitglied von Ugly Kid Joe?", "Wer waren die Mitglieder von Ugly Kid Joe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ugly_Kid_Joe> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Ulige Numre?", "Gib mir die Mitglieder von Ulige Numre?", "Welche Person ist das Mitglied von Ulige Numre?", "Welche Person war das Mitglied von Ulige Numre?", "Welche Persons sind die Mitglieder von Ulige Numre?", "Welche Persons waren die Mitglieder von Ulige Numre?", "Wer ist das Mitglied von Ulige Numre?", "Wer sind die Mitglieder von Ulige Numre?", "Wer war das Mitglied von Ulige Numre?", "Wer waren die Mitglieder von Ulige Numre?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ulige_Numre> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von UnSun?", "Gib mir die Mitglieder von UnSun?", "Welche Person ist das Mitglied von UnSun?", "Welche Person war das Mitglied von UnSun?", "Welche Persons sind die Mitglieder von UnSun?", "Welche Persons waren die Mitglieder von UnSun?", "Wer ist das Mitglied von UnSun?", "Wer sind die Mitglieder von UnSun?", "Wer war das Mitglied von UnSun?", "Wer waren die Mitglieder von UnSun?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/UnSun> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Underoath?", "Gib mir die Mitglieder von Underoath?", "Welche Person ist das Mitglied von Underoath?", "Welche Person war das Mitglied von Underoath?", "Welche Persons sind die Mitglieder von Underoath?", "Welche Persons waren die Mitglieder von Underoath?", "Wer ist das Mitglied von Underoath?", "Wer sind die Mitglieder von Underoath?", "Wer war das Mitglied von Underoath?", "Wer waren die Mitglieder von Underoath?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Underoath> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Underworld (Band)?", "Gib mir die Mitglieder von Underworld (Band)?", "Welche Person ist das Mitglied von Underworld (Band)?", "Welche Person war das Mitglied von Underworld (Band)?", "Welche Persons sind die Mitglieder von Underworld (Band)?", "Welche Persons waren die Mitglieder von Underworld (Band)?", "Wer ist das Mitglied von Underworld (Band)?", "Wer sind die Mitglieder von Underworld (Band)?", "Wer war das Mitglied von Underworld (Band)?", "Wer waren die Mitglieder von Underworld (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Underworld_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Untoten?", "Gib mir die Mitglieder von Untoten?", "Welche Person ist das Mitglied von Untoten?", "Welche Person war das Mitglied von Untoten?", "Welche Persons sind die Mitglieder von Untoten?", "Welche Persons waren die Mitglieder von Untoten?", "Wer ist das Mitglied von Untoten?", "Wer sind die Mitglieder von Untoten?", "Wer war das Mitglied von Untoten?", "Wer waren die Mitglieder von Untoten?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Untoten> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Urban Cookie Collective?", "Gib mir die Mitglieder von Urban Cookie Collective?", "Welche Person ist das Mitglied von Urban Cookie Collective?", "Welche Person war das Mitglied von Urban Cookie Collective?", "Welche Persons sind die Mitglieder von Urban Cookie Collective?", "Welche Persons waren die Mitglieder von Urban Cookie Collective?", "Wer ist das Mitglied von Urban Cookie Collective?", "Wer sind die Mitglieder von Urban Cookie Collective?", "Wer war das Mitglied von Urban Cookie Collective?", "Wer waren die Mitglieder von Urban Cookie Collective?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Urban_Cookie_Collective> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von VAST?", "Gib mir die Mitglieder von VAST?", "Welche Person ist das Mitglied von VAST?", "Welche Person war das Mitglied von VAST?", "Welche Persons sind die Mitglieder von VAST?", "Welche Persons waren die Mitglieder von VAST?", "Wer ist das Mitglied von VAST?", "Wer sind die Mitglieder von VAST?", "Wer war das Mitglied von VAST?", "Wer waren die Mitglieder von VAST?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/VAST> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von VNV Nation?", "Gib mir die Mitglieder von VNV Nation?", "Welche Person ist das Mitglied von VNV Nation?", "Welche Person war das Mitglied von VNV Nation?", "Welche Persons sind die Mitglieder von VNV Nation?", "Welche Persons waren die Mitglieder von VNV Nation?", "Wer ist das Mitglied von VNV Nation?", "Wer sind die Mitglieder von VNV Nation?", "Wer war das Mitglied von VNV Nation?", "Wer waren die Mitglieder von VNV Nation?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/VNV_Nation> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Vuur?", "Gib mir die Mitglieder von Vuur?", "Welche Person ist das Mitglied von Vuur?", "Welche Person war das Mitglied von Vuur?", "Welche Persons sind die Mitglieder von Vuur?", "Welche Persons waren die Mitglieder von Vuur?", "Wer ist das Mitglied von Vuur?", "Wer sind die Mitglieder von Vuur?", "Wer war das Mitglied von Vuur?", "Wer waren die Mitglieder von Vuur?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/VUUR> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Vallenfyre?", "Gib mir die Mitglieder von Vallenfyre?", "Welche Person ist das Mitglied von Vallenfyre?", "Welche Person war das Mitglied von Vallenfyre?", "Welche Persons sind die Mitglieder von Vallenfyre?", "Welche Persons waren die Mitglieder von Vallenfyre?", "Wer ist das Mitglied von Vallenfyre?", "Wer sind die Mitglieder von Vallenfyre?", "Wer war das Mitglied von Vallenfyre?", "Wer waren die Mitglieder von Vallenfyre?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Vallenfyre> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Vampire Weekend?", "Gib mir die Mitglieder von Vampire Weekend?", "Welche Person ist das Mitglied von Vampire Weekend?", "Welche Person war das Mitglied von Vampire Weekend?", "Welche Persons sind die Mitglieder von Vampire Weekend?", "Welche Persons waren die Mitglieder von Vampire Weekend?", "Wer ist das Mitglied von Vampire Weekend?", "Wer sind die Mitglieder von Vampire Weekend?", "Wer war das Mitglied von Vampire Weekend?", "Wer waren die Mitglieder von Vampire Weekend?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Vampire_Weekend> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Van Halen?", "Gib mir die Mitglieder von Van Halen?", "Welche Person ist das Mitglied von Van Halen?", "Welche Person war das Mitglied von Van Halen?", "Welche Persons sind die Mitglieder von Van Halen?", "Welche Persons waren die Mitglieder von Van Halen?", "Wer ist das Mitglied von Van Halen?", "Wer sind die Mitglieder von Van Halen?", "Wer war das Mitglied von Van Halen?", "Wer waren die Mitglieder von Van Halen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Van_Halen> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Van She?", "Gib mir die Mitglieder von Van She?", "Welche Person ist das Mitglied von Van She?", "Welche Person war das Mitglied von Van She?", "Welche Persons sind die Mitglieder von Van She?", "Welche Persons waren die Mitglieder von Van She?", "Wer ist das Mitglied von Van She?", "Wer sind die Mitglieder von Van She?", "Wer war das Mitglied von Van She?", "Wer waren die Mitglieder von Van She?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Van_She> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Vandalism?", "Gib mir die Mitglieder von Vandalism?", "Welche Person ist das Mitglied von Vandalism?", "Welche Person war das Mitglied von Vandalism?", "Welche Persons sind die Mitglieder von Vandalism?", "Welche Persons waren die Mitglieder von Vandalism?", "Wer ist das Mitglied von Vandalism?", "Wer sind die Mitglieder von Vandalism?", "Wer war das Mitglied von Vandalism?", "Wer waren die Mitglieder von Vandalism?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Vandalism_(duo)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Vanilla Fudge?", "Gib mir die Mitglieder von Vanilla Fudge?", "Welche Person ist das Mitglied von Vanilla Fudge?", "Welche Person war das Mitglied von Vanilla Fudge?", "Welche Persons sind die Mitglieder von Vanilla Fudge?", "Welche Persons waren die Mitglieder von Vanilla Fudge?", "Wer ist das Mitglied von Vanilla Fudge?", "Wer sind die Mitglieder von Vanilla Fudge?", "Wer war das Mitglied von Vanilla Fudge?", "Wer waren die Mitglieder von Vanilla Fudge?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Vanilla_Fudge> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Vanilla Ninja?", "Gib mir die Mitglieder von Vanilla Ninja?", "Welche Person ist das Mitglied von Vanilla Ninja?", "Welche Person war das Mitglied von Vanilla Ninja?", "Welche Persons sind die Mitglieder von Vanilla Ninja?", "Welche Persons waren die Mitglieder von Vanilla Ninja?", "Wer ist das Mitglied von Vanilla Ninja?", "Wer sind die Mitglieder von Vanilla Ninja?", "Wer war das Mitglied von Vanilla Ninja?", "Wer waren die Mitglieder von Vanilla Ninja?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Vanilla_Ninja> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Venom (Band)?", "Gib mir die Mitglieder von Venom (Band)?", "Welche Person ist das Mitglied von Venom (Band)?", "Welche Person war das Mitglied von Venom (Band)?", "Welche Persons sind die Mitglieder von Venom (Band)?", "Welche Persons waren die Mitglieder von Venom (Band)?", "Wer ist das Mitglied von Venom (Band)?", "Wer sind die Mitglieder von Venom (Band)?", "Wer war das Mitglied von Venom (Band)?", "Wer waren die Mitglieder von Venom (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Venom_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Venomous Concept?", "Gib mir die Mitglieder von Venomous Concept?", "Welche Person ist das Mitglied von Venomous Concept?", "Welche Person war das Mitglied von Venomous Concept?", "Welche Persons sind die Mitglieder von Venomous Concept?", "Welche Persons waren die Mitglieder von Venomous Concept?", "Wer ist das Mitglied von Venomous Concept?", "Wer sind die Mitglieder von Venomous Concept?", "Wer war das Mitglied von Venomous Concept?", "Wer waren die Mitglieder von Venomous Concept?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Venomous_Concept> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Versailles?", "Gib mir die Mitglieder von Versailles?", "Welche Person ist das Mitglied von Versailles?", "Welche Person war das Mitglied von Versailles?", "Welche Persons sind die Mitglieder von Versailles?", "Welche Persons waren die Mitglieder von Versailles?", "Wer ist das Mitglied von Versailles?", "Wer sind die Mitglieder von Versailles?", "Wer war das Mitglied von Versailles?", "Wer waren die Mitglieder von Versailles?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Versailles_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Versailles (Band)?", "Gib mir die Mitglieder von Versailles (Band)?", "Welche Person ist das Mitglied von Versailles (Band)?", "Welche Person war das Mitglied von Versailles (Band)?", "Welche Persons sind die Mitglieder von Versailles (Band)?", "Welche Persons waren die Mitglieder von Versailles (Band)?", "Wer ist das Mitglied von Versailles (Band)?", "Wer sind die Mitglieder von Versailles (Band)?", "Wer war das Mitglied von Versailles (Band)?", "Wer waren die Mitglieder von Versailles (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Versailles_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Vertical Horizon?", "Gib mir die Mitglieder von Vertical Horizon?", "Welche Person ist das Mitglied von Vertical Horizon?", "Welche Person war das Mitglied von Vertical Horizon?", "Welche Persons sind die Mitglieder von Vertical Horizon?", "Welche Persons waren die Mitglieder von Vertical Horizon?", "Wer ist das Mitglied von Vertical Horizon?", "Wer sind die Mitglieder von Vertical Horizon?", "Wer war das Mitglied von Vertical Horizon?", "Wer waren die Mitglieder von Vertical Horizon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Vertical_Horizon> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Current 93?", "Gib mir die Mitglieder von Current 93?", "Welche Person ist das Mitglied von Current 93?", "Welche Person war das Mitglied von Current 93?", "Welche Persons sind die Mitglieder von Current 93?", "Welche Persons waren die Mitglieder von Current 93?", "Wer ist das Mitglied von Current 93?", "Wer sind die Mitglieder von Current 93?", "Wer war das Mitglied von Current 93?", "Wer waren die Mitglieder von Current 93?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Current_93> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Cursive?", "Gib mir die Mitglieder von Cursive?", "Welche Person ist das Mitglied von Cursive?", "Welche Person war das Mitglied von Cursive?", "Welche Persons sind die Mitglieder von Cursive?", "Welche Persons waren die Mitglieder von Cursive?", "Wer ist das Mitglied von Cursive?", "Wer sind die Mitglieder von Cursive?", "Wer war das Mitglied von Cursive?", "Wer waren die Mitglieder von Cursive?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Cursive_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Curved Air?", "Gib mir die Mitglieder von Curved Air?", "Welche Person ist das Mitglied von Curved Air?", "Welche Person war das Mitglied von Curved Air?", "Welche Persons sind die Mitglieder von Curved Air?", "Welche Persons waren die Mitglieder von Curved Air?", "Wer ist das Mitglied von Curved Air?", "Wer sind die Mitglieder von Curved Air?", "Wer war das Mitglied von Curved Air?", "Wer waren die Mitglieder von Curved Air?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Curved_Air> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Czerwone Gitary?", "Gib mir die Mitglieder von Czerwone Gitary?", "Welche Person ist das Mitglied von Czerwone Gitary?", "Welche Person war das Mitglied von Czerwone Gitary?", "Welche Persons sind die Mitglieder von Czerwone Gitary?", "Welche Persons waren die Mitglieder von Czerwone Gitary?", "Wer ist das Mitglied von Czerwone Gitary?", "Wer sind die Mitglieder von Czerwone Gitary?", "Wer war das Mitglied von Czerwone Gitary?", "Wer waren die Mitglieder von Czerwone Gitary?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Czerwone_Gitary> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von D.D.E.?", "Gib mir die Mitglieder von D.D.E.?", "Welche Person ist das Mitglied von D.D.E.?", "Welche Person war das Mitglied von D.D.E.?", "Welche Persons sind die Mitglieder von D.D.E.?", "Welche Persons waren die Mitglieder von D.D.E.?", "Wer ist das Mitglied von D.D.E.?", "Wer sind die Mitglieder von D.D.E.?", "Wer war das Mitglied von D.D.E.?", "Wer waren die Mitglieder von D.D.E.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/D.D.E._(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von D.I.?", "Gib mir die Mitglieder von D.I.?", "Welche Person ist das Mitglied von D.I.?", "Welche Person war das Mitglied von D.I.?", "Welche Persons sind die Mitglieder von D.I.?", "Welche Persons waren die Mitglieder von D.I.?", "Wer ist das Mitglied von D.I.?", "Wer sind die Mitglieder von D.I.?", "Wer war das Mitglied von D.I.?", "Wer waren die Mitglieder von D.I.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/D.I._(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von D.O.A. (Band)?", "Gib mir die Mitglieder von D.O.A. (Band)?", "Welche Person ist das Mitglied von D.O.A. (Band)?", "Welche Person war das Mitglied von D.O.A. (Band)?", "Welche Persons sind die Mitglieder von D.O.A. (Band)?", "Welche Persons waren die Mitglieder von D.O.A. (Band)?", "Wer ist das Mitglied von D.O.A. (Band)?", "Wer sind die Mitglieder von D.O.A. (Band)?", "Wer war das Mitglied von D.O.A. (Band)?", "Wer waren die Mitglieder von D.O.A. (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/D.O.A._(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Dc Talk?", "Gib mir die Mitglieder von Dc Talk?", "Welche Person ist das Mitglied von Dc Talk?", "Welche Person war das Mitglied von Dc Talk?", "Welche Persons sind die Mitglieder von Dc Talk?", "Welche Persons waren die Mitglieder von Dc Talk?", "Wer ist das Mitglied von Dc Talk?", "Wer sind die Mitglieder von Dc Talk?", "Wer war das Mitglied von Dc Talk?", "Wer waren die Mitglieder von Dc Talk?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/DC_Talk> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von DDT (Band)?", "Gib mir die Mitglieder von DDT (Band)?", "Welche Person ist das Mitglied von DDT (Band)?", "Welche Person war das Mitglied von DDT (Band)?", "Welche Persons sind die Mitglieder von DDT (Band)?", "Welche Persons waren die Mitglieder von DDT (Band)?", "Wer ist das Mitglied von DDT (Band)?", "Wer sind die Mitglieder von DDT (Band)?", "Wer war das Mitglied von DDT (Band)?", "Wer waren die Mitglieder von DDT (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/DDT_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von DReam?", "Gib mir die Mitglieder von DReam?", "Welche Person ist das Mitglied von DReam?", "Welche Person war das Mitglied von DReam?", "Welche Persons sind die Mitglieder von DReam?", "Welche Persons waren die Mitglieder von DReam?", "Wer ist das Mitglied von DReam?", "Wer sind die Mitglieder von DReam?", "Wer war das Mitglied von DReam?", "Wer waren die Mitglieder von DReam?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/D_Ream> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Da Vinci (Band)?", "Gib mir die Mitglieder von Da Vinci (Band)?", "Welche Person ist das Mitglied von Da Vinci (Band)?", "Welche Person war das Mitglied von Da Vinci (Band)?", "Welche Persons sind die Mitglieder von Da Vinci (Band)?", "Welche Persons waren die Mitglieder von Da Vinci (Band)?", "Wer ist das Mitglied von Da Vinci (Band)?", "Wer sind die Mitglieder von Da Vinci (Band)?", "Wer war das Mitglied von Da Vinci (Band)?", "Wer waren die Mitglieder von Da Vinci (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Da_Vinci_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Da Vinci (Mondkrater)?", "Gib mir die Mitglieder von Da Vinci (Mondkrater)?", "Welche Person ist das Mitglied von Da Vinci (Mondkrater)?", "Welche Person war das Mitglied von Da Vinci (Mondkrater)?", "Welche Persons sind die Mitglieder von Da Vinci (Mondkrater)?", "Welche Persons waren die Mitglieder von Da Vinci (Mondkrater)?", "Wer ist das Mitglied von Da Vinci (Mondkrater)?", "Wer sind die Mitglieder von Da Vinci (Mondkrater)?", "Wer war das Mitglied von Da Vinci (Mondkrater)?", "Wer waren die Mitglieder von Da Vinci (Mondkrater)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Da_Vinci_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Dadafon?", "Gib mir die Mitglieder von Dadafon?", "Welche Person ist das Mitglied von Dadafon?", "Welche Person war das Mitglied von Dadafon?", "Welche Persons sind die Mitglieder von Dadafon?", "Welche Persons waren die Mitglieder von Dadafon?", "Wer ist das Mitglied von Dadafon?", "Wer sind die Mitglieder von Dadafon?", "Wer war das Mitglied von Dadafon?", "Wer waren die Mitglieder von Dadafon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dadafon> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Dag Nasty?", "Gib mir die Mitglieder von Dag Nasty?", "Welche Person ist das Mitglied von Dag Nasty?", "Welche Person war das Mitglied von Dag Nasty?", "Welche Persons sind die Mitglieder von Dag Nasty?", "Welche Persons waren die Mitglieder von Dag Nasty?", "Wer ist das Mitglied von Dag Nasty?", "Wer sind die Mitglieder von Dag Nasty?", "Wer war das Mitglied von Dag Nasty?", "Wer waren die Mitglieder von Dag Nasty?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dag_Nasty> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Dallas Wind Symphony?", "Gib mir die Mitglieder von Dallas Wind Symphony?", "Welche Person ist das Mitglied von Dallas Wind Symphony?", "Welche Person war das Mitglied von Dallas Wind Symphony?", "Welche Persons sind die Mitglieder von Dallas Wind Symphony?", "Welche Persons waren die Mitglieder von Dallas Wind Symphony?", "Wer ist das Mitglied von Dallas Wind Symphony?", "Wer sind die Mitglieder von Dallas Wind Symphony?", "Wer war das Mitglied von Dallas Wind Symphony?", "Wer waren die Mitglieder von Dallas Wind Symphony?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dallas_Winds> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Poisonblack?", "Gib mir die Mitglieder von Poisonblack?", "Welche Person ist das Mitglied von Poisonblack?", "Welche Person war das Mitglied von Poisonblack?", "Welche Persons sind die Mitglieder von Poisonblack?", "Welche Persons waren die Mitglieder von Poisonblack?", "Wer ist das Mitglied von Poisonblack?", "Wer sind die Mitglieder von Poisonblack?", "Wer war das Mitglied von Poisonblack?", "Wer waren die Mitglieder von Poisonblack?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Poisonblack> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Rainbow (Band)?", "Gib mir die Mitglieder von Rainbow (Band)?", "Welche Person ist das Mitglied von Rainbow (Band)?", "Welche Person war das Mitglied von Rainbow (Band)?", "Welche Persons sind die Mitglieder von Rainbow (Band)?", "Welche Persons waren die Mitglieder von Rainbow (Band)?", "Wer ist das Mitglied von Rainbow (Band)?", "Wer sind die Mitglieder von Rainbow (Band)?", "Wer war das Mitglied von Rainbow (Band)?", "Wer waren die Mitglieder von Rainbow (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Rainbow_(rock_band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Republica?", "Gib mir die Mitglieder von Republica?", "Welche Person ist das Mitglied von Republica?", "Welche Person war das Mitglied von Republica?", "Welche Persons sind die Mitglieder von Republica?", "Welche Persons waren die Mitglieder von Republica?", "Wer ist das Mitglied von Republica?", "Wer sind die Mitglieder von Republica?", "Wer war das Mitglied von Republica?", "Wer waren die Mitglieder von Republica?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Republica> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Satyricon (Band)?", "Gib mir die Mitglieder von Satyricon (Band)?", "Welche Person ist das Mitglied von Satyricon (Band)?", "Welche Person war das Mitglied von Satyricon (Band)?", "Welche Persons sind die Mitglieder von Satyricon (Band)?", "Welche Persons waren die Mitglieder von Satyricon (Band)?", "Wer ist das Mitglied von Satyricon (Band)?", "Wer sind die Mitglieder von Satyricon (Band)?", "Wer war das Mitglied von Satyricon (Band)?", "Wer waren die Mitglieder von Satyricon (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Satyricon_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Serenity (österreichische Band)?", "Gib mir die Mitglieder von Serenity (österreichische Band)?", "Welche Person ist das Mitglied von Serenity (österreichische Band)?", "Welche Person war das Mitglied von Serenity (österreichische Band)?", "Welche Persons sind die Mitglieder von Serenity (österreichische Band)?", "Welche Persons waren die Mitglieder von Serenity (österreichische Band)?", "Wer ist das Mitglied von Serenity (österreichische Band)?", "Wer sind die Mitglieder von Serenity (österreichische Band)?", "Wer war das Mitglied von Serenity (österreichische Band)?", "Wer waren die Mitglieder von Serenity (österreichische Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Serenity_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Serenity (britische Band)?", "Gib mir die Mitglieder von Serenity (britische Band)?", "Welche Person ist das Mitglied von Serenity (britische Band)?", "Welche Person war das Mitglied von Serenity (britische Band)?", "Welche Persons sind die Mitglieder von Serenity (britische Band)?", "Welche Persons waren die Mitglieder von Serenity (britische Band)?", "Wer ist das Mitglied von Serenity (britische Band)?", "Wer sind die Mitglieder von Serenity (britische Band)?", "Wer war das Mitglied von Serenity (britische Band)?", "Wer waren die Mitglieder von Serenity (britische Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Serenity_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Sigur Rós?", "Gib mir die Mitglieder von Sigur Rós?", "Welche Person ist das Mitglied von Sigur Rós?", "Welche Person war das Mitglied von Sigur Rós?", "Welche Persons sind die Mitglieder von Sigur Rós?", "Welche Persons waren die Mitglieder von Sigur Rós?", "Wer ist das Mitglied von Sigur Rós?", "Wer sind die Mitglieder von Sigur Rós?", "Wer war das Mitglied von Sigur Rós?", "Wer waren die Mitglieder von Sigur Rós?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Sigur_Rós> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Stray Cats?", "Gib mir die Mitglieder von Stray Cats?", "Welche Person ist das Mitglied von Stray Cats?", "Welche Person war das Mitglied von Stray Cats?", "Welche Persons sind die Mitglieder von Stray Cats?", "Welche Persons waren die Mitglieder von Stray Cats?", "Wer ist das Mitglied von Stray Cats?", "Wer sind die Mitglieder von Stray Cats?", "Wer war das Mitglied von Stray Cats?", "Wer waren die Mitglieder von Stray Cats?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Stray_Cats> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Stream of Passion?", "Gib mir die Mitglieder von Stream of Passion?", "Welche Person ist das Mitglied von Stream of Passion?", "Welche Person war das Mitglied von Stream of Passion?", "Welche Persons sind die Mitglieder von Stream of Passion?", "Welche Persons waren die Mitglieder von Stream of Passion?", "Wer ist das Mitglied von Stream of Passion?", "Wer sind die Mitglieder von Stream of Passion?", "Wer war das Mitglied von Stream of Passion?", "Wer waren die Mitglieder von Stream of Passion?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Stream_of_Passion> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Super Furry Animals?", "Gib mir die Mitglieder von Super Furry Animals?", "Welche Person ist das Mitglied von Super Furry Animals?", "Welche Person war das Mitglied von Super Furry Animals?", "Welche Persons sind die Mitglieder von Super Furry Animals?", "Welche Persons waren die Mitglieder von Super Furry Animals?", "Wer ist das Mitglied von Super Furry Animals?", "Wer sind die Mitglieder von Super Furry Animals?", "Wer war das Mitglied von Super Furry Animals?", "Wer waren die Mitglieder von Super Furry Animals?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Super_Furry_Animals> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Teräsbetoni?", "Gib mir die Mitglieder von Teräsbetoni?", "Welche Person ist das Mitglied von Teräsbetoni?", "Welche Person war das Mitglied von Teräsbetoni?", "Welche Persons sind die Mitglieder von Teräsbetoni?", "Welche Persons waren die Mitglieder von Teräsbetoni?", "Wer ist das Mitglied von Teräsbetoni?", "Wer sind die Mitglieder von Teräsbetoni?", "Wer war das Mitglied von Teräsbetoni?", "Wer waren die Mitglieder von Teräsbetoni?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Teräsbetoni> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von The Juan MacLean?", "Gib mir die Mitglieder von The Juan MacLean?", "Welche Person ist das Mitglied von The Juan MacLean?", "Welche Person war das Mitglied von The Juan MacLean?", "Welche Persons sind die Mitglieder von The Juan MacLean?", "Welche Persons waren die Mitglieder von The Juan MacLean?", "Wer ist das Mitglied von The Juan MacLean?", "Wer sind die Mitglieder von The Juan MacLean?", "Wer war das Mitglied von The Juan MacLean?", "Wer waren die Mitglieder von The Juan MacLean?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Juan_MacLean> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von The Monochrome Set?", "Gib mir die Mitglieder von The Monochrome Set?", "Welche Person ist das Mitglied von The Monochrome Set?", "Welche Person war das Mitglied von The Monochrome Set?", "Welche Persons sind die Mitglieder von The Monochrome Set?", "Welche Persons waren die Mitglieder von The Monochrome Set?", "Wer ist das Mitglied von The Monochrome Set?", "Wer sind die Mitglieder von The Monochrome Set?", "Wer war das Mitglied von The Monochrome Set?", "Wer waren die Mitglieder von The Monochrome Set?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Monochrome_Set> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von The Veronicas?", "Gib mir die Mitglieder von The Veronicas?", "Welche Person ist das Mitglied von The Veronicas?", "Welche Person war das Mitglied von The Veronicas?", "Welche Persons sind die Mitglieder von The Veronicas?", "Welche Persons waren die Mitglieder von The Veronicas?", "Wer ist das Mitglied von The Veronicas?", "Wer sind die Mitglieder von The Veronicas?", "Wer war das Mitglied von The Veronicas?", "Wer waren die Mitglieder von The Veronicas?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Veronicas> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Tocotronic?", "Gib mir die Mitglieder von Tocotronic?", "Welche Person ist das Mitglied von Tocotronic?", "Welche Person war das Mitglied von Tocotronic?", "Welche Persons sind die Mitglieder von Tocotronic?", "Welche Persons waren die Mitglieder von Tocotronic?", "Wer ist das Mitglied von Tocotronic?", "Wer sind die Mitglieder von Tocotronic?", "Wer war das Mitglied von Tocotronic?", "Wer waren die Mitglieder von Tocotronic?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Tocotronic> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Trouble (Band)?", "Gib mir die Mitglieder von Trouble (Band)?", "Welche Person ist das Mitglied von Trouble (Band)?", "Welche Person war das Mitglied von Trouble (Band)?", "Welche Persons sind die Mitglieder von Trouble (Band)?", "Welche Persons waren die Mitglieder von Trouble (Band)?", "Wer ist das Mitglied von Trouble (Band)?", "Wer sind die Mitglieder von Trouble (Band)?", "Wer war das Mitglied von Trouble (Band)?", "Wer waren die Mitglieder von Trouble (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Trouble_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir das Mitglied von Týr?", "Gib mir die Mitglieder von Týr?", "Welche Person ist das Mitglied von Týr?", "Welche Person war das Mitglied von Týr?", "Welche Persons sind die Mitglieder von Týr?", "Welche Persons waren die Mitglieder von Týr?", "Wer ist das Mitglied von Týr?", "Wer sind die Mitglieder von Týr?", "Wer war das Mitglied von Týr?", "Wer waren die Mitglieder von Týr?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Týr_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Italien 1921?", "Was ist der Standort von Großer Preis von Italien 1921?", "Was war der Standort von Großer Preis von Italien 1921?", "Welcher Ort ist der Standort von Großer Preis von Italien 1921?", "Welcher Ort war der Standort von Großer Preis von Italien 1921?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1921_Italian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Frankreich 1922?", "Was ist der Standort von Großer Preis von Frankreich 1922?", "Was war der Standort von Großer Preis von Frankreich 1922?", "Welcher Ort ist der Standort von Großer Preis von Frankreich 1922?", "Welcher Ort war der Standort von Großer Preis von Frankreich 1922?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1922_French_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Italien 1922?", "Was ist der Standort von Großer Preis von Italien 1922?", "Was war der Standort von Großer Preis von Italien 1922?", "Welcher Ort ist der Standort von Großer Preis von Italien 1922?", "Welcher Ort war der Standort von Großer Preis von Italien 1922?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1922_Italian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Frankreich 1923?", "Was ist der Standort von Großer Preis von Frankreich 1923?", "Was war der Standort von Großer Preis von Frankreich 1923?", "Welcher Ort ist der Standort von Großer Preis von Frankreich 1923?", "Welcher Ort war der Standort von Großer Preis von Frankreich 1923?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1923_French_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Italien 1923?", "Was ist der Standort von Großer Preis von Italien 1923?", "Was war der Standort von Großer Preis von Italien 1923?", "Welcher Ort ist der Standort von Großer Preis von Italien 1923?", "Welcher Ort war der Standort von Großer Preis von Italien 1923?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1923_Italian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Museum Hürtgenwald 1944?", "Was ist der Standort von Museum Hürtgenwald 1944?", "Was war der Standort von Museum Hürtgenwald 1944?", "Welcher Ort ist der Standort von Museum Hürtgenwald 1944?", "Welcher Ort war der Standort von Museum Hürtgenwald 1944?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1944_Hürtgen_Forest_Museum> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Italien 1947?", "Was ist der Standort von Großer Preis von Italien 1947?", "Was war der Standort von Großer Preis von Italien 1947?", "Welcher Ort ist der Standort von Großer Preis von Italien 1947?", "Welcher Ort war der Standort von Großer Preis von Italien 1947?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1947_Italian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Italien 1948?", "Was ist der Standort von Großer Preis von Italien 1948?", "Was war der Standort von Großer Preis von Italien 1948?", "Welcher Ort ist der Standort von Großer Preis von Italien 1948?", "Welcher Ort war der Standort von Großer Preis von Italien 1948?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1948_Italian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Italien 1949?", "Was ist der Standort von Großer Preis von Italien 1949?", "Was war der Standort von Großer Preis von Italien 1949?", "Welcher Ort ist der Standort von Großer Preis von Italien 1949?", "Welcher Ort war der Standort von Großer Preis von Italien 1949?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1949_Italian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BB&T Atlanta Open 2013?", "Was ist der Standort von BB&T Atlanta Open 2013?", "Was war der Standort von BB&T Atlanta Open 2013?", "Welcher Ort ist der Standort von BB&T Atlanta Open 2013?", "Welcher Ort war der Standort von BB&T Atlanta Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BB&T_Atlanta_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BGL BNP Paribas Luxembourg Open 2013?", "Was ist der Standort von BGL BNP Paribas Luxembourg Open 2013?", "Was war der Standort von BGL BNP Paribas Luxembourg Open 2013?", "Welcher Ort ist der Standort von BGL BNP Paribas Luxembourg Open 2013?", "Welcher Ort war der Standort von BGL BNP Paribas Luxembourg Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BGL_Luxembourg_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BH Telecom Indoors 2013?", "Was ist der Standort von BH Telecom Indoors 2013?", "Was war der Standort von BH Telecom Indoors 2013?", "Welcher Ort ist der Standort von BH Telecom Indoors 2013?", "Welcher Ort war der Standort von BH Telecom Indoors 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BH_Telecom_Indoors> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BMW Open 2013?", "Was ist der Standort von BMW Open 2013?", "Was war der Standort von BMW Open 2013?", "Welcher Ort ist der Standort von BMW Open 2013?", "Welcher Ort war der Standort von BMW Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BMW_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BNP Paribas Katowice Open 2013?", "Was ist der Standort von BNP Paribas Katowice Open 2013?", "Was war der Standort von BNP Paribas Katowice Open 2013?", "Welcher Ort ist der Standort von BNP Paribas Katowice Open 2013?", "Welcher Ort war der Standort von BNP Paribas Katowice Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BNP_Paribas_Katowice_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BNP Paribas Masters 2013?", "Was ist der Standort von BNP Paribas Masters 2013?", "Was war der Standort von BNP Paribas Masters 2013?", "Welcher Ort ist der Standort von BNP Paribas Masters 2013?", "Welcher Ort war der Standort von BNP Paribas Masters 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BNP_Paribas_Masters> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BNP Paribas Open 2013?", "Was ist der Standort von BNP Paribas Open 2013?", "Was war der Standort von BNP Paribas Open 2013?", "Welcher Ort ist der Standort von BNP Paribas Open 2013?", "Welcher Ort war der Standort von BNP Paribas Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BNP_Paribas_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BNP Paribas Primrose Bordeaux 2013?", "Was ist der Standort von BNP Paribas Primrose Bordeaux 2013?", "Was war der Standort von BNP Paribas Primrose Bordeaux 2013?", "Welcher Ort ist der Standort von BNP Paribas Primrose Bordeaux 2013?", "Welcher Ort war der Standort von BNP Paribas Primrose Bordeaux 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BNP_Paribas_Primrose_Bordeaux> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BRD Arad Challenger 2013?", "Was ist der Standort von BRD Arad Challenger 2013?", "Was war der Standort von BRD Arad Challenger 2013?", "Welcher Ort ist der Standort von BRD Arad Challenger 2013?", "Welcher Ort war der Standort von BRD Arad Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BRD_Arad_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BRD Brașov Challenger 2013?", "Was ist der Standort von BRD Brașov Challenger 2013?", "Was war der Standort von BRD Brașov Challenger 2013?", "Welcher Ort ist der Standort von BRD Brașov Challenger 2013?", "Welcher Ort war der Standort von BRD Brașov Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BRD_Brașov_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BRD Năstase Țiriac Trophy 2013?", "Was ist der Standort von BRD Năstase Țiriac Trophy 2013?", "Was war der Standort von BRD Năstase Țiriac Trophy 2013?", "Welcher Ort ist der Standort von BRD Năstase Țiriac Trophy 2013?", "Welcher Ort war der Standort von BRD Năstase Țiriac Trophy 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BRD_Năstase_Țiriac_Trophy> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BRD Timișoara Challenger 2013?", "Was ist der Standort von BRD Timișoara Challenger 2013?", "Was war der Standort von BRD Timișoara Challenger 2013?", "Welcher Ort ist der Standort von BRD Timișoara Challenger 2013?", "Welcher Ort war der Standort von BRD Timișoara Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BRD_Timișoara_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Bahrain 2013?", "Was ist der Standort von Großer Preis von Bahrain 2013?", "Was war der Standort von Großer Preis von Bahrain 2013?", "Welcher Ort ist der Standort von Großer Preis von Bahrain 2013?", "Welcher Ort war der Standort von Großer Preis von Bahrain 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Bahrain_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Baku Cup 2013?", "Was ist der Standort von Baku Cup 2013?", "Was war der Standort von Baku Cup 2013?", "Welcher Ort ist der Standort von Baku Cup 2013?", "Welcher Ort war der Standort von Baku Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Baku_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Banja Luka Challenger 2013?", "Was ist der Standort von Banja Luka Challenger 2013?", "Was war der Standort von Banja Luka Challenger 2013?", "Welcher Ort ist der Standort von Banja Luka Challenger 2013?", "Welcher Ort war der Standort von Banja Luka Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Banja_Luka_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Bank of the West Classic 2013?", "Was ist der Standort von Bank of the West Classic 2013?", "Was war der Standort von Bank of the West Classic 2013?", "Welcher Ort ist der Standort von Bank of the West Classic 2013?", "Welcher Ort war der Standort von Bank of the West Classic 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Bank_of_the_West_Classic> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Barcelona Open Banc Sabadell 2013?", "Was ist der Standort von Barcelona Open Banc Sabadell 2013?", "Was war der Standort von Barcelona Open Banc Sabadell 2013?", "Welcher Ort ist der Standort von Barcelona Open Banc Sabadell 2013?", "Welcher Ort war der Standort von Barcelona Open Banc Sabadell 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Barcelona_Open_Banco_Sabadell> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Bauer Watertechnology Cup 2013?", "Was ist der Standort von Bauer Watertechnology Cup 2013?", "Was war der Standort von Bauer Watertechnology Cup 2013?", "Welcher Ort ist der Standort von Bauer Watertechnology Cup 2013?", "Welcher Ort war der Standort von Bauer Watertechnology Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Bauer_Watertechnology_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Beijing International Challenger 2013?", "Was ist der Standort von Beijing International Challenger 2013?", "Was war der Standort von Beijing International Challenger 2013?", "Welcher Ort ist der Standort von Beijing International Challenger 2013?", "Welcher Ort war der Standort von Beijing International Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Beijing_International_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Belgien 2013?", "Was ist der Standort von Großer Preis von Belgien 2013?", "Was war der Standort von Großer Preis von Belgien 2013?", "Welcher Ort ist der Standort von Großer Preis von Belgien 2013?", "Welcher Ort war der Standort von Großer Preis von Belgien 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Belgian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Bet-at-home Cup Kitzbühel 2013?", "Was ist der Standort von Bet-at-home Cup Kitzbühel 2013?", "Was war der Standort von Bet-at-home Cup Kitzbühel 2013?", "Welcher Ort ist der Standort von Bet-at-home Cup Kitzbühel 2013?", "Welcher Ort war der Standort von Bet-at-home Cup Kitzbühel 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Bet-at-home_Cup_Kitzbühel> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Brasil Tennis Cup 2013?", "Was ist der Standort von Brasil Tennis Cup 2013?", "Was war der Standort von Brasil Tennis Cup 2013?", "Welcher Ort ist der Standort von Brasil Tennis Cup 2013?", "Welcher Ort war der Standort von Brasil Tennis Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Brasil_Tennis_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Brasilien 2013?", "Was ist der Standort von Großer Preis von Brasilien 2013?", "Was war der Standort von Großer Preis von Brasilien 2013?", "Welcher Ort ist der Standort von Großer Preis von Brasilien 2013?", "Welcher Ort war der Standort von Großer Preis von Brasilien 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Brazilian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Brisbane International 2013?", "Was ist der Standort von Brisbane International 2013?", "Was war der Standort von Brisbane International 2013?", "Welcher Ort ist der Standort von Brisbane International 2013?", "Welcher Ort war der Standort von Brisbane International 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Brisbane_International> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Großbritannien 2013?", "Was ist der Standort von Großer Preis von Großbritannien 2013?", "Was war der Standort von Großer Preis von Großbritannien 2013?", "Welcher Ort ist der Standort von Großer Preis von Großbritannien 2013?", "Welcher Ort war der Standort von Großer Preis von Großbritannien 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_British_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Brussels Open 2013?", "Was ist der Standort von Brussels Open 2013?", "Was war der Standort von Brussels Open 2013?", "Welcher Ort ist der Standort von Brussels Open 2013?", "Welcher Ort war der Standort von Brussels Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Brussels_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Budapest Grand Prix 2013?", "Was ist der Standort von Budapest Grand Prix 2013?", "Was war der Standort von Budapest Grand Prix 2013?", "Welcher Ort ist der Standort von Budapest Grand Prix 2013?", "Welcher Ort war der Standort von Budapest Grand Prix 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Budapest_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Busan Open Challenger Tennis 2013?", "Was ist der Standort von Busan Open Challenger Tennis 2013?", "Was war der Standort von Busan Open Challenger Tennis 2013?", "Welcher Ort ist der Standort von Busan Open Challenger Tennis 2013?", "Welcher Ort war der Standort von Busan Open Challenger Tennis 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Busan_Open_Challenger_Tennis> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Campeonato Internacional de Tênis de Santos 2013?", "Was ist der Standort von Campeonato Internacional de Tênis de Santos 2013?", "Was war der Standort von Campeonato Internacional de Tênis de Santos 2013?", "Welcher Ort ist der Standort von Campeonato Internacional de Tênis de Santos 2013?", "Welcher Ort war der Standort von Campeonato Internacional de Tênis de Santos 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Campeonato_Internacional_de_Tenis_de_Santos> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Kanada 2013?", "Was ist der Standort von Großer Preis von Kanada 2013?", "Was war der Standort von Großer Preis von Kanada 2013?", "Welcher Ort ist der Standort von Großer Preis von Kanada 2013?", "Welcher Ort war der Standort von Großer Preis von Kanada 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Canadian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Challenge Bell 2013?", "Was ist der Standort von Challenge Bell 2013?", "Was war der Standort von Challenge Bell 2013?", "Welcher Ort ist der Standort von Challenge Bell 2013?", "Welcher Ort war der Standort von Challenge Bell 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Challenge_Bell> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Challenger Banque Nationale Granby 2013?", "Was ist der Standort von Challenger Banque Nationale Granby 2013?", "Was war der Standort von Challenger Banque Nationale Granby 2013?", "Welcher Ort ist der Standort von Challenger Banque Nationale Granby 2013?", "Welcher Ort war der Standort von Challenger Banque Nationale Granby 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Challenger_Banque_Nationale_de_Granby> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Challenger Banque Nationale 2013?", "Was ist der Standort von Challenger Banque Nationale 2013?", "Was war der Standort von Challenger Banque Nationale 2013?", "Welcher Ort ist der Standort von Challenger Banque Nationale 2013?", "Welcher Ort war der Standort von Challenger Banque Nationale 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Challenger_Banque_Nationale_de_Rimouski> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Challenger Ciudad de Guayaquil 2013?", "Was ist der Standort von Challenger Ciudad de Guayaquil 2013?", "Was war der Standort von Challenger Ciudad de Guayaquil 2013?", "Welcher Ort ist der Standort von Challenger Ciudad de Guayaquil 2013?", "Welcher Ort war der Standort von Challenger Ciudad de Guayaquil 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Challenger_Ciudad_de_Guayaquil> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Challenger La Manche 2013?", "Was ist der Standort von Challenger La Manche 2013?", "Was war der Standort von Challenger La Manche 2013?", "Welcher Ort ist der Standort von Challenger La Manche 2013?", "Welcher Ort war der Standort von Challenger La Manche 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Challenger_La_Manche> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Challenger of Dallas 2013?", "Was ist der Standort von Challenger of Dallas 2013?", "Was war der Standort von Challenger of Dallas 2013?", "Welcher Ort ist der Standort von Challenger of Dallas 2013?", "Welcher Ort war der Standort von Challenger of Dallas 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Challenger_of_Dallas> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Chang-Sat Bangkok Open 2013?", "Was ist der Standort von Chang-Sat Bangkok Open 2013?", "Was war der Standort von Chang-Sat Bangkok Open 2013?", "Welcher Ort ist der Standort von Chang-Sat Bangkok Open 2013?", "Welcher Ort war der Standort von Chang-Sat Bangkok Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Chang-Sat_Bangkok_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Charles Sturt Adelaide International 2013?", "Was ist der Standort von Charles Sturt Adelaide International 2013?", "Was war der Standort von Charles Sturt Adelaide International 2013?", "Welcher Ort ist der Standort von Charles Sturt Adelaide International 2013?", "Welcher Ort war der Standort von Charles Sturt Adelaide International 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Charles_Sturt_Adelaide_International> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Charlottesville Men’s Pro Challenger 2013?", "Was ist der Standort von Charlottesville Men’s Pro Challenger 2013?", "Was war der Standort von Charlottesville Men’s Pro Challenger 2013?", "Welcher Ort ist der Standort von Charlottesville Men’s Pro Challenger 2013?", "Welcher Ort war der Standort von Charlottesville Men’s Pro Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Charlottesville_Men's_Pro_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von China Open 2013 (Tennis)?", "Was ist der Standort von China Open 2013 (Tennis)?", "Was war der Standort von China Open 2013 (Tennis)?", "Welcher Ort ist der Standort von China Open 2013 (Tennis)?", "Welcher Ort war der Standort von China Open 2013 (Tennis)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_China_Open_(tennis)> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von China 2013?", "Was ist der Standort von Großer Preis von China 2013?", "Was war der Standort von Großer Preis von China 2013?", "Welcher Ort ist der Standort von Großer Preis von China 2013?", "Welcher Ort war der Standort von Großer Preis von China 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Chinese_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Citi Open 2013?", "Was ist der Standort von Citi Open 2013?", "Was war der Standort von Citi Open 2013?", "Welcher Ort ist der Standort von Citi Open 2013?", "Welcher Ort war der Standort von Citi Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Citi_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Carta Bcc Città di Caltanissetta 2013?", "Was ist der Standort von Carta Bcc Città di Caltanissetta 2013?", "Was war der Standort von Carta Bcc Città di Caltanissetta 2013?", "Welcher Ort ist der Standort von Carta Bcc Città di Caltanissetta 2013?", "Welcher Ort war der Standort von Carta Bcc Città di Caltanissetta 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Città_di_Caltanissetta> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Città di Como 2013?", "Was ist der Standort von Città di Como 2013?", "Was war der Standort von Città di Como 2013?", "Welcher Ort ist der Standort von Città di Como 2013?", "Welcher Ort war der Standort von Città di Como 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Città_di_Como_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Claro Open Colombia 2013?", "Was ist der Standort von Claro Open Colombia 2013?", "Was war der Standort von Claro Open Colombia 2013?", "Welcher Ort ist der Standort von Claro Open Colombia 2013?", "Welcher Ort war der Standort von Claro Open Colombia 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Claro_Open_Colombia> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Coleman Vision Tennis Championships 2013?", "Was ist der Standort von Coleman Vision Tennis Championships 2013?", "Was war der Standort von Coleman Vision Tennis Championships 2013?", "Welcher Ort ist der Standort von Coleman Vision Tennis Championships 2013?", "Welcher Ort war der Standort von Coleman Vision Tennis Championships 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Coleman_Vision_Tennis_Championships> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Comerica Bank Challenger 2013?", "Was ist der Standort von Comerica Bank Challenger 2013?", "Was war der Standort von Comerica Bank Challenger 2013?", "Welcher Ort ist der Standort von Comerica Bank Challenger 2013?", "Welcher Ort war der Standort von Comerica Bank Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Comerica_Bank_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Copa Bionaire 2013?", "Was ist der Standort von Copa Bionaire 2013?", "Was war der Standort von Copa Bionaire 2013?", "Welcher Ort ist der Standort von Copa Bionaire 2013?", "Welcher Ort war der Standort von Copa Bionaire 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Copa_Bionaire> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Copa Claro 2013?", "Was ist der Standort von Copa Claro 2013?", "Was war der Standort von Copa Claro 2013?", "Welcher Ort ist der Standort von Copa Claro 2013?", "Welcher Ort war der Standort von Copa Claro 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Copa_Claro> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von XXI Copa Claro Colsanitas 2013?", "Was ist der Standort von XXI Copa Claro Colsanitas 2013?", "Was war der Standort von XXI Copa Claro Colsanitas 2013?", "Welcher Ort ist der Standort von XXI Copa Claro Colsanitas 2013?", "Welcher Ort war der Standort von XXI Copa Claro Colsanitas 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Copa_Colsanitas> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Copa Internacional de Tenis Total Digest 2013?", "Was ist der Standort von Copa Internacional de Tenis Total Digest 2013?", "Was war der Standort von Copa Internacional de Tenis Total Digest 2013?", "Welcher Ort ist der Standort von Copa Internacional de Tenis Total Digest 2013?", "Welcher Ort war der Standort von Copa Internacional de Tenis Total Digest 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Copa_Internacional_de_Tenis_Total_Digest> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Copa San Juan Gobierno 2013?", "Was ist der Standort von Copa San Juan Gobierno 2013?", "Was war der Standort von Copa San Juan Gobierno 2013?", "Welcher Ort ist der Standort von Copa San Juan Gobierno 2013?", "Welcher Ort war der Standort von Copa San Juan Gobierno 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Copa_San_Juan_Gobierno> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Copa Sevilla 2013?", "Was ist der Standort von Copa Sevilla 2013?", "Was war der Standort von Copa Sevilla 2013?", "Welcher Ort ist der Standort von Copa Sevilla 2013?", "Welcher Ort war der Standort von Copa Sevilla 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Copa_Sevilla> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Copa Topper 2013?", "Was ist der Standort von Copa Topper 2013?", "Was war der Standort von Copa Topper 2013?", "Welcher Ort ist der Standort von Copa Topper 2013?", "Welcher Ort war der Standort von Copa Topper 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Copa_Topper> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Friuladria Crédit Agricole Tennis Cup 2013?", "Was ist der Standort von Friuladria Crédit Agricole Tennis Cup 2013?", "Was war der Standort von Friuladria Crédit Agricole Tennis Cup 2013?", "Welcher Ort ist der Standort von Friuladria Crédit Agricole Tennis Cup 2013?", "Welcher Ort war der Standort von Friuladria Crédit Agricole Tennis Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Credit_Agricole_Friuladria_Tennis_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Crédit Agricole Suisse Open Gstaad 2013?", "Was ist der Standort von Crédit Agricole Suisse Open Gstaad 2013?", "Was war der Standort von Crédit Agricole Suisse Open Gstaad 2013?", "Welcher Ort ist der Standort von Crédit Agricole Suisse Open Gstaad 2013?", "Welcher Ort war der Standort von Crédit Agricole Suisse Open Gstaad 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Crédit_Agricole_Suisse_Open_Gstaad> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Dallas Tennis Classic 2013?", "Was ist der Standort von Dallas Tennis Classic 2013?", "Was war der Standort von Dallas Tennis Classic 2013?", "Welcher Ort ist der Standort von Dallas Tennis Classic 2013?", "Welcher Ort war der Standort von Dallas Tennis Classic 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Dallas_Tennis_Classic> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Delray Beach International Tennis Championships 2013?", "Was ist der Standort von Delray Beach International Tennis Championships 2013?", "Was war der Standort von Delray Beach International Tennis Championships 2013?", "Welcher Ort ist der Standort von Delray Beach International Tennis Championships 2013?", "Welcher Ort war der Standort von Delray Beach International Tennis Championships 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Delray_Beach_International_Tennis_Championships> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Distalnet Tennis Cup 2013?", "Was ist der Standort von Distalnet Tennis Cup 2013?", "Was war der Standort von Distalnet Tennis Cup 2013?", "Welcher Ort ist der Standort von Distalnet Tennis Cup 2013?", "Welcher Ort war der Standort von Distalnet Tennis Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Distalnet_Tennis_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Dubai Duty Free Tennis Championships 2013?", "Was ist der Standort von Dubai Duty Free Tennis Championships 2013?", "Was war der Standort von Dubai Duty Free Tennis Championships 2013?", "Welcher Ort ist der Standort von Dubai Duty Free Tennis Championships 2013?", "Welcher Ort war der Standort von Dubai Duty Free Tennis Championships 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Dubai_Tennis_Championships> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Dunlop World Challenge Tennis Tournament 2013?", "Was ist der Standort von Dunlop World Challenge Tennis Tournament 2013?", "Was war der Standort von Dunlop World Challenge Tennis Tournament 2013?", "Welcher Ort ist der Standort von Dunlop World Challenge Tennis Tournament 2013?", "Welcher Ort war der Standort von Dunlop World Challenge Tennis Tournament 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Dunlop_World_Challenge> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Empire Slovak Open 2013?", "Was ist der Standort von Empire Slovak Open 2013?", "Was war der Standort von Empire Slovak Open 2013?", "Welcher Ort ist der Standort von Empire Slovak Open 2013?", "Welcher Ort war der Standort von Empire Slovak Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Empire_Slovak_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Erste Bank Open 2013?", "Was ist der Standort von Erste Bank Open 2013?", "Was war der Standort von Erste Bank Open 2013?", "Welcher Ort ist der Standort von Erste Bank Open 2013?", "Welcher Ort war der Standort von Erste Bank Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Erste_Bank_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Eskişehir Cup 2013?", "Was ist der Standort von Eskişehir Cup 2013?", "Was war der Standort von Eskişehir Cup 2013?", "Welcher Ort ist der Standort von Eskişehir Cup 2013?", "Welcher Ort war der Standort von Eskişehir Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Eskişehir_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Ethias Trophy 2013?", "Was ist der Standort von Ethias Trophy 2013?", "Was war der Standort von Ethias Trophy 2013?", "Welcher Ort ist der Standort von Ethias Trophy 2013?", "Welcher Ort war der Standort von Ethias Trophy 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Ethias_Trophy> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Tischtennis-Europameisterschaft 2013?", "Was ist der Standort von Tischtennis-Europameisterschaft 2013?", "Was war der Standort von Tischtennis-Europameisterschaft 2013?", "Welcher Ort ist der Standort von Tischtennis-Europameisterschaft 2013?", "Welcher Ort war der Standort von Tischtennis-Europameisterschaft 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_European_Table_Tennis_Championships> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Family Circle Cup 2013?", "Was ist der Standort von Family Circle Cup 2013?", "Was war der Standort von Family Circle Cup 2013?", "Welcher Ort ist der Standort von Family Circle Cup 2013?", "Welcher Ort war der Standort von Family Circle Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Family_Circle_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Fergana Challenger 2013?", "Was ist der Standort von Fergana Challenger 2013?", "Was war der Standort von Fergana Challenger 2013?", "Welcher Ort ist der Standort von Fergana Challenger 2013?", "Welcher Ort war der Standort von Fergana Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Fergana_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Fifth Third Bank Tennis Championships 2013?", "Was ist der Standort von Fifth Third Bank Tennis Championships 2013?", "Was war der Standort von Fifth Third Bank Tennis Championships 2013?", "Welcher Ort ist der Standort von Fifth Third Bank Tennis Championships 2013?", "Welcher Ort war der Standort von Fifth Third Bank Tennis Championships 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Fifth_Third_Bank_Tennis_Championships> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Franken Challenge 2013?", "Was ist der Standort von Franken Challenge 2013?", "Was war der Standort von Franken Challenge 2013?", "Welcher Ort ist der Standort von Franken Challenge 2013?", "Welcher Ort war der Standort von Franken Challenge 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Franken_Challenge> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von French Open 2013?", "Was ist der Standort von French Open 2013?", "Was war der Standort von French Open 2013?", "Welcher Ort ist der Standort von French Open 2013?", "Welcher Ort war der Standort von French Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_French_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Garanti Koza Tournament of Champions 2013?", "Was ist der Standort von Garanti Koza Tournament of Champions 2013?", "Was war der Standort von Garanti Koza Tournament of Champions 2013?", "Welcher Ort ist der Standort von Garanti Koza Tournament of Champions 2013?", "Welcher Ort war der Standort von Garanti Koza Tournament of Champions 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Garanti_Koza_WTA_Tournament_of_Champions> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Nürnberger Gastein Ladies 2013?", "Was ist der Standort von Nürnberger Gastein Ladies 2013?", "Was war der Standort von Nürnberger Gastein Ladies 2013?", "Welcher Ort ist der Standort von Nürnberger Gastein Ladies 2013?", "Welcher Ort war der Standort von Nürnberger Gastein Ladies 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Gastein_Ladies> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Generali Ladies Linz 2013?", "Was ist der Standort von Generali Ladies Linz 2013?", "Was war der Standort von Generali Ladies Linz 2013?", "Welcher Ort ist der Standort von Generali Ladies Linz 2013?", "Welcher Ort war der Standort von Generali Ladies Linz 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Generali_Ladies_Linz> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Geneva Open 2013?", "Was ist der Standort von Geneva Open 2013?", "Was war der Standort von Geneva Open 2013?", "Welcher Ort ist der Standort von Geneva Open 2013?", "Welcher Ort war der Standort von Geneva Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Geneva_Open_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Deutschland 2013?", "Was ist der Standort von Großer Preis von Deutschland 2013?", "Was war der Standort von Großer Preis von Deutschland 2013?", "Welcher Ort ist der Standort von Großer Preis von Deutschland 2013?", "Welcher Ort war der Standort von Großer Preis von Deutschland 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_German_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Grand Prix Hassan II 2013?", "Was ist der Standort von Grand Prix Hassan II 2013?", "Was war der Standort von Grand Prix Hassan II 2013?", "Welcher Ort ist der Standort von Grand Prix Hassan II 2013?", "Welcher Ort war der Standort von Grand Prix Hassan II 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Grand_Prix_Hassan_II> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Grand Prix SAR La Princesse Lalla Meryem 2013?", "Was ist der Standort von Grand Prix SAR La Princesse Lalla Meryem 2013?", "Was war der Standort von Grand Prix SAR La Princesse Lalla Meryem 2013?", "Welcher Ort ist der Standort von Grand Prix SAR La Princesse Lalla Meryem 2013?", "Welcher Ort war der Standort von Grand Prix SAR La Princesse Lalla Meryem 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Grand_Prix_SAR_La_Princesse_Lalla_Meryem> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Guangzhou Open 2013?", "Was ist der Standort von Guangzhou Open 2013?", "Was war der Standort von Guangzhou Open 2013?", "Welcher Ort ist der Standort von Guangzhou Open 2013?", "Welcher Ort war der Standort von Guangzhou Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Guangzhou_International_Women's_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Guimarães Open 2013?", "Was ist der Standort von Guimarães Open 2013?", "Was war der Standort von Guimarães Open 2013?", "Welcher Ort ist der Standort von Guimarães Open 2013?", "Welcher Ort war der Standort von Guimarães Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Guimarães_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Guzzini Challenger 2013?", "Was ist der Standort von Guzzini Challenger 2013?", "Was war der Standort von Guzzini Challenger 2013?", "Welcher Ort ist der Standort von Guzzini Challenger 2013?", "Welcher Ort war der Standort von Guzzini Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Guzzini_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von HP Japan Women’s Open Tennis 2013?", "Was ist der Standort von HP Japan Women’s Open Tennis 2013?", "Was war der Standort von HP Japan Women’s Open Tennis 2013?", "Welcher Ort ist der Standort von HP Japan Women’s Open Tennis 2013?", "Welcher Ort war der Standort von HP Japan Women’s Open Tennis 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_HP_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Hall of Fame Tennis Championships 2013?", "Was ist der Standort von Hall of Fame Tennis Championships 2013?", "Was war der Standort von Hall of Fame Tennis Championships 2013?", "Welcher Ort ist der Standort von Hall of Fame Tennis Championships 2013?", "Welcher Ort war der Standort von Hall of Fame Tennis Championships 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Hall_of_Fame_Tennis_Championships> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Heineken Open 2013?", "Was ist der Standort von Heineken Open 2013?", "Was war der Standort von Heineken Open 2013?", "Welcher Ort ist der Standort von Heineken Open 2013?", "Welcher Ort war der Standort von Heineken Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Heineken_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Hopman Cup 2013?", "Was ist der Standort von Hopman Cup 2013?", "Was war der Standort von Hopman Cup 2013?", "Welcher Ort ist der Standort von Hopman Cup 2013?", "Welcher Ort war der Standort von Hopman Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Hopman_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Ungarn 2013?", "Was ist der Standort von Großer Preis von Ungarn 2013?", "Was war der Standort von Großer Preis von Ungarn 2013?", "Welcher Ort ist der Standort von Großer Preis von Ungarn 2013?", "Welcher Ort war der Standort von Großer Preis von Ungarn 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Hungarian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von IPP Open 2013?", "Was ist der Standort von IPP Open 2013?", "Was war der Standort von IPP Open 2013?", "Welcher Ort ist der Standort von IPP Open 2013?", "Welcher Ort war der Standort von IPP Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_IPP_Open_and_the_Orto-Lääkärit_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von IS Open 2013?", "Was ist der Standort von IS Open 2013?", "Was war der Standort von IS Open 2013?", "Welcher Ort ist der Standort von IS Open 2013?", "Welcher Ort war der Standort von IS Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_IS_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von ITS Cup 2013?", "Was ist der Standort von ITS Cup 2013?", "Was war der Standort von ITS Cup 2013?", "Welcher Ort ist der Standort von ITS Cup 2013?", "Welcher Ort war der Standort von ITS Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_ITS_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von If Stockholm Open 2013?", "Was ist der Standort von If Stockholm Open 2013?", "Was war der Standort von If Stockholm Open 2013?", "Welcher Ort ist der Standort von If Stockholm Open 2013?", "Welcher Ort war der Standort von If Stockholm Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_If_Stockholm_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Indien 2013?", "Was ist der Standort von Großer Preis von Indien 2013?", "Was war der Standort von Großer Preis von Indien 2013?", "Welcher Ort ist der Standort von Großer Preis von Indien 2013?", "Welcher Ort war der Standort von Großer Preis von Indien 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Indian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Italien 1921?", "Was ist der Standort von Großer Preis von Italien 1921?", "Was war der Standort von Großer Preis von Italien 1921?", "Welcher Ort ist der Standort von Großer Preis von Italien 1921?", "Welcher Ort war der Standort von Großer Preis von Italien 1921?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1921_Italian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Frankreich 1922?", "Was ist der Standort von Großer Preis von Frankreich 1922?", "Was war der Standort von Großer Preis von Frankreich 1922?", "Welcher Ort ist der Standort von Großer Preis von Frankreich 1922?", "Welcher Ort war der Standort von Großer Preis von Frankreich 1922?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1922_French_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Italien 1922?", "Was ist der Standort von Großer Preis von Italien 1922?", "Was war der Standort von Großer Preis von Italien 1922?", "Welcher Ort ist der Standort von Großer Preis von Italien 1922?", "Welcher Ort war der Standort von Großer Preis von Italien 1922?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1922_Italian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Frankreich 1923?", "Was ist der Standort von Großer Preis von Frankreich 1923?", "Was war der Standort von Großer Preis von Frankreich 1923?", "Welcher Ort ist der Standort von Großer Preis von Frankreich 1923?", "Welcher Ort war der Standort von Großer Preis von Frankreich 1923?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1923_French_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Italien 1923?", "Was ist der Standort von Großer Preis von Italien 1923?", "Was war der Standort von Großer Preis von Italien 1923?", "Welcher Ort ist der Standort von Großer Preis von Italien 1923?", "Welcher Ort war der Standort von Großer Preis von Italien 1923?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1923_Italian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Museum Hürtgenwald 1944?", "Was ist der Standort von Museum Hürtgenwald 1944?", "Was war der Standort von Museum Hürtgenwald 1944?", "Welcher Ort ist der Standort von Museum Hürtgenwald 1944?", "Welcher Ort war der Standort von Museum Hürtgenwald 1944?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1944_Hürtgen_Forest_Museum> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Italien 1947?", "Was ist der Standort von Großer Preis von Italien 1947?", "Was war der Standort von Großer Preis von Italien 1947?", "Welcher Ort ist der Standort von Großer Preis von Italien 1947?", "Welcher Ort war der Standort von Großer Preis von Italien 1947?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1947_Italian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Italien 1948?", "Was ist der Standort von Großer Preis von Italien 1948?", "Was war der Standort von Großer Preis von Italien 1948?", "Welcher Ort ist der Standort von Großer Preis von Italien 1948?", "Welcher Ort war der Standort von Großer Preis von Italien 1948?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1948_Italian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Italien 1949?", "Was ist der Standort von Großer Preis von Italien 1949?", "Was war der Standort von Großer Preis von Italien 1949?", "Welcher Ort ist der Standort von Großer Preis von Italien 1949?", "Welcher Ort war der Standort von Großer Preis von Italien 1949?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1949_Italian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BB&T Atlanta Open 2013?", "Was ist der Standort von BB&T Atlanta Open 2013?", "Was war der Standort von BB&T Atlanta Open 2013?", "Welcher Ort ist der Standort von BB&T Atlanta Open 2013?", "Welcher Ort war der Standort von BB&T Atlanta Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BB&T_Atlanta_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BGL BNP Paribas Luxembourg Open 2013?", "Was ist der Standort von BGL BNP Paribas Luxembourg Open 2013?", "Was war der Standort von BGL BNP Paribas Luxembourg Open 2013?", "Welcher Ort ist der Standort von BGL BNP Paribas Luxembourg Open 2013?", "Welcher Ort war der Standort von BGL BNP Paribas Luxembourg Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BGL_Luxembourg_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BH Telecom Indoors 2013?", "Was ist der Standort von BH Telecom Indoors 2013?", "Was war der Standort von BH Telecom Indoors 2013?", "Welcher Ort ist der Standort von BH Telecom Indoors 2013?", "Welcher Ort war der Standort von BH Telecom Indoors 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BH_Telecom_Indoors> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BMW Open 2013?", "Was ist der Standort von BMW Open 2013?", "Was war der Standort von BMW Open 2013?", "Welcher Ort ist der Standort von BMW Open 2013?", "Welcher Ort war der Standort von BMW Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BMW_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BNP Paribas Katowice Open 2013?", "Was ist der Standort von BNP Paribas Katowice Open 2013?", "Was war der Standort von BNP Paribas Katowice Open 2013?", "Welcher Ort ist der Standort von BNP Paribas Katowice Open 2013?", "Welcher Ort war der Standort von BNP Paribas Katowice Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BNP_Paribas_Katowice_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BNP Paribas Masters 2013?", "Was ist der Standort von BNP Paribas Masters 2013?", "Was war der Standort von BNP Paribas Masters 2013?", "Welcher Ort ist der Standort von BNP Paribas Masters 2013?", "Welcher Ort war der Standort von BNP Paribas Masters 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BNP_Paribas_Masters> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BNP Paribas Open 2013?", "Was ist der Standort von BNP Paribas Open 2013?", "Was war der Standort von BNP Paribas Open 2013?", "Welcher Ort ist der Standort von BNP Paribas Open 2013?", "Welcher Ort war der Standort von BNP Paribas Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BNP_Paribas_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BNP Paribas Primrose Bordeaux 2013?", "Was ist der Standort von BNP Paribas Primrose Bordeaux 2013?", "Was war der Standort von BNP Paribas Primrose Bordeaux 2013?", "Welcher Ort ist der Standort von BNP Paribas Primrose Bordeaux 2013?", "Welcher Ort war der Standort von BNP Paribas Primrose Bordeaux 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BNP_Paribas_Primrose_Bordeaux> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BRD Arad Challenger 2013?", "Was ist der Standort von BRD Arad Challenger 2013?", "Was war der Standort von BRD Arad Challenger 2013?", "Welcher Ort ist der Standort von BRD Arad Challenger 2013?", "Welcher Ort war der Standort von BRD Arad Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BRD_Arad_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BRD Brașov Challenger 2013?", "Was ist der Standort von BRD Brașov Challenger 2013?", "Was war der Standort von BRD Brașov Challenger 2013?", "Welcher Ort ist der Standort von BRD Brașov Challenger 2013?", "Welcher Ort war der Standort von BRD Brașov Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BRD_Brașov_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BRD Năstase Țiriac Trophy 2013?", "Was ist der Standort von BRD Năstase Țiriac Trophy 2013?", "Was war der Standort von BRD Năstase Țiriac Trophy 2013?", "Welcher Ort ist der Standort von BRD Năstase Țiriac Trophy 2013?", "Welcher Ort war der Standort von BRD Năstase Țiriac Trophy 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BRD_Năstase_Țiriac_Trophy> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BRD Timișoara Challenger 2013?", "Was ist der Standort von BRD Timișoara Challenger 2013?", "Was war der Standort von BRD Timișoara Challenger 2013?", "Welcher Ort ist der Standort von BRD Timișoara Challenger 2013?", "Welcher Ort war der Standort von BRD Timișoara Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BRD_Timișoara_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Bahrain 2013?", "Was ist der Standort von Großer Preis von Bahrain 2013?", "Was war der Standort von Großer Preis von Bahrain 2013?", "Welcher Ort ist der Standort von Großer Preis von Bahrain 2013?", "Welcher Ort war der Standort von Großer Preis von Bahrain 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Bahrain_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Baku Cup 2013?", "Was ist der Standort von Baku Cup 2013?", "Was war der Standort von Baku Cup 2013?", "Welcher Ort ist der Standort von Baku Cup 2013?", "Welcher Ort war der Standort von Baku Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Baku_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Banja Luka Challenger 2013?", "Was ist der Standort von Banja Luka Challenger 2013?", "Was war der Standort von Banja Luka Challenger 2013?", "Welcher Ort ist der Standort von Banja Luka Challenger 2013?", "Welcher Ort war der Standort von Banja Luka Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Banja_Luka_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Bank of the West Classic 2013?", "Was ist der Standort von Bank of the West Classic 2013?", "Was war der Standort von Bank of the West Classic 2013?", "Welcher Ort ist der Standort von Bank of the West Classic 2013?", "Welcher Ort war der Standort von Bank of the West Classic 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Bank_of_the_West_Classic> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Barcelona Open Banc Sabadell 2013?", "Was ist der Standort von Barcelona Open Banc Sabadell 2013?", "Was war der Standort von Barcelona Open Banc Sabadell 2013?", "Welcher Ort ist der Standort von Barcelona Open Banc Sabadell 2013?", "Welcher Ort war der Standort von Barcelona Open Banc Sabadell 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Barcelona_Open_Banco_Sabadell> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Bauer Watertechnology Cup 2013?", "Was ist der Standort von Bauer Watertechnology Cup 2013?", "Was war der Standort von Bauer Watertechnology Cup 2013?", "Welcher Ort ist der Standort von Bauer Watertechnology Cup 2013?", "Welcher Ort war der Standort von Bauer Watertechnology Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Bauer_Watertechnology_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Beijing International Challenger 2013?", "Was ist der Standort von Beijing International Challenger 2013?", "Was war der Standort von Beijing International Challenger 2013?", "Welcher Ort ist der Standort von Beijing International Challenger 2013?", "Welcher Ort war der Standort von Beijing International Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Beijing_International_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Belgien 2013?", "Was ist der Standort von Großer Preis von Belgien 2013?", "Was war der Standort von Großer Preis von Belgien 2013?", "Welcher Ort ist der Standort von Großer Preis von Belgien 2013?", "Welcher Ort war der Standort von Großer Preis von Belgien 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Belgian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Bet-at-home Cup Kitzbühel 2013?", "Was ist der Standort von Bet-at-home Cup Kitzbühel 2013?", "Was war der Standort von Bet-at-home Cup Kitzbühel 2013?", "Welcher Ort ist der Standort von Bet-at-home Cup Kitzbühel 2013?", "Welcher Ort war der Standort von Bet-at-home Cup Kitzbühel 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Bet-at-home_Cup_Kitzbühel> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Brasil Tennis Cup 2013?", "Was ist der Standort von Brasil Tennis Cup 2013?", "Was war der Standort von Brasil Tennis Cup 2013?", "Welcher Ort ist der Standort von Brasil Tennis Cup 2013?", "Welcher Ort war der Standort von Brasil Tennis Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Brasil_Tennis_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Brasilien 2013?", "Was ist der Standort von Großer Preis von Brasilien 2013?", "Was war der Standort von Großer Preis von Brasilien 2013?", "Welcher Ort ist der Standort von Großer Preis von Brasilien 2013?", "Welcher Ort war der Standort von Großer Preis von Brasilien 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Brazilian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Brisbane International 2013?", "Was ist der Standort von Brisbane International 2013?", "Was war der Standort von Brisbane International 2013?", "Welcher Ort ist der Standort von Brisbane International 2013?", "Welcher Ort war der Standort von Brisbane International 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Brisbane_International> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Großbritannien 2013?", "Was ist der Standort von Großer Preis von Großbritannien 2013?", "Was war der Standort von Großer Preis von Großbritannien 2013?", "Welcher Ort ist der Standort von Großer Preis von Großbritannien 2013?", "Welcher Ort war der Standort von Großer Preis von Großbritannien 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_British_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Brussels Open 2013?", "Was ist der Standort von Brussels Open 2013?", "Was war der Standort von Brussels Open 2013?", "Welcher Ort ist der Standort von Brussels Open 2013?", "Welcher Ort war der Standort von Brussels Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Brussels_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Budapest Grand Prix 2013?", "Was ist der Standort von Budapest Grand Prix 2013?", "Was war der Standort von Budapest Grand Prix 2013?", "Welcher Ort ist der Standort von Budapest Grand Prix 2013?", "Welcher Ort war der Standort von Budapest Grand Prix 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Budapest_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Busan Open Challenger Tennis 2013?", "Was ist der Standort von Busan Open Challenger Tennis 2013?", "Was war der Standort von Busan Open Challenger Tennis 2013?", "Welcher Ort ist der Standort von Busan Open Challenger Tennis 2013?", "Welcher Ort war der Standort von Busan Open Challenger Tennis 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Busan_Open_Challenger_Tennis> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Campeonato Internacional de Tênis de Santos 2013?", "Was ist der Standort von Campeonato Internacional de Tênis de Santos 2013?", "Was war der Standort von Campeonato Internacional de Tênis de Santos 2013?", "Welcher Ort ist der Standort von Campeonato Internacional de Tênis de Santos 2013?", "Welcher Ort war der Standort von Campeonato Internacional de Tênis de Santos 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Campeonato_Internacional_de_Tenis_de_Santos> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Kanada 2013?", "Was ist der Standort von Großer Preis von Kanada 2013?", "Was war der Standort von Großer Preis von Kanada 2013?", "Welcher Ort ist der Standort von Großer Preis von Kanada 2013?", "Welcher Ort war der Standort von Großer Preis von Kanada 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Canadian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Challenge Bell 2013?", "Was ist der Standort von Challenge Bell 2013?", "Was war der Standort von Challenge Bell 2013?", "Welcher Ort ist der Standort von Challenge Bell 2013?", "Welcher Ort war der Standort von Challenge Bell 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Challenge_Bell> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Challenger Banque Nationale Granby 2013?", "Was ist der Standort von Challenger Banque Nationale Granby 2013?", "Was war der Standort von Challenger Banque Nationale Granby 2013?", "Welcher Ort ist der Standort von Challenger Banque Nationale Granby 2013?", "Welcher Ort war der Standort von Challenger Banque Nationale Granby 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Challenger_Banque_Nationale_de_Granby> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Challenger Banque Nationale 2013?", "Was ist der Standort von Challenger Banque Nationale 2013?", "Was war der Standort von Challenger Banque Nationale 2013?", "Welcher Ort ist der Standort von Challenger Banque Nationale 2013?", "Welcher Ort war der Standort von Challenger Banque Nationale 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Challenger_Banque_Nationale_de_Rimouski> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Challenger Ciudad de Guayaquil 2013?", "Was ist der Standort von Challenger Ciudad de Guayaquil 2013?", "Was war der Standort von Challenger Ciudad de Guayaquil 2013?", "Welcher Ort ist der Standort von Challenger Ciudad de Guayaquil 2013?", "Welcher Ort war der Standort von Challenger Ciudad de Guayaquil 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Challenger_Ciudad_de_Guayaquil> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Challenger La Manche 2013?", "Was ist der Standort von Challenger La Manche 2013?", "Was war der Standort von Challenger La Manche 2013?", "Welcher Ort ist der Standort von Challenger La Manche 2013?", "Welcher Ort war der Standort von Challenger La Manche 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Challenger_La_Manche> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Challenger of Dallas 2013?", "Was ist der Standort von Challenger of Dallas 2013?", "Was war der Standort von Challenger of Dallas 2013?", "Welcher Ort ist der Standort von Challenger of Dallas 2013?", "Welcher Ort war der Standort von Challenger of Dallas 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Challenger_of_Dallas> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Chang-Sat Bangkok Open 2013?", "Was ist der Standort von Chang-Sat Bangkok Open 2013?", "Was war der Standort von Chang-Sat Bangkok Open 2013?", "Welcher Ort ist der Standort von Chang-Sat Bangkok Open 2013?", "Welcher Ort war der Standort von Chang-Sat Bangkok Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Chang-Sat_Bangkok_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Charles Sturt Adelaide International 2013?", "Was ist der Standort von Charles Sturt Adelaide International 2013?", "Was war der Standort von Charles Sturt Adelaide International 2013?", "Welcher Ort ist der Standort von Charles Sturt Adelaide International 2013?", "Welcher Ort war der Standort von Charles Sturt Adelaide International 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Charles_Sturt_Adelaide_International> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Charlottesville Men’s Pro Challenger 2013?", "Was ist der Standort von Charlottesville Men’s Pro Challenger 2013?", "Was war der Standort von Charlottesville Men’s Pro Challenger 2013?", "Welcher Ort ist der Standort von Charlottesville Men’s Pro Challenger 2013?", "Welcher Ort war der Standort von Charlottesville Men’s Pro Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Charlottesville_Men's_Pro_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von China Open 2013 (Tennis)?", "Was ist der Standort von China Open 2013 (Tennis)?", "Was war der Standort von China Open 2013 (Tennis)?", "Welcher Ort ist der Standort von China Open 2013 (Tennis)?", "Welcher Ort war der Standort von China Open 2013 (Tennis)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_China_Open_(tennis)> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von China 2013?", "Was ist der Standort von Großer Preis von China 2013?", "Was war der Standort von Großer Preis von China 2013?", "Welcher Ort ist der Standort von Großer Preis von China 2013?", "Welcher Ort war der Standort von Großer Preis von China 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Chinese_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Citi Open 2013?", "Was ist der Standort von Citi Open 2013?", "Was war der Standort von Citi Open 2013?", "Welcher Ort ist der Standort von Citi Open 2013?", "Welcher Ort war der Standort von Citi Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Citi_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Carta Bcc Città di Caltanissetta 2013?", "Was ist der Standort von Carta Bcc Città di Caltanissetta 2013?", "Was war der Standort von Carta Bcc Città di Caltanissetta 2013?", "Welcher Ort ist der Standort von Carta Bcc Città di Caltanissetta 2013?", "Welcher Ort war der Standort von Carta Bcc Città di Caltanissetta 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Città_di_Caltanissetta> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Città di Como 2013?", "Was ist der Standort von Città di Como 2013?", "Was war der Standort von Città di Como 2013?", "Welcher Ort ist der Standort von Città di Como 2013?", "Welcher Ort war der Standort von Città di Como 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Città_di_Como_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Claro Open Colombia 2013?", "Was ist der Standort von Claro Open Colombia 2013?", "Was war der Standort von Claro Open Colombia 2013?", "Welcher Ort ist der Standort von Claro Open Colombia 2013?", "Welcher Ort war der Standort von Claro Open Colombia 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Claro_Open_Colombia> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Coleman Vision Tennis Championships 2013?", "Was ist der Standort von Coleman Vision Tennis Championships 2013?", "Was war der Standort von Coleman Vision Tennis Championships 2013?", "Welcher Ort ist der Standort von Coleman Vision Tennis Championships 2013?", "Welcher Ort war der Standort von Coleman Vision Tennis Championships 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Coleman_Vision_Tennis_Championships> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Comerica Bank Challenger 2013?", "Was ist der Standort von Comerica Bank Challenger 2013?", "Was war der Standort von Comerica Bank Challenger 2013?", "Welcher Ort ist der Standort von Comerica Bank Challenger 2013?", "Welcher Ort war der Standort von Comerica Bank Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Comerica_Bank_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Copa Bionaire 2013?", "Was ist der Standort von Copa Bionaire 2013?", "Was war der Standort von Copa Bionaire 2013?", "Welcher Ort ist der Standort von Copa Bionaire 2013?", "Welcher Ort war der Standort von Copa Bionaire 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Copa_Bionaire> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Copa Claro 2013?", "Was ist der Standort von Copa Claro 2013?", "Was war der Standort von Copa Claro 2013?", "Welcher Ort ist der Standort von Copa Claro 2013?", "Welcher Ort war der Standort von Copa Claro 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Copa_Claro> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von XXI Copa Claro Colsanitas 2013?", "Was ist der Standort von XXI Copa Claro Colsanitas 2013?", "Was war der Standort von XXI Copa Claro Colsanitas 2013?", "Welcher Ort ist der Standort von XXI Copa Claro Colsanitas 2013?", "Welcher Ort war der Standort von XXI Copa Claro Colsanitas 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Copa_Colsanitas> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Copa Internacional de Tenis Total Digest 2013?", "Was ist der Standort von Copa Internacional de Tenis Total Digest 2013?", "Was war der Standort von Copa Internacional de Tenis Total Digest 2013?", "Welcher Ort ist der Standort von Copa Internacional de Tenis Total Digest 2013?", "Welcher Ort war der Standort von Copa Internacional de Tenis Total Digest 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Copa_Internacional_de_Tenis_Total_Digest> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Copa San Juan Gobierno 2013?", "Was ist der Standort von Copa San Juan Gobierno 2013?", "Was war der Standort von Copa San Juan Gobierno 2013?", "Welcher Ort ist der Standort von Copa San Juan Gobierno 2013?", "Welcher Ort war der Standort von Copa San Juan Gobierno 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Copa_San_Juan_Gobierno> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Copa Sevilla 2013?", "Was ist der Standort von Copa Sevilla 2013?", "Was war der Standort von Copa Sevilla 2013?", "Welcher Ort ist der Standort von Copa Sevilla 2013?", "Welcher Ort war der Standort von Copa Sevilla 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Copa_Sevilla> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Copa Topper 2013?", "Was ist der Standort von Copa Topper 2013?", "Was war der Standort von Copa Topper 2013?", "Welcher Ort ist der Standort von Copa Topper 2013?", "Welcher Ort war der Standort von Copa Topper 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Copa_Topper> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Friuladria Crédit Agricole Tennis Cup 2013?", "Was ist der Standort von Friuladria Crédit Agricole Tennis Cup 2013?", "Was war der Standort von Friuladria Crédit Agricole Tennis Cup 2013?", "Welcher Ort ist der Standort von Friuladria Crédit Agricole Tennis Cup 2013?", "Welcher Ort war der Standort von Friuladria Crédit Agricole Tennis Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Credit_Agricole_Friuladria_Tennis_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Crédit Agricole Suisse Open Gstaad 2013?", "Was ist der Standort von Crédit Agricole Suisse Open Gstaad 2013?", "Was war der Standort von Crédit Agricole Suisse Open Gstaad 2013?", "Welcher Ort ist der Standort von Crédit Agricole Suisse Open Gstaad 2013?", "Welcher Ort war der Standort von Crédit Agricole Suisse Open Gstaad 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Crédit_Agricole_Suisse_Open_Gstaad> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Dallas Tennis Classic 2013?", "Was ist der Standort von Dallas Tennis Classic 2013?", "Was war der Standort von Dallas Tennis Classic 2013?", "Welcher Ort ist der Standort von Dallas Tennis Classic 2013?", "Welcher Ort war der Standort von Dallas Tennis Classic 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Dallas_Tennis_Classic> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Delray Beach International Tennis Championships 2013?", "Was ist der Standort von Delray Beach International Tennis Championships 2013?", "Was war der Standort von Delray Beach International Tennis Championships 2013?", "Welcher Ort ist der Standort von Delray Beach International Tennis Championships 2013?", "Welcher Ort war der Standort von Delray Beach International Tennis Championships 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Delray_Beach_International_Tennis_Championships> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Distalnet Tennis Cup 2013?", "Was ist der Standort von Distalnet Tennis Cup 2013?", "Was war der Standort von Distalnet Tennis Cup 2013?", "Welcher Ort ist der Standort von Distalnet Tennis Cup 2013?", "Welcher Ort war der Standort von Distalnet Tennis Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Distalnet_Tennis_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Dubai Duty Free Tennis Championships 2013?", "Was ist der Standort von Dubai Duty Free Tennis Championships 2013?", "Was war der Standort von Dubai Duty Free Tennis Championships 2013?", "Welcher Ort ist der Standort von Dubai Duty Free Tennis Championships 2013?", "Welcher Ort war der Standort von Dubai Duty Free Tennis Championships 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Dubai_Tennis_Championships> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Dunlop World Challenge Tennis Tournament 2013?", "Was ist der Standort von Dunlop World Challenge Tennis Tournament 2013?", "Was war der Standort von Dunlop World Challenge Tennis Tournament 2013?", "Welcher Ort ist der Standort von Dunlop World Challenge Tennis Tournament 2013?", "Welcher Ort war der Standort von Dunlop World Challenge Tennis Tournament 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Dunlop_World_Challenge> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Empire Slovak Open 2013?", "Was ist der Standort von Empire Slovak Open 2013?", "Was war der Standort von Empire Slovak Open 2013?", "Welcher Ort ist der Standort von Empire Slovak Open 2013?", "Welcher Ort war der Standort von Empire Slovak Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Empire_Slovak_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Erste Bank Open 2013?", "Was ist der Standort von Erste Bank Open 2013?", "Was war der Standort von Erste Bank Open 2013?", "Welcher Ort ist der Standort von Erste Bank Open 2013?", "Welcher Ort war der Standort von Erste Bank Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Erste_Bank_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Eskişehir Cup 2013?", "Was ist der Standort von Eskişehir Cup 2013?", "Was war der Standort von Eskişehir Cup 2013?", "Welcher Ort ist der Standort von Eskişehir Cup 2013?", "Welcher Ort war der Standort von Eskişehir Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Eskişehir_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Ethias Trophy 2013?", "Was ist der Standort von Ethias Trophy 2013?", "Was war der Standort von Ethias Trophy 2013?", "Welcher Ort ist der Standort von Ethias Trophy 2013?", "Welcher Ort war der Standort von Ethias Trophy 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Ethias_Trophy> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Tischtennis-Europameisterschaft 2013?", "Was ist der Standort von Tischtennis-Europameisterschaft 2013?", "Was war der Standort von Tischtennis-Europameisterschaft 2013?", "Welcher Ort ist der Standort von Tischtennis-Europameisterschaft 2013?", "Welcher Ort war der Standort von Tischtennis-Europameisterschaft 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_European_Table_Tennis_Championships> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Family Circle Cup 2013?", "Was ist der Standort von Family Circle Cup 2013?", "Was war der Standort von Family Circle Cup 2013?", "Welcher Ort ist der Standort von Family Circle Cup 2013?", "Welcher Ort war der Standort von Family Circle Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Family_Circle_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Fergana Challenger 2013?", "Was ist der Standort von Fergana Challenger 2013?", "Was war der Standort von Fergana Challenger 2013?", "Welcher Ort ist der Standort von Fergana Challenger 2013?", "Welcher Ort war der Standort von Fergana Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Fergana_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Fifth Third Bank Tennis Championships 2013?", "Was ist der Standort von Fifth Third Bank Tennis Championships 2013?", "Was war der Standort von Fifth Third Bank Tennis Championships 2013?", "Welcher Ort ist der Standort von Fifth Third Bank Tennis Championships 2013?", "Welcher Ort war der Standort von Fifth Third Bank Tennis Championships 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Fifth_Third_Bank_Tennis_Championships> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Franken Challenge 2013?", "Was ist der Standort von Franken Challenge 2013?", "Was war der Standort von Franken Challenge 2013?", "Welcher Ort ist der Standort von Franken Challenge 2013?", "Welcher Ort war der Standort von Franken Challenge 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Franken_Challenge> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von French Open 2013?", "Was ist der Standort von French Open 2013?", "Was war der Standort von French Open 2013?", "Welcher Ort ist der Standort von French Open 2013?", "Welcher Ort war der Standort von French Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_French_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Garanti Koza Tournament of Champions 2013?", "Was ist der Standort von Garanti Koza Tournament of Champions 2013?", "Was war der Standort von Garanti Koza Tournament of Champions 2013?", "Welcher Ort ist der Standort von Garanti Koza Tournament of Champions 2013?", "Welcher Ort war der Standort von Garanti Koza Tournament of Champions 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Garanti_Koza_WTA_Tournament_of_Champions> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Nürnberger Gastein Ladies 2013?", "Was ist der Standort von Nürnberger Gastein Ladies 2013?", "Was war der Standort von Nürnberger Gastein Ladies 2013?", "Welcher Ort ist der Standort von Nürnberger Gastein Ladies 2013?", "Welcher Ort war der Standort von Nürnberger Gastein Ladies 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Gastein_Ladies> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Generali Ladies Linz 2013?", "Was ist der Standort von Generali Ladies Linz 2013?", "Was war der Standort von Generali Ladies Linz 2013?", "Welcher Ort ist der Standort von Generali Ladies Linz 2013?", "Welcher Ort war der Standort von Generali Ladies Linz 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Generali_Ladies_Linz> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Geneva Open 2013?", "Was ist der Standort von Geneva Open 2013?", "Was war der Standort von Geneva Open 2013?", "Welcher Ort ist der Standort von Geneva Open 2013?", "Welcher Ort war der Standort von Geneva Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Geneva_Open_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Deutschland 2013?", "Was ist der Standort von Großer Preis von Deutschland 2013?", "Was war der Standort von Großer Preis von Deutschland 2013?", "Welcher Ort ist der Standort von Großer Preis von Deutschland 2013?", "Welcher Ort war der Standort von Großer Preis von Deutschland 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_German_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Grand Prix Hassan II 2013?", "Was ist der Standort von Grand Prix Hassan II 2013?", "Was war der Standort von Grand Prix Hassan II 2013?", "Welcher Ort ist der Standort von Grand Prix Hassan II 2013?", "Welcher Ort war der Standort von Grand Prix Hassan II 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Grand_Prix_Hassan_II> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Grand Prix SAR La Princesse Lalla Meryem 2013?", "Was ist der Standort von Grand Prix SAR La Princesse Lalla Meryem 2013?", "Was war der Standort von Grand Prix SAR La Princesse Lalla Meryem 2013?", "Welcher Ort ist der Standort von Grand Prix SAR La Princesse Lalla Meryem 2013?", "Welcher Ort war der Standort von Grand Prix SAR La Princesse Lalla Meryem 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Grand_Prix_SAR_La_Princesse_Lalla_Meryem> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Guangzhou Open 2013?", "Was ist der Standort von Guangzhou Open 2013?", "Was war der Standort von Guangzhou Open 2013?", "Welcher Ort ist der Standort von Guangzhou Open 2013?", "Welcher Ort war der Standort von Guangzhou Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Guangzhou_International_Women's_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Guimarães Open 2013?", "Was ist der Standort von Guimarães Open 2013?", "Was war der Standort von Guimarães Open 2013?", "Welcher Ort ist der Standort von Guimarães Open 2013?", "Welcher Ort war der Standort von Guimarães Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Guimarães_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Guzzini Challenger 2013?", "Was ist der Standort von Guzzini Challenger 2013?", "Was war der Standort von Guzzini Challenger 2013?", "Welcher Ort ist der Standort von Guzzini Challenger 2013?", "Welcher Ort war der Standort von Guzzini Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Guzzini_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von HP Japan Women’s Open Tennis 2013?", "Was ist der Standort von HP Japan Women’s Open Tennis 2013?", "Was war der Standort von HP Japan Women’s Open Tennis 2013?", "Welcher Ort ist der Standort von HP Japan Women’s Open Tennis 2013?", "Welcher Ort war der Standort von HP Japan Women’s Open Tennis 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_HP_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Hall of Fame Tennis Championships 2013?", "Was ist der Standort von Hall of Fame Tennis Championships 2013?", "Was war der Standort von Hall of Fame Tennis Championships 2013?", "Welcher Ort ist der Standort von Hall of Fame Tennis Championships 2013?", "Welcher Ort war der Standort von Hall of Fame Tennis Championships 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Hall_of_Fame_Tennis_Championships> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Heineken Open 2013?", "Was ist der Standort von Heineken Open 2013?", "Was war der Standort von Heineken Open 2013?", "Welcher Ort ist der Standort von Heineken Open 2013?", "Welcher Ort war der Standort von Heineken Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Heineken_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Hopman Cup 2013?", "Was ist der Standort von Hopman Cup 2013?", "Was war der Standort von Hopman Cup 2013?", "Welcher Ort ist der Standort von Hopman Cup 2013?", "Welcher Ort war der Standort von Hopman Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Hopman_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Ungarn 2013?", "Was ist der Standort von Großer Preis von Ungarn 2013?", "Was war der Standort von Großer Preis von Ungarn 2013?", "Welcher Ort ist der Standort von Großer Preis von Ungarn 2013?", "Welcher Ort war der Standort von Großer Preis von Ungarn 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Hungarian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von IPP Open 2013?", "Was ist der Standort von IPP Open 2013?", "Was war der Standort von IPP Open 2013?", "Welcher Ort ist der Standort von IPP Open 2013?", "Welcher Ort war der Standort von IPP Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_IPP_Open_and_the_Orto-Lääkärit_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von IS Open 2013?", "Was ist der Standort von IS Open 2013?", "Was war der Standort von IS Open 2013?", "Welcher Ort ist der Standort von IS Open 2013?", "Welcher Ort war der Standort von IS Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_IS_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von ITS Cup 2013?", "Was ist der Standort von ITS Cup 2013?", "Was war der Standort von ITS Cup 2013?", "Welcher Ort ist der Standort von ITS Cup 2013?", "Welcher Ort war der Standort von ITS Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_ITS_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von If Stockholm Open 2013?", "Was ist der Standort von If Stockholm Open 2013?", "Was war der Standort von If Stockholm Open 2013?", "Welcher Ort ist der Standort von If Stockholm Open 2013?", "Welcher Ort war der Standort von If Stockholm Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_If_Stockholm_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Indien 2013?", "Was ist der Standort von Großer Preis von Indien 2013?", "Was war der Standort von Großer Preis von Indien 2013?", "Welcher Ort ist der Standort von Großer Preis von Indien 2013?", "Welcher Ort war der Standort von Großer Preis von Indien 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Indian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Italien 1921?", "Was ist der Standort von Großer Preis von Italien 1921?", "Was war der Standort von Großer Preis von Italien 1921?", "Welcher Ort ist der Standort von Großer Preis von Italien 1921?", "Welcher Ort war der Standort von Großer Preis von Italien 1921?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1921_Italian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Frankreich 1922?", "Was ist der Standort von Großer Preis von Frankreich 1922?", "Was war der Standort von Großer Preis von Frankreich 1922?", "Welcher Ort ist der Standort von Großer Preis von Frankreich 1922?", "Welcher Ort war der Standort von Großer Preis von Frankreich 1922?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1922_French_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Italien 1922?", "Was ist der Standort von Großer Preis von Italien 1922?", "Was war der Standort von Großer Preis von Italien 1922?", "Welcher Ort ist der Standort von Großer Preis von Italien 1922?", "Welcher Ort war der Standort von Großer Preis von Italien 1922?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1922_Italian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Frankreich 1923?", "Was ist der Standort von Großer Preis von Frankreich 1923?", "Was war der Standort von Großer Preis von Frankreich 1923?", "Welcher Ort ist der Standort von Großer Preis von Frankreich 1923?", "Welcher Ort war der Standort von Großer Preis von Frankreich 1923?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1923_French_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Italien 1923?", "Was ist der Standort von Großer Preis von Italien 1923?", "Was war der Standort von Großer Preis von Italien 1923?", "Welcher Ort ist der Standort von Großer Preis von Italien 1923?", "Welcher Ort war der Standort von Großer Preis von Italien 1923?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1923_Italian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Museum Hürtgenwald 1944?", "Was ist der Standort von Museum Hürtgenwald 1944?", "Was war der Standort von Museum Hürtgenwald 1944?", "Welcher Ort ist der Standort von Museum Hürtgenwald 1944?", "Welcher Ort war der Standort von Museum Hürtgenwald 1944?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1944_Hürtgen_Forest_Museum> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Italien 1947?", "Was ist der Standort von Großer Preis von Italien 1947?", "Was war der Standort von Großer Preis von Italien 1947?", "Welcher Ort ist der Standort von Großer Preis von Italien 1947?", "Welcher Ort war der Standort von Großer Preis von Italien 1947?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1947_Italian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Italien 1948?", "Was ist der Standort von Großer Preis von Italien 1948?", "Was war der Standort von Großer Preis von Italien 1948?", "Welcher Ort ist der Standort von Großer Preis von Italien 1948?", "Welcher Ort war der Standort von Großer Preis von Italien 1948?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1948_Italian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Italien 1949?", "Was ist der Standort von Großer Preis von Italien 1949?", "Was war der Standort von Großer Preis von Italien 1949?", "Welcher Ort ist der Standort von Großer Preis von Italien 1949?", "Welcher Ort war der Standort von Großer Preis von Italien 1949?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1949_Italian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BB&T Atlanta Open 2013?", "Was ist der Standort von BB&T Atlanta Open 2013?", "Was war der Standort von BB&T Atlanta Open 2013?", "Welcher Ort ist der Standort von BB&T Atlanta Open 2013?", "Welcher Ort war der Standort von BB&T Atlanta Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BB&T_Atlanta_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BGL BNP Paribas Luxembourg Open 2013?", "Was ist der Standort von BGL BNP Paribas Luxembourg Open 2013?", "Was war der Standort von BGL BNP Paribas Luxembourg Open 2013?", "Welcher Ort ist der Standort von BGL BNP Paribas Luxembourg Open 2013?", "Welcher Ort war der Standort von BGL BNP Paribas Luxembourg Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BGL_Luxembourg_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BH Telecom Indoors 2013?", "Was ist der Standort von BH Telecom Indoors 2013?", "Was war der Standort von BH Telecom Indoors 2013?", "Welcher Ort ist der Standort von BH Telecom Indoors 2013?", "Welcher Ort war der Standort von BH Telecom Indoors 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BH_Telecom_Indoors> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BMW Open 2013?", "Was ist der Standort von BMW Open 2013?", "Was war der Standort von BMW Open 2013?", "Welcher Ort ist der Standort von BMW Open 2013?", "Welcher Ort war der Standort von BMW Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BMW_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BNP Paribas Katowice Open 2013?", "Was ist der Standort von BNP Paribas Katowice Open 2013?", "Was war der Standort von BNP Paribas Katowice Open 2013?", "Welcher Ort ist der Standort von BNP Paribas Katowice Open 2013?", "Welcher Ort war der Standort von BNP Paribas Katowice Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BNP_Paribas_Katowice_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BNP Paribas Masters 2013?", "Was ist der Standort von BNP Paribas Masters 2013?", "Was war der Standort von BNP Paribas Masters 2013?", "Welcher Ort ist der Standort von BNP Paribas Masters 2013?", "Welcher Ort war der Standort von BNP Paribas Masters 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BNP_Paribas_Masters> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BNP Paribas Open 2013?", "Was ist der Standort von BNP Paribas Open 2013?", "Was war der Standort von BNP Paribas Open 2013?", "Welcher Ort ist der Standort von BNP Paribas Open 2013?", "Welcher Ort war der Standort von BNP Paribas Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BNP_Paribas_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BNP Paribas Primrose Bordeaux 2013?", "Was ist der Standort von BNP Paribas Primrose Bordeaux 2013?", "Was war der Standort von BNP Paribas Primrose Bordeaux 2013?", "Welcher Ort ist der Standort von BNP Paribas Primrose Bordeaux 2013?", "Welcher Ort war der Standort von BNP Paribas Primrose Bordeaux 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BNP_Paribas_Primrose_Bordeaux> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BRD Arad Challenger 2013?", "Was ist der Standort von BRD Arad Challenger 2013?", "Was war der Standort von BRD Arad Challenger 2013?", "Welcher Ort ist der Standort von BRD Arad Challenger 2013?", "Welcher Ort war der Standort von BRD Arad Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BRD_Arad_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BRD Brașov Challenger 2013?", "Was ist der Standort von BRD Brașov Challenger 2013?", "Was war der Standort von BRD Brașov Challenger 2013?", "Welcher Ort ist der Standort von BRD Brașov Challenger 2013?", "Welcher Ort war der Standort von BRD Brașov Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BRD_Brașov_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BRD Năstase Țiriac Trophy 2013?", "Was ist der Standort von BRD Năstase Țiriac Trophy 2013?", "Was war der Standort von BRD Năstase Țiriac Trophy 2013?", "Welcher Ort ist der Standort von BRD Năstase Țiriac Trophy 2013?", "Welcher Ort war der Standort von BRD Năstase Țiriac Trophy 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BRD_Năstase_Țiriac_Trophy> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von BRD Timișoara Challenger 2013?", "Was ist der Standort von BRD Timișoara Challenger 2013?", "Was war der Standort von BRD Timișoara Challenger 2013?", "Welcher Ort ist der Standort von BRD Timișoara Challenger 2013?", "Welcher Ort war der Standort von BRD Timișoara Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_BRD_Timișoara_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Bahrain 2013?", "Was ist der Standort von Großer Preis von Bahrain 2013?", "Was war der Standort von Großer Preis von Bahrain 2013?", "Welcher Ort ist der Standort von Großer Preis von Bahrain 2013?", "Welcher Ort war der Standort von Großer Preis von Bahrain 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Bahrain_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Baku Cup 2013?", "Was ist der Standort von Baku Cup 2013?", "Was war der Standort von Baku Cup 2013?", "Welcher Ort ist der Standort von Baku Cup 2013?", "Welcher Ort war der Standort von Baku Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Baku_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Banja Luka Challenger 2013?", "Was ist der Standort von Banja Luka Challenger 2013?", "Was war der Standort von Banja Luka Challenger 2013?", "Welcher Ort ist der Standort von Banja Luka Challenger 2013?", "Welcher Ort war der Standort von Banja Luka Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Banja_Luka_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Bank of the West Classic 2013?", "Was ist der Standort von Bank of the West Classic 2013?", "Was war der Standort von Bank of the West Classic 2013?", "Welcher Ort ist der Standort von Bank of the West Classic 2013?", "Welcher Ort war der Standort von Bank of the West Classic 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Bank_of_the_West_Classic> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Barcelona Open Banc Sabadell 2013?", "Was ist der Standort von Barcelona Open Banc Sabadell 2013?", "Was war der Standort von Barcelona Open Banc Sabadell 2013?", "Welcher Ort ist der Standort von Barcelona Open Banc Sabadell 2013?", "Welcher Ort war der Standort von Barcelona Open Banc Sabadell 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Barcelona_Open_Banco_Sabadell> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Bauer Watertechnology Cup 2013?", "Was ist der Standort von Bauer Watertechnology Cup 2013?", "Was war der Standort von Bauer Watertechnology Cup 2013?", "Welcher Ort ist der Standort von Bauer Watertechnology Cup 2013?", "Welcher Ort war der Standort von Bauer Watertechnology Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Bauer_Watertechnology_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Beijing International Challenger 2013?", "Was ist der Standort von Beijing International Challenger 2013?", "Was war der Standort von Beijing International Challenger 2013?", "Welcher Ort ist der Standort von Beijing International Challenger 2013?", "Welcher Ort war der Standort von Beijing International Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Beijing_International_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Belgien 2013?", "Was ist der Standort von Großer Preis von Belgien 2013?", "Was war der Standort von Großer Preis von Belgien 2013?", "Welcher Ort ist der Standort von Großer Preis von Belgien 2013?", "Welcher Ort war der Standort von Großer Preis von Belgien 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Belgian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Bet-at-home Cup Kitzbühel 2013?", "Was ist der Standort von Bet-at-home Cup Kitzbühel 2013?", "Was war der Standort von Bet-at-home Cup Kitzbühel 2013?", "Welcher Ort ist der Standort von Bet-at-home Cup Kitzbühel 2013?", "Welcher Ort war der Standort von Bet-at-home Cup Kitzbühel 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Bet-at-home_Cup_Kitzbühel> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Brasil Tennis Cup 2013?", "Was ist der Standort von Brasil Tennis Cup 2013?", "Was war der Standort von Brasil Tennis Cup 2013?", "Welcher Ort ist der Standort von Brasil Tennis Cup 2013?", "Welcher Ort war der Standort von Brasil Tennis Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Brasil_Tennis_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Brasilien 2013?", "Was ist der Standort von Großer Preis von Brasilien 2013?", "Was war der Standort von Großer Preis von Brasilien 2013?", "Welcher Ort ist der Standort von Großer Preis von Brasilien 2013?", "Welcher Ort war der Standort von Großer Preis von Brasilien 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Brazilian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Brisbane International 2013?", "Was ist der Standort von Brisbane International 2013?", "Was war der Standort von Brisbane International 2013?", "Welcher Ort ist der Standort von Brisbane International 2013?", "Welcher Ort war der Standort von Brisbane International 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Brisbane_International> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Großbritannien 2013?", "Was ist der Standort von Großer Preis von Großbritannien 2013?", "Was war der Standort von Großer Preis von Großbritannien 2013?", "Welcher Ort ist der Standort von Großer Preis von Großbritannien 2013?", "Welcher Ort war der Standort von Großer Preis von Großbritannien 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_British_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Brussels Open 2013?", "Was ist der Standort von Brussels Open 2013?", "Was war der Standort von Brussels Open 2013?", "Welcher Ort ist der Standort von Brussels Open 2013?", "Welcher Ort war der Standort von Brussels Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Brussels_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Budapest Grand Prix 2013?", "Was ist der Standort von Budapest Grand Prix 2013?", "Was war der Standort von Budapest Grand Prix 2013?", "Welcher Ort ist der Standort von Budapest Grand Prix 2013?", "Welcher Ort war der Standort von Budapest Grand Prix 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Budapest_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Busan Open Challenger Tennis 2013?", "Was ist der Standort von Busan Open Challenger Tennis 2013?", "Was war der Standort von Busan Open Challenger Tennis 2013?", "Welcher Ort ist der Standort von Busan Open Challenger Tennis 2013?", "Welcher Ort war der Standort von Busan Open Challenger Tennis 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Busan_Open_Challenger_Tennis> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Campeonato Internacional de Tênis de Santos 2013?", "Was ist der Standort von Campeonato Internacional de Tênis de Santos 2013?", "Was war der Standort von Campeonato Internacional de Tênis de Santos 2013?", "Welcher Ort ist der Standort von Campeonato Internacional de Tênis de Santos 2013?", "Welcher Ort war der Standort von Campeonato Internacional de Tênis de Santos 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Campeonato_Internacional_de_Tenis_de_Santos> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Kanada 2013?", "Was ist der Standort von Großer Preis von Kanada 2013?", "Was war der Standort von Großer Preis von Kanada 2013?", "Welcher Ort ist der Standort von Großer Preis von Kanada 2013?", "Welcher Ort war der Standort von Großer Preis von Kanada 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Canadian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Challenge Bell 2013?", "Was ist der Standort von Challenge Bell 2013?", "Was war der Standort von Challenge Bell 2013?", "Welcher Ort ist der Standort von Challenge Bell 2013?", "Welcher Ort war der Standort von Challenge Bell 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Challenge_Bell> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Challenger Banque Nationale Granby 2013?", "Was ist der Standort von Challenger Banque Nationale Granby 2013?", "Was war der Standort von Challenger Banque Nationale Granby 2013?", "Welcher Ort ist der Standort von Challenger Banque Nationale Granby 2013?", "Welcher Ort war der Standort von Challenger Banque Nationale Granby 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Challenger_Banque_Nationale_de_Granby> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Challenger Banque Nationale 2013?", "Was ist der Standort von Challenger Banque Nationale 2013?", "Was war der Standort von Challenger Banque Nationale 2013?", "Welcher Ort ist der Standort von Challenger Banque Nationale 2013?", "Welcher Ort war der Standort von Challenger Banque Nationale 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Challenger_Banque_Nationale_de_Rimouski> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Challenger Ciudad de Guayaquil 2013?", "Was ist der Standort von Challenger Ciudad de Guayaquil 2013?", "Was war der Standort von Challenger Ciudad de Guayaquil 2013?", "Welcher Ort ist der Standort von Challenger Ciudad de Guayaquil 2013?", "Welcher Ort war der Standort von Challenger Ciudad de Guayaquil 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Challenger_Ciudad_de_Guayaquil> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Challenger La Manche 2013?", "Was ist der Standort von Challenger La Manche 2013?", "Was war der Standort von Challenger La Manche 2013?", "Welcher Ort ist der Standort von Challenger La Manche 2013?", "Welcher Ort war der Standort von Challenger La Manche 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Challenger_La_Manche> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Challenger of Dallas 2013?", "Was ist der Standort von Challenger of Dallas 2013?", "Was war der Standort von Challenger of Dallas 2013?", "Welcher Ort ist der Standort von Challenger of Dallas 2013?", "Welcher Ort war der Standort von Challenger of Dallas 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Challenger_of_Dallas> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Chang-Sat Bangkok Open 2013?", "Was ist der Standort von Chang-Sat Bangkok Open 2013?", "Was war der Standort von Chang-Sat Bangkok Open 2013?", "Welcher Ort ist der Standort von Chang-Sat Bangkok Open 2013?", "Welcher Ort war der Standort von Chang-Sat Bangkok Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Chang-Sat_Bangkok_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Charles Sturt Adelaide International 2013?", "Was ist der Standort von Charles Sturt Adelaide International 2013?", "Was war der Standort von Charles Sturt Adelaide International 2013?", "Welcher Ort ist der Standort von Charles Sturt Adelaide International 2013?", "Welcher Ort war der Standort von Charles Sturt Adelaide International 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Charles_Sturt_Adelaide_International> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Charlottesville Men’s Pro Challenger 2013?", "Was ist der Standort von Charlottesville Men’s Pro Challenger 2013?", "Was war der Standort von Charlottesville Men’s Pro Challenger 2013?", "Welcher Ort ist der Standort von Charlottesville Men’s Pro Challenger 2013?", "Welcher Ort war der Standort von Charlottesville Men’s Pro Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Charlottesville_Men's_Pro_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von China Open 2013 (Tennis)?", "Was ist der Standort von China Open 2013 (Tennis)?", "Was war der Standort von China Open 2013 (Tennis)?", "Welcher Ort ist der Standort von China Open 2013 (Tennis)?", "Welcher Ort war der Standort von China Open 2013 (Tennis)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_China_Open_(tennis)> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von China 2013?", "Was ist der Standort von Großer Preis von China 2013?", "Was war der Standort von Großer Preis von China 2013?", "Welcher Ort ist der Standort von Großer Preis von China 2013?", "Welcher Ort war der Standort von Großer Preis von China 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Chinese_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Citi Open 2013?", "Was ist der Standort von Citi Open 2013?", "Was war der Standort von Citi Open 2013?", "Welcher Ort ist der Standort von Citi Open 2013?", "Welcher Ort war der Standort von Citi Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Citi_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Carta Bcc Città di Caltanissetta 2013?", "Was ist der Standort von Carta Bcc Città di Caltanissetta 2013?", "Was war der Standort von Carta Bcc Città di Caltanissetta 2013?", "Welcher Ort ist der Standort von Carta Bcc Città di Caltanissetta 2013?", "Welcher Ort war der Standort von Carta Bcc Città di Caltanissetta 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Città_di_Caltanissetta> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Città di Como 2013?", "Was ist der Standort von Città di Como 2013?", "Was war der Standort von Città di Como 2013?", "Welcher Ort ist der Standort von Città di Como 2013?", "Welcher Ort war der Standort von Città di Como 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Città_di_Como_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Claro Open Colombia 2013?", "Was ist der Standort von Claro Open Colombia 2013?", "Was war der Standort von Claro Open Colombia 2013?", "Welcher Ort ist der Standort von Claro Open Colombia 2013?", "Welcher Ort war der Standort von Claro Open Colombia 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Claro_Open_Colombia> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Coleman Vision Tennis Championships 2013?", "Was ist der Standort von Coleman Vision Tennis Championships 2013?", "Was war der Standort von Coleman Vision Tennis Championships 2013?", "Welcher Ort ist der Standort von Coleman Vision Tennis Championships 2013?", "Welcher Ort war der Standort von Coleman Vision Tennis Championships 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Coleman_Vision_Tennis_Championships> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Comerica Bank Challenger 2013?", "Was ist der Standort von Comerica Bank Challenger 2013?", "Was war der Standort von Comerica Bank Challenger 2013?", "Welcher Ort ist der Standort von Comerica Bank Challenger 2013?", "Welcher Ort war der Standort von Comerica Bank Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Comerica_Bank_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Copa Bionaire 2013?", "Was ist der Standort von Copa Bionaire 2013?", "Was war der Standort von Copa Bionaire 2013?", "Welcher Ort ist der Standort von Copa Bionaire 2013?", "Welcher Ort war der Standort von Copa Bionaire 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Copa_Bionaire> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Copa Claro 2013?", "Was ist der Standort von Copa Claro 2013?", "Was war der Standort von Copa Claro 2013?", "Welcher Ort ist der Standort von Copa Claro 2013?", "Welcher Ort war der Standort von Copa Claro 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Copa_Claro> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von XXI Copa Claro Colsanitas 2013?", "Was ist der Standort von XXI Copa Claro Colsanitas 2013?", "Was war der Standort von XXI Copa Claro Colsanitas 2013?", "Welcher Ort ist der Standort von XXI Copa Claro Colsanitas 2013?", "Welcher Ort war der Standort von XXI Copa Claro Colsanitas 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Copa_Colsanitas> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Copa Internacional de Tenis Total Digest 2013?", "Was ist der Standort von Copa Internacional de Tenis Total Digest 2013?", "Was war der Standort von Copa Internacional de Tenis Total Digest 2013?", "Welcher Ort ist der Standort von Copa Internacional de Tenis Total Digest 2013?", "Welcher Ort war der Standort von Copa Internacional de Tenis Total Digest 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Copa_Internacional_de_Tenis_Total_Digest> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Copa San Juan Gobierno 2013?", "Was ist der Standort von Copa San Juan Gobierno 2013?", "Was war der Standort von Copa San Juan Gobierno 2013?", "Welcher Ort ist der Standort von Copa San Juan Gobierno 2013?", "Welcher Ort war der Standort von Copa San Juan Gobierno 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Copa_San_Juan_Gobierno> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Copa Sevilla 2013?", "Was ist der Standort von Copa Sevilla 2013?", "Was war der Standort von Copa Sevilla 2013?", "Welcher Ort ist der Standort von Copa Sevilla 2013?", "Welcher Ort war der Standort von Copa Sevilla 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Copa_Sevilla> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Copa Topper 2013?", "Was ist der Standort von Copa Topper 2013?", "Was war der Standort von Copa Topper 2013?", "Welcher Ort ist der Standort von Copa Topper 2013?", "Welcher Ort war der Standort von Copa Topper 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Copa_Topper> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Friuladria Crédit Agricole Tennis Cup 2013?", "Was ist der Standort von Friuladria Crédit Agricole Tennis Cup 2013?", "Was war der Standort von Friuladria Crédit Agricole Tennis Cup 2013?", "Welcher Ort ist der Standort von Friuladria Crédit Agricole Tennis Cup 2013?", "Welcher Ort war der Standort von Friuladria Crédit Agricole Tennis Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Credit_Agricole_Friuladria_Tennis_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Crédit Agricole Suisse Open Gstaad 2013?", "Was ist der Standort von Crédit Agricole Suisse Open Gstaad 2013?", "Was war der Standort von Crédit Agricole Suisse Open Gstaad 2013?", "Welcher Ort ist der Standort von Crédit Agricole Suisse Open Gstaad 2013?", "Welcher Ort war der Standort von Crédit Agricole Suisse Open Gstaad 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Crédit_Agricole_Suisse_Open_Gstaad> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Dallas Tennis Classic 2013?", "Was ist der Standort von Dallas Tennis Classic 2013?", "Was war der Standort von Dallas Tennis Classic 2013?", "Welcher Ort ist der Standort von Dallas Tennis Classic 2013?", "Welcher Ort war der Standort von Dallas Tennis Classic 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Dallas_Tennis_Classic> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Delray Beach International Tennis Championships 2013?", "Was ist der Standort von Delray Beach International Tennis Championships 2013?", "Was war der Standort von Delray Beach International Tennis Championships 2013?", "Welcher Ort ist der Standort von Delray Beach International Tennis Championships 2013?", "Welcher Ort war der Standort von Delray Beach International Tennis Championships 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Delray_Beach_International_Tennis_Championships> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Distalnet Tennis Cup 2013?", "Was ist der Standort von Distalnet Tennis Cup 2013?", "Was war der Standort von Distalnet Tennis Cup 2013?", "Welcher Ort ist der Standort von Distalnet Tennis Cup 2013?", "Welcher Ort war der Standort von Distalnet Tennis Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Distalnet_Tennis_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Dubai Duty Free Tennis Championships 2013?", "Was ist der Standort von Dubai Duty Free Tennis Championships 2013?", "Was war der Standort von Dubai Duty Free Tennis Championships 2013?", "Welcher Ort ist der Standort von Dubai Duty Free Tennis Championships 2013?", "Welcher Ort war der Standort von Dubai Duty Free Tennis Championships 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Dubai_Tennis_Championships> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Dunlop World Challenge Tennis Tournament 2013?", "Was ist der Standort von Dunlop World Challenge Tennis Tournament 2013?", "Was war der Standort von Dunlop World Challenge Tennis Tournament 2013?", "Welcher Ort ist der Standort von Dunlop World Challenge Tennis Tournament 2013?", "Welcher Ort war der Standort von Dunlop World Challenge Tennis Tournament 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Dunlop_World_Challenge> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Empire Slovak Open 2013?", "Was ist der Standort von Empire Slovak Open 2013?", "Was war der Standort von Empire Slovak Open 2013?", "Welcher Ort ist der Standort von Empire Slovak Open 2013?", "Welcher Ort war der Standort von Empire Slovak Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Empire_Slovak_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Erste Bank Open 2013?", "Was ist der Standort von Erste Bank Open 2013?", "Was war der Standort von Erste Bank Open 2013?", "Welcher Ort ist der Standort von Erste Bank Open 2013?", "Welcher Ort war der Standort von Erste Bank Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Erste_Bank_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Eskişehir Cup 2013?", "Was ist der Standort von Eskişehir Cup 2013?", "Was war der Standort von Eskişehir Cup 2013?", "Welcher Ort ist der Standort von Eskişehir Cup 2013?", "Welcher Ort war der Standort von Eskişehir Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Eskişehir_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Ethias Trophy 2013?", "Was ist der Standort von Ethias Trophy 2013?", "Was war der Standort von Ethias Trophy 2013?", "Welcher Ort ist der Standort von Ethias Trophy 2013?", "Welcher Ort war der Standort von Ethias Trophy 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Ethias_Trophy> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Tischtennis-Europameisterschaft 2013?", "Was ist der Standort von Tischtennis-Europameisterschaft 2013?", "Was war der Standort von Tischtennis-Europameisterschaft 2013?", "Welcher Ort ist der Standort von Tischtennis-Europameisterschaft 2013?", "Welcher Ort war der Standort von Tischtennis-Europameisterschaft 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_European_Table_Tennis_Championships> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Family Circle Cup 2013?", "Was ist der Standort von Family Circle Cup 2013?", "Was war der Standort von Family Circle Cup 2013?", "Welcher Ort ist der Standort von Family Circle Cup 2013?", "Welcher Ort war der Standort von Family Circle Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Family_Circle_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Fergana Challenger 2013?", "Was ist der Standort von Fergana Challenger 2013?", "Was war der Standort von Fergana Challenger 2013?", "Welcher Ort ist der Standort von Fergana Challenger 2013?", "Welcher Ort war der Standort von Fergana Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Fergana_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Fifth Third Bank Tennis Championships 2013?", "Was ist der Standort von Fifth Third Bank Tennis Championships 2013?", "Was war der Standort von Fifth Third Bank Tennis Championships 2013?", "Welcher Ort ist der Standort von Fifth Third Bank Tennis Championships 2013?", "Welcher Ort war der Standort von Fifth Third Bank Tennis Championships 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Fifth_Third_Bank_Tennis_Championships> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Franken Challenge 2013?", "Was ist der Standort von Franken Challenge 2013?", "Was war der Standort von Franken Challenge 2013?", "Welcher Ort ist der Standort von Franken Challenge 2013?", "Welcher Ort war der Standort von Franken Challenge 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Franken_Challenge> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von French Open 2013?", "Was ist der Standort von French Open 2013?", "Was war der Standort von French Open 2013?", "Welcher Ort ist der Standort von French Open 2013?", "Welcher Ort war der Standort von French Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_French_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Garanti Koza Tournament of Champions 2013?", "Was ist der Standort von Garanti Koza Tournament of Champions 2013?", "Was war der Standort von Garanti Koza Tournament of Champions 2013?", "Welcher Ort ist der Standort von Garanti Koza Tournament of Champions 2013?", "Welcher Ort war der Standort von Garanti Koza Tournament of Champions 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Garanti_Koza_WTA_Tournament_of_Champions> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Nürnberger Gastein Ladies 2013?", "Was ist der Standort von Nürnberger Gastein Ladies 2013?", "Was war der Standort von Nürnberger Gastein Ladies 2013?", "Welcher Ort ist der Standort von Nürnberger Gastein Ladies 2013?", "Welcher Ort war der Standort von Nürnberger Gastein Ladies 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Gastein_Ladies> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Generali Ladies Linz 2013?", "Was ist der Standort von Generali Ladies Linz 2013?", "Was war der Standort von Generali Ladies Linz 2013?", "Welcher Ort ist der Standort von Generali Ladies Linz 2013?", "Welcher Ort war der Standort von Generali Ladies Linz 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Generali_Ladies_Linz> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Geneva Open 2013?", "Was ist der Standort von Geneva Open 2013?", "Was war der Standort von Geneva Open 2013?", "Welcher Ort ist der Standort von Geneva Open 2013?", "Welcher Ort war der Standort von Geneva Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Geneva_Open_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Deutschland 2013?", "Was ist der Standort von Großer Preis von Deutschland 2013?", "Was war der Standort von Großer Preis von Deutschland 2013?", "Welcher Ort ist der Standort von Großer Preis von Deutschland 2013?", "Welcher Ort war der Standort von Großer Preis von Deutschland 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_German_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Grand Prix Hassan II 2013?", "Was ist der Standort von Grand Prix Hassan II 2013?", "Was war der Standort von Grand Prix Hassan II 2013?", "Welcher Ort ist der Standort von Grand Prix Hassan II 2013?", "Welcher Ort war der Standort von Grand Prix Hassan II 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Grand_Prix_Hassan_II> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Grand Prix SAR La Princesse Lalla Meryem 2013?", "Was ist der Standort von Grand Prix SAR La Princesse Lalla Meryem 2013?", "Was war der Standort von Grand Prix SAR La Princesse Lalla Meryem 2013?", "Welcher Ort ist der Standort von Grand Prix SAR La Princesse Lalla Meryem 2013?", "Welcher Ort war der Standort von Grand Prix SAR La Princesse Lalla Meryem 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Grand_Prix_SAR_La_Princesse_Lalla_Meryem> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Guangzhou Open 2013?", "Was ist der Standort von Guangzhou Open 2013?", "Was war der Standort von Guangzhou Open 2013?", "Welcher Ort ist der Standort von Guangzhou Open 2013?", "Welcher Ort war der Standort von Guangzhou Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Guangzhou_International_Women's_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Guimarães Open 2013?", "Was ist der Standort von Guimarães Open 2013?", "Was war der Standort von Guimarães Open 2013?", "Welcher Ort ist der Standort von Guimarães Open 2013?", "Welcher Ort war der Standort von Guimarães Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Guimarães_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Guzzini Challenger 2013?", "Was ist der Standort von Guzzini Challenger 2013?", "Was war der Standort von Guzzini Challenger 2013?", "Welcher Ort ist der Standort von Guzzini Challenger 2013?", "Welcher Ort war der Standort von Guzzini Challenger 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Guzzini_Challenger> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von HP Japan Women’s Open Tennis 2013?", "Was ist der Standort von HP Japan Women’s Open Tennis 2013?", "Was war der Standort von HP Japan Women’s Open Tennis 2013?", "Welcher Ort ist der Standort von HP Japan Women’s Open Tennis 2013?", "Welcher Ort war der Standort von HP Japan Women’s Open Tennis 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_HP_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Hall of Fame Tennis Championships 2013?", "Was ist der Standort von Hall of Fame Tennis Championships 2013?", "Was war der Standort von Hall of Fame Tennis Championships 2013?", "Welcher Ort ist der Standort von Hall of Fame Tennis Championships 2013?", "Welcher Ort war der Standort von Hall of Fame Tennis Championships 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Hall_of_Fame_Tennis_Championships> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Heineken Open 2013?", "Was ist der Standort von Heineken Open 2013?", "Was war der Standort von Heineken Open 2013?", "Welcher Ort ist der Standort von Heineken Open 2013?", "Welcher Ort war der Standort von Heineken Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Heineken_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Hopman Cup 2013?", "Was ist der Standort von Hopman Cup 2013?", "Was war der Standort von Hopman Cup 2013?", "Welcher Ort ist der Standort von Hopman Cup 2013?", "Welcher Ort war der Standort von Hopman Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Hopman_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Ungarn 2013?", "Was ist der Standort von Großer Preis von Ungarn 2013?", "Was war der Standort von Großer Preis von Ungarn 2013?", "Welcher Ort ist der Standort von Großer Preis von Ungarn 2013?", "Welcher Ort war der Standort von Großer Preis von Ungarn 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Hungarian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von IPP Open 2013?", "Was ist der Standort von IPP Open 2013?", "Was war der Standort von IPP Open 2013?", "Welcher Ort ist der Standort von IPP Open 2013?", "Welcher Ort war der Standort von IPP Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_IPP_Open_and_the_Orto-Lääkärit_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von IS Open 2013?", "Was ist der Standort von IS Open 2013?", "Was war der Standort von IS Open 2013?", "Welcher Ort ist der Standort von IS Open 2013?", "Welcher Ort war der Standort von IS Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_IS_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von ITS Cup 2013?", "Was ist der Standort von ITS Cup 2013?", "Was war der Standort von ITS Cup 2013?", "Welcher Ort ist der Standort von ITS Cup 2013?", "Welcher Ort war der Standort von ITS Cup 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_ITS_Cup> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von If Stockholm Open 2013?", "Was ist der Standort von If Stockholm Open 2013?", "Was war der Standort von If Stockholm Open 2013?", "Welcher Ort ist der Standort von If Stockholm Open 2013?", "Welcher Ort war der Standort von If Stockholm Open 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_If_Stockholm_Open> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von Großer Preis von Indien 2013?", "Was ist der Standort von Großer Preis von Indien 2013?", "Was war der Standort von Großer Preis von Indien 2013?", "Welcher Ort ist der Standort von Großer Preis von Indien 2013?", "Welcher Ort war der Standort von Großer Preis von Indien 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/2013_Indian_Grand_Prix> <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt 1943: The Battle of Midway?", "Welcher Agent entwickelte 1943: The Battle of Midway?", "Wer entwickelt 1943: The Battle of Midway?", "Wer entwickelte 1943: The Battle of Midway?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/1943:_The_Battle_of_Midway> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt ADO.NET?", "Welcher Agent entwickelte ADO.NET?", "Wer entwickelt ADO.NET?", "Wer entwickelte ADO.NET?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ADO.NET> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt ADX (Audio)?", "Welcher Agent entwickelte ADX (Audio)?", "Wer entwickelt ADX (Audio)?", "Wer entwickelte ADX (Audio)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/ADX_(file_format)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt AIMMS?", "Welcher Agent entwickelte AIMMS?", "Wer entwickelt AIMMS?", "Wer entwickelte AIMMS?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AIMMS> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt AMD-700-Serie?", "Welcher Agent entwickelte AMD-700-Serie?", "Wer entwickelt AMD-700-Serie?", "Wer entwickelte AMD-700-Serie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/AMD_700_chipset_series> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Love & Lies?", "Welcher Agent entwickelte Love & Lies?", "Wer entwickelt Love & Lies?", "Wer entwickelte Love & Lies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_&_Lies> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Love Alarm?", "Welcher Agent entwickelte Love Alarm?", "Wer entwickelt Love Alarm?", "Wer entwickelte Love Alarm?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_Alarm> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Love in the Moonlight?", "Welcher Agent entwickelte Love in the Moonlight?", "Wer entwickelt Love in the Moonlight?", "Wer entwickelte Love in the Moonlight?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Love_in_the_Moonlight> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Lucifer (Fernsehserie)?", "Welcher Agent entwickelte Lucifer (Fernsehserie)?", "Wer entwickelt Lucifer (Fernsehserie)?", "Wer entwickelte Lucifer (Fernsehserie)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucifer_(TV_series)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Luigi’s Mansion?", "Welcher Agent entwickelte Luigi’s Mansion?", "Wer entwickelt Luigi’s Mansion?", "Wer entwickelte Luigi’s Mansion?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luigi's_Mansion> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Luigi’s Mansion 2?", "Welcher Agent entwickelte Luigi’s Mansion 2?", "Wer entwickelt Luigi’s Mansion 2?", "Wer entwickelte Luigi’s Mansion 2?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luigi's_Mansion:_Dark_Moon> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Luigi’s Mansion 3?", "Welcher Agent entwickelte Luigi’s Mansion 3?", "Wer entwickelt Luigi’s Mansion 3?", "Wer entwickelte Luigi’s Mansion 3?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luigi's_Mansion_3> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Lupin (Fernsehserie)?", "Welcher Agent entwickelte Lupin (Fernsehserie)?", "Wer entwickelt Lupin (Fernsehserie)?", "Wer entwickelte Lupin (Fernsehserie)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lupin_(Philippine_TV_series)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Lutris?", "Welcher Agent entwickelte Lutris?", "Wer entwickelt Lutris?", "Wer entwickelte Lutris?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lutris> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt M*A*S*H (Fernsehserie)?", "Welcher Agent entwickelte M*A*S*H (Fernsehserie)?", "Wer entwickelt M*A*S*H (Fernsehserie)?", "Wer entwickelte M*A*S*H (Fernsehserie)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/M*A*S*H_(TV_series)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt M.U.L.E.?", "Welcher Agent entwickelte M.U.L.E.?", "Wer entwickelt M.U.L.E.?", "Wer entwickelte M.U.L.E.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/M.U.L.E.> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt MAG (Computerspiel)?", "Welcher Agent entwickelte MAG (Computerspiel)?", "Wer entwickelt MAG (Computerspiel)?", "Wer entwickelte MAG (Computerspiel)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MAG_(video_game)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt MAME?", "Welcher Agent entwickelte MAME?", "Wer entwickelt MAME?", "Wer entwickelte MAME?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MAME> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Matlab?", "Welcher Agent entwickelte Matlab?", "Wer entwickelt Matlab?", "Wer entwickelte Matlab?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MATLAB> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt MBASIC?", "Welcher Agent entwickelte MBASIC?", "Wer entwickelt MBASIC?", "Wer entwickelte MBASIC?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MBASIC> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt MDK (Computerspiel)?", "Welcher Agent entwickelte MDK (Computerspiel)?", "Wer entwickelt MDK (Computerspiel)?", "Wer entwickelte MDK (Computerspiel)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MDK_(video_game)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt MEDINA (Software)?", "Welcher Agent entwickelte MEDINA (Software)?", "Wer entwickelt MEDINA (Software)?", "Wer entwickelte MEDINA (Software)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MEDINA> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt MEDUSA?", "Welcher Agent entwickelte MEDUSA?", "Wer entwickelt MEDUSA?", "Wer entwickelte MEDUSA?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MEDUSA> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Minix (Betriebssystem)?", "Welcher Agent entwickelte Minix (Betriebssystem)?", "Wer entwickelt Minix (Betriebssystem)?", "Wer entwickelte Minix (Betriebssystem)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MINIX> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt MIUI?", "Welcher Agent entwickelte MIUI?", "Wer entwickelt MIUI?", "Wer entwickelte MIUI?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MIUI> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt MODE32?", "Welcher Agent entwickelte MODE32?", "Wer entwickelt MODE32?", "Wer entwickelte MODE32?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MODE32> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt MP/M?", "Welcher Agent entwickelte MP/M?", "Wer entwickelt MP/M?", "Wer entwickelte MP/M?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MP/M> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt MPDS?", "Welcher Agent entwickelte MPDS?", "Wer entwickelt MPDS?", "Wer entwickelte MPDS?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MPDS4> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt MS-DOS?", "Welcher Agent entwickelte MS-DOS?", "Wer entwickelt MS-DOS?", "Wer entwickelte MS-DOS?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MS-DOS> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt MS-DOS 4.0 (Multitasking-Betriebssystem)?", "Welcher Agent entwickelte MS-DOS 4.0 (Multitasking-Betriebssystem)?", "Wer entwickelt MS-DOS 4.0 (Multitasking-Betriebssystem)?", "Wer entwickelte MS-DOS 4.0 (Multitasking-Betriebssystem)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MS-DOS_4.0_(multitasking)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt MS-DOS Editor?", "Welcher Agent entwickelte MS-DOS Editor?", "Wer entwickelt MS-DOS Editor?", "Wer entwickelte MS-DOS Editor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MS-DOS_Editor> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt MSBuild?", "Welcher Agent entwickelte MSBuild?", "Wer entwickelt MSBuild?", "Wer entwickelte MSBuild?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MSBuild> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt MSCDEX.EXE?", "Welcher Agent entwickelte MSCDEX.EXE?", "Wer entwickelt MSCDEX.EXE?", "Wer entwickelte MSCDEX.EXE?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MSCDEX> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Multiple Virtual Storage?", "Welcher Agent entwickelte Multiple Virtual Storage?", "Wer entwickelt Multiple Virtual Storage?", "Wer entwickelte Multiple Virtual Storage?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MVS> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt MX vs. ATV Unleashed?", "Welcher Agent entwickelte MX vs. ATV Unleashed?", "Wer entwickelt MX vs. ATV Unleashed?", "Wer entwickelte MX vs. ATV Unleashed?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MX_vs._ATV_Unleashed> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt MacDraw?", "Welcher Agent entwickelte MacDraw?", "Wer entwickelt MacDraw?", "Wer entwickelte MacDraw?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MacDraw> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt MacGyver (2016)?", "Welcher Agent entwickelte MacGyver (2016)?", "Wer entwickelt MacGyver (2016)?", "Wer entwickelte MacGyver (2016)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MacGyver_(2016_TV_series)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt MacOS?", "Welcher Agent entwickelte MacOS?", "Wer entwickelt MacOS?", "Wer entwickelte MacOS?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MacOS> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Mac OS?", "Welcher Agent entwickelte Mac OS?", "Wer entwickelt Mac OS?", "Wer entwickelte Mac OS?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MacOS> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt MacOS Catalina?", "Welcher Agent entwickelte MacOS Catalina?", "Wer entwickelt MacOS Catalina?", "Wer entwickelte MacOS Catalina?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MacOS_Catalina> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt MacOS Mojave?", "Welcher Agent entwickelte MacOS Mojave?", "Wer entwickelt MacOS Mojave?", "Wer entwickelte MacOS Mojave?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MacOS_Mojave> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt MacOS Server?", "Welcher Agent entwickelte MacOS Server?", "Wer entwickelt MacOS Server?", "Wer entwickelte MacOS Server?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MacOS_Server> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt MacOS Sierra?", "Welcher Agent entwickelte MacOS Sierra?", "Wer entwickelt MacOS Sierra?", "Wer entwickelte MacOS Sierra?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MacOS_Sierra> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt MacWWW?", "Welcher Agent entwickelte MacWWW?", "Wer entwickelt MacWWW?", "Wer entwickelte MacWWW?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MacWWW> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt MacWrite?", "Welcher Agent entwickelte MacWrite?", "Wer entwickelt MacWrite?", "Wer entwickelte MacWrite?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MacWrite> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Mac OS 8?", "Welcher Agent entwickelte Mac OS 8?", "Wer entwickelt Mac OS 8?", "Wer entwickelte Mac OS 8?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mac_OS_8> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Mac OS 9?", "Welcher Agent entwickelte Mac OS 9?", "Wer entwickelt Mac OS 9?", "Wer entwickelte Mac OS 9?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mac_OS_9> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Mac OS X 10.0?", "Welcher Agent entwickelte Mac OS X 10.0?", "Wer entwickelt Mac OS X 10.0?", "Wer entwickelte Mac OS X 10.0?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mac_OS_X_10.0> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Mac OS X 10.1?", "Welcher Agent entwickelte Mac OS X 10.1?", "Wer entwickelt Mac OS X 10.1?", "Wer entwickelte Mac OS X 10.1?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mac_OS_X_10.1> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Mac OS X Leopard?", "Welcher Agent entwickelte Mac OS X Leopard?", "Wer entwickelt Mac OS X Leopard?", "Wer entwickelte Mac OS X Leopard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mac_OS_X_Leopard> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Mac OS X Lion?", "Welcher Agent entwickelte Mac OS X Lion?", "Wer entwickelt Mac OS X Lion?", "Wer entwickelte Mac OS X Lion?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mac_OS_X_Lion> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Mac OS X Panther?", "Welcher Agent entwickelte Mac OS X Panther?", "Wer entwickelt Mac OS X Panther?", "Wer entwickelte Mac OS X Panther?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mac_OS_X_Panther> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Mac OS X Public Beta?", "Welcher Agent entwickelte Mac OS X Public Beta?", "Wer entwickelt Mac OS X Public Beta?", "Wer entwickelte Mac OS X Public Beta?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mac_OS_X_Public_Beta> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Mac OS X Snow Leopard?", "Welcher Agent entwickelte Mac OS X Snow Leopard?", "Wer entwickelt Mac OS X Snow Leopard?", "Wer entwickelte Mac OS X Snow Leopard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mac_OS_X_Snow_Leopard> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Mac OS X Tiger?", "Welcher Agent entwickelte Mac OS X Tiger?", "Wer entwickelt Mac OS X Tiger?", "Wer entwickelte Mac OS X Tiger?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mac_OS_X_Tiger> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Machinarium?", "Welcher Agent entwickelte Machinarium?", "Wer entwickelt Machinarium?", "Wer entwickelte Machinarium?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Machinarium> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Maclisp?", "Welcher Agent entwickelte Maclisp?", "Wer entwickelt Maclisp?", "Wer entwickelte Maclisp?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Maclisp> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Macromedia HomeSite?", "Welcher Agent entwickelte Macromedia HomeSite?", "Wer entwickelt Macromedia HomeSite?", "Wer entwickelte Macromedia HomeSite?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Macromedia_HomeSite> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt MadWorld?", "Welcher Agent entwickelte MadWorld?", "Wer entwickelt MadWorld?", "Wer entwickelte MadWorld?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MadWorld> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Mad (Fernsehserie)?", "Welcher Agent entwickelte Mad (Fernsehserie)?", "Wer entwickelt Mad (Fernsehserie)?", "Wer entwickelte Mad (Fernsehserie)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mad_(TV_series)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Verrückt nach dir?", "Welcher Agent entwickelte Verrückt nach dir?", "Wer entwickelt Verrückt nach dir?", "Wer entwickelte Verrückt nach dir?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mad_About_You> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Mad Dog McCree?", "Welcher Agent entwickelte Mad Dog McCree?", "Wer entwickelt Mad Dog McCree?", "Wer entwickelte Mad Dog McCree?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mad_Dog_McCree> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Mad TV?", "Welcher Agent entwickelte Mad TV?", "Wer entwickelt Mad TV?", "Wer entwickelte Mad TV?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mad_TV_(video_game)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Mad Tracks?", "Welcher Agent entwickelte Mad Tracks?", "Wer entwickelt Mad Tracks?", "Wer entwickelte Mad Tracks?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mad_Tracks> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Maemo?", "Welcher Agent entwickelte Maemo?", "Wer entwickelt Maemo?", "Wer entwickelte Maemo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Maemo> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Mafia (Computerspiel)?", "Welcher Agent entwickelte Mafia (Computerspiel)?", "Wer entwickelt Mafia (Computerspiel)?", "Wer entwickelte Mafia (Computerspiel)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mafia_(video_game)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Mafia II?", "Welcher Agent entwickelte Mafia II?", "Wer entwickelt Mafia II?", "Wer entwickelte Mafia II?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mafia_II> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Mafia III?", "Welcher Agent entwickelte Mafia III?", "Wer entwickelt Mafia III?", "Wer entwickelte Mafia III?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mafia_III> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Magic Carpet (Computerspiel)?", "Welcher Agent entwickelte Magic Carpet (Computerspiel)?", "Wer entwickelt Magic Carpet (Computerspiel)?", "Wer entwickelte Magic Carpet (Computerspiel)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Magic_Carpet_(video_game)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Magic Carpet 2?", "Welcher Agent entwickelte Magic Carpet 2?", "Wer entwickelt Magic Carpet 2?", "Wer entwickelte Magic Carpet 2?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Magic_Carpet_2> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Magicka?", "Welcher Agent entwickelte Magicka?", "Wer entwickelt Magicka?", "Wer entwickelte Magicka?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Magicka> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Magix Music Maker?", "Welcher Agent entwickelte Magix Music Maker?", "Wer entwickelt Magix Music Maker?", "Wer entwickelte Magix Music Maker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Magix_Music_Maker> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Puzz Loop?", "Welcher Agent entwickelte Puzz Loop?", "Wer entwickelt Puzz Loop?", "Wer entwickelte Puzz Loop?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Magnetica> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Magnum P.I. (2018)?", "Welcher Agent entwickelte Magnum P.I. (2018)?", "Wer entwickelt Magnum P.I. (2018)?", "Wer entwickelte Magnum P.I. (2018)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Magnum_P.I._(2018_TV_series)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt ZETA?", "Welcher Agent entwickelte ZETA?", "Wer entwickelt ZETA?", "Wer entwickelte ZETA?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Magnussoft_ZETA> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Mail (Unix)?", "Welcher Agent entwickelte Mail (Unix)?", "Wer entwickelt Mail (Unix)?", "Wer entwickelte Mail (Unix)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mail_(Unix)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Mailbox (App)?", "Welcher Agent entwickelte Mailbox (App)?", "Wer entwickelt Mailbox (App)?", "Wer entwickelte Mailbox (App)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mailbox_(application)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Majesty: The Fantasy Kingdom Sim?", "Welcher Agent entwickelte Majesty: The Fantasy Kingdom Sim?", "Wer entwickelt Majesty: The Fantasy Kingdom Sim?", "Wer entwickelte Majesty: The Fantasy Kingdom Sim?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Majesty:_The_Fantasy_Kingdom_Sim> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Major Dad?", "Welcher Agent entwickelte Major Dad?", "Wer entwickelt Major Dad?", "Wer entwickelte Major Dad?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Major_Dad> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Coral (Netzwerk)?", "Welcher Agent entwickelte Coral (Netzwerk)?", "Wer entwickelt Coral (Netzwerk)?", "Wer entwickelte Coral (Netzwerk)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Coral_Content_Distribution_Network> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Core War?", "Welcher Agent entwickelte Core War?", "Wer entwickelt Core War?", "Wer entwickelte Core War?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Core_War> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Corel Presentations?", "Welcher Agent entwickelte Corel Presentations?", "Wer entwickelt Corel Presentations?", "Wer entwickelte Corel Presentations?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Corel_Presentations> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Unix to Unix Copy?", "Welcher Agent entwickelte Unix to Unix Copy?", "Wer entwickelt Unix to Unix Copy?", "Wer entwickelte Unix to Unix Copy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/UUCP> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Ubuntu?", "Welcher Agent entwickelte Ubuntu?", "Wer entwickelt Ubuntu?", "Wer entwickelte Ubuntu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ubuntu> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Ubuntu Kylin?", "Welcher Agent entwickelte Ubuntu Kylin?", "Wer entwickelt Ubuntu Kylin?", "Wer entwickelte Ubuntu Kylin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ubuntu_Kylin> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Ubuntu One?", "Welcher Agent entwickelte Ubuntu One?", "Wer entwickelt Ubuntu One?", "Wer entwickelte Ubuntu One?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ubuntu_One> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Ubuntu Touch?", "Welcher Agent entwickelte Ubuntu Touch?", "Wer entwickelt Ubuntu Touch?", "Wer entwickelte Ubuntu Touch?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ubuntu_Touch> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Udev?", "Welcher Agent entwickelte Udev?", "Wer entwickelt Udev?", "Wer entwickelte Udev?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Udev> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Ugly Americans?", "Welcher Agent entwickelte Ugly Americans?", "Wer entwickelt Ugly Americans?", "Wer entwickelte Ugly Americans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ugly_Americans_(TV_series)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Ugly Betty?", "Welcher Agent entwickelte Ugly Betty?", "Wer entwickelt Ugly Betty?", "Wer entwickelte Ugly Betty?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ugly_Betty> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Ulead MediaStudio Pro?", "Welcher Agent entwickelte Ulead MediaStudio Pro?", "Wer entwickelt Ulead MediaStudio Pro?", "Wer entwickelte Ulead MediaStudio Pro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ulead_MediaStudio_Pro> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Ultima IX: Ascension?", "Welcher Agent entwickelte Ultima IX: Ascension?", "Wer entwickelt Ultima IX: Ascension?", "Wer entwickelte Ultima IX: Ascension?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ultima_IX:_Ascension> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Ultima Underworld: The Stygian Abyss?", "Welcher Agent entwickelte Ultima Underworld: The Stygian Abyss?", "Wer entwickelt Ultima Underworld: The Stygian Abyss?", "Wer entwickelte Ultima Underworld: The Stygian Abyss?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ultima_Underworld:_The_Stygian_Abyss> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Ultima VI: The False Prophet?", "Welcher Agent entwickelte Ultima VI: The False Prophet?", "Wer entwickelt Ultima VI: The False Prophet?", "Wer entwickelte Ultima VI: The False Prophet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ultima_VI:_The_False_Prophet> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Ultima VII: The Black Gate?", "Welcher Agent entwickelte Ultima VII: The Black Gate?", "Wer entwickelt Ultima VII: The Black Gate?", "Wer entwickelte Ultima VII: The Black Gate?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ultima_VII:_The_Black_Gate> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Der ultimative Spider-Man (Fernsehserie)?", "Welcher Agent entwickelte Der ultimative Spider-Man (Fernsehserie)?", "Wer entwickelt Der ultimative Spider-Man (Fernsehserie)?", "Wer entwickelte Der ultimative Spider-Man (Fernsehserie)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ultimate_Spider-Man_(TV_series)> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Ultra Street Fighter II: The Final Challengers?", "Welcher Agent entwickelte Ultra Street Fighter II: The Final Challengers?", "Wer entwickelt Ultra Street Fighter II: The Final Challengers?", "Wer entwickelte Ultra Street Fighter II: The Final Challengers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ultra_Street_Fighter_II:_The_Final_Challengers> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Ultrix?", "Welcher Agent entwickelte Ultrix?", "Wer entwickelt Ultrix?", "Wer entwickelte Ultrix?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ultrix> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Uncharted: Drakes Schicksal?", "Welcher Agent entwickelte Uncharted: Drakes Schicksal?", "Wer entwickelt Uncharted: Drakes Schicksal?", "Wer entwickelte Uncharted: Drakes Schicksal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Uncharted:_Drake's_Fortune> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Uncharted: The Lost Legacy?", "Welcher Agent entwickelte Uncharted: The Lost Legacy?", "Wer entwickelt Uncharted: The Lost Legacy?", "Wer entwickelte Uncharted: The Lost Legacy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Uncharted:_The_Lost_Legacy> <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Filmjahr 1912?", "Wer heiratete Filmjahr 1912?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1912_in_film>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Filmjahr 1917?", "Wer heiratete Filmjahr 1917?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1917_in_film>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Filmjahr 1942?", "Wer heiratete Filmjahr 1942?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1942_in_film>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Filmjahr 1943?", "Wer heiratete Filmjahr 1943?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1943_in_film>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Filmjahr 1945?", "Wer heiratete Filmjahr 1945?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1945_in_film>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Filmjahr 1947?", "Wer heiratete Filmjahr 1947?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1947_in_film>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete NFL 1950?", "Wer heiratete NFL 1950?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1950_NFL_season>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Filmjahr 1950?", "Wer heiratete Filmjahr 1950?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1950_in_film>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Filmjahr 1951?", "Wer heiratete Filmjahr 1951?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1951_in_film>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Filmjahr 1953?", "Wer heiratete Filmjahr 1953?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1953_in_film>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Filmjahr 1959?", "Wer heiratete Filmjahr 1959?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1959_in_film>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Automobil-Weltmeisterschaft 1960?", "Wer heiratete Automobil-Weltmeisterschaft 1960?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1960_Formula_One_season>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete NFL 1960?", "Wer heiratete NFL 1960?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1960_NFL_season>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Filmjahr 1960?", "Wer heiratete Filmjahr 1960?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/1960_in_film>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Präsidentschaftswahl in Venezuela 2013?", "Wer heiratete Präsidentschaftswahl in Venezuela 2013?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/2013_Venezuelan_presidential_election>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Olympische Sommerspiele 2016?", "Wer heiratete Olympische Sommerspiele 2016?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/2016_Summer_Olympics>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Britische Unterhauswahl 2017?", "Wer heiratete Britische Unterhauswahl 2017?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/2017_United_Kingdom_general_election>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Grammy Awards 1963?", "Wer heiratete Grammy Awards 1963?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/5th_Annual_Grammy_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Oscarverleihung 1989?", "Wer heiratete Oscarverleihung 1989?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/61st_Academy_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Golden Globe Awards 2006?", "Wer heiratete Golden Globe Awards 2006?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/63rd_Golden_Globe_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Oscarverleihung 1992?", "Wer heiratete Oscarverleihung 1992?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/64th_Academy_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Oscarverleihung 1994?", "Wer heiratete Oscarverleihung 1994?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/66th_Academy_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Golden Globe Awards 2010?", "Wer heiratete Golden Globe Awards 2010?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/67th_Golden_Globe_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Primetime-Emmy-Verleihung 2019?", "Wer heiratete Primetime-Emmy-Verleihung 2019?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/71st_Primetime_Emmy_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Oscarverleihung 2000?", "Wer heiratete Oscarverleihung 2000?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/72nd_Academy_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Oscarverleihung 2004?", "Wer heiratete Oscarverleihung 2004?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/76th_Academy_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Oscarverleihung 2016?", "Wer heiratete Oscarverleihung 2016?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/88th_Academy_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Primetime-Emmy-Verleihung 1956?", "Wer heiratete Primetime-Emmy-Verleihung 1956?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/8th_Primetime_Emmy_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Oscarverleihung 1937?", "Wer heiratete Oscarverleihung 1937?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/9th_Academy_Awards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lowell Sherman?", "Wer heiratete Lowell Sherman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lowell_Sherman>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Loïc Le Meur?", "Wer heiratete Loïc Le Meur?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Loïc_Le_Meur>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lu Xun?", "Wer heiratete Lu Xun?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lu_Xun>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Luana Patten?", "Wer heiratete Luana Patten?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Luana_Patten>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Luang Prabang?", "Wer heiratete Luang Prabang?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Luang_Prabang>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Luc Besson?", "Wer heiratete Luc Besson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Luc_Besson>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Luc Tuymans?", "Wer heiratete Luc Tuymans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Luc_Tuymans>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucas Neff?", "Wer heiratete Lucas Neff?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucas_Neff>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucia Migliaccio?", "Wer heiratete Lucia Migliaccio?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucia_Migliaccio>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucia Moholy?", "Wer heiratete Lucia Moholy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucia_Moholy>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucia St. Clair Robson?", "Wer heiratete Lucia St. Clair Robson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucia_St._Clair_Robson>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucian Freud?", "Wer heiratete Lucian Freud?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucian_Freud>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Luciana Paluzzi?", "Wer heiratete Luciana Paluzzi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Luciana_Paluzzi>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Luciano Ercoli?", "Wer heiratete Luciano Ercoli?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Luciano_Ercoli>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Luciano Martino?", "Wer heiratete Luciano Martino?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Luciano_Martino>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucie Arnaz?", "Wer heiratete Lucie Arnaz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucie_Arnaz>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucie Aubrac?", "Wer heiratete Lucie Aubrac?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucie_Aubrac>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucie Mannheim?", "Wer heiratete Lucie Mannheim?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucie_Mannheim>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucien Ballard?", "Wer heiratete Lucien Ballard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucien_Ballard>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucien Bonaparte?", "Wer heiratete Lucien Bonaparte?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucien_Bonaparte>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucien Goldmann?", "Wer heiratete Lucien Goldmann?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucien_Goldmann>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucien Pissarro?", "Wer heiratete Lucien Pissarro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucien_Pissarro>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucienne Day?", "Wer heiratete Lucienne Day?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucienne_Day>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucienne von Rochefort?", "Wer heiratete Lucienne von Rochefort?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucienne_de_Rochefort>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucile Browne?", "Wer heiratete Lucile Browne?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucile_Browne>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucile Hadzihalilovic?", "Wer heiratete Lucile Hadzihalilovic?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucile_Hadžihalilović>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucile Watson?", "Wer heiratete Lucile Watson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucile_Watson>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucilla?", "Wer heiratete Lucilla?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucilla>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucille Ball?", "Wer heiratete Lucille Ball?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucille_Ball>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucina da Costa Gomez-Matheeuws?", "Wer heiratete Lucina da Costa Gomez-Matheeuws?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucina_da_Costa_Gomez-Matheeuws>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucinda Jenney?", "Wer heiratete Lucinda Jenney?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucinda_Jenney>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Paullus Aemilius Lepidus?", "Wer heiratete Paullus Aemilius Lepidus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucius_Aemilius_Lepidus_Paullus_(consul_34_BC)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucius Aemilius Paullus (Konsul 1)?", "Wer heiratete Lucius Aemilius Paullus (Konsul 1)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucius_Aemilius_Paullus_(consul_1)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucius Cornelius Cinna (Prätor 44 v. Chr.)?", "Wer heiratete Lucius Cornelius Cinna (Prätor 44 v. Chr.)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucius_Cornelius_Cinna_(suffect_consul)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucius Domitius Ahenobarbus (Konsul 54 v. Chr.)?", "Wer heiratete Lucius Domitius Ahenobarbus (Konsul 54 v. Chr.)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucius_Domitius_Ahenobarbus_(consul_54_BC)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucius Marcius Philippus (Konsul 56 v. Chr.)?", "Wer heiratete Lucius Marcius Philippus (Konsul 56 v. Chr.)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucius_Marcius_Philippus_(consul_56_BC)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucius Tarquinius Superbus?", "Wer heiratete Lucius Tarquinius Superbus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucius_Tarquinius_Superbus>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucius Verus?", "Wer heiratete Lucius Verus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucius_Verus>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucretia Garfield?", "Wer heiratete Lucretia Garfield?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucretia_Garfield>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucrezia Borgia?", "Wer heiratete Lucrezia Borgia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucrezia_Borgia>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucrezia Tornabuoni?", "Wer heiratete Lucrezia Tornabuoni?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucrezia_Tornabuoni>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucius Licinius Lucullus?", "Wer heiratete Lucius Licinius Lucullus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucullus>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucy Christiana Duff Gordon?", "Wer heiratete Lucy Christiana Duff Gordon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucy,_Lady_Duff-Gordon>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucy-Jo Hudson?", "Wer heiratete Lucy-Jo Hudson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucy-Jo_Hudson>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucy Aharish?", "Wer heiratete Lucy Aharish?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucy_Aharish>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucy Baxley?", "Wer heiratete Lucy Baxley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucy_Baxley>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucy Brown?", "Wer heiratete Lucy Brown?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucy_Brown>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucy Cohu?", "Wer heiratete Lucy Cohu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucy_Cohu>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucy Davis (Schauspielerin)?", "Wer heiratete Lucy Davis (Schauspielerin)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucy_Davis>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucy Doraine?", "Wer heiratete Lucy Doraine?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucy_Doraine>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucy Gaskell?", "Wer heiratete Lucy Gaskell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucy_Gaskell>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucy Lawless?", "Wer heiratete Lucy Lawless?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucy_Lawless>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucy Mercer?", "Wer heiratete Lucy Mercer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucy_Mercer_Rutherfurd>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucy Parsons?", "Wer heiratete Lucy Parsons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucy_Parsons>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucy Scott?", "Wer heiratete Lucy Scott?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucy_Scott>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucy Shapiro?", "Wer heiratete Lucy Shapiro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucy_Shapiro>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucy Stone?", "Wer heiratete Lucy Stone?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucy_Stone>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Lucy Hayes?", "Wer heiratete Lucy Hayes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lucy_Webb_Hayes>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Ludger Stühlmeyer?", "Wer heiratete Ludger Stühlmeyer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ludger_Stühlmeyer>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Ludmila Mikaël?", "Wer heiratete Ludmila Mikaël?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ludmila_Mikaël>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Ludmilla von Böhmen?", "Wer heiratete Ludmilla von Böhmen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ludmila_of_Bohemia>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Ludmilla von Podiebrad?", "Wer heiratete Ludmilla von Podiebrad?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ludmila_of_Poděbrady>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Ljudmila Iwanowna Turischtschewa?", "Wer heiratete Ljudmila Iwanowna Turischtschewa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ludmilla_Tourischeva>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Ludmilla von Böhmen (um 1170)?", "Wer heiratete Ludmilla von Böhmen (um 1170)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ludmilla_of_Bohemia>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Ludovic Kennedy?", "Wer heiratete Ludovic Kennedy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ludovic_Kennedy>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Ludovico III. Gonzaga?", "Wer heiratete Ludovico III. Gonzaga?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ludovico_III_Gonzaga,_Marquis_of_Mantua>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Ludovico Sforza?", "Wer heiratete Ludovico Sforza?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ludovico_Sforza>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Ludovica Margaretha von Zweibrücken-Bitsch?", "Wer heiratete Ludovica Margaretha von Zweibrücken-Bitsch?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ludowika_Margaretha_of_Zweibrücken-Bitsch>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Ludwig Erdwin Seyler?", "Wer heiratete Ludwig Erdwin Seyler?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ludwig_Erdwin_Seyler>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Ludwig III. (Bayern)?", "Wer heiratete Ludwig III. (Bayern)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ludwig_III_of_Bavaria>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Ludwig Adolf Friedrich zu Sayn-Wittgenstein-Sayn?", "Wer heiratete Ludwig Adolf Friedrich zu Sayn-Wittgenstein-Sayn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ludwig_zu_Sayn-Wittgenstein-Berleburg>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Ronald McDonald?", "Welche Person spielte Ronald McDonald?", "Wer spielt Ronald McDonald?", "Wer spielte Ronald McDonald?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ronald_McDonald> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt George Smiley?", "Welche Person spielte George Smiley?", "Wer spielt George Smiley?", "Wer spielte George Smiley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/George_Smiley> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Bowser (Computerspielfigur)?", "Welche Person spielte Bowser (Computerspielfigur)?", "Wer spielt Bowser (Computerspielfigur)?", "Wer spielte Bowser (Computerspielfigur)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Bowser_(character)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Leia Organa?", "Welche Person spielte Leia Organa?", "Wer spielt Leia Organa?", "Wer spielte Leia Organa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Princess_Leia> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Hannibal Lecter?", "Welche Person spielte Hannibal Lecter?", "Wer spielt Hannibal Lecter?", "Wer spielte Hannibal Lecter?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Hannibal_Lecter> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Horatio Hornblower?", "Welche Person spielte Horatio Hornblower?", "Wer spielt Horatio Hornblower?", "Wer spielte Horatio Hornblower?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Horatio_Hornblower> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Obi-Wan Kenobi?", "Welche Person spielte Obi-Wan Kenobi?", "Wer spielt Obi-Wan Kenobi?", "Wer spielte Obi-Wan Kenobi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Obi-Wan_Kenobi> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Francis Underwood?", "Welche Person spielte Francis Underwood?", "Wer spielt Francis Underwood?", "Wer spielte Francis Underwood?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Frank_Underwood_(House_of_Cards)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Fu Manchu?", "Welche Person spielte Fu Manchu?", "Wer spielt Fu Manchu?", "Wer spielte Fu Manchu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Fu_Manchu> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Ginny Weasley?", "Welche Person spielte Ginny Weasley?", "Wer spielt Ginny Weasley?", "Wer spielte Ginny Weasley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ginny_Weasley> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Minerva McGonagall?", "Welche Person spielte Minerva McGonagall?", "Wer spielt Minerva McGonagall?", "Wer spielte Minerva McGonagall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Minerva_McGonagall> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Nancy Drew?", "Welche Person spielte Nancy Drew?", "Wer spielt Nancy Drew?", "Wer spielte Nancy Drew?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Nancy_Drew> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Q (James Bond)?", "Welche Person spielte Q (James Bond)?", "Wer spielt Q (James Bond)?", "Wer spielte Q (James Bond)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Q_(James_Bond)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Robin Hood?", "Welche Person spielte Robin Hood?", "Wer spielt Robin Hood?", "Wer spielte Robin Hood?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Robin_Hood> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Figuren und magische Gegenstände in der Unendlichen Geschichte?", "Welche Person spielte Figuren und magische Gegenstände in der Unendlichen Geschichte?", "Wer spielt Figuren und magische Gegenstände in der Unendlichen Geschichte?", "Wer spielte Figuren und magische Gegenstände in der Unendlichen Geschichte?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_The_Neverending_Story_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Liste der Figuren aus Navy CIS?", "Welche Person spielte Liste der Figuren aus Navy CIS?", "Wer spielt Liste der Figuren aus Navy CIS?", "Wer spielte Liste der Figuren aus Navy CIS?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_NCIS_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Jay und Silent Bob?", "Welche Person spielte Jay und Silent Bob?", "Wer spielt Jay und Silent Bob?", "Wer spielte Jay und Silent Bob?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Jay_and_Silent_Bob> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Reginald Jeeves?", "Welche Person spielte Reginald Jeeves?", "Wer spielt Reginald Jeeves?", "Wer spielte Reginald Jeeves?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Jeeves> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt John Carter vom Mars?", "Welche Person spielte John Carter vom Mars?", "Wer spielt John Carter vom Mars?", "Wer spielte John Carter vom Mars?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/John_Carter_of_Mars> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Kurt Wallander?", "Welche Person spielte Kurt Wallander?", "Wer spielt Kurt Wallander?", "Wer spielte Kurt Wallander?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Kurt_Wallander> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Vesper Lynd?", "Welche Person spielte Vesper Lynd?", "Wer spielt Vesper Lynd?", "Wer spielte Vesper Lynd?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Vesper_Lynd> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Miss Marple?", "Welche Person spielte Miss Marple?", "Wer spielt Miss Marple?", "Wer spielte Miss Marple?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Miss_Marple> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Mister Magoo?", "Welche Person spielte Mister Magoo?", "Wer spielt Mister Magoo?", "Wer spielte Mister Magoo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mr._Magoo> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Iago?", "Welche Person spielte Iago?", "Wer spielt Iago?", "Wer spielte Iago?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Iago> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Jason Voorhees?", "Welche Person spielte Jason Voorhees?", "Wer spielt Jason Voorhees?", "Wer spielte Jason Voorhees?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Jason_Voorhees> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Saul Goodman?", "Welche Person spielte Saul Goodman?", "Wer spielt Saul Goodman?", "Wer spielte Saul Goodman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Saul_Goodman> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt George Edward Challenger?", "Welche Person spielte George Edward Challenger?", "Wer spielt George Edward Challenger?", "Wer spielte George Edward Challenger?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Professor_Challenger> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Tom Ripley?", "Welche Person spielte Tom Ripley?", "Wer spielt Tom Ripley?", "Wer spielte Tom Ripley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Tom_Ripley> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Arthur Hastings?", "Welche Person spielte Arthur Hastings?", "Wer spielt Arthur Hastings?", "Wer spielte Arthur Hastings?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Arthur_Hastings> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Barbara Jeziorkowska?", "Welche Person spielte Barbara Jeziorkowska?", "Wer spielt Barbara Jeziorkowska?", "Wer spielte Barbara Jeziorkowska?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Barbara_Jeziorkowska> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Paul Temple?", "Welche Person spielte Paul Temple?", "Wer spielt Paul Temple?", "Wer spielte Paul Temple?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Paul_Temple> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Anakin Skywalker?", "Welche Person spielte Anakin Skywalker?", "Wer spielt Anakin Skywalker?", "Wer spielte Anakin Skywalker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Darth_Vader> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Darth Vader?", "Welche Person spielte Darth Vader?", "Wer spielt Darth Vader?", "Wer spielte Darth Vader?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Darth_Vader> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Perry Mason?", "Welche Person spielte Perry Mason?", "Wer spielt Perry Mason?", "Wer spielte Perry Mason?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Perry_Mason> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Janice Rand?", "Welche Person spielte Janice Rand?", "Wer spielt Janice Rand?", "Wer spielte Janice Rand?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Janice_Rand> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Richter Di?", "Welche Person spielte Richter Di?", "Wer spielt Richter Di?", "Wer spielte Richter Di?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Judge_Dee> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Elmo (Sesamstraße)?", "Welche Person spielte Elmo (Sesamstraße)?", "Wer spielt Elmo (Sesamstraße)?", "Wer spielte Elmo (Sesamstraße)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Elmo> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Fagin (Charles Dickens)?", "Welche Person spielte Fagin (Charles Dickens)?", "Wer spielt Fagin (Charles Dickens)?", "Wer spielte Fagin (Charles Dickens)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Fagin> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Ender Wiggin?", "Welche Person spielte Ender Wiggin?", "Wer spielt Ender Wiggin?", "Wer spielte Ender Wiggin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ender_Wiggin> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Hercule Poirot?", "Welche Person spielte Hercule Poirot?", "Wer spielt Hercule Poirot?", "Wer spielte Hercule Poirot?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Hercule_Poirot> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Zefram Cochrane?", "Welche Person spielte Zefram Cochrane?", "Wer spielt Zefram Cochrane?", "Wer spielte Zefram Cochrane?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Zefram_Cochrane> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Philip Marlowe?", "Welche Person spielte Philip Marlowe?", "Wer spielt Philip Marlowe?", "Wer spielte Philip Marlowe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Philip_Marlowe> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Sweeney Todd?", "Welche Person spielte Sweeney Todd?", "Wer spielt Sweeney Todd?", "Wer spielte Sweeney Todd?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Sweeney_Todd> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Simon Templar?", "Welche Person spielte Simon Templar?", "Wer spielt Simon Templar?", "Wer spielte Simon Templar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Saint_(Simon_Templar)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Claud_Eustace_Teal?", "Welche Person spielte http://dbpedia.org/resource/Claud_Eustace_Teal?", "Wer spielt http://dbpedia.org/resource/Claud_Eustace_Teal?", "Wer spielte http://dbpedia.org/resource/Claud_Eustace_Teal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Claud_Eustace_Teal> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Salvo_Montalbano?", "Welche Person spielte http://dbpedia.org/resource/Salvo_Montalbano?", "Wer spielt http://dbpedia.org/resource/Salvo_Montalbano?", "Wer spielte http://dbpedia.org/resource/Salvo_Montalbano?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Salvo_Montalbano> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/List_of_NCIS:_New_Orleans_characters?", "Welche Person spielte http://dbpedia.org/resource/List_of_NCIS:_New_Orleans_characters?", "Wer spielt http://dbpedia.org/resource/List_of_NCIS:_New_Orleans_characters?", "Wer spielte http://dbpedia.org/resource/List_of_NCIS:_New_Orleans_characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_NCIS:_New_Orleans_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/List_of_High_School_Musical_characters?", "Welche Person spielte http://dbpedia.org/resource/List_of_High_School_Musical_characters?", "Wer spielt http://dbpedia.org/resource/List_of_High_School_Musical_characters?", "Wer spielte http://dbpedia.org/resource/List_of_High_School_Musical_characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_High_School_Musical_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Gilbert_Blythe?", "Welche Person spielte http://dbpedia.org/resource/Gilbert_Blythe?", "Wer spielt http://dbpedia.org/resource/Gilbert_Blythe?", "Wer spielte http://dbpedia.org/resource/Gilbert_Blythe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gilbert_Blythe> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Anatole_Kuragin?", "Welche Person spielte http://dbpedia.org/resource/Anatole_Kuragin?", "Wer spielt http://dbpedia.org/resource/Anatole_Kuragin?", "Wer spielte http://dbpedia.org/resource/Anatole_Kuragin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Anatole_Kuragin> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/MacGyver?", "Welche Person spielte http://dbpedia.org/resource/MacGyver?", "Wer spielt http://dbpedia.org/resource/MacGyver?", "Wer spielte http://dbpedia.org/resource/MacGyver?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/MacGyver> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Louanne_Katraine?", "Welche Person spielte http://dbpedia.org/resource/Louanne_Katraine?", "Wer spielt http://dbpedia.org/resource/Louanne_Katraine?", "Wer spielte http://dbpedia.org/resource/Louanne_Katraine?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Louanne_Katraine> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Pablo_Catáneo?", "Welche Person spielte http://dbpedia.org/resource/Pablo_Catáneo?", "Wer spielt http://dbpedia.org/resource/Pablo_Catáneo?", "Wer spielte http://dbpedia.org/resource/Pablo_Catáneo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Pablo_Catáneo> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/List_of_Coronation_Street_characters_(2009)?", "Welche Person spielte http://dbpedia.org/resource/List_of_Coronation_Street_characters_(2009)?", "Wer spielt http://dbpedia.org/resource/List_of_Coronation_Street_characters_(2009)?", "Wer spielte http://dbpedia.org/resource/List_of_Coronation_Street_characters_(2009)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Coronation_Street_characters_(2009)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Lucy_and_Ricky_Ricardo?", "Welche Person spielte http://dbpedia.org/resource/Lucy_and_Ricky_Ricardo?", "Wer spielt http://dbpedia.org/resource/Lucy_and_Ricky_Ricardo?", "Wer spielte http://dbpedia.org/resource/Lucy_and_Ricky_Ricardo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_and_Ricky_Ricardo> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/List_of_General_Hospital_characters_(1960s)?", "Welche Person spielte http://dbpedia.org/resource/List_of_General_Hospital_characters_(1960s)?", "Wer spielt http://dbpedia.org/resource/List_of_General_Hospital_characters_(1960s)?", "Wer spielte http://dbpedia.org/resource/List_of_General_Hospital_characters_(1960s)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_General_Hospital_characters_(1960s)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Elizabeth_Swann?", "Welche Person spielte http://dbpedia.org/resource/Elizabeth_Swann?", "Wer spielt http://dbpedia.org/resource/Elizabeth_Swann?", "Wer spielte http://dbpedia.org/resource/Elizabeth_Swann?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Elizabeth_Swann> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Jasmine_Burrows?", "Welche Person spielte http://dbpedia.org/resource/Jasmine_Burrows?", "Wer spielt http://dbpedia.org/resource/Jasmine_Burrows?", "Wer spielte http://dbpedia.org/resource/Jasmine_Burrows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Jasmine_Burrows> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/List_of_Coronation_Street_characters_(2002)?", "Welche Person spielte http://dbpedia.org/resource/List_of_Coronation_Street_characters_(2002)?", "Wer spielt http://dbpedia.org/resource/List_of_Coronation_Street_characters_(2002)?", "Wer spielte http://dbpedia.org/resource/List_of_Coronation_Street_characters_(2002)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Coronation_Street_characters_(2002)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/List_of_Hollyoaks_characters_(2018)?", "Welche Person spielte http://dbpedia.org/resource/List_of_Hollyoaks_characters_(2018)?", "Wer spielt http://dbpedia.org/resource/List_of_Hollyoaks_characters_(2018)?", "Wer spielte http://dbpedia.org/resource/List_of_Hollyoaks_characters_(2018)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Hollyoaks_characters_(2018)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Lisa_Fowler?", "Welche Person spielte http://dbpedia.org/resource/Lisa_Fowler?", "Wer spielt http://dbpedia.org/resource/Lisa_Fowler?", "Wer spielte http://dbpedia.org/resource/Lisa_Fowler?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lisa_Fowler> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Nyssa_(Doctor_Who)?", "Welche Person spielte http://dbpedia.org/resource/Nyssa_(Doctor_Who)?", "Wer spielt http://dbpedia.org/resource/Nyssa_(Doctor_Who)?", "Wer spielte http://dbpedia.org/resource/Nyssa_(Doctor_Who)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Nyssa_(Doctor_Who)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/List_of_Primeval_characters?", "Welche Person spielte http://dbpedia.org/resource/List_of_Primeval_characters?", "Wer spielt http://dbpedia.org/resource/List_of_Primeval_characters?", "Wer spielte http://dbpedia.org/resource/List_of_Primeval_characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Primeval_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Hilda_Spellman?", "Welche Person spielte http://dbpedia.org/resource/Hilda_Spellman?", "Wer spielt http://dbpedia.org/resource/Hilda_Spellman?", "Wer spielte http://dbpedia.org/resource/Hilda_Spellman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Hilda_Spellman> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Dawn_Tinsley?", "Welche Person spielte http://dbpedia.org/resource/Dawn_Tinsley?", "Wer spielt http://dbpedia.org/resource/Dawn_Tinsley?", "Wer spielte http://dbpedia.org/resource/Dawn_Tinsley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dawn_Tinsley> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/List_of_Trailer_Park_Boys_characters?", "Welche Person spielte http://dbpedia.org/resource/List_of_Trailer_Park_Boys_characters?", "Wer spielt http://dbpedia.org/resource/List_of_Trailer_Park_Boys_characters?", "Wer spielte http://dbpedia.org/resource/List_of_Trailer_Park_Boys_characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Trailer_Park_Boys_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Lily_Walsh?", "Welche Person spielte http://dbpedia.org/resource/Lily_Walsh?", "Wer spielt http://dbpedia.org/resource/Lily_Walsh?", "Wer spielte http://dbpedia.org/resource/Lily_Walsh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lily_Walsh> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Tilly_Evans?", "Welche Person spielte http://dbpedia.org/resource/Tilly_Evans?", "Wer spielt http://dbpedia.org/resource/Tilly_Evans?", "Wer spielte http://dbpedia.org/resource/Tilly_Evans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Tilly_Evans> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/List_of_Neighbours_characters_(2020)?", "Welche Person spielte http://dbpedia.org/resource/List_of_Neighbours_characters_(2020)?", "Wer spielt http://dbpedia.org/resource/List_of_Neighbours_characters_(2020)?", "Wer spielte http://dbpedia.org/resource/List_of_Neighbours_characters_(2020)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Neighbours_characters_(2020)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/List_of_Hollyoaks_characters_(2004)?", "Welche Person spielte http://dbpedia.org/resource/List_of_Hollyoaks_characters_(2004)?", "Wer spielt http://dbpedia.org/resource/List_of_Hollyoaks_characters_(2004)?", "Wer spielte http://dbpedia.org/resource/List_of_Hollyoaks_characters_(2004)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Hollyoaks_characters_(2004)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/List_of_Coronation_Street_characters_(2007)?", "Welche Person spielte http://dbpedia.org/resource/List_of_Coronation_Street_characters_(2007)?", "Wer spielt http://dbpedia.org/resource/List_of_Coronation_Street_characters_(2007)?", "Wer spielte http://dbpedia.org/resource/List_of_Coronation_Street_characters_(2007)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Coronation_Street_characters_(2007)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Bethany_Platt?", "Welche Person spielte http://dbpedia.org/resource/Bethany_Platt?", "Wer spielt http://dbpedia.org/resource/Bethany_Platt?", "Wer spielte http://dbpedia.org/resource/Bethany_Platt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Bethany_Platt> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Kirsty_Clements?", "Welche Person spielte http://dbpedia.org/resource/Kirsty_Clements?", "Wer spielt http://dbpedia.org/resource/Kirsty_Clements?", "Wer spielte http://dbpedia.org/resource/Kirsty_Clements?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Kirsty_Clements> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Lady_Marian?", "Welche Person spielte http://dbpedia.org/resource/Lady_Marian?", "Wer spielt http://dbpedia.org/resource/Lady_Marian?", "Wer spielte http://dbpedia.org/resource/Lady_Marian?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lady_Marian> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/List_of_Robin_Hood_(2006_TV_series)_characters?", "Welche Person spielte http://dbpedia.org/resource/List_of_Robin_Hood_(2006_TV_series)_characters?", "Wer spielt http://dbpedia.org/resource/List_of_Robin_Hood_(2006_TV_series)_characters?", "Wer spielte http://dbpedia.org/resource/List_of_Robin_Hood_(2006_TV_series)_characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Robin_Hood_(2006_TV_series)_characters> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Maid_Marian?", "Welche Person spielte http://dbpedia.org/resource/Maid_Marian?", "Wer spielt http://dbpedia.org/resource/Maid_Marian?", "Wer spielte http://dbpedia.org/resource/Maid_Marian?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Maid_Marian> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Aria_Montgomery?", "Welche Person spielte http://dbpedia.org/resource/Aria_Montgomery?", "Wer spielt http://dbpedia.org/resource/Aria_Montgomery?", "Wer spielte http://dbpedia.org/resource/Aria_Montgomery?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Aria_Montgomery> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Katy_Keene?", "Welche Person spielte http://dbpedia.org/resource/Katy_Keene?", "Wer spielt http://dbpedia.org/resource/Katy_Keene?", "Wer spielte http://dbpedia.org/resource/Katy_Keene?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Katy_Keene> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Number_Three_(Battlestar_Galactica)?", "Welche Person spielte http://dbpedia.org/resource/Number_Three_(Battlestar_Galactica)?", "Wer spielt http://dbpedia.org/resource/Number_Three_(Battlestar_Galactica)?", "Wer spielte http://dbpedia.org/resource/Number_Three_(Battlestar_Galactica)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Number_Three_(Battlestar_Galactica)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Xena?", "Welche Person spielte http://dbpedia.org/resource/Xena?", "Wer spielt http://dbpedia.org/resource/Xena?", "Wer spielte http://dbpedia.org/resource/Xena?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Xena> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Countess_Palatine_Ingrid_von_Marburg?", "Welche Person spielte http://dbpedia.org/resource/Countess_Palatine_Ingrid_von_Marburg?", "Wer spielt http://dbpedia.org/resource/Countess_Palatine_Ingrid_von_Marburg?", "Wer spielte http://dbpedia.org/resource/Countess_Palatine_Ingrid_von_Marburg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Countess_Palatine_Ingrid_von_Marburg> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Ling_Woo?", "Welche Person spielte http://dbpedia.org/resource/Ling_Woo?", "Wer spielt http://dbpedia.org/resource/Ling_Woo?", "Wer spielte http://dbpedia.org/resource/Ling_Woo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ling_Woo> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Chas_Dingle?", "Welche Person spielte http://dbpedia.org/resource/Chas_Dingle?", "Wer spielt http://dbpedia.org/resource/Chas_Dingle?", "Wer spielte http://dbpedia.org/resource/Chas_Dingle?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Chas_Dingle> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/List_of_The_Bill_characters_(M–P)?", "Welche Person spielte http://dbpedia.org/resource/List_of_The_Bill_characters_(M–P)?", "Wer spielt http://dbpedia.org/resource/List_of_The_Bill_characters_(M–P)?", "Wer spielte http://dbpedia.org/resource/List_of_The_Bill_characters_(M–P)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_The_Bill_characters_(M–P)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Natalie_Evans?", "Welche Person spielte http://dbpedia.org/resource/Natalie_Evans?", "Wer spielt http://dbpedia.org/resource/Natalie_Evans?", "Wer spielte http://dbpedia.org/resource/Natalie_Evans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Natalie_Evans> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Zack_Taylor?", "Welche Person spielte http://dbpedia.org/resource/Zack_Taylor?", "Wer spielt http://dbpedia.org/resource/Zack_Taylor?", "Wer spielte http://dbpedia.org/resource/Zack_Taylor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Zack_Taylor> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Liu_Kang?", "Welche Person spielte http://dbpedia.org/resource/Liu_Kang?", "Wer spielt http://dbpedia.org/resource/Liu_Kang?", "Wer spielte http://dbpedia.org/resource/Liu_Kang?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Liu_Kang> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Tinker_Bell?", "Welche Person spielte http://dbpedia.org/resource/Tinker_Bell?", "Wer spielt http://dbpedia.org/resource/Tinker_Bell?", "Wer spielte http://dbpedia.org/resource/Tinker_Bell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Tinker_Bell> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Tina_Carter?", "Welche Person spielte http://dbpedia.org/resource/Tina_Carter?", "Wer spielt http://dbpedia.org/resource/Tina_Carter?", "Wer spielte http://dbpedia.org/resource/Tina_Carter?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Tina_Carter> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/List_of_Home_and_Away_characters_(2009)?", "Welche Person spielte http://dbpedia.org/resource/List_of_Home_and_Away_characters_(2009)?", "Wer spielt http://dbpedia.org/resource/List_of_Home_and_Away_characters_(2009)?", "Wer spielte http://dbpedia.org/resource/List_of_Home_and_Away_characters_(2009)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Home_and_Away_characters_(2009)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Gaston_(Beauty_and_the_Beast)?", "Welche Person spielte http://dbpedia.org/resource/Gaston_(Beauty_and_the_Beast)?", "Wer spielt http://dbpedia.org/resource/Gaston_(Beauty_and_the_Beast)?", "Wer spielte http://dbpedia.org/resource/Gaston_(Beauty_and_the_Beast)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gaston_(Beauty_and_the_Beast)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Angelo_Rosetta?", "Welche Person spielte http://dbpedia.org/resource/Angelo_Rosetta?", "Wer spielt http://dbpedia.org/resource/Angelo_Rosetta?", "Wer spielte http://dbpedia.org/resource/Angelo_Rosetta?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Angelo_Rosetta> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/List_of_Hollyoaks_characters_(2016)?", "Welche Person spielte http://dbpedia.org/resource/List_of_Hollyoaks_characters_(2016)?", "Wer spielt http://dbpedia.org/resource/List_of_Hollyoaks_characters_(2016)?", "Wer spielte http://dbpedia.org/resource/List_of_Hollyoaks_characters_(2016)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Hollyoaks_characters_(2016)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Noah_Newman?", "Welche Person spielte http://dbpedia.org/resource/Noah_Newman?", "Wer spielt http://dbpedia.org/resource/Noah_Newman?", "Wer spielte http://dbpedia.org/resource/Noah_Newman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Noah_Newman> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Scotty_Wandell?", "Welche Person spielte http://dbpedia.org/resource/Scotty_Wandell?", "Wer spielt http://dbpedia.org/resource/Scotty_Wandell?", "Wer spielte http://dbpedia.org/resource/Scotty_Wandell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Scotty_Wandell> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/List_of_Neighbours_characters_(2008)?", "Welche Person spielte http://dbpedia.org/resource/List_of_Neighbours_characters_(2008)?", "Wer spielt http://dbpedia.org/resource/List_of_Neighbours_characters_(2008)?", "Wer spielte http://dbpedia.org/resource/List_of_Neighbours_characters_(2008)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Neighbours_characters_(2008)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Romeo_Smith?", "Welche Person spielte http://dbpedia.org/resource/Romeo_Smith?", "Wer spielt http://dbpedia.org/resource/Romeo_Smith?", "Wer spielte http://dbpedia.org/resource/Romeo_Smith?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Romeo_Smith> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/Freddie_McClair?", "Welche Person spielte http://dbpedia.org/resource/Freddie_McClair?", "Wer spielt http://dbpedia.org/resource/Freddie_McClair?", "Wer spielte http://dbpedia.org/resource/Freddie_McClair?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Freddie_McClair> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/William_Adama?", "Welche Person spielte http://dbpedia.org/resource/William_Adama?", "Wer spielt http://dbpedia.org/resource/William_Adama?", "Wer spielte http://dbpedia.org/resource/William_Adama?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/William_Adama> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt http://dbpedia.org/resource/List_of_Neighbours_characters_(2011)?", "Welche Person spielte http://dbpedia.org/resource/List_of_Neighbours_characters_(2011)?", "Wer spielt http://dbpedia.org/resource/List_of_Neighbours_characters_(2011)?", "Wer spielte http://dbpedia.org/resource/List_of_Neighbours_characters_(2011)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/List_of_Neighbours_characters_(2011)> <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Luzifer (Stuck)?", "Was stellte aus Luzifer (Stuck)?", "Welches Museum stellt aus Luzifer (Stuck)?", "Welches Museum stellte aus Luzifer (Stuck)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucifer_(Stuck)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Das Frühstück der Ruderer?", "Was stellte aus Das Frühstück der Ruderer?", "Welches Museum stellt aus Das Frühstück der Ruderer?", "Welches Museum stellte aus Das Frühstück der Ruderer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luncheon_of_the_Boating_Party> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Madonna Litta?", "Was stellte aus Madonna Litta?", "Welches Museum stellt aus Madonna Litta?", "Welches Museum stellte aus Madonna Litta?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Madonna_Litta> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Brügger Madonna?", "Was stellte aus Brügger Madonna?", "Welches Museum stellt aus Brügger Madonna?", "Welches Museum stellte aus Brügger Madonna?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Madonna_of_Bruges> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Madonna mit der Spindel?", "Was stellte aus Madonna mit der Spindel?", "Welches Museum stellt aus Madonna mit der Spindel?", "Welches Museum stellte aus Madonna mit der Spindel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Madonna_of_the_Yarnwinder> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Caspar David Friedrich in seinem Atelier?", "Was stellte aus Caspar David Friedrich in seinem Atelier?", "Welches Museum stellt aus Caspar David Friedrich in seinem Atelier?", "Welches Museum stellte aus Caspar David Friedrich in seinem Atelier?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Caspar_David_Friedrich_in_his_Studio> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Ildefonso-Gruppe?", "Was stellte aus Ildefonso-Gruppe?", "Welches Museum stellt aus Ildefonso-Gruppe?", "Welches Museum stellte aus Ildefonso-Gruppe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Castor_and_Pollux_(Prado)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Konstellationen?", "Was stellte aus Konstellationen?", "Welches Museum stellt aus Konstellationen?", "Welches Museum stellte aus Konstellationen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Constellations_(Miró)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Die Bekehrung des Paulus?", "Was stellte aus Die Bekehrung des Paulus?", "Welches Museum stellt aus Die Bekehrung des Paulus?", "Welches Museum stellte aus Die Bekehrung des Paulus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Conversion_of_Paul_(Bruegel)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Lubliner Union (Gemälde)?", "Was stellte aus Lubliner Union (Gemälde)?", "Welches Museum stellt aus Lubliner Union (Gemälde)?", "Welches Museum stellte aus Lubliner Union (Gemälde)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Union_of_Lublin_(painting)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Venus von Milo?", "Was stellte aus Venus von Milo?", "Welches Museum stellt aus Venus von Milo?", "Welches Museum stellte aus Venus von Milo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Venus_de_Milo> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Venus von Urbino?", "Was stellte aus Venus von Urbino?", "Welches Museum stellt aus Venus von Urbino?", "Welches Museum stellte aus Venus von Urbino?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Venus_of_Urbino> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Skargas Predigt?", "Was stellte aus Skargas Predigt?", "Welches Museum stellt aus Skargas Predigt?", "Welches Museum stellte aus Skargas Predigt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Sermon_of_Piotr_Skarga> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Salome (Franz von Stuck)?", "Was stellte aus Salome (Franz von Stuck)?", "Welches Museum stellt aus Salome (Franz von Stuck)?", "Welches Museum stellte aus Salome (Franz von Stuck)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Salome_(Stuck)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Salon des Refusés?", "Was stellte aus Salon des Refusés?", "Welches Museum stellt aus Salon des Refusés?", "Welches Museum stellte aus Salon des Refusés?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Salon_des_Refusés> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Altar der sieben Sakramente (Rogier van der Weyden)?", "Was stellte aus Altar der sieben Sakramente (Rogier van der Weyden)?", "Welches Museum stellt aus Altar der sieben Sakramente (Rogier van der Weyden)?", "Welches Museum stellte aus Altar der sieben Sakramente (Rogier van der Weyden)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Seven_Sacraments_Altarpiece> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Der Schrei?", "Was stellte aus Der Schrei?", "Welches Museum stellt aus Der Schrei?", "Welches Museum stellte aus Der Schrei?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Scream> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Le Sacre de Napoléon?", "Was stellte aus Le Sacre de Napoléon?", "Welches Museum stellt aus Le Sacre de Napoléon?", "Welches Museum stellte aus Le Sacre de Napoléon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Coronation_of_Napoleon> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Madonna mit dem langen Hals?", "Was stellte aus Madonna mit dem langen Hals?", "Welches Museum stellt aus Madonna mit dem langen Hals?", "Welches Museum stellte aus Madonna mit dem langen Hals?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Madonna_with_the_Long_Neck> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus The Blue Boy?", "Was stellte aus The Blue Boy?", "Welches Museum stellt aus The Blue Boy?", "Welches Museum stellte aus The Blue Boy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Blue_Boy> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Der Mönch am Meer?", "Was stellte aus Der Mönch am Meer?", "Welches Museum stellt aus Der Mönch am Meer?", "Welches Museum stellte aus Der Mönch am Meer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Monk_by_the_Sea> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Der Jurist?", "Was stellte aus Der Jurist?", "Welches Museum stellt aus Der Jurist?", "Welches Museum stellte aus Der Jurist?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Jurist_(painting)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Der Nestausnehmer?", "Was stellte aus Der Nestausnehmer?", "Welches Museum stellt aus Der Nestausnehmer?", "Welches Museum stellte aus Der Nestausnehmer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Peasant_and_the_Nest_Robber> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Mann mit dem Handschuh?", "Was stellte aus Mann mit dem Handschuh?", "Welches Museum stellt aus Mann mit dem Handschuh?", "Welches Museum stellte aus Mann mit dem Handschuh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Man_with_a_Glove> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus La carícia d’un ocell?", "Was stellte aus La carícia d’un ocell?", "Welches Museum stellt aus La carícia d’un ocell?", "Welches Museum stellte aus La carícia d’un ocell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Caress_of_a_Bird> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Die Klinik Gross?", "Was stellte aus Die Klinik Gross?", "Welches Museum stellt aus Die Klinik Gross?", "Welches Museum stellte aus Die Klinik Gross?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Gross_Clinic> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Der letzte Tag von Pompeji (Gemälde)?", "Was stellte aus Der letzte Tag von Pompeji (Gemälde)?", "Welches Museum stellt aus Der letzte Tag von Pompeji (Gemälde)?", "Welches Museum stellte aus Der letzte Tag von Pompeji (Gemälde)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Last_Day_of_Pompeii> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Blick auf Toledo?", "Was stellte aus Blick auf Toledo?", "Welches Museum stellt aus Blick auf Toledo?", "Welches Museum stellte aus Blick auf Toledo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/View_of_Toledo> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Bar in den Folies Bergère?", "Was stellte aus Bar in den Folies Bergère?", "Welches Museum stellt aus Bar in den Folies Bergère?", "Welches Museum stellte aus Bar in den Folies Bergère?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A_Bar_at_the_Folies-Bergère> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Ein Begräbnis in Ornans?", "Was stellte aus Ein Begräbnis in Ornans?", "Welches Museum stellt aus Ein Begräbnis in Ornans?", "Welches Museum stellte aus Ein Begräbnis in Ornans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A_Burial_At_Ornans> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Eine bekehrte Britenfamilie verbirgt einen Missionar vor der Verfolgung durch die Druiden?", "Was stellte aus Eine bekehrte Britenfamilie verbirgt einen Missionar vor der Verfolgung durch die Druiden?", "Welches Museum stellt aus Eine bekehrte Britenfamilie verbirgt einen Missionar vor der Verfolgung durch die Druiden?", "Welches Museum stellte aus Eine bekehrte Britenfamilie verbirgt einen Missionar vor der Verfolgung durch die Druiden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A_Converted_British_Family_Sheltering_a_Christian_Missionary_from_the_Persecution_of_the_Druids> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Das Baumwollkontor in New Orleans?", "Was stellte aus Das Baumwollkontor in New Orleans?", "Welches Museum stellt aus Das Baumwollkontor in New Orleans?", "Welches Museum stellte aus Das Baumwollkontor in New Orleans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A_Cotton_Office_in_New_Orleans> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Schlafendes Mädchen?", "Was stellte aus Schlafendes Mädchen?", "Welches Museum stellt aus Schlafendes Mädchen?", "Welches Museum stellte aus Schlafendes Mädchen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A_Girl_Asleep> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Der Spargel (Manet)?", "Was stellte aus Der Spargel (Manet)?", "Welches Museum stellt aus Der Spargel (Manet)?", "Welches Museum stellte aus Der Spargel (Manet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A_Sprig_of_Asparagus> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Un atelier aux Batignolles?", "Was stellte aus Un atelier aux Batignolles?", "Welches Museum stellt aus Un atelier aux Batignolles?", "Welches Museum stellte aus Un atelier aux Batignolles?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A_Studio_at_Les_Batignolles> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Ein Sonntagnachmittag auf der Insel La Grande Jatte?", "Was stellte aus Ein Sonntagnachmittag auf der Insel La Grande Jatte?", "Welches Museum stellt aus Ein Sonntagnachmittag auf der Insel La Grande Jatte?", "Welches Museum stellte aus Ein Sonntagnachmittag auf der Insel La Grande Jatte?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A_Sunday_Afternoon_on_the_Island_of_La_Grande_Jatte> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Frau mit Bohnenkorb im Gemüsegärtchen?", "Was stellte aus Frau mit Bohnenkorb im Gemüsegärtchen?", "Welches Museum stellt aus Frau mit Bohnenkorb im Gemüsegärtchen?", "Welches Museum stellte aus Frau mit Bohnenkorb im Gemüsegärtchen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A_Woman_with_a_Basket_of_Beans_in_a_Garden> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Die große Nacht im Eimer?", "Was stellte aus Die große Nacht im Eimer?", "Welches Museum stellt aus Die große Nacht im Eimer?", "Welches Museum stellte aus Die große Nacht im Eimer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Die_große_Nacht_im_Eimer> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Das große Rasenstück?", "Was stellte aus Das große Rasenstück?", "Welches Museum stellt aus Das große Rasenstück?", "Welches Museum stellte aus Das große Rasenstück?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Great_Piece_of_Turf> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Preußische Huldigung (Gemälde)?", "Was stellte aus Preußische Huldigung (Gemälde)?", "Welches Museum stellt aus Preußische Huldigung (Gemälde)?", "Welches Museum stellte aus Preußische Huldigung (Gemälde)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Prussian_Homage_(painting)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Die Heilige Nacht (Correggio)?", "Was stellte aus Die Heilige Nacht (Correggio)?", "Welches Museum stellt aus Die Heilige Nacht (Correggio)?", "Welches Museum stellte aus Die Heilige Nacht (Correggio)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Nativity_(Correggio)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Die Gesandten?", "Was stellte aus Die Gesandten?", "Welches Museum stellt aus Die Gesandten?", "Welches Museum stellte aus Die Gesandten?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Ambassadors_(Holbein)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Der Falschspieler mit dem Karo-Ass?", "Was stellte aus Der Falschspieler mit dem Karo-Ass?", "Welches Museum stellt aus Der Falschspieler mit dem Karo-Ass?", "Welches Museum stellte aus Der Falschspieler mit dem Karo-Ass?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Card_Sharp_with_the_Ace_of_Diamonds> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Das Frühstück im Grünen (Manet)?", "Was stellte aus Das Frühstück im Grünen (Manet)?", "Welches Museum stellt aus Das Frühstück im Grünen (Manet)?", "Welches Museum stellte aus Das Frühstück im Grünen (Manet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Le_Déjeuner_sur_l'herbe> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Taufe Christi (Verrocchio)?", "Was stellte aus Taufe Christi (Verrocchio)?", "Welches Museum stellt aus Taufe Christi (Verrocchio)?", "Welches Museum stellte aus Taufe Christi (Verrocchio)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Baptism_of_Christ_(Verrocchio_and_Leonardo)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Grablegung Christi (Pala Baglioni)?", "Was stellte aus Grablegung Christi (Pala Baglioni)?", "Welches Museum stellt aus Grablegung Christi (Pala Baglioni)?", "Welches Museum stellte aus Grablegung Christi (Pala Baglioni)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Deposition_(Raphael)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Guernica (Bild)?", "Was stellte aus Guernica (Bild)?", "Welches Museum stellt aus Guernica (Bild)?", "Welches Museum stellte aus Guernica (Bild)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Guernica_(Picasso)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Rain, Steam and Speed – The Great Western Railway?", "Was stellte aus Rain, Steam and Speed – The Great Western Railway?", "Welches Museum stellt aus Rain, Steam and Speed – The Great Western Railway?", "Welches Museum stellte aus Rain, Steam and Speed – The Great Western Railway?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Rain,_Steam_and_Speed_–_The_Great_Western_Railway> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Dreifaltigkeit (Masaccio)?", "Was stellte aus Dreifaltigkeit (Masaccio)?", "Welches Museum stellt aus Dreifaltigkeit (Masaccio)?", "Welches Museum stellte aus Dreifaltigkeit (Masaccio)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Holy_Trinity_(Masaccio)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Impression, Sonnenaufgang?", "Was stellte aus Impression, Sonnenaufgang?", "Welches Museum stellt aus Impression, Sonnenaufgang?", "Welches Museum stellte aus Impression, Sonnenaufgang?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Impression,_Sunrise> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Elk-Foot of the Taos Tribe?", "Was stellte aus Elk-Foot of the Taos Tribe?", "Welches Museum stellt aus Elk-Foot of the Taos Tribe?", "Welches Museum stellte aus Elk-Foot of the Taos Tribe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Elk-Foot_of_the_Taos_Tribe> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Paradiesgärtlein?", "Was stellte aus Paradiesgärtlein?", "Welches Museum stellt aus Paradiesgärtlein?", "Welches Museum stellte aus Paradiesgärtlein?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Paradiesgärtlein> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus M-Maybe?", "Was stellte aus M-Maybe?", "Welches Museum stellt aus M-Maybe?", "Welches Museum stellte aus M-Maybe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/M-Maybe> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Pala Colonna?", "Was stellte aus Pala Colonna?", "Welches Museum stellt aus Pala Colonna?", "Welches Museum stellte aus Pala Colonna?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Madonna_and_Child_Enthroned_with_Saints_(Raphael)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Madonna von Veveří?", "Was stellte aus Madonna von Veveří?", "Welches Museum stellt aus Madonna von Veveří?", "Welches Museum stellte aus Madonna von Veveří?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Madonna_of_Veveri> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Die Pflaume (Manet)?", "Was stellte aus Die Pflaume (Manet)?", "Welches Museum stellt aus Die Pflaume (Manet)?", "Welches Museum stellte aus Die Pflaume (Manet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Plum_Brandy> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Stele des Avile Tite?", "Was stellte aus Stele des Avile Tite?", "Welches Museum stellt aus Stele des Avile Tite?", "Welches Museum stellte aus Stele des Avile Tite?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Stele_of_Avile_Tite> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Fleischstein?", "Was stellte aus Fleischstein?", "Welches Museum stellt aus Fleischstein?", "Welches Museum stellte aus Fleischstein?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Meat-shaped_Stone> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Die Mühle von Wijk bij Duurstede?", "Was stellte aus Die Mühle von Wijk bij Duurstede?", "Welches Museum stellt aus Die Mühle von Wijk bij Duurstede?", "Welches Museum stellte aus Die Mühle von Wijk bij Duurstede?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Windmill_at_Wijk_bij_Duurstede> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Senecio (Paul Klee)?", "Was stellte aus Senecio (Paul Klee)?", "Welches Museum stellt aus Senecio (Paul Klee)?", "Welches Museum stellte aus Senecio (Paul Klee)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Senecio_(Klee)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Alamo (Skulptur)?", "Was stellte aus Alamo (Skulptur)?", "Welches Museum stellt aus Alamo (Skulptur)?", "Welches Museum stellte aus Alamo (Skulptur)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alamo_(sculpture)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Qingming-Rolle?", "Was stellte aus Qingming-Rolle?", "Welches Museum stellt aus Qingming-Rolle?", "Welches Museum stellte aus Qingming-Rolle?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Along_the_River_During_the_Qingming_Festival> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Saliera?", "Was stellte aus Saliera?", "Welches Museum stellt aus Saliera?", "Welches Museum stellte aus Saliera?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Cellini_Salt_Cellar> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Cathedra Petri (Kunstwerk)?", "Was stellte aus Cathedra Petri (Kunstwerk)?", "Welches Museum stellt aus Cathedra Petri (Kunstwerk)?", "Welches Museum stellte aus Cathedra Petri (Kunstwerk)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Chair_of_Saint_Peter> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Chandos-Porträt?", "Was stellte aus Chandos-Porträt?", "Welches Museum stellt aus Chandos-Porträt?", "Welches Museum stellte aus Chandos-Porträt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Chandos_portrait> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Akt mit grünen Blättern und Büste?", "Was stellte aus Akt mit grünen Blättern und Büste?", "Welches Museum stellt aus Akt mit grünen Blättern und Büste?", "Welches Museum stellte aus Akt mit grünen Blättern und Büste?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Nude,_Green_Leaves_and_Bust> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Ognissanti-Madonna?", "Was stellte aus Ognissanti-Madonna?", "Welches Museum stellt aus Ognissanti-Madonna?", "Welches Museum stellte aus Ognissanti-Madonna?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ognissanti_Madonna> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Diana und Actaeon (Tizian)?", "Was stellte aus Diana und Actaeon (Tizian)?", "Welches Museum stellt aus Diana und Actaeon (Tizian)?", "Welches Museum stellte aus Diana und Actaeon (Tizian)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Diana_and_Actaeon_(Titian)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Diana mit ihren Gefährtinnen?", "Was stellte aus Diana mit ihren Gefährtinnen?", "Welches Museum stellt aus Diana mit ihren Gefährtinnen?", "Welches Museum stellte aus Diana mit ihren Gefährtinnen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Diana_and_Her_Companions> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Die Geißelung Christi (Piero della Francesca)?", "Was stellte aus Die Geißelung Christi (Piero della Francesca)?", "Welches Museum stellt aus Die Geißelung Christi (Piero della Francesca)?", "Welches Museum stellte aus Die Geißelung Christi (Piero della Francesca)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Flagellation_of_Christ_(Piero_della_Francesca)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus For the Love of God?", "Was stellte aus For the Love of God?", "Welches Museum stellt aus For the Love of God?", "Welches Museum stellte aus For the Love of God?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/For_the_Love_of_God> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Gassed?", "Was stellte aus Gassed?", "Welches Museum stellt aus Gassed?", "Welches Museum stellte aus Gassed?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gassed_(painting)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Ruhe auf der Flucht nach Ägypten (Caravaggio)?", "Was stellte aus Ruhe auf der Flucht nach Ägypten (Caravaggio)?", "Welches Museum stellt aus Ruhe auf der Flucht nach Ägypten (Caravaggio)?", "Welches Museum stellte aus Ruhe auf der Flucht nach Ägypten (Caravaggio)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Rest_on_the_Flight_into_Egypt_(Caravaggio)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Der vierte Stand?", "Was stellte aus Der vierte Stand?", "Welches Museum stellt aus Der vierte Stand?", "Welches Museum stellte aus Der vierte Stand?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Fourth_Estate_(painting)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Dynamik eines Radfahrers?", "Was stellte aus Dynamik eines Radfahrers?", "Welches Museum stellt aus Dynamik eines Radfahrers?", "Welches Museum stellte aus Dynamik eines Radfahrers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dynamism_of_a_Cyclist> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Rhinocerus?", "Was stellte aus Rhinocerus?", "Welches Museum stellt aus Rhinocerus?", "Welches Museum stellte aus Rhinocerus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dürer's_Rhinoceros> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Midvinterblot?", "Was stellte aus Midvinterblot?", "Welches Museum stellt aus Midvinterblot?", "Welches Museum stellte aus Midvinterblot?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Midvinterblot> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Nana (Manet)?", "Was stellte aus Nana (Manet)?", "Welches Museum stellt aus Nana (Manet)?", "Welches Museum stellte aus Nana (Manet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Nana_(Manet)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Geburt der Jungfrau (Pietro Lorenzetti)?", "Was stellte aus Geburt der Jungfrau (Pietro Lorenzetti)?", "Welches Museum stellt aus Geburt der Jungfrau (Pietro Lorenzetti)?", "Welches Museum stellte aus Geburt der Jungfrau (Pietro Lorenzetti)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Nativity_of_the_Virgin_(Pietro_Lorenzetti)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Die Musikstunde (Vermeer)?", "Was stellte aus Die Musikstunde (Vermeer)?", "Welches Museum stellt aus Die Musikstunde (Vermeer)?", "Welches Museum stellte aus Die Musikstunde (Vermeer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Music_Lesson> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Mr. und Mrs. Andrews?", "Was stellte aus Mr. und Mrs. Andrews?", "Welches Museum stellt aus Mr. und Mrs. Andrews?", "Welches Museum stellte aus Mr. und Mrs. Andrews?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mr_and_Mrs_Andrews> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Straße in Paris an einem regnerischen Tag?", "Was stellte aus Straße in Paris an einem regnerischen Tag?", "Welches Museum stellt aus Straße in Paris an einem regnerischen Tag?", "Welches Museum stellte aus Straße in Paris an einem regnerischen Tag?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Paris_Street;_Rainy_Day> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Der Hase?", "Was stellte aus Der Hase?", "Welches Museum stellt aus Der Hase?", "Welches Museum stellte aus Der Hase?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Rabbit_(Manet_1881)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Der Heuwagen?", "Was stellte aus Der Heuwagen?", "Welches Museum stellt aus Der Heuwagen?", "Welches Museum stellte aus Der Heuwagen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Haywain_Triptych> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Maria der Verkündigung (Antonello da Messina)?", "Was stellte aus Maria der Verkündigung (Antonello da Messina)?", "Welches Museum stellt aus Maria der Verkündigung (Antonello da Messina)?", "Welches Museum stellte aus Maria der Verkündigung (Antonello da Messina)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Virgin_Annunciate_(Antonello_da_Messina,_Palermo)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Der Schwur der Horatier?", "Was stellte aus Der Schwur der Horatier?", "Welches Museum stellt aus Der Schwur der Horatier?", "Welches Museum stellte aus Der Schwur der Horatier?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Oath_of_the_Horatii> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Felsgrottenmadonna?", "Was stellte aus Felsgrottenmadonna?", "Welches Museum stellt aus Felsgrottenmadonna?", "Welches Museum stellte aus Felsgrottenmadonna?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Virgin_of_the_Rocks> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Sunlight and Shadow: The Newbury Marshes?", "Was stellte aus Sunlight and Shadow: The Newbury Marshes?", "Welches Museum stellt aus Sunlight and Shadow: The Newbury Marshes?", "Welches Museum stellte aus Sunlight and Shadow: The Newbury Marshes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Sunlight_and_Shadow:_The_Newbury_Marshes> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Scheibenfibel von Tangendorf?", "Was stellte aus Scheibenfibel von Tangendorf?", "Welches Museum stellt aus Scheibenfibel von Tangendorf?", "Welches Museum stellte aus Scheibenfibel von Tangendorf?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Tangendorf_disc_brooch> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Miss Amelia Van Buren?", "Was stellte aus Miss Amelia Van Buren?", "Welches Museum stellt aus Miss Amelia Van Buren?", "Welches Museum stellte aus Miss Amelia Van Buren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Miss_Amelia_Van_Buren> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Allegorie der Liebe?", "Was stellte aus Allegorie der Liebe?", "Welches Museum stellt aus Allegorie der Liebe?", "Welches Museum stellte aus Allegorie der Liebe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Venus,_Cupid,_Folly_and_Time> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Feszty-Panorama?", "Was stellte aus Feszty-Panorama?", "Welches Museum stellt aus Feszty-Panorama?", "Welches Museum stellte aus Feszty-Panorama?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Arrival_of_the_Hungarians> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Beauty Revealed?", "Was stellte aus Beauty Revealed?", "Welches Museum stellt aus Beauty Revealed?", "Welches Museum stellte aus Beauty Revealed?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Beauty_Revealed> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Der Tanz (Gemälde)?", "Was stellte aus Der Tanz (Gemälde)?", "Welches Museum stellt aus Der Tanz (Gemälde)?", "Welches Museum stellte aus Der Tanz (Gemälde)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dance_(Matisse)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Tanz auf dem Land?", "Was stellte aus Tanz auf dem Land?", "Welches Museum stellt aus Tanz auf dem Land?", "Welches Museum stellte aus Tanz auf dem Land?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dance_in_the_Country> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Schlüsselübergabe (Perugino)?", "Was stellte aus Schlüsselübergabe (Perugino)?", "Welches Museum stellt aus Schlüsselübergabe (Perugino)?", "Welches Museum stellte aus Schlüsselübergabe (Perugino)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Delivery_of_the_Keys_(Perugino)> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kaiser Karl V. nach der Schlacht bei Mühlberg?", "Was stellte aus Kaiser Karl V. nach der Schlacht bei Mühlberg?", "Welches Museum stellt aus Kaiser Karl V. nach der Schlacht bei Mühlberg?", "Welches Museum stellte aus Kaiser Karl V. nach der Schlacht bei Mühlberg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Equestrian_Portrait_of_Charles_V> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Flötenkonzert Friedrichs des Großen in Sanssouci?", "Was stellte aus Flötenkonzert Friedrichs des Großen in Sanssouci?", "Welches Museum stellt aus Flötenkonzert Friedrichs des Großen in Sanssouci?", "Welches Museum stellte aus Flötenkonzert Friedrichs des Großen in Sanssouci?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Frederick_the_Great_Playing_the_Flute_at_Sanssouci> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Im Garten des Todes?", "Was stellte aus Im Garten des Todes?", "Welches Museum stellt aus Im Garten des Todes?", "Welches Museum stellte aus Im Garten des Todes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Garden_of_Death> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Jakobssegen (Rembrandt)?", "Was stellte aus Jakobssegen (Rembrandt)?", "Welches Museum stellt aus Jakobssegen (Rembrandt)?", "Welches Museum stellte aus Jakobssegen (Rembrandt)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Jacob_Blessing_the_Sons_of_Joseph> <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von 5th Cell?", "Was wurde entwickelt von 5th Cell?", "Welche Werks werden entwickelt von 5th Cell?", "Welche Werks wurden entwickelt von 5th Cell?", "Welches Werk wird entwickelt von 5th Cell?", "Welches Werk wurde entwickelt von 5th Cell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/5th_Cell>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von 7th Level?", "Was wurde entwickelt von 7th Level?", "Welche Werks werden entwickelt von 7th Level?", "Welche Werks wurden entwickelt von 7th Level?", "Welches Werk wird entwickelt von 7th Level?", "Welches Werk wurde entwickelt von 7th Level?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/7th_Level>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Varianten der Programmiersprache C?", "Was wurde entwickelt von Varianten der Programmiersprache C?", "Welche Werks werden entwickelt von Varianten der Programmiersprache C?", "Welche Werks wurden entwickelt von Varianten der Programmiersprache C?", "Welches Werk wird entwickelt von Varianten der Programmiersprache C?", "Welches Werk wurde entwickelt von Varianten der Programmiersprache C?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/ANSI_C>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von LucasArts?", "Was wurde entwickelt von LucasArts?", "Welche Werks werden entwickelt von LucasArts?", "Welche Werks wurden entwickelt von LucasArts?", "Welches Werk wird entwickelt von LucasArts?", "Welches Werk wurde entwickelt von LucasArts?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/LucasArts>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Ludwig-Maximilians-Universität München?", "Was wurde entwickelt von Ludwig-Maximilians-Universität München?", "Welche Werks werden entwickelt von Ludwig-Maximilians-Universität München?", "Welche Werks wurden entwickelt von Ludwig-Maximilians-Universität München?", "Welches Werk wird entwickelt von Ludwig-Maximilians-Universität München?", "Welches Werk wurde entwickelt von Ludwig-Maximilians-Universität München?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Ludwig_Maximilian_University_of_Munich>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Luke Davies?", "Was wurde entwickelt von Luke Davies?", "Welche Werks werden entwickelt von Luke Davies?", "Welche Werks wurden entwickelt von Luke Davies?", "Welches Werk wird entwickelt von Luke Davies?", "Welches Werk wurde entwickelt von Luke Davies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Luke_Davies>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Luke Pearson?", "Was wurde entwickelt von Luke Pearson?", "Welche Werks werden entwickelt von Luke Pearson?", "Welche Werks wurden entwickelt von Luke Pearson?", "Welches Werk wird entwickelt von Luke Pearson?", "Welches Werk wurde entwickelt von Luke Pearson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Luke_Pearson>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Universität Lund?", "Was wurde entwickelt von Universität Lund?", "Welche Werks werden entwickelt von Universität Lund?", "Welche Werks wurden entwickelt von Universität Lund?", "Welches Werk wird entwickelt von Universität Lund?", "Welches Werk wurde entwickelt von Universität Lund?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Lund_University>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von László Németh?", "Was wurde entwickelt von László Németh?", "Welche Werks werden entwickelt von László Németh?", "Welche Werks wurden entwickelt von László Németh?", "Welches Werk wird entwickelt von László Németh?", "Welches Werk wurde entwickelt von László Németh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/László_Németh>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von MGM Resorts International?", "Was wurde entwickelt von MGM Resorts International?", "Welche Werks werden entwickelt von MGM Resorts International?", "Welche Werks wurden entwickelt von MGM Resorts International?", "Welches Werk wird entwickelt von MGM Resorts International?", "Welches Werk wurde entwickelt von MGM Resorts International?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MGM_Resorts_International>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von MIPS Technologies?", "Was wurde entwickelt von MIPS Technologies?", "Welche Werks werden entwickelt von MIPS Technologies?", "Welche Werks wurden entwickelt von MIPS Technologies?", "Welches Werk wird entwickelt von MIPS Technologies?", "Welches Werk wurde entwickelt von MIPS Technologies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MIPS_Technologies>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von MIT Computer Science and Artificial Intelligence Laboratory?", "Was wurde entwickelt von MIT Computer Science and Artificial Intelligence Laboratory?", "Welche Werks werden entwickelt von MIT Computer Science and Artificial Intelligence Laboratory?", "Welche Werks wurden entwickelt von MIT Computer Science and Artificial Intelligence Laboratory?", "Welches Werk wird entwickelt von MIT Computer Science and Artificial Intelligence Laboratory?", "Welches Werk wurde entwickelt von MIT Computer Science and Artificial Intelligence Laboratory?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MIT_Computer_Science_and_Artificial_Intelligence_Laboratory>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von MIT Media Lab?", "Was wurde entwickelt von MIT Media Lab?", "Welche Werks werden entwickelt von MIT Media Lab?", "Welche Werks wurden entwickelt von MIT Media Lab?", "Welches Werk wird entwickelt von MIT Media Lab?", "Welches Werk wurde entwickelt von MIT Media Lab?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MIT_Media_Lab>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von MLB Network?", "Was wurde entwickelt von MLB Network?", "Welche Werks werden entwickelt von MLB Network?", "Welche Werks wurden entwickelt von MLB Network?", "Welches Werk wird entwickelt von MLB Network?", "Welches Werk wurde entwickelt von MLB Network?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MLB_Network>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von MOL?", "Was wurde entwickelt von MOL?", "Welche Werks werden entwickelt von MOL?", "Welche Werks wurden entwickelt von MOL?", "Welches Werk wird entwickelt von MOL?", "Welches Werk wurde entwickelt von MOL?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MOL_(company)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von MS-DOS?", "Was wurde entwickelt von MS-DOS?", "Welche Werks werden entwickelt von MS-DOS?", "Welche Werks wurden entwickelt von MS-DOS?", "Welches Werk wird entwickelt von MS-DOS?", "Welches Werk wurde entwickelt von MS-DOS?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MS-DOS>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von MTR Corporation?", "Was wurde entwickelt von MTR Corporation?", "Welche Werks werden entwickelt von MTR Corporation?", "Welche Werks wurden entwickelt von MTR Corporation?", "Welches Werk wird entwickelt von MTR Corporation?", "Welches Werk wurde entwickelt von MTR Corporation?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MTR_Corporation>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von MTV?", "Was wurde entwickelt von MTV?", "Welche Werks werden entwickelt von MTV?", "Welche Werks wurden entwickelt von MTV?", "Welches Werk wird entwickelt von MTV?", "Welches Werk wurde entwickelt von MTV?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MTV>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von MVRDV?", "Was wurde entwickelt von MVRDV?", "Welche Werks werden entwickelt von MVRDV?", "Welche Werks wurden entwickelt von MVRDV?", "Welches Werk wird entwickelt von MVRDV?", "Welches Werk wurde entwickelt von MVRDV?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MVRDV>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Mabrouk El Mechri?", "Was wurde entwickelt von Mabrouk El Mechri?", "Welche Werks werden entwickelt von Mabrouk El Mechri?", "Welche Werks wurden entwickelt von Mabrouk El Mechri?", "Welches Werk wird entwickelt von Mabrouk El Mechri?", "Welches Werk wurde entwickelt von Mabrouk El Mechri?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mabrouk_El_Mechri>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von MacSoft?", "Was wurde entwickelt von MacSoft?", "Welche Werks werden entwickelt von MacSoft?", "Welche Werks wurden entwickelt von MacSoft?", "Welches Werk wird entwickelt von MacSoft?", "Welches Werk wurde entwickelt von MacSoft?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MacSoft>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Makedonska Radio-Televizija?", "Was wurde entwickelt von Makedonska Radio-Televizija?", "Welche Werks werden entwickelt von Makedonska Radio-Televizija?", "Welche Werks wurden entwickelt von Makedonska Radio-Televizija?", "Welches Werk wird entwickelt von Makedonska Radio-Televizija?", "Welches Werk wurde entwickelt von Makedonska Radio-Televizija?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Macedonian_Radio_Television>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von MachineGames?", "Was wurde entwickelt von MachineGames?", "Welche Werks werden entwickelt von MachineGames?", "Welche Werks wurden entwickelt von MachineGames?", "Welches Werk wird entwickelt von MachineGames?", "Welches Werk wurde entwickelt von MachineGames?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MachineGames>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Macromedia?", "Was wurde entwickelt von Macromedia?", "Welche Werks werden entwickelt von Macromedia?", "Welche Werks wurden entwickelt von Macromedia?", "Welches Werk wird entwickelt von Macromedia?", "Welches Werk wurde entwickelt von Macromedia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Macromedia>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Maemo?", "Was wurde entwickelt von Maemo?", "Welche Werks werden entwickelt von Maemo?", "Welche Werks wurden entwickelt von Maemo?", "Welches Werk wird entwickelt von Maemo?", "Welches Werk wurde entwickelt von Maemo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Maemo>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Magnavox?", "Was wurde entwickelt von Magnavox?", "Welche Werks werden entwickelt von Magnavox?", "Welche Werks wurden entwickelt von Magnavox?", "Welches Werk wird entwickelt von Magnavox?", "Welches Werk wurde entwickelt von Magnavox?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Magnavox>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Magnus Manske?", "Was wurde entwickelt von Magnus Manske?", "Welche Werks werden entwickelt von Magnus Manske?", "Welche Werks wurden entwickelt von Magnus Manske?", "Welches Werk wird entwickelt von Magnus Manske?", "Welches Werk wurde entwickelt von Magnus Manske?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Magnus_Manske>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Mainz?", "Was wurde entwickelt von Mainz?", "Welche Werks werden entwickelt von Mainz?", "Welche Werks wurden entwickelt von Mainz?", "Welches Werk wird entwickelt von Mainz?", "Welches Werk wurde entwickelt von Mainz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mainz>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Majesco Entertainment?", "Was wurde entwickelt von Majesco Entertainment?", "Welche Werks werden entwickelt von Majesco Entertainment?", "Welche Werks wurden entwickelt von Majesco Entertainment?", "Welches Werk wird entwickelt von Majesco Entertainment?", "Welches Werk wurde entwickelt von Majesco Entertainment?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Majesco_Entertainment>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Malibu Comics?", "Was wurde entwickelt von Malibu Comics?", "Welche Werks werden entwickelt von Malibu Comics?", "Welche Werks wurden entwickelt von Malibu Comics?", "Welches Werk wird entwickelt von Malibu Comics?", "Welches Werk wurde entwickelt von Malibu Comics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Malibu_Comics>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Control Data Corporation?", "Was wurde entwickelt von Control Data Corporation?", "Welche Werks werden entwickelt von Control Data Corporation?", "Welche Werks wurden entwickelt von Control Data Corporation?", "Welches Werk wird entwickelt von Control Data Corporation?", "Welches Werk wurde entwickelt von Control Data Corporation?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Control_Data_Corporation>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Convergent Technologies?", "Was wurde entwickelt von Convergent Technologies?", "Welche Werks werden entwickelt von Convergent Technologies?", "Welche Werks wurden entwickelt von Convergent Technologies?", "Welches Werk wird entwickelt von Convergent Technologies?", "Welches Werk wurde entwickelt von Convergent Technologies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Convergent_Technologies>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Corinne Brinkerhoff?", "Was wurde entwickelt von Corinne Brinkerhoff?", "Welche Werks werden entwickelt von Corinne Brinkerhoff?", "Welche Werks wurden entwickelt von Corinne Brinkerhoff?", "Welches Werk wird entwickelt von Corinne Brinkerhoff?", "Welches Werk wurde entwickelt von Corinne Brinkerhoff?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Corinne_Brinkerhoff>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Ignition Entertainment?", "Was wurde entwickelt von Ignition Entertainment?", "Welche Werks werden entwickelt von Ignition Entertainment?", "Welche Werks wurden entwickelt von Ignition Entertainment?", "Welches Werk wird entwickelt von Ignition Entertainment?", "Welches Werk wurde entwickelt von Ignition Entertainment?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/UTV_Ignition_Games>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Uber (Unternehmen)?", "Was wurde entwickelt von Uber (Unternehmen)?", "Welche Werks werden entwickelt von Uber (Unternehmen)?", "Welche Werks wurden entwickelt von Uber (Unternehmen)?", "Welches Werk wird entwickelt von Uber (Unternehmen)?", "Welches Werk wurde entwickelt von Uber (Unternehmen)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Uber>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Ubisoft?", "Was wurde entwickelt von Ubisoft?", "Welche Werks werden entwickelt von Ubisoft?", "Welche Werks wurden entwickelt von Ubisoft?", "Welches Werk wird entwickelt von Ubisoft?", "Welches Werk wurde entwickelt von Ubisoft?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Ubisoft>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Ubisoft Romania?", "Was wurde entwickelt von Ubisoft Romania?", "Welche Werks werden entwickelt von Ubisoft Romania?", "Welche Werks wurden entwickelt von Ubisoft Romania?", "Welches Werk wird entwickelt von Ubisoft Romania?", "Welches Werk wurde entwickelt von Ubisoft Romania?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Ubisoft_Bucharest>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Ubisoft Montreal?", "Was wurde entwickelt von Ubisoft Montreal?", "Welche Werks werden entwickelt von Ubisoft Montreal?", "Welche Werks wurden entwickelt von Ubisoft Montreal?", "Welches Werk wird entwickelt von Ubisoft Montreal?", "Welches Werk wurde entwickelt von Ubisoft Montreal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Ubisoft_Montreal>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Ubisoft Paris?", "Was wurde entwickelt von Ubisoft Paris?", "Welche Werks werden entwickelt von Ubisoft Paris?", "Welche Werks wurden entwickelt von Ubisoft Paris?", "Welches Werk wird entwickelt von Ubisoft Paris?", "Welches Werk wurde entwickelt von Ubisoft Paris?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Ubisoft_Paris>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Ubisoft Quebec?", "Was wurde entwickelt von Ubisoft Quebec?", "Welche Werks werden entwickelt von Ubisoft Quebec?", "Welche Werks wurden entwickelt von Ubisoft Quebec?", "Welches Werk wird entwickelt von Ubisoft Quebec?", "Welches Werk wurde entwickelt von Ubisoft Quebec?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Ubisoft_Quebec>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Ubisoft Reflections?", "Was wurde entwickelt von Ubisoft Reflections?", "Welche Werks werden entwickelt von Ubisoft Reflections?", "Welche Werks wurden entwickelt von Ubisoft Reflections?", "Welches Werk wird entwickelt von Ubisoft Reflections?", "Welches Werk wurde entwickelt von Ubisoft Reflections?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Ubisoft_Reflections>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Ubisoft Toronto?", "Was wurde entwickelt von Ubisoft Toronto?", "Welche Werks werden entwickelt von Ubisoft Toronto?", "Welche Werks wurden entwickelt von Ubisoft Toronto?", "Welches Werk wird entwickelt von Ubisoft Toronto?", "Welches Werk wurde entwickelt von Ubisoft Toronto?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Ubisoft_Toronto>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Ukrainische Sozialistische Sowjetrepublik?", "Was wurde entwickelt von Ukrainische Sozialistische Sowjetrepublik?", "Welche Werks werden entwickelt von Ukrainische Sozialistische Sowjetrepublik?", "Welche Werks wurden entwickelt von Ukrainische Sozialistische Sowjetrepublik?", "Welches Werk wird entwickelt von Ukrainische Sozialistische Sowjetrepublik?", "Welches Werk wurde entwickelt von Ukrainische Sozialistische Sowjetrepublik?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Ukraine>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Ukraine?", "Was wurde entwickelt von Ukraine?", "Welche Werks werden entwickelt von Ukraine?", "Welche Werks wurden entwickelt von Ukraine?", "Welches Werk wird entwickelt von Ukraine?", "Welches Werk wurde entwickelt von Ukraine?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Ukraine>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Under Armour?", "Was wurde entwickelt von Under Armour?", "Welche Werks werden entwickelt von Under Armour?", "Welche Werks wurden entwickelt von Under Armour?", "Welches Werk wird entwickelt von Under Armour?", "Welches Werk wurde entwickelt von Under Armour?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Under_Armour>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Unicode-Konsortium?", "Was wurde entwickelt von Unicode-Konsortium?", "Welche Werks werden entwickelt von Unicode-Konsortium?", "Welche Werks wurden entwickelt von Unicode-Konsortium?", "Welches Werk wird entwickelt von Unicode-Konsortium?", "Welches Werk wurde entwickelt von Unicode-Konsortium?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Unicode_Consortium>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von United States Army im Sezessionskrieg?", "Was wurde entwickelt von United States Army im Sezessionskrieg?", "Welche Werks werden entwickelt von United States Army im Sezessionskrieg?", "Welche Werks wurden entwickelt von United States Army im Sezessionskrieg?", "Welches Werk wird entwickelt von United States Army im Sezessionskrieg?", "Welches Werk wurde entwickelt von United States Army im Sezessionskrieg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Union_Army>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Unisys?", "Was wurde entwickelt von Unisys?", "Welche Werks werden entwickelt von Unisys?", "Welche Werks wurden entwickelt von Unisys?", "Welches Werk wird entwickelt von Unisys?", "Welches Werk wurde entwickelt von Unisys?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Unisys>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Vereinigte Arabische Emirate?", "Was wurde entwickelt von Vereinigte Arabische Emirate?", "Welche Werks werden entwickelt von Vereinigte Arabische Emirate?", "Welche Werks wurden entwickelt von Vereinigte Arabische Emirate?", "Welches Werk wird entwickelt von Vereinigte Arabische Emirate?", "Welches Werk wurde entwickelt von Vereinigte Arabische Emirate?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/United_Arab_Emirates>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Schardscha?", "Was wurde entwickelt von Schardscha?", "Welche Werks werden entwickelt von Schardscha?", "Welche Werks wurden entwickelt von Schardscha?", "Welches Werk wird entwickelt von Schardscha?", "Welches Werk wurde entwickelt von Schardscha?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/United_Arab_Emirates>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Hoher Flüchtlingskommissar der Vereinten Nationen?", "Was wurde entwickelt von Hoher Flüchtlingskommissar der Vereinten Nationen?", "Welche Werks werden entwickelt von Hoher Flüchtlingskommissar der Vereinten Nationen?", "Welche Werks wurden entwickelt von Hoher Flüchtlingskommissar der Vereinten Nationen?", "Welches Werk wird entwickelt von Hoher Flüchtlingskommissar der Vereinten Nationen?", "Welches Werk wurde entwickelt von Hoher Flüchtlingskommissar der Vereinten Nationen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/United_Nations_High_Commissioner_for_Refugees>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von United Overseas Bank?", "Was wurde entwickelt von United Overseas Bank?", "Welche Werks werden entwickelt von United Overseas Bank?", "Welche Werks wurden entwickelt von United Overseas Bank?", "Welches Werk wird entwickelt von United Overseas Bank?", "Welches Werk wurde entwickelt von United Overseas Bank?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/United_Overseas_Bank>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Streitkräfte der Vereinigten Staaten?", "Was wurde entwickelt von Streitkräfte der Vereinigten Staaten?", "Welche Werks werden entwickelt von Streitkräfte der Vereinigten Staaten?", "Welche Werks wurden entwickelt von Streitkräfte der Vereinigten Staaten?", "Welches Werk wird entwickelt von Streitkräfte der Vereinigten Staaten?", "Welches Werk wurde entwickelt von Streitkräfte der Vereinigten Staaten?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/United_States_Armed_Forces>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von United States Army?", "Was wurde entwickelt von United States Army?", "Welche Werks werden entwickelt von United States Army?", "Welche Werks wurden entwickelt von United States Army?", "Welches Werk wird entwickelt von United States Army?", "Welches Werk wurde entwickelt von United States Army?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/United_States_Army>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Environmental Protection Agency?", "Was wurde entwickelt von Environmental Protection Agency?", "Welche Werks werden entwickelt von Environmental Protection Agency?", "Welche Werks wurden entwickelt von Environmental Protection Agency?", "Welches Werk wird entwickelt von Environmental Protection Agency?", "Welches Werk wurde entwickelt von Environmental Protection Agency?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/United_States_Environmental_Protection_Agency>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University College Dublin?", "Was wurde entwickelt von University College Dublin?", "Welche Werks werden entwickelt von University College Dublin?", "Welche Werks wurden entwickelt von University College Dublin?", "Welches Werk wird entwickelt von University College Dublin?", "Welches Werk wurde entwickelt von University College Dublin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_College_Dublin>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University College London?", "Was wurde entwickelt von University College London?", "Welche Werks werden entwickelt von University College London?", "Welche Werks wurden entwickelt von University College London?", "Welches Werk wird entwickelt von University College London?", "Welches Werk wurde entwickelt von University College London?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_College_London>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Universität Antwerpen?", "Was wurde entwickelt von Universität Antwerpen?", "Welche Werks werden entwickelt von Universität Antwerpen?", "Welche Werks wurden entwickelt von Universität Antwerpen?", "Welches Werk wird entwickelt von Universität Antwerpen?", "Welches Werk wurde entwickelt von Universität Antwerpen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Antwerp>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of Auckland?", "Was wurde entwickelt von University of Auckland?", "Welche Werks werden entwickelt von University of Auckland?", "Welche Werks wurden entwickelt von University of Auckland?", "Welches Werk wird entwickelt von University of Auckland?", "Welches Werk wurde entwickelt von University of Auckland?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Auckland>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Universität Barcelona?", "Was wurde entwickelt von Universität Barcelona?", "Welche Werks werden entwickelt von Universität Barcelona?", "Welche Werks wurden entwickelt von Universität Barcelona?", "Welches Werk wird entwickelt von Universität Barcelona?", "Welches Werk wurde entwickelt von Universität Barcelona?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Barcelona>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of Bath?", "Was wurde entwickelt von University of Bath?", "Welche Werks werden entwickelt von University of Bath?", "Welche Werks wurden entwickelt von University of Bath?", "Welches Werk wird entwickelt von University of Bath?", "Welches Werk wurde entwickelt von University of Bath?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Bath>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Universität Bordeaux?", "Was wurde entwickelt von Universität Bordeaux?", "Welche Werks werden entwickelt von Universität Bordeaux?", "Welche Werks wurden entwickelt von Universität Bordeaux?", "Welches Werk wird entwickelt von Universität Bordeaux?", "Welches Werk wurde entwickelt von Universität Bordeaux?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Bordeaux>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of Bristol?", "Was wurde entwickelt von University of Bristol?", "Welche Werks werden entwickelt von University of Bristol?", "Welche Werks wurden entwickelt von University of Bristol?", "Welches Werk wird entwickelt von University of Bristol?", "Welches Werk wurde entwickelt von University of Bristol?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Bristol>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of British Columbia?", "Was wurde entwickelt von University of British Columbia?", "Welche Werks werden entwickelt von University of British Columbia?", "Welche Werks wurden entwickelt von University of British Columbia?", "Welches Werk wird entwickelt von University of British Columbia?", "Welches Werk wurde entwickelt von University of British Columbia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_British_Columbia>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of California, Berkeley?", "Was wurde entwickelt von University of California, Berkeley?", "Welche Werks werden entwickelt von University of California, Berkeley?", "Welche Werks wurden entwickelt von University of California, Berkeley?", "Welches Werk wird entwickelt von University of California, Berkeley?", "Welches Werk wurde entwickelt von University of California, Berkeley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_California,_Berkeley>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of California, San Diego?", "Was wurde entwickelt von University of California, San Diego?", "Welche Werks werden entwickelt von University of California, San Diego?", "Welche Werks wurden entwickelt von University of California, San Diego?", "Welches Werk wird entwickelt von University of California, San Diego?", "Welches Werk wurde entwickelt von University of California, San Diego?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_California,_San_Diego>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of California, San Francisco?", "Was wurde entwickelt von University of California, San Francisco?", "Welche Werks werden entwickelt von University of California, San Francisco?", "Welche Werks wurden entwickelt von University of California, San Francisco?", "Welches Werk wird entwickelt von University of California, San Francisco?", "Welches Werk wurde entwickelt von University of California, San Francisco?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_California,_San_Francisco>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of California, Santa Barbara?", "Was wurde entwickelt von University of California, Santa Barbara?", "Welche Werks werden entwickelt von University of California, Santa Barbara?", "Welche Werks wurden entwickelt von University of California, Santa Barbara?", "Welches Werk wird entwickelt von University of California, Santa Barbara?", "Welches Werk wurde entwickelt von University of California, Santa Barbara?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_California,_Santa_Barbara>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of California, Santa Cruz?", "Was wurde entwickelt von University of California, Santa Cruz?", "Welche Werks werden entwickelt von University of California, Santa Cruz?", "Welche Werks wurden entwickelt von University of California, Santa Cruz?", "Welches Werk wird entwickelt von University of California, Santa Cruz?", "Welches Werk wurde entwickelt von University of California, Santa Cruz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_California,_Santa_Cruz>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of Cambridge?", "Was wurde entwickelt von University of Cambridge?", "Welche Werks werden entwickelt von University of Cambridge?", "Welche Werks wurden entwickelt von University of Cambridge?", "Welches Werk wird entwickelt von University of Cambridge?", "Welches Werk wurde entwickelt von University of Cambridge?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Cambridge>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of Chicago?", "Was wurde entwickelt von University of Chicago?", "Welche Werks werden entwickelt von University of Chicago?", "Welche Werks wurden entwickelt von University of Chicago?", "Welches Werk wird entwickelt von University of Chicago?", "Welches Werk wurde entwickelt von University of Chicago?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Chicago>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Universität Kopenhagen?", "Was wurde entwickelt von Universität Kopenhagen?", "Welche Werks werden entwickelt von Universität Kopenhagen?", "Welche Werks wurden entwickelt von Universität Kopenhagen?", "Welches Werk wird entwickelt von Universität Kopenhagen?", "Welches Werk wurde entwickelt von Universität Kopenhagen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Copenhagen>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of Delaware?", "Was wurde entwickelt von University of Delaware?", "Welche Werks werden entwickelt von University of Delaware?", "Welche Werks wurden entwickelt von University of Delaware?", "Welches Werk wird entwickelt von University of Delaware?", "Welches Werk wurde entwickelt von University of Delaware?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Delaware>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of Dundee?", "Was wurde entwickelt von University of Dundee?", "Welche Werks werden entwickelt von University of Dundee?", "Welche Werks wurden entwickelt von University of Dundee?", "Welches Werk wird entwickelt von University of Dundee?", "Welches Werk wurde entwickelt von University of Dundee?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Dundee>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von The University of Edinburgh?", "Was wurde entwickelt von The University of Edinburgh?", "Welche Werks werden entwickelt von The University of Edinburgh?", "Welche Werks wurden entwickelt von The University of Edinburgh?", "Welches Werk wird entwickelt von The University of Edinburgh?", "Welches Werk wurde entwickelt von The University of Edinburgh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Edinburgh>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Universität Florenz?", "Was wurde entwickelt von Universität Florenz?", "Welche Werks werden entwickelt von Universität Florenz?", "Welche Werks wurden entwickelt von Universität Florenz?", "Welches Werk wird entwickelt von Universität Florenz?", "Welches Werk wurde entwickelt von Universität Florenz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Florence>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of Florida?", "Was wurde entwickelt von University of Florida?", "Welche Werks werden entwickelt von University of Florida?", "Welche Werks wurden entwickelt von University of Florida?", "Welches Werk wird entwickelt von University of Florida?", "Welches Werk wurde entwickelt von University of Florida?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Florida>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Albert-Ludwigs-Universität Freiburg?", "Was wurde entwickelt von Albert-Ludwigs-Universität Freiburg?", "Welche Werks werden entwickelt von Albert-Ludwigs-Universität Freiburg?", "Welche Werks wurden entwickelt von Albert-Ludwigs-Universität Freiburg?", "Welches Werk wird entwickelt von Albert-Ludwigs-Universität Freiburg?", "Welches Werk wurde entwickelt von Albert-Ludwigs-Universität Freiburg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Freiburg>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of Glasgow?", "Was wurde entwickelt von University of Glasgow?", "Welche Werks werden entwickelt von University of Glasgow?", "Welche Werks wurden entwickelt von University of Glasgow?", "Welches Werk wird entwickelt von University of Glasgow?", "Welches Werk wurde entwickelt von University of Glasgow?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Glasgow>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Universität Granada?", "Was wurde entwickelt von Universität Granada?", "Welche Werks werden entwickelt von Universität Granada?", "Welche Werks wurden entwickelt von Universität Granada?", "Welches Werk wird entwickelt von Universität Granada?", "Welches Werk wurde entwickelt von Universität Granada?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Granada>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Reichsuniversität Groningen?", "Was wurde entwickelt von Reichsuniversität Groningen?", "Welche Werks werden entwickelt von Reichsuniversität Groningen?", "Welche Werks wurden entwickelt von Reichsuniversität Groningen?", "Welches Werk wird entwickelt von Reichsuniversität Groningen?", "Welches Werk wurde entwickelt von Reichsuniversität Groningen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Groningen>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Universität Hamburg?", "Was wurde entwickelt von Universität Hamburg?", "Welche Werks werden entwickelt von Universität Hamburg?", "Welche Werks wurden entwickelt von Universität Hamburg?", "Welches Werk wird entwickelt von Universität Hamburg?", "Welches Werk wurde entwickelt von Universität Hamburg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Hamburg>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of Illinois at Urbana-Champaign?", "Was wurde entwickelt von University of Illinois at Urbana-Champaign?", "Welche Werks werden entwickelt von University of Illinois at Urbana-Champaign?", "Welche Werks wurden entwickelt von University of Illinois at Urbana-Champaign?", "Welches Werk wird entwickelt von University of Illinois at Urbana-Champaign?", "Welches Werk wurde entwickelt von University of Illinois at Urbana-Champaign?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Illinois_at_Urbana–Champaign>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of Kent?", "Was wurde entwickelt von University of Kent?", "Welche Werks werden entwickelt von University of Kent?", "Welche Werks wurden entwickelt von University of Kent?", "Welches Werk wird entwickelt von University of Kent?", "Welches Werk wurde entwickelt von University of Kent?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Kent>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Universität Las Palmas de Gran Canaria?", "Was wurde entwickelt von Universität Las Palmas de Gran Canaria?", "Welche Werks werden entwickelt von Universität Las Palmas de Gran Canaria?", "Welche Werks wurden entwickelt von Universität Las Palmas de Gran Canaria?", "Welches Werk wird entwickelt von Universität Las Palmas de Gran Canaria?", "Welches Werk wurde entwickelt von Universität Las Palmas de Gran Canaria?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Las_Palmas_de_Gran_Canaria>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of Leeds?", "Was wurde entwickelt von University of Leeds?", "Welche Werks werden entwickelt von University of Leeds?", "Welche Werks wurden entwickelt von University of Leeds?", "Welches Werk wird entwickelt von University of Leeds?", "Welches Werk wurde entwickelt von University of Leeds?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Leeds>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of Liverpool?", "Was wurde entwickelt von University of Liverpool?", "Welche Werks werden entwickelt von University of Liverpool?", "Welche Werks wurden entwickelt von University of Liverpool?", "Welches Werk wird entwickelt von University of Liverpool?", "Welches Werk wurde entwickelt von University of Liverpool?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Liverpool>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Universität Ljubljana?", "Was wurde entwickelt von Universität Ljubljana?", "Welche Werks werden entwickelt von Universität Ljubljana?", "Welche Werks wurden entwickelt von Universität Ljubljana?", "Welches Werk wird entwickelt von Universität Ljubljana?", "Welches Werk wurde entwickelt von Universität Ljubljana?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Ljubljana>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of Manchester?", "Was wurde entwickelt von University of Manchester?", "Welche Werks werden entwickelt von University of Manchester?", "Welche Werks wurden entwickelt von University of Manchester?", "Welches Werk wird entwickelt von University of Manchester?", "Welches Werk wurde entwickelt von University of Manchester?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Manchester>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Universität Mannheim?", "Was wurde entwickelt von Universität Mannheim?", "Welche Werks werden entwickelt von Universität Mannheim?", "Welche Werks wurden entwickelt von Universität Mannheim?", "Welches Werk wird entwickelt von Universität Mannheim?", "Welches Werk wurde entwickelt von Universität Mannheim?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Mannheim>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of Maryland, College Park?", "Was wurde entwickelt von University of Maryland, College Park?", "Welche Werks werden entwickelt von University of Maryland, College Park?", "Welche Werks wurden entwickelt von University of Maryland, College Park?", "Welches Werk wird entwickelt von University of Maryland, College Park?", "Welches Werk wurde entwickelt von University of Maryland, College Park?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Maryland,_College_Park>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Universität Melbourne?", "Was wurde entwickelt von Universität Melbourne?", "Welche Werks werden entwickelt von Universität Melbourne?", "Welche Werks wurden entwickelt von Universität Melbourne?", "Welches Werk wird entwickelt von Universität Melbourne?", "Welches Werk wurde entwickelt von Universität Melbourne?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Melbourne>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of Michigan?", "Was wurde entwickelt von University of Michigan?", "Welche Werks werden entwickelt von University of Michigan?", "Welche Werks wurden entwickelt von University of Michigan?", "Welches Werk wird entwickelt von University of Michigan?", "Welches Werk wurde entwickelt von University of Michigan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Michigan>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of New Mexico?", "Was wurde entwickelt von University of New Mexico?", "Welche Werks werden entwickelt von University of New Mexico?", "Welche Werks wurden entwickelt von University of New Mexico?", "Welches Werk wird entwickelt von University of New Mexico?", "Welches Werk wurde entwickelt von University of New Mexico?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_New_Mexico>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of North Carolina at Chapel Hill?", "Was wurde entwickelt von University of North Carolina at Chapel Hill?", "Welche Werks werden entwickelt von University of North Carolina at Chapel Hill?", "Welche Werks wurden entwickelt von University of North Carolina at Chapel Hill?", "Welches Werk wird entwickelt von University of North Carolina at Chapel Hill?", "Welches Werk wurde entwickelt von University of North Carolina at Chapel Hill?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_North_Carolina_at_Chapel_Hill>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of Oxford?", "Was wurde entwickelt von University of Oxford?", "Welche Werks werden entwickelt von University of Oxford?", "Welche Werks wurden entwickelt von University of Oxford?", "Welches Werk wird entwickelt von University of Oxford?", "Welches Werk wurde entwickelt von University of Oxford?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Oxford>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of Rochester?", "Was wurde entwickelt von University of Rochester?", "Welche Werks werden entwickelt von University of Rochester?", "Welche Werks wurden entwickelt von University of Rochester?", "Welches Werk wird entwickelt von University of Rochester?", "Welches Werk wurde entwickelt von University of Rochester?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Rochester>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of South Florida?", "Was wurde entwickelt von University of South Florida?", "Welche Werks werden entwickelt von University of South Florida?", "Welche Werks wurden entwickelt von University of South Florida?", "Welches Werk wird entwickelt von University of South Florida?", "Welches Werk wurde entwickelt von University of South Florida?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_South_Florida>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of Southampton?", "Was wurde entwickelt von University of Southampton?", "Welche Werks werden entwickelt von University of Southampton?", "Welche Werks wurden entwickelt von University of Southampton?", "Welches Werk wird entwickelt von University of Southampton?", "Welches Werk wurde entwickelt von University of Southampton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Southampton>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von University of St Andrews?", "Was wurde entwickelt von University of St Andrews?", "Welche Werks werden entwickelt von University of St Andrews?", "Welche Werks wurden entwickelt von University of St Andrews?", "Welches Werk wird entwickelt von University of St Andrews?", "Welches Werk wurde entwickelt von University of St Andrews?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_St_Andrews>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Madrid?", "Was wurde ausgestellt von Madrid?", "Welche Kunstwerks werden ausgestellt von Madrid?", "Welche Kunstwerks wurden ausgestellt von Madrid?", "Welches Kunstwerk wird ausgestellt von Madrid?", "Welches Kunstwerk wurde ausgestellt von Madrid?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Madrid>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Mali Lošinj?", "Was wurde ausgestellt von Mali Lošinj?", "Welche Kunstwerks werden ausgestellt von Mali Lošinj?", "Welche Kunstwerks wurden ausgestellt von Mali Lošinj?", "Welches Kunstwerk wird ausgestellt von Mali Lošinj?", "Welches Kunstwerk wurde ausgestellt von Mali Lošinj?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Mali_Lošinj>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Casa Buonarroti?", "Was wurde ausgestellt von Casa Buonarroti?", "Welche Kunstwerks werden ausgestellt von Casa Buonarroti?", "Welche Kunstwerks wurden ausgestellt von Casa Buonarroti?", "Welches Kunstwerk wird ausgestellt von Casa Buonarroti?", "Welches Kunstwerk wurde ausgestellt von Casa Buonarroti?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Casa_Buonarroti>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Cathedral Square (Christchurch)?", "Was wurde ausgestellt von Cathedral Square (Christchurch)?", "Welche Kunstwerks werden ausgestellt von Cathedral Square (Christchurch)?", "Welche Kunstwerks wurden ausgestellt von Cathedral Square (Christchurch)?", "Welches Kunstwerk wird ausgestellt von Cathedral Square (Christchurch)?", "Welches Kunstwerk wurde ausgestellt von Cathedral Square (Christchurch)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Cathedral_Square,_Christchurch>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von San Domenico (Fiesole)?", "Was wurde ausgestellt von San Domenico (Fiesole)?", "Welche Kunstwerks werden ausgestellt von San Domenico (Fiesole)?", "Welche Kunstwerks wurden ausgestellt von San Domenico (Fiesole)?", "Welches Kunstwerk wird ausgestellt von San Domenico (Fiesole)?", "Welches Kunstwerk wurde ausgestellt von San Domenico (Fiesole)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Convent_of_San_Domenico,_Fiesole>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Uffizien?", "Was wurde ausgestellt von Uffizien?", "Welche Kunstwerks werden ausgestellt von Uffizien?", "Welche Kunstwerks wurden ausgestellt von Uffizien?", "Welches Kunstwerk wird ausgestellt von Uffizien?", "Welches Kunstwerk wurde ausgestellt von Uffizien?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Uffizi>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Union Buildings?", "Was wurde ausgestellt von Union Buildings?", "Welche Kunstwerks werden ausgestellt von Union Buildings?", "Welche Kunstwerks wurden ausgestellt von Union Buildings?", "Welches Kunstwerk wird ausgestellt von Union Buildings?", "Welches Kunstwerk wurde ausgestellt von Union Buildings?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Union_Buildings>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Generalversammlung der Vereinten Nationen?", "Was wurde ausgestellt von Generalversammlung der Vereinten Nationen?", "Welche Kunstwerks werden ausgestellt von Generalversammlung der Vereinten Nationen?", "Welche Kunstwerks wurden ausgestellt von Generalversammlung der Vereinten Nationen?", "Welches Kunstwerk wird ausgestellt von Generalversammlung der Vereinten Nationen?", "Welches Kunstwerk wurde ausgestellt von Generalversammlung der Vereinten Nationen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/United_Nations_General_Assembly>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Vereinigte Staaten?", "Was wurde ausgestellt von Vereinigte Staaten?", "Welche Kunstwerks werden ausgestellt von Vereinigte Staaten?", "Welche Kunstwerks wurden ausgestellt von Vereinigte Staaten?", "Welches Kunstwerk wird ausgestellt von Vereinigte Staaten?", "Welches Kunstwerk wurde ausgestellt von Vereinigte Staaten?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/United_States>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Kapitol (Washington)?", "Was wurde ausgestellt von Kapitol (Washington)?", "Welche Kunstwerks werden ausgestellt von Kapitol (Washington)?", "Welche Kunstwerks wurden ausgestellt von Kapitol (Washington)?", "Welches Kunstwerk wird ausgestellt von Kapitol (Washington)?", "Welches Kunstwerk wurde ausgestellt von Kapitol (Washington)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/United_States_Capitol>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von United States Naval Academy?", "Was wurde ausgestellt von United States Naval Academy?", "Welche Kunstwerks werden ausgestellt von United States Naval Academy?", "Welche Kunstwerks wurden ausgestellt von United States Naval Academy?", "Welches Kunstwerk wird ausgestellt von United States Naval Academy?", "Welches Kunstwerk wurde ausgestellt von United States Naval Academy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/United_States_Naval_Academy>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von United States Navy Memorial?", "Was wurde ausgestellt von United States Navy Memorial?", "Welche Kunstwerks werden ausgestellt von United States Navy Memorial?", "Welche Kunstwerks wurden ausgestellt von United States Navy Memorial?", "Welches Kunstwerk wird ausgestellt von United States Navy Memorial?", "Welches Kunstwerk wurde ausgestellt von United States Navy Memorial?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/United_States_Navy_Memorial>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von University at Buffalo?", "Was wurde ausgestellt von University at Buffalo?", "Welche Kunstwerks werden ausgestellt von University at Buffalo?", "Welche Kunstwerks wurden ausgestellt von University at Buffalo?", "Welches Kunstwerk wird ausgestellt von University at Buffalo?", "Welches Kunstwerk wurde ausgestellt von University at Buffalo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/University_at_Buffalo>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von University of Chicago?", "Was wurde ausgestellt von University of Chicago?", "Welche Kunstwerks werden ausgestellt von University of Chicago?", "Welche Kunstwerks wurden ausgestellt von University of Chicago?", "Welches Kunstwerk wird ausgestellt von University of Chicago?", "Welches Kunstwerk wurde ausgestellt von University of Chicago?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/University_of_Chicago>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Universität von Ghana?", "Was wurde ausgestellt von Universität von Ghana?", "Welche Kunstwerks werden ausgestellt von Universität von Ghana?", "Welche Kunstwerks wurden ausgestellt von Universität von Ghana?", "Welches Kunstwerk wird ausgestellt von Universität von Ghana?", "Welches Kunstwerk wurde ausgestellt von Universität von Ghana?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/University_of_Ghana>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von University of Houston?", "Was wurde ausgestellt von University of Houston?", "Welche Kunstwerks werden ausgestellt von University of Houston?", "Welche Kunstwerks wurden ausgestellt von University of Houston?", "Welches Kunstwerk wird ausgestellt von University of Houston?", "Welches Kunstwerk wurde ausgestellt von University of Houston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/University_of_Houston>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von University of Michigan Museum of Art?", "Was wurde ausgestellt von University of Michigan Museum of Art?", "Welche Kunstwerks werden ausgestellt von University of Michigan Museum of Art?", "Welche Kunstwerks wurden ausgestellt von University of Michigan Museum of Art?", "Welches Kunstwerk wird ausgestellt von University of Michigan Museum of Art?", "Welches Kunstwerk wurde ausgestellt von University of Michigan Museum of Art?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/University_of_Michigan_Museum_of_Art>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von University of Notre Dame?", "Was wurde ausgestellt von University of Notre Dame?", "Welche Kunstwerks werden ausgestellt von University of Notre Dame?", "Welche Kunstwerks wurden ausgestellt von University of Notre Dame?", "Welches Kunstwerk wird ausgestellt von University of Notre Dame?", "Welches Kunstwerk wurde ausgestellt von University of Notre Dame?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/University_of_Notre_Dame>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von University of Otago?", "Was wurde ausgestellt von University of Otago?", "Welche Kunstwerks werden ausgestellt von University of Otago?", "Welche Kunstwerks wurden ausgestellt von University of Otago?", "Welches Kunstwerk wird ausgestellt von University of Otago?", "Welches Kunstwerk wurde ausgestellt von University of Otago?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/University_of_Otago>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von University of Pennsylvania?", "Was wurde ausgestellt von University of Pennsylvania?", "Welche Kunstwerks werden ausgestellt von University of Pennsylvania?", "Welche Kunstwerks wurden ausgestellt von University of Pennsylvania?", "Welches Kunstwerk wird ausgestellt von University of Pennsylvania?", "Welches Kunstwerk wurde ausgestellt von University of Pennsylvania?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/University_of_Pennsylvania>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Universität Sydney?", "Was wurde ausgestellt von Universität Sydney?", "Welche Kunstwerks werden ausgestellt von Universität Sydney?", "Welche Kunstwerks wurden ausgestellt von Universität Sydney?", "Welches Kunstwerk wird ausgestellt von Universität Sydney?", "Welches Kunstwerk wurde ausgestellt von Universität Sydney?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/University_of_Sydney>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Universität Twente?", "Was wurde ausgestellt von Universität Twente?", "Welche Kunstwerks werden ausgestellt von Universität Twente?", "Welche Kunstwerks wurden ausgestellt von Universität Twente?", "Welches Kunstwerk wird ausgestellt von Universität Twente?", "Welches Kunstwerk wurde ausgestellt von Universität Twente?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/University_of_Twente>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Eberhard Karls Universität Tübingen?", "Was wurde ausgestellt von Eberhard Karls Universität Tübingen?", "Welche Kunstwerks werden ausgestellt von Eberhard Karls Universität Tübingen?", "Welche Kunstwerks wurden ausgestellt von Eberhard Karls Universität Tübingen?", "Welches Kunstwerk wird ausgestellt von Eberhard Karls Universität Tübingen?", "Welches Kunstwerk wurde ausgestellt von Eberhard Karls Universität Tübingen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/University_of_Tübingen>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Utah Valley University?", "Was wurde ausgestellt von Utah Valley University?", "Welche Kunstwerks werden ausgestellt von Utah Valley University?", "Welche Kunstwerks wurden ausgestellt von Utah Valley University?", "Welches Kunstwerk wird ausgestellt von Utah Valley University?", "Welches Kunstwerk wurde ausgestellt von Utah Valley University?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Utah_Valley_University>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Valletta?", "Was wurde ausgestellt von Valletta?", "Welche Kunstwerks werden ausgestellt von Valletta?", "Welche Kunstwerks wurden ausgestellt von Valletta?", "Welches Kunstwerk wird ausgestellt von Valletta?", "Welches Kunstwerk wurde ausgestellt von Valletta?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Valletta>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Van Abbemuseum?", "Was wurde ausgestellt von Van Abbemuseum?", "Welche Kunstwerks werden ausgestellt von Van Abbemuseum?", "Welche Kunstwerks wurden ausgestellt von Van Abbemuseum?", "Welches Kunstwerk wird ausgestellt von Van Abbemuseum?", "Welches Kunstwerk wurde ausgestellt von Van Abbemuseum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Van_Abbemuseum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Van Gogh Museum?", "Was wurde ausgestellt von Van Gogh Museum?", "Welche Kunstwerks werden ausgestellt von Van Gogh Museum?", "Welche Kunstwerks wurden ausgestellt von Van Gogh Museum?", "Welches Kunstwerk wird ausgestellt von Van Gogh Museum?", "Welches Kunstwerk wurde ausgestellt von Van Gogh Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Van_Gogh_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Vancouver Art Gallery?", "Was wurde ausgestellt von Vancouver Art Gallery?", "Welche Kunstwerks werden ausgestellt von Vancouver Art Gallery?", "Welche Kunstwerks wurden ausgestellt von Vancouver Art Gallery?", "Welches Kunstwerk wird ausgestellt von Vancouver Art Gallery?", "Welches Kunstwerk wurde ausgestellt von Vancouver Art Gallery?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Vancouver_Art_Gallery>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Vatikanstadt?", "Was wurde ausgestellt von Vatikanstadt?", "Welche Kunstwerks werden ausgestellt von Vatikanstadt?", "Welche Kunstwerks wurden ausgestellt von Vatikanstadt?", "Welches Kunstwerk wird ausgestellt von Vatikanstadt?", "Welches Kunstwerk wurde ausgestellt von Vatikanstadt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Vatican_City>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Vatikanische Museen?", "Was wurde ausgestellt von Vatikanische Museen?", "Welche Kunstwerks werden ausgestellt von Vatikanische Museen?", "Welche Kunstwerks wurden ausgestellt von Vatikanische Museen?", "Welches Kunstwerk wird ausgestellt von Vatikanische Museen?", "Welches Kunstwerk wurde ausgestellt von Vatikanische Museen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Vatican_Museums>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Venedig?", "Was wurde ausgestellt von Venedig?", "Welche Kunstwerks werden ausgestellt von Venedig?", "Welche Kunstwerks wurden ausgestellt von Venedig?", "Welches Kunstwerk wird ausgestellt von Venedig?", "Welches Kunstwerk wurde ausgestellt von Venedig?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Venice>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Czartoryski-Museum?", "Was wurde ausgestellt von Czartoryski-Museum?", "Welche Kunstwerks werden ausgestellt von Czartoryski-Museum?", "Welche Kunstwerks wurden ausgestellt von Czartoryski-Museum?", "Welches Kunstwerk wird ausgestellt von Czartoryski-Museum?", "Welches Kunstwerk wurde ausgestellt von Czartoryski-Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Czartoryski_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Daitoku-ji?", "Was wurde ausgestellt von Daitoku-ji?", "Welche Kunstwerks werden ausgestellt von Daitoku-ji?", "Welche Kunstwerks wurden ausgestellt von Daitoku-ji?", "Welches Kunstwerk wird ausgestellt von Daitoku-ji?", "Welches Kunstwerk wurde ausgestellt von Daitoku-ji?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Daitoku-ji>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Dallas Museum of Art?", "Was wurde ausgestellt von Dallas Museum of Art?", "Welche Kunstwerks werden ausgestellt von Dallas Museum of Art?", "Welche Kunstwerks wurden ausgestellt von Dallas Museum of Art?", "Welches Kunstwerk wird ausgestellt von Dallas Museum of Art?", "Welches Kunstwerk wurde ausgestellt von Dallas Museum of Art?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Dallas_Museum_of_Art>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Sanssouci?", "Was wurde ausgestellt von Sanssouci?", "Welche Kunstwerks werden ausgestellt von Sanssouci?", "Welche Kunstwerks wurden ausgestellt von Sanssouci?", "Welches Kunstwerk wird ausgestellt von Sanssouci?", "Welches Kunstwerk wurde ausgestellt von Sanssouci?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Sanssouci>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Santa Maria di Loreto (Rom)?", "Was wurde ausgestellt von Santa Maria di Loreto (Rom)?", "Welche Kunstwerks werden ausgestellt von Santa Maria di Loreto (Rom)?", "Welche Kunstwerks wurden ausgestellt von Santa Maria di Loreto (Rom)?", "Welches Kunstwerk wird ausgestellt von Santa Maria di Loreto (Rom)?", "Welches Kunstwerk wurde ausgestellt von Santa Maria di Loreto (Rom)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Santa_Maria_di_Loreto,_Rome>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Musée Goya?", "Was wurde ausgestellt von Musée Goya?", "Welche Kunstwerks werden ausgestellt von Musée Goya?", "Welche Kunstwerks wurden ausgestellt von Musée Goya?", "Welches Kunstwerk wird ausgestellt von Musée Goya?", "Welches Kunstwerk wurde ausgestellt von Musée Goya?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Goya_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Santa Bibiana?", "Was wurde ausgestellt von Santa Bibiana?", "Welche Kunstwerks werden ausgestellt von Santa Bibiana?", "Welche Kunstwerks wurden ausgestellt von Santa Bibiana?", "Welches Kunstwerk wird ausgestellt von Santa Bibiana?", "Welches Kunstwerk wurde ausgestellt von Santa Bibiana?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Santa_Bibiana>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Statens Museum for Kunst?", "Was wurde ausgestellt von Statens Museum for Kunst?", "Welche Kunstwerks werden ausgestellt von Statens Museum for Kunst?", "Welche Kunstwerks wurden ausgestellt von Statens Museum for Kunst?", "Welches Kunstwerk wird ausgestellt von Statens Museum for Kunst?", "Welches Kunstwerk wurde ausgestellt von Statens Museum for Kunst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/National_Gallery_of_Denmark>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Biblioteca Reale?", "Was wurde ausgestellt von Biblioteca Reale?", "Welche Kunstwerks werden ausgestellt von Biblioteca Reale?", "Welche Kunstwerks wurden ausgestellt von Biblioteca Reale?", "Welches Kunstwerk wird ausgestellt von Biblioteca Reale?", "Welches Kunstwerk wurde ausgestellt von Biblioteca Reale?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Royal_Library_of_Turin>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von San Domenico (Arezzo)?", "Was wurde ausgestellt von San Domenico (Arezzo)?", "Welche Kunstwerks werden ausgestellt von San Domenico (Arezzo)?", "Welche Kunstwerks wurden ausgestellt von San Domenico (Arezzo)?", "Welches Kunstwerk wird ausgestellt von San Domenico (Arezzo)?", "Welches Kunstwerk wurde ausgestellt von San Domenico (Arezzo)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/San_Domenico,_Arezzo>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von San Sebastiano fuori le mura?", "Was wurde ausgestellt von San Sebastiano fuori le mura?", "Welche Kunstwerks werden ausgestellt von San Sebastiano fuori le mura?", "Welche Kunstwerks wurden ausgestellt von San Sebastiano fuori le mura?", "Welches Kunstwerk wird ausgestellt von San Sebastiano fuori le mura?", "Welches Kunstwerk wurde ausgestellt von San Sebastiano fuori le mura?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/San_Sebastiano_fuori_le_mura>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Santa Maria Gloriosa dei Frari?", "Was wurde ausgestellt von Santa Maria Gloriosa dei Frari?", "Welche Kunstwerks werden ausgestellt von Santa Maria Gloriosa dei Frari?", "Welche Kunstwerks wurden ausgestellt von Santa Maria Gloriosa dei Frari?", "Welches Kunstwerk wird ausgestellt von Santa Maria Gloriosa dei Frari?", "Welches Kunstwerk wurde ausgestellt von Santa Maria Gloriosa dei Frari?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Santa_Maria_Gloriosa_dei_Frari>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von San Zanipolo?", "Was wurde ausgestellt von San Zanipolo?", "Welche Kunstwerks werden ausgestellt von San Zanipolo?", "Welche Kunstwerks wurden ausgestellt von San Zanipolo?", "Welches Kunstwerk wird ausgestellt von San Zanipolo?", "Welches Kunstwerk wurde ausgestellt von San Zanipolo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Santi_Giovanni_e_Paolo,_Venice>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Santissima Annunziata (Florenz)?", "Was wurde ausgestellt von Santissima Annunziata (Florenz)?", "Welche Kunstwerks werden ausgestellt von Santissima Annunziata (Florenz)?", "Welche Kunstwerks wurden ausgestellt von Santissima Annunziata (Florenz)?", "Welches Kunstwerk wird ausgestellt von Santissima Annunziata (Florenz)?", "Welches Kunstwerk wurde ausgestellt von Santissima Annunziata (Florenz)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Santissima_Annunziata,_Florence>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Scuola di San Giorgio degli Schiavoni?", "Was wurde ausgestellt von Scuola di San Giorgio degli Schiavoni?", "Welche Kunstwerks werden ausgestellt von Scuola di San Giorgio degli Schiavoni?", "Welche Kunstwerks wurden ausgestellt von Scuola di San Giorgio degli Schiavoni?", "Welches Kunstwerk wird ausgestellt von Scuola di San Giorgio degli Schiavoni?", "Welches Kunstwerk wurde ausgestellt von Scuola di San Giorgio degli Schiavoni?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Scuola_di_San_Giorgio_degli_Schiavoni>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Slowakische Nationalgalerie?", "Was wurde ausgestellt von Slowakische Nationalgalerie?", "Welche Kunstwerks werden ausgestellt von Slowakische Nationalgalerie?", "Welche Kunstwerks wurden ausgestellt von Slowakische Nationalgalerie?", "Welches Kunstwerk wird ausgestellt von Slowakische Nationalgalerie?", "Welches Kunstwerk wurde ausgestellt von Slowakische Nationalgalerie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Slovak_National_Gallery>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Rotunde des United States Capitol?", "Was wurde ausgestellt von Rotunde des United States Capitol?", "Welche Kunstwerks werden ausgestellt von Rotunde des United States Capitol?", "Welche Kunstwerks wurden ausgestellt von Rotunde des United States Capitol?", "Welches Kunstwerk wird ausgestellt von Rotunde des United States Capitol?", "Welches Kunstwerk wurde ausgestellt von Rotunde des United States Capitol?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/United_States_Capitol_rotunda>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Fondation Maeght?", "Was wurde ausgestellt von Fondation Maeght?", "Welche Kunstwerks werden ausgestellt von Fondation Maeght?", "Welche Kunstwerks wurden ausgestellt von Fondation Maeght?", "Welches Kunstwerk wird ausgestellt von Fondation Maeght?", "Welches Kunstwerk wurde ausgestellt von Fondation Maeght?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Fondation_Maeght>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Slowenische Nationalgalerie?", "Was wurde ausgestellt von Slowenische Nationalgalerie?", "Welche Kunstwerks werden ausgestellt von Slowenische Nationalgalerie?", "Welche Kunstwerks wurden ausgestellt von Slowenische Nationalgalerie?", "Welches Kunstwerk wird ausgestellt von Slowenische Nationalgalerie?", "Welches Kunstwerk wurde ausgestellt von Slowenische Nationalgalerie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/National_Gallery_of_Slovenia>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Museum Moderner Kunst Stiftung Ludwig Wien?", "Was wurde ausgestellt von Museum Moderner Kunst Stiftung Ludwig Wien?", "Welche Kunstwerks werden ausgestellt von Museum Moderner Kunst Stiftung Ludwig Wien?", "Welche Kunstwerks wurden ausgestellt von Museum Moderner Kunst Stiftung Ludwig Wien?", "Welches Kunstwerk wird ausgestellt von Museum Moderner Kunst Stiftung Ludwig Wien?", "Welches Kunstwerk wurde ausgestellt von Museum Moderner Kunst Stiftung Ludwig Wien?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Mumok>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Ospedale degli Innocenti?", "Was wurde ausgestellt von Ospedale degli Innocenti?", "Welche Kunstwerks werden ausgestellt von Ospedale degli Innocenti?", "Welche Kunstwerks wurden ausgestellt von Ospedale degli Innocenti?", "Welches Kunstwerk wird ausgestellt von Ospedale degli Innocenti?", "Welches Kunstwerk wurde ausgestellt von Ospedale degli Innocenti?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Ospedale_degli_Innocenti>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Menil Collection?", "Was wurde ausgestellt von Menil Collection?", "Welche Kunstwerks werden ausgestellt von Menil Collection?", "Welche Kunstwerks wurden ausgestellt von Menil Collection?", "Welches Kunstwerk wird ausgestellt von Menil Collection?", "Welches Kunstwerk wurde ausgestellt von Menil Collection?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Menil_Collection>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Pinacoteca Giovanni e Marella Agnelli?", "Was wurde ausgestellt von Pinacoteca Giovanni e Marella Agnelli?", "Welche Kunstwerks werden ausgestellt von Pinacoteca Giovanni e Marella Agnelli?", "Welche Kunstwerks wurden ausgestellt von Pinacoteca Giovanni e Marella Agnelli?", "Welches Kunstwerk wird ausgestellt von Pinacoteca Giovanni e Marella Agnelli?", "Welches Kunstwerk wurde ausgestellt von Pinacoteca Giovanni e Marella Agnelli?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Pinacoteca_Giovanni_e_Marella_Agnelli>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Birmingham Museum of Art?", "Was wurde ausgestellt von Birmingham Museum of Art?", "Welche Kunstwerks werden ausgestellt von Birmingham Museum of Art?", "Welche Kunstwerks wurden ausgestellt von Birmingham Museum of Art?", "Welches Kunstwerk wird ausgestellt von Birmingham Museum of Art?", "Welches Kunstwerk wurde ausgestellt von Birmingham Museum of Art?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Birmingham_Museum_of_Art>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Bletchley Park?", "Was wurde ausgestellt von Bletchley Park?", "Welche Kunstwerks werden ausgestellt von Bletchley Park?", "Welche Kunstwerks wurden ausgestellt von Bletchley Park?", "Welches Kunstwerk wird ausgestellt von Bletchley Park?", "Welches Kunstwerk wurde ausgestellt von Bletchley Park?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Bletchley_Park>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Bode-Museum?", "Was wurde ausgestellt von Bode-Museum?", "Welche Kunstwerks werden ausgestellt von Bode-Museum?", "Welche Kunstwerks wurden ausgestellt von Bode-Museum?", "Welches Kunstwerk wird ausgestellt von Bode-Museum?", "Welches Kunstwerk wurde ausgestellt von Bode-Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Bode_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Bonnefantenmuseum?", "Was wurde ausgestellt von Bonnefantenmuseum?", "Welche Kunstwerks werden ausgestellt von Bonnefantenmuseum?", "Welche Kunstwerks wurden ausgestellt von Bonnefantenmuseum?", "Welches Kunstwerk wird ausgestellt von Bonnefantenmuseum?", "Welches Kunstwerk wurde ausgestellt von Bonnefantenmuseum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Bonnefantenmuseum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Boston?", "Was wurde ausgestellt von Boston?", "Welche Kunstwerks werden ausgestellt von Boston?", "Welche Kunstwerks wurden ausgestellt von Boston?", "Welches Kunstwerk wird ausgestellt von Boston?", "Welches Kunstwerk wurde ausgestellt von Boston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Boston>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Delaware Art Museum?", "Was wurde ausgestellt von Delaware Art Museum?", "Welche Kunstwerks werden ausgestellt von Delaware Art Museum?", "Welche Kunstwerks wurden ausgestellt von Delaware Art Museum?", "Welches Kunstwerk wird ausgestellt von Delaware Art Museum?", "Welches Kunstwerk wurde ausgestellt von Delaware Art Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Delaware_Art_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Denver Art Museum?", "Was wurde ausgestellt von Denver Art Museum?", "Welche Kunstwerks werden ausgestellt von Denver Art Museum?", "Welche Kunstwerks wurden ausgestellt von Denver Art Museum?", "Welches Kunstwerk wird ausgestellt von Denver Art Museum?", "Welches Kunstwerk wurde ausgestellt von Denver Art Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Denver_Art_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Denver International Airport?", "Was wurde ausgestellt von Denver International Airport?", "Welche Kunstwerks werden ausgestellt von Denver International Airport?", "Welche Kunstwerks wurden ausgestellt von Denver International Airport?", "Welches Kunstwerk wird ausgestellt von Denver International Airport?", "Welches Kunstwerk wurde ausgestellt von Denver International Airport?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Denver_International_Airport>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Derby Museum and Art Gallery?", "Was wurde ausgestellt von Derby Museum and Art Gallery?", "Welche Kunstwerks werden ausgestellt von Derby Museum and Art Gallery?", "Welche Kunstwerks wurden ausgestellt von Derby Museum and Art Gallery?", "Welches Kunstwerk wird ausgestellt von Derby Museum and Art Gallery?", "Welches Kunstwerk wurde ausgestellt von Derby Museum and Art Gallery?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Derby_Museum_and_Art_Gallery>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Des Moines Art Center?", "Was wurde ausgestellt von Des Moines Art Center?", "Welche Kunstwerks werden ausgestellt von Des Moines Art Center?", "Welche Kunstwerks wurden ausgestellt von Des Moines Art Center?", "Welches Kunstwerk wird ausgestellt von Des Moines Art Center?", "Welches Kunstwerk wurde ausgestellt von Des Moines Art Center?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Des_Moines_Art_Center>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Detroit?", "Was wurde ausgestellt von Detroit?", "Welche Kunstwerks werden ausgestellt von Detroit?", "Welche Kunstwerks wurden ausgestellt von Detroit?", "Welches Kunstwerk wird ausgestellt von Detroit?", "Welches Kunstwerk wurde ausgestellt von Detroit?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Detroit>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Detroit Institute of Arts?", "Was wurde ausgestellt von Detroit Institute of Arts?", "Welche Kunstwerks werden ausgestellt von Detroit Institute of Arts?", "Welche Kunstwerks wurden ausgestellt von Detroit Institute of Arts?", "Welches Kunstwerk wird ausgestellt von Detroit Institute of Arts?", "Welches Kunstwerk wurde ausgestellt von Detroit Institute of Arts?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Detroit_Institute_of_Arts>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Dia Art Foundation?", "Was wurde ausgestellt von Dia Art Foundation?", "Welche Kunstwerks werden ausgestellt von Dia Art Foundation?", "Welche Kunstwerks wurden ausgestellt von Dia Art Foundation?", "Welches Kunstwerk wird ausgestellt von Dia Art Foundation?", "Welches Kunstwerk wurde ausgestellt von Dia Art Foundation?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Dia_Art_Foundation>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Dogenpalast?", "Was wurde ausgestellt von Dogenpalast?", "Welche Kunstwerks werden ausgestellt von Dogenpalast?", "Welche Kunstwerks wurden ausgestellt von Dogenpalast?", "Welches Kunstwerk wird ausgestellt von Dogenpalast?", "Welches Kunstwerk wurde ausgestellt von Dogenpalast?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Doge's_Palace>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Golden Gate Park?", "Was wurde ausgestellt von Golden Gate Park?", "Welche Kunstwerks werden ausgestellt von Golden Gate Park?", "Welche Kunstwerks wurden ausgestellt von Golden Gate Park?", "Welches Kunstwerk wird ausgestellt von Golden Gate Park?", "Welches Kunstwerk wurde ausgestellt von Golden Gate Park?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Golden_Gate_Park>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Golestanpalast?", "Was wurde ausgestellt von Golestanpalast?", "Welche Kunstwerks werden ausgestellt von Golestanpalast?", "Welche Kunstwerks wurden ausgestellt von Golestanpalast?", "Welches Kunstwerk wird ausgestellt von Golestanpalast?", "Welches Kunstwerk wurde ausgestellt von Golestanpalast?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Golestan_Palace>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Großer Palast (Bangkok)?", "Was wurde ausgestellt von Großer Palast (Bangkok)?", "Welche Kunstwerks werden ausgestellt von Großer Palast (Bangkok)?", "Welche Kunstwerks wurden ausgestellt von Großer Palast (Bangkok)?", "Welches Kunstwerk wird ausgestellt von Großer Palast (Bangkok)?", "Welches Kunstwerk wurde ausgestellt von Großer Palast (Bangkok)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Grand_Palace>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Grant Park?", "Was wurde ausgestellt von Grant Park?", "Welche Kunstwerks werden ausgestellt von Grant Park?", "Welche Kunstwerks wurden ausgestellt von Grant Park?", "Welches Kunstwerk wird ausgestellt von Grant Park?", "Welches Kunstwerk wurde ausgestellt von Grant Park?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Grant_Park_(Chicago)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Great American Ball Park?", "Was wurde ausgestellt von Great American Ball Park?", "Welche Kunstwerks werden ausgestellt von Great American Ball Park?", "Welche Kunstwerks wurden ausgestellt von Great American Ball Park?", "Welches Kunstwerk wird ausgestellt von Great American Ball Park?", "Welches Kunstwerk wurde ausgestellt von Great American Ball Park?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Great_American_Ball_Park>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Greenwich (London)?", "Was wurde ausgestellt von Greenwich (London)?", "Welche Kunstwerks werden ausgestellt von Greenwich (London)?", "Welche Kunstwerks wurden ausgestellt von Greenwich (London)?", "Welches Kunstwerk wird ausgestellt von Greenwich (London)?", "Welches Kunstwerk wurde ausgestellt von Greenwich (London)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Greenwich>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Groninger Museum?", "Was wurde ausgestellt von Groninger Museum?", "Welche Kunstwerks werden ausgestellt von Groninger Museum?", "Welche Kunstwerks wurden ausgestellt von Groninger Museum?", "Welches Kunstwerk wird ausgestellt von Groninger Museum?", "Welches Kunstwerk wurde ausgestellt von Groninger Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Groninger_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Guildhall (London)?", "Was wurde ausgestellt von Guildhall (London)?", "Welche Kunstwerks werden ausgestellt von Guildhall (London)?", "Welche Kunstwerks wurden ausgestellt von Guildhall (London)?", "Welches Kunstwerk wird ausgestellt von Guildhall (London)?", "Welches Kunstwerk wurde ausgestellt von Guildhall (London)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Guildhall,_London>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Kenwood House?", "Was wurde ausgestellt von Kenwood House?", "Welche Kunstwerks werden ausgestellt von Kenwood House?", "Welche Kunstwerks wurden ausgestellt von Kenwood House?", "Welches Kunstwerk wird ausgestellt von Kenwood House?", "Welches Kunstwerk wurde ausgestellt von Kenwood House?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Kenwood_House>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Kimbell Art Museum?", "Was wurde ausgestellt von Kimbell Art Museum?", "Welche Kunstwerks werden ausgestellt von Kimbell Art Museum?", "Welche Kunstwerks wurden ausgestellt von Kimbell Art Museum?", "Welches Kunstwerk wird ausgestellt von Kimbell Art Museum?", "Welches Kunstwerk wurde ausgestellt von Kimbell Art Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Kimbell_Art_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von King’s College Chapel (Cambridge)?", "Was wurde ausgestellt von King’s College Chapel (Cambridge)?", "Welche Kunstwerks werden ausgestellt von King’s College Chapel (Cambridge)?", "Welche Kunstwerks wurden ausgestellt von King’s College Chapel (Cambridge)?", "Welches Kunstwerk wird ausgestellt von King’s College Chapel (Cambridge)?", "Welches Kunstwerk wurde ausgestellt von King’s College Chapel (Cambridge)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/King's_College_Chapel,_Cambridge>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Nationale Universität Krywyj Rih?", "Was wurde ausgestellt von Nationale Universität Krywyj Rih?", "Welche Kunstwerks werden ausgestellt von Nationale Universität Krywyj Rih?", "Welche Kunstwerks wurden ausgestellt von Nationale Universität Krywyj Rih?", "Welches Kunstwerk wird ausgestellt von Nationale Universität Krywyj Rih?", "Welches Kunstwerk wurde ausgestellt von Nationale Universität Krywyj Rih?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Kryvyi_Rih_National_University>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Kröller-Müller Museum?", "Was wurde ausgestellt von Kröller-Müller Museum?", "Welche Kunstwerks werden ausgestellt von Kröller-Müller Museum?", "Welche Kunstwerks wurden ausgestellt von Kröller-Müller Museum?", "Welches Kunstwerk wird ausgestellt von Kröller-Müller Museum?", "Welches Kunstwerk wurde ausgestellt von Kröller-Müller Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Kröller-Müller_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Puschkin-Museum?", "Was wurde ausgestellt von Puschkin-Museum?", "Welche Kunstwerks werden ausgestellt von Puschkin-Museum?", "Welche Kunstwerks wurden ausgestellt von Puschkin-Museum?", "Welches Kunstwerk wird ausgestellt von Puschkin-Museum?", "Welches Kunstwerk wurde ausgestellt von Puschkin-Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Pushkin_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Père Lachaise?", "Was wurde ausgestellt von Père Lachaise?", "Welche Kunstwerks werden ausgestellt von Père Lachaise?", "Welche Kunstwerks wurden ausgestellt von Père Lachaise?", "Welches Kunstwerk wird ausgestellt von Père Lachaise?", "Welches Kunstwerk wurde ausgestellt von Père Lachaise?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Père_Lachaise_Cemetery>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Queen’s House?", "Was wurde ausgestellt von Queen’s House?", "Welche Kunstwerks werden ausgestellt von Queen’s House?", "Welche Kunstwerks wurden ausgestellt von Queen’s House?", "Welches Kunstwerk wird ausgestellt von Queen’s House?", "Welches Kunstwerk wurde ausgestellt von Queen’s House?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Queen's_House>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Kunstmuseum Basel?", "Was wurde ausgestellt von Kunstmuseum Basel?", "Welche Kunstwerks werden ausgestellt von Kunstmuseum Basel?", "Welche Kunstwerks wurden ausgestellt von Kunstmuseum Basel?", "Welches Kunstwerk wird ausgestellt von Kunstmuseum Basel?", "Welches Kunstwerk wurde ausgestellt von Kunstmuseum Basel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Kunstmuseum_Basel>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Kunsthaus Zürich?", "Was wurde ausgestellt von Kunsthaus Zürich?", "Welche Kunstwerks werden ausgestellt von Kunsthaus Zürich?", "Welche Kunstwerks wurden ausgestellt von Kunsthaus Zürich?", "Welches Kunstwerk wird ausgestellt von Kunsthaus Zürich?", "Welches Kunstwerk wurde ausgestellt von Kunsthaus Zürich?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Kunstmuseum_Basel>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Royal Greenwich Observatory?", "Was wurde ausgestellt von Royal Greenwich Observatory?", "Welche Kunstwerks werden ausgestellt von Royal Greenwich Observatory?", "Welche Kunstwerks wurden ausgestellt von Royal Greenwich Observatory?", "Welches Kunstwerk wird ausgestellt von Royal Greenwich Observatory?", "Welches Kunstwerk wurde ausgestellt von Royal Greenwich Observatory?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Royal_Observatory,_Greenwich>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Palazzo Pitti?", "Was wurde ausgestellt von Palazzo Pitti?", "Welche Kunstwerks werden ausgestellt von Palazzo Pitti?", "Welche Kunstwerks wurden ausgestellt von Palazzo Pitti?", "Welches Kunstwerk wird ausgestellt von Palazzo Pitti?", "Welches Kunstwerk wurde ausgestellt von Palazzo Pitti?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Palazzo_Pitti>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von San Marco (Florenz)?", "Was wurde ausgestellt von San Marco (Florenz)?", "Welche Kunstwerks werden ausgestellt von San Marco (Florenz)?", "Welche Kunstwerks wurden ausgestellt von San Marco (Florenz)?", "Welches Kunstwerk wird ausgestellt von San Marco (Florenz)?", "Welches Kunstwerk wurde ausgestellt von San Marco (Florenz)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/San_Marco,_Florence>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Horse Guards Parade?", "Was wurde ausgestellt von Horse Guards Parade?", "Welche Kunstwerks werden ausgestellt von Horse Guards Parade?", "Welche Kunstwerks wurden ausgestellt von Horse Guards Parade?", "Welches Kunstwerk wird ausgestellt von Horse Guards Parade?", "Welches Kunstwerk wurde ausgestellt von Horse Guards Parade?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Horse_Guards_Parade>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von University of the West Indies?", "Was wurde ausgestellt von University of the West Indies?", "Welche Kunstwerks werden ausgestellt von University of the West Indies?", "Welche Kunstwerks wurden ausgestellt von University of the West Indies?", "Welches Kunstwerk wird ausgestellt von University of the West Indies?", "Welches Kunstwerk wurde ausgestellt von University of the West Indies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/University_of_the_West_Indies>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Pera-Museum?", "Was wurde ausgestellt von Pera-Museum?", "Welche Kunstwerks werden ausgestellt von Pera-Museum?", "Welche Kunstwerks wurden ausgestellt von Pera-Museum?", "Welches Kunstwerk wird ausgestellt von Pera-Museum?", "Welches Kunstwerk wurde ausgestellt von Pera-Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Pera_Museum>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Villa Stuck?", "Was wurde ausgestellt von Villa Stuck?", "Welche Kunstwerks werden ausgestellt von Villa Stuck?", "Welche Kunstwerks wurden ausgestellt von Villa Stuck?", "Welches Kunstwerk wird ausgestellt von Villa Stuck?", "Welches Kunstwerk wurde ausgestellt von Villa Stuck?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Villa_Stuck>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Konservatorenpalast?", "Was wurde ausgestellt von Konservatorenpalast?", "Welche Kunstwerks werden ausgestellt von Konservatorenpalast?", "Welche Kunstwerks wurden ausgestellt von Konservatorenpalast?", "Welches Kunstwerk wird ausgestellt von Konservatorenpalast?", "Welches Kunstwerk wurde ausgestellt von Konservatorenpalast?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Palazzo_dei_Conservatori>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Albertina (Wien)?", "Was wurde ausgestellt von Albertina (Wien)?", "Welche Kunstwerks werden ausgestellt von Albertina (Wien)?", "Welche Kunstwerks wurden ausgestellt von Albertina (Wien)?", "Welches Kunstwerk wird ausgestellt von Albertina (Wien)?", "Welches Kunstwerk wurde ausgestellt von Albertina (Wien)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Albertina>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Albright-Knox Art Gallery?", "Was wurde ausgestellt von Albright-Knox Art Gallery?", "Welche Kunstwerks werden ausgestellt von Albright-Knox Art Gallery?", "Welche Kunstwerks wurden ausgestellt von Albright-Knox Art Gallery?", "Welches Kunstwerk wird ausgestellt von Albright-Knox Art Gallery?", "Welches Kunstwerk wurde ausgestellt von Albright-Knox Art Gallery?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Albright–Knox_Art_Gallery>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Alnwick Castle?", "Was wurde ausgestellt von Alnwick Castle?", "Welche Kunstwerks werden ausgestellt von Alnwick Castle?", "Welche Kunstwerks wurden ausgestellt von Alnwick Castle?", "Welches Kunstwerk wird ausgestellt von Alnwick Castle?", "Welches Kunstwerk wurde ausgestellt von Alnwick Castle?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Alnwick_Castle>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Alte Nationalgalerie?", "Was wurde ausgestellt von Alte Nationalgalerie?", "Welche Kunstwerks werden ausgestellt von Alte Nationalgalerie?", "Welche Kunstwerks wurden ausgestellt von Alte Nationalgalerie?", "Welches Kunstwerk wird ausgestellt von Alte Nationalgalerie?", "Welches Kunstwerk wurde ausgestellt von Alte Nationalgalerie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Alte_Nationalgalerie>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Alte Pinakothek?", "Was wurde ausgestellt von Alte Pinakothek?", "Welche Kunstwerks werden ausgestellt von Alte Pinakothek?", "Welche Kunstwerks wurden ausgestellt von Alte Pinakothek?", "Welches Kunstwerk wird ausgestellt von Alte Pinakothek?", "Welches Kunstwerk wurde ausgestellt von Alte Pinakothek?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Alte_Pinakothek>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird ausgestellt von Sophienkathedrale (Nowgorod)?", "Was wurde ausgestellt von Sophienkathedrale (Nowgorod)?", "Welche Kunstwerks werden ausgestellt von Sophienkathedrale (Nowgorod)?", "Welche Kunstwerks wurden ausgestellt von Sophienkathedrale (Nowgorod)?", "Welches Kunstwerk wird ausgestellt von Sophienkathedrale (Nowgorod)?", "Welches Kunstwerk wurde ausgestellt von Sophienkathedrale (Nowgorod)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Cathedral_of_St._Sophia,_Novgorod>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lowell Bergman?", "Welche Person wurde verheiratet mit Lowell Bergman?", "Welche Persons werden verheiratet mit Lowell Bergman?", "Welche Persons wurden verheiratet mit Lowell Bergman?", "Wer wird verheiratet mit Lowell Bergman?", "Wer wurde verheiratet mit Lowell Bergman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lowell_Bergman> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lowell Sherman?", "Welche Person wurde verheiratet mit Lowell Sherman?", "Welche Persons werden verheiratet mit Lowell Sherman?", "Welche Persons wurden verheiratet mit Lowell Sherman?", "Wer wird verheiratet mit Lowell Sherman?", "Wer wurde verheiratet mit Lowell Sherman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lowell_Sherman> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lu Chuan?", "Welche Person wurde verheiratet mit Lu Chuan?", "Welche Persons werden verheiratet mit Lu Chuan?", "Welche Persons wurden verheiratet mit Lu Chuan?", "Wer wird verheiratet mit Lu Chuan?", "Wer wurde verheiratet mit Lu Chuan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lu_Chuan> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lu Kang?", "Welche Person wurde verheiratet mit Lu Kang?", "Welche Persons werden verheiratet mit Lu Kang?", "Welche Persons wurden verheiratet mit Lu Kang?", "Wer wird verheiratet mit Lu Kang?", "Wer wurde verheiratet mit Lu Kang?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lu_Kang_(Three_Kingdoms)> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lu Xun?", "Welche Person wurde verheiratet mit Lu Xun?", "Welche Persons werden verheiratet mit Lu Xun?", "Welche Persons wurden verheiratet mit Lu Xun?", "Wer wird verheiratet mit Lu Xun?", "Wer wurde verheiratet mit Lu Xun?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lu_Xun> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lu Xun (Drei Reiche)?", "Welche Person wurde verheiratet mit Lu Xun (Drei Reiche)?", "Welche Persons werden verheiratet mit Lu Xun (Drei Reiche)?", "Welche Persons wurden verheiratet mit Lu Xun (Drei Reiche)?", "Wer wird verheiratet mit Lu Xun (Drei Reiche)?", "Wer wurde verheiratet mit Lu Xun (Drei Reiche)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lu_Xun_(Three_Kingdoms)> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Luana Patten?", "Welche Person wurde verheiratet mit Luana Patten?", "Welche Persons werden verheiratet mit Luana Patten?", "Welche Persons wurden verheiratet mit Luana Patten?", "Wer wird verheiratet mit Luana Patten?", "Wer wurde verheiratet mit Luana Patten?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luana_Patten> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Luc Besson?", "Welche Person wurde verheiratet mit Luc Besson?", "Welche Persons werden verheiratet mit Luc Besson?", "Welche Persons wurden verheiratet mit Luc Besson?", "Wer wird verheiratet mit Luc Besson?", "Wer wurde verheiratet mit Luc Besson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luc_Besson> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Luc Tuymans?", "Welche Person wurde verheiratet mit Luc Tuymans?", "Welche Persons werden verheiratet mit Luc Tuymans?", "Welche Persons wurden verheiratet mit Luc Tuymans?", "Wer wird verheiratet mit Luc Tuymans?", "Wer wurde verheiratet mit Luc Tuymans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luc_Tuymans> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucas Monteverde?", "Welche Person wurde verheiratet mit Lucas Monteverde?", "Welche Persons werden verheiratet mit Lucas Monteverde?", "Welche Persons wurden verheiratet mit Lucas Monteverde?", "Wer wird verheiratet mit Lucas Monteverde?", "Wer wurde verheiratet mit Lucas Monteverde?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucas_Monteverde> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucas Neff?", "Welche Person wurde verheiratet mit Lucas Neff?", "Welche Persons werden verheiratet mit Lucas Neff?", "Welche Persons wurden verheiratet mit Lucas Neff?", "Wer wird verheiratet mit Lucas Neff?", "Wer wurde verheiratet mit Lucas Neff?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucas_Neff> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucette Lagnado?", "Welche Person wurde verheiratet mit Lucette Lagnado?", "Welche Persons werden verheiratet mit Lucette Lagnado?", "Welche Persons wurden verheiratet mit Lucette Lagnado?", "Wer wird verheiratet mit Lucette Lagnado?", "Wer wurde verheiratet mit Lucette Lagnado?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucette_Lagnado> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucia Bosè?", "Welche Person wurde verheiratet mit Lucia Bosè?", "Welche Persons werden verheiratet mit Lucia Bosè?", "Welche Persons wurden verheiratet mit Lucia Bosè?", "Wer wird verheiratet mit Lucia Bosè?", "Wer wurde verheiratet mit Lucia Bosè?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucia_Bosè> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucia Migliaccio?", "Welche Person wurde verheiratet mit Lucia Migliaccio?", "Welche Persons werden verheiratet mit Lucia Migliaccio?", "Welche Persons wurden verheiratet mit Lucia Migliaccio?", "Wer wird verheiratet mit Lucia Migliaccio?", "Wer wurde verheiratet mit Lucia Migliaccio?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucia_Migliaccio> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucia Moholy?", "Welche Person wurde verheiratet mit Lucia Moholy?", "Welche Persons werden verheiratet mit Lucia Moholy?", "Welche Persons wurden verheiratet mit Lucia Moholy?", "Wer wird verheiratet mit Lucia Moholy?", "Wer wurde verheiratet mit Lucia Moholy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucia_Moholy> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucia Popp?", "Welche Person wurde verheiratet mit Lucia Popp?", "Welche Persons werden verheiratet mit Lucia Popp?", "Welche Persons wurden verheiratet mit Lucia Popp?", "Wer wird verheiratet mit Lucia Popp?", "Wer wurde verheiratet mit Lucia Popp?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucia_Popp> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucian Freud?", "Welche Person wurde verheiratet mit Lucian Freud?", "Welche Persons werden verheiratet mit Lucian Freud?", "Welche Persons wurden verheiratet mit Lucian Freud?", "Wer wird verheiratet mit Lucian Freud?", "Wer wurde verheiratet mit Lucian Freud?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucian_Freud> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Luciana Castellina?", "Welche Person wurde verheiratet mit Luciana Castellina?", "Welche Persons werden verheiratet mit Luciana Castellina?", "Welche Persons wurden verheiratet mit Luciana Castellina?", "Wer wird verheiratet mit Luciana Castellina?", "Wer wurde verheiratet mit Luciana Castellina?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luciana_Castellina> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Luciana Paluzzi?", "Welche Person wurde verheiratet mit Luciana Paluzzi?", "Welche Persons werden verheiratet mit Luciana Paluzzi?", "Welche Persons wurden verheiratet mit Luciana Paluzzi?", "Wer wird verheiratet mit Luciana Paluzzi?", "Wer wurde verheiratet mit Luciana Paluzzi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luciana_Paluzzi> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Luciana Pedraza?", "Welche Person wurde verheiratet mit Luciana Pedraza?", "Welche Persons werden verheiratet mit Luciana Pedraza?", "Welche Persons wurden verheiratet mit Luciana Pedraza?", "Wer wird verheiratet mit Luciana Pedraza?", "Wer wurde verheiratet mit Luciana Pedraza?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luciana_Pedraza> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Luciano Ercoli?", "Welche Person wurde verheiratet mit Luciano Ercoli?", "Welche Persons werden verheiratet mit Luciano Ercoli?", "Welche Persons wurden verheiratet mit Luciano Ercoli?", "Wer wird verheiratet mit Luciano Ercoli?", "Wer wurde verheiratet mit Luciano Ercoli?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luciano_Ercoli> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Luciano Martino?", "Welche Person wurde verheiratet mit Luciano Martino?", "Welche Persons werden verheiratet mit Luciano Martino?", "Welche Persons wurden verheiratet mit Luciano Martino?", "Wer wird verheiratet mit Luciano Martino?", "Wer wurde verheiratet mit Luciano Martino?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luciano_Martino> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucie Arnaz?", "Welche Person wurde verheiratet mit Lucie Arnaz?", "Welche Persons werden verheiratet mit Lucie Arnaz?", "Welche Persons wurden verheiratet mit Lucie Arnaz?", "Wer wird verheiratet mit Lucie Arnaz?", "Wer wurde verheiratet mit Lucie Arnaz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucie_Arnaz> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucie Aubrac?", "Welche Person wurde verheiratet mit Lucie Aubrac?", "Welche Persons werden verheiratet mit Lucie Aubrac?", "Welche Persons wurden verheiratet mit Lucie Aubrac?", "Wer wird verheiratet mit Lucie Aubrac?", "Wer wurde verheiratet mit Lucie Aubrac?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucie_Aubrac> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucie Mannheim?", "Welche Person wurde verheiratet mit Lucie Mannheim?", "Welche Persons werden verheiratet mit Lucie Mannheim?", "Welche Persons wurden verheiratet mit Lucie Mannheim?", "Wer wird verheiratet mit Lucie Mannheim?", "Wer wurde verheiratet mit Lucie Mannheim?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucie_Mannheim> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucien E. Blackwell?", "Welche Person wurde verheiratet mit Lucien E. Blackwell?", "Welche Persons werden verheiratet mit Lucien E. Blackwell?", "Welche Persons wurden verheiratet mit Lucien E. Blackwell?", "Wer wird verheiratet mit Lucien E. Blackwell?", "Wer wurde verheiratet mit Lucien E. Blackwell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucien_Blackwell> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucien Bonaparte?", "Welche Person wurde verheiratet mit Lucien Bonaparte?", "Welche Persons werden verheiratet mit Lucien Bonaparte?", "Welche Persons wurden verheiratet mit Lucien Bonaparte?", "Wer wird verheiratet mit Lucien Bonaparte?", "Wer wurde verheiratet mit Lucien Bonaparte?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucien_Bonaparte> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucien Pissarro?", "Welche Person wurde verheiratet mit Lucien Pissarro?", "Welche Persons werden verheiratet mit Lucien Pissarro?", "Welche Persons wurden verheiratet mit Lucien Pissarro?", "Wer wird verheiratet mit Lucien Pissarro?", "Wer wurde verheiratet mit Lucien Pissarro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucien_Pissarro> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucienne Boyer?", "Welche Person wurde verheiratet mit Lucienne Boyer?", "Welche Persons werden verheiratet mit Lucienne Boyer?", "Welche Persons wurden verheiratet mit Lucienne Boyer?", "Wer wird verheiratet mit Lucienne Boyer?", "Wer wurde verheiratet mit Lucienne Boyer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucienne_Boyer> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucienne Day?", "Welche Person wurde verheiratet mit Lucienne Day?", "Welche Persons werden verheiratet mit Lucienne Day?", "Welche Persons wurden verheiratet mit Lucienne Day?", "Wer wird verheiratet mit Lucienne Day?", "Wer wurde verheiratet mit Lucienne Day?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucienne_Day> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucile Browne?", "Welche Person wurde verheiratet mit Lucile Browne?", "Welche Persons werden verheiratet mit Lucile Browne?", "Welche Persons wurden verheiratet mit Lucile Browne?", "Wer wird verheiratet mit Lucile Browne?", "Wer wurde verheiratet mit Lucile Browne?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucile_Browne> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucile Hadzihalilovic?", "Welche Person wurde verheiratet mit Lucile Hadzihalilovic?", "Welche Persons werden verheiratet mit Lucile Hadzihalilovic?", "Welche Persons wurden verheiratet mit Lucile Hadzihalilovic?", "Wer wird verheiratet mit Lucile Hadzihalilovic?", "Wer wurde verheiratet mit Lucile Hadzihalilovic?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucile_Hadžihalilović> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucile Watson?", "Welche Person wurde verheiratet mit Lucile Watson?", "Welche Persons werden verheiratet mit Lucile Watson?", "Welche Persons wurden verheiratet mit Lucile Watson?", "Wer wird verheiratet mit Lucile Watson?", "Wer wurde verheiratet mit Lucile Watson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucile_Watson> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucilla?", "Welche Person wurde verheiratet mit Lucilla?", "Welche Persons werden verheiratet mit Lucilla?", "Welche Persons wurden verheiratet mit Lucilla?", "Wer wird verheiratet mit Lucilla?", "Wer wurde verheiratet mit Lucilla?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucilla> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucille Ball?", "Welche Person wurde verheiratet mit Lucille Ball?", "Welche Persons werden verheiratet mit Lucille Ball?", "Welche Persons wurden verheiratet mit Lucille Ball?", "Wer wird verheiratet mit Lucille Ball?", "Wer wurde verheiratet mit Lucille Ball?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucille_Ball> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucina da Costa Gomez-Matheeuws?", "Welche Person wurde verheiratet mit Lucina da Costa Gomez-Matheeuws?", "Welche Persons werden verheiratet mit Lucina da Costa Gomez-Matheeuws?", "Welche Persons wurden verheiratet mit Lucina da Costa Gomez-Matheeuws?", "Wer wird verheiratet mit Lucina da Costa Gomez-Matheeuws?", "Wer wurde verheiratet mit Lucina da Costa Gomez-Matheeuws?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucina_da_Costa_Gomez-Matheeuws> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucinda Jenney?", "Welche Person wurde verheiratet mit Lucinda Jenney?", "Welche Persons werden verheiratet mit Lucinda Jenney?", "Welche Persons wurden verheiratet mit Lucinda Jenney?", "Wer wird verheiratet mit Lucinda Jenney?", "Wer wurde verheiratet mit Lucinda Jenney?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucinda_Jenney> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucius Aelius Caesar?", "Welche Person wurde verheiratet mit Lucius Aelius Caesar?", "Welche Persons werden verheiratet mit Lucius Aelius Caesar?", "Welche Persons wurden verheiratet mit Lucius Aelius Caesar?", "Wer wird verheiratet mit Lucius Aelius Caesar?", "Wer wurde verheiratet mit Lucius Aelius Caesar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucius_Aelius> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucius Marcius Philippus (Suffektkonsul 38 v. Chr.)?", "Welche Person wurde verheiratet mit Lucius Marcius Philippus (Suffektkonsul 38 v. Chr.)?", "Welche Persons werden verheiratet mit Lucius Marcius Philippus (Suffektkonsul 38 v. Chr.)?", "Welche Persons wurden verheiratet mit Lucius Marcius Philippus (Suffektkonsul 38 v. Chr.)?", "Wer wird verheiratet mit Lucius Marcius Philippus (Suffektkonsul 38 v. Chr.)?", "Wer wurde verheiratet mit Lucius Marcius Philippus (Suffektkonsul 38 v. Chr.)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucius_Marcius_Philippus_(consul_38_BC)> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucius Marcius Philippus (Konsul 56 v. Chr.)?", "Welche Person wurde verheiratet mit Lucius Marcius Philippus (Konsul 56 v. Chr.)?", "Welche Persons werden verheiratet mit Lucius Marcius Philippus (Konsul 56 v. Chr.)?", "Welche Persons wurden verheiratet mit Lucius Marcius Philippus (Konsul 56 v. Chr.)?", "Wer wird verheiratet mit Lucius Marcius Philippus (Konsul 56 v. Chr.)?", "Wer wurde verheiratet mit Lucius Marcius Philippus (Konsul 56 v. Chr.)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucius_Marcius_Philippus_(consul_56_BC)> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucius Tarquinius Superbus?", "Welche Person wurde verheiratet mit Lucius Tarquinius Superbus?", "Welche Persons werden verheiratet mit Lucius Tarquinius Superbus?", "Welche Persons wurden verheiratet mit Lucius Tarquinius Superbus?", "Wer wird verheiratet mit Lucius Tarquinius Superbus?", "Wer wurde verheiratet mit Lucius Tarquinius Superbus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucius_Tarquinius_Superbus> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucius Verus?", "Welche Person wurde verheiratet mit Lucius Verus?", "Welche Persons werden verheiratet mit Lucius Verus?", "Welche Persons wurden verheiratet mit Lucius Verus?", "Wer wird verheiratet mit Lucius Verus?", "Wer wurde verheiratet mit Lucius Verus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucius_Verus> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucius Volusius Saturninus (Suffektkonsul 12 v. Chr.)?", "Welche Person wurde verheiratet mit Lucius Volusius Saturninus (Suffektkonsul 12 v. Chr.)?", "Welche Persons werden verheiratet mit Lucius Volusius Saturninus (Suffektkonsul 12 v. Chr.)?", "Welche Persons wurden verheiratet mit Lucius Volusius Saturninus (Suffektkonsul 12 v. Chr.)?", "Wer wird verheiratet mit Lucius Volusius Saturninus (Suffektkonsul 12 v. Chr.)?", "Wer wurde verheiratet mit Lucius Volusius Saturninus (Suffektkonsul 12 v. Chr.)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucius_Volusius_Saturninus_(suffect_consul_12_BC)> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucretia Garfield?", "Welche Person wurde verheiratet mit Lucretia Garfield?", "Welche Persons werden verheiratet mit Lucretia Garfield?", "Welche Persons wurden verheiratet mit Lucretia Garfield?", "Wer wird verheiratet mit Lucretia Garfield?", "Wer wurde verheiratet mit Lucretia Garfield?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucretia_Garfield> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucretia Mott?", "Welche Person wurde verheiratet mit Lucretia Mott?", "Welche Persons werden verheiratet mit Lucretia Mott?", "Welche Persons wurden verheiratet mit Lucretia Mott?", "Wer wird verheiratet mit Lucretia Mott?", "Wer wurde verheiratet mit Lucretia Mott?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucretia_Mott> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucrezia Borgia?", "Welche Person wurde verheiratet mit Lucrezia Borgia?", "Welche Persons werden verheiratet mit Lucrezia Borgia?", "Welche Persons wurden verheiratet mit Lucrezia Borgia?", "Wer wird verheiratet mit Lucrezia Borgia?", "Wer wurde verheiratet mit Lucrezia Borgia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucrezia_Borgia> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucrezia Tornabuoni?", "Welche Person wurde verheiratet mit Lucrezia Tornabuoni?", "Welche Persons werden verheiratet mit Lucrezia Tornabuoni?", "Welche Persons wurden verheiratet mit Lucrezia Tornabuoni?", "Wer wird verheiratet mit Lucrezia Tornabuoni?", "Wer wurde verheiratet mit Lucrezia Tornabuoni?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucrezia_Tornabuoni> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucrezia di Cosimo de’ Medici?", "Welche Person wurde verheiratet mit Lucrezia di Cosimo de’ Medici?", "Welche Persons werden verheiratet mit Lucrezia di Cosimo de’ Medici?", "Welche Persons wurden verheiratet mit Lucrezia di Cosimo de’ Medici?", "Wer wird verheiratet mit Lucrezia di Cosimo de’ Medici?", "Wer wurde verheiratet mit Lucrezia di Cosimo de’ Medici?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucrezia_de'_Medici,_Duchess_of_Ferrara> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucrezia di Lorenzo de’ Medici?", "Welche Person wurde verheiratet mit Lucrezia di Lorenzo de’ Medici?", "Welche Persons werden verheiratet mit Lucrezia di Lorenzo de’ Medici?", "Welche Persons wurden verheiratet mit Lucrezia di Lorenzo de’ Medici?", "Wer wird verheiratet mit Lucrezia di Lorenzo de’ Medici?", "Wer wurde verheiratet mit Lucrezia di Lorenzo de’ Medici?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucrezia_de'_Medici_(1470–1553)> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucius Licinius Lucullus?", "Welche Person wurde verheiratet mit Lucius Licinius Lucullus?", "Welche Persons werden verheiratet mit Lucius Licinius Lucullus?", "Welche Persons wurden verheiratet mit Lucius Licinius Lucullus?", "Wer wird verheiratet mit Lucius Licinius Lucullus?", "Wer wurde verheiratet mit Lucius Licinius Lucullus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucullus> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucy Christiana Duff Gordon?", "Welche Person wurde verheiratet mit Lucy Christiana Duff Gordon?", "Welche Persons werden verheiratet mit Lucy Christiana Duff Gordon?", "Welche Persons wurden verheiratet mit Lucy Christiana Duff Gordon?", "Wer wird verheiratet mit Lucy Christiana Duff Gordon?", "Wer wurde verheiratet mit Lucy Christiana Duff Gordon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy,_Lady_Duff-Gordon> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucy-Jo Hudson?", "Welche Person wurde verheiratet mit Lucy-Jo Hudson?", "Welche Persons werden verheiratet mit Lucy-Jo Hudson?", "Welche Persons wurden verheiratet mit Lucy-Jo Hudson?", "Wer wird verheiratet mit Lucy-Jo Hudson?", "Wer wurde verheiratet mit Lucy-Jo Hudson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy-Jo_Hudson> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucy Aharish?", "Welche Person wurde verheiratet mit Lucy Aharish?", "Welche Persons werden verheiratet mit Lucy Aharish?", "Welche Persons wurden verheiratet mit Lucy Aharish?", "Wer wird verheiratet mit Lucy Aharish?", "Wer wurde verheiratet mit Lucy Aharish?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_Aharish> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucy Akhurst?", "Welche Person wurde verheiratet mit Lucy Akhurst?", "Welche Persons werden verheiratet mit Lucy Akhurst?", "Welche Persons wurden verheiratet mit Lucy Akhurst?", "Wer wird verheiratet mit Lucy Akhurst?", "Wer wurde verheiratet mit Lucy Akhurst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_Akhurst> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucy Baxley?", "Welche Person wurde verheiratet mit Lucy Baxley?", "Welche Persons werden verheiratet mit Lucy Baxley?", "Welche Persons wurden verheiratet mit Lucy Baxley?", "Wer wird verheiratet mit Lucy Baxley?", "Wer wurde verheiratet mit Lucy Baxley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_Baxley> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucy Brown?", "Welche Person wurde verheiratet mit Lucy Brown?", "Welche Persons werden verheiratet mit Lucy Brown?", "Welche Persons wurden verheiratet mit Lucy Brown?", "Wer wird verheiratet mit Lucy Brown?", "Wer wurde verheiratet mit Lucy Brown?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_Brown> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucy Cohu?", "Welche Person wurde verheiratet mit Lucy Cohu?", "Welche Persons werden verheiratet mit Lucy Cohu?", "Welche Persons wurden verheiratet mit Lucy Cohu?", "Wer wird verheiratet mit Lucy Cohu?", "Wer wurde verheiratet mit Lucy Cohu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_Cohu> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucy Davis (Schauspielerin)?", "Welche Person wurde verheiratet mit Lucy Davis (Schauspielerin)?", "Welche Persons werden verheiratet mit Lucy Davis (Schauspielerin)?", "Welche Persons wurden verheiratet mit Lucy Davis (Schauspielerin)?", "Wer wird verheiratet mit Lucy Davis (Schauspielerin)?", "Wer wurde verheiratet mit Lucy Davis (Schauspielerin)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_Davis> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucy Doraine?", "Welche Person wurde verheiratet mit Lucy Doraine?", "Welche Persons werden verheiratet mit Lucy Doraine?", "Welche Persons wurden verheiratet mit Lucy Doraine?", "Wer wird verheiratet mit Lucy Doraine?", "Wer wurde verheiratet mit Lucy Doraine?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_Doraine> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucy Ellmann?", "Welche Person wurde verheiratet mit Lucy Ellmann?", "Welche Persons werden verheiratet mit Lucy Ellmann?", "Welche Persons wurden verheiratet mit Lucy Ellmann?", "Wer wird verheiratet mit Lucy Ellmann?", "Wer wurde verheiratet mit Lucy Ellmann?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_Ellmann> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucy Gaskell?", "Welche Person wurde verheiratet mit Lucy Gaskell?", "Welche Persons werden verheiratet mit Lucy Gaskell?", "Welche Persons wurden verheiratet mit Lucy Gaskell?", "Wer wird verheiratet mit Lucy Gaskell?", "Wer wurde verheiratet mit Lucy Gaskell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_Gaskell> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucy Kellaway?", "Welche Person wurde verheiratet mit Lucy Kellaway?", "Welche Persons werden verheiratet mit Lucy Kellaway?", "Welche Persons wurden verheiratet mit Lucy Kellaway?", "Wer wird verheiratet mit Lucy Kellaway?", "Wer wurde verheiratet mit Lucy Kellaway?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_Kellaway> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucy Lawless?", "Welche Person wurde verheiratet mit Lucy Lawless?", "Welche Persons werden verheiratet mit Lucy Lawless?", "Welche Persons wurden verheiratet mit Lucy Lawless?", "Wer wird verheiratet mit Lucy Lawless?", "Wer wurde verheiratet mit Lucy Lawless?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_Lawless> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucy Madox Brown?", "Welche Person wurde verheiratet mit Lucy Madox Brown?", "Welche Persons werden verheiratet mit Lucy Madox Brown?", "Welche Persons wurden verheiratet mit Lucy Madox Brown?", "Wer wird verheiratet mit Lucy Madox Brown?", "Wer wurde verheiratet mit Lucy Madox Brown?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_Madox_Brown> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucy Mercer?", "Welche Person wurde verheiratet mit Lucy Mercer?", "Welche Persons werden verheiratet mit Lucy Mercer?", "Welche Persons wurden verheiratet mit Lucy Mercer?", "Wer wird verheiratet mit Lucy Mercer?", "Wer wurde verheiratet mit Lucy Mercer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_Mercer_Rutherfurd> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucy Nethsingha?", "Welche Person wurde verheiratet mit Lucy Nethsingha?", "Welche Persons werden verheiratet mit Lucy Nethsingha?", "Welche Persons wurden verheiratet mit Lucy Nethsingha?", "Wer wird verheiratet mit Lucy Nethsingha?", "Wer wurde verheiratet mit Lucy Nethsingha?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_Nethsingha> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucy Neville-Rolfe, Baroness Neville-Rolfe?", "Welche Person wurde verheiratet mit Lucy Neville-Rolfe, Baroness Neville-Rolfe?", "Welche Persons werden verheiratet mit Lucy Neville-Rolfe, Baroness Neville-Rolfe?", "Welche Persons wurden verheiratet mit Lucy Neville-Rolfe, Baroness Neville-Rolfe?", "Wer wird verheiratet mit Lucy Neville-Rolfe, Baroness Neville-Rolfe?", "Wer wurde verheiratet mit Lucy Neville-Rolfe, Baroness Neville-Rolfe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_Neville-Rolfe> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucy Parsons?", "Welche Person wurde verheiratet mit Lucy Parsons?", "Welche Persons werden verheiratet mit Lucy Parsons?", "Welche Persons wurden verheiratet mit Lucy Parsons?", "Wer wird verheiratet mit Lucy Parsons?", "Wer wurde verheiratet mit Lucy Parsons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_Parsons> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucy Scott?", "Welche Person wurde verheiratet mit Lucy Scott?", "Welche Persons werden verheiratet mit Lucy Scott?", "Welche Persons wurden verheiratet mit Lucy Scott?", "Wer wird verheiratet mit Lucy Scott?", "Wer wurde verheiratet mit Lucy Scott?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_Scott> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucy Shapiro?", "Welche Person wurde verheiratet mit Lucy Shapiro?", "Welche Persons werden verheiratet mit Lucy Shapiro?", "Welche Persons wurden verheiratet mit Lucy Shapiro?", "Wer wird verheiratet mit Lucy Shapiro?", "Wer wurde verheiratet mit Lucy Shapiro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_Shapiro> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucy Stone?", "Welche Person wurde verheiratet mit Lucy Stone?", "Welche Persons werden verheiratet mit Lucy Stone?", "Welche Persons wurden verheiratet mit Lucy Stone?", "Wer wird verheiratet mit Lucy Stone?", "Wer wurde verheiratet mit Lucy Stone?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_Stone> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucy Hayes?", "Welche Person wurde verheiratet mit Lucy Hayes?", "Welche Persons werden verheiratet mit Lucy Hayes?", "Welche Persons wurden verheiratet mit Lucy Hayes?", "Wer wird verheiratet mit Lucy Hayes?", "Wer wurde verheiratet mit Lucy Hayes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucy_Webb_Hayes> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Lucía Topolansky?", "Welche Person wurde verheiratet mit Lucía Topolansky?", "Welche Persons werden verheiratet mit Lucía Topolansky?", "Welche Persons wurden verheiratet mit Lucía Topolansky?", "Wer wird verheiratet mit Lucía Topolansky?", "Wer wurde verheiratet mit Lucía Topolansky?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lucía_Topolansky> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Ludger Stühlmeyer?", "Welche Person wurde verheiratet mit Ludger Stühlmeyer?", "Welche Persons werden verheiratet mit Ludger Stühlmeyer?", "Welche Persons wurden verheiratet mit Ludger Stühlmeyer?", "Wer wird verheiratet mit Ludger Stühlmeyer?", "Wer wurde verheiratet mit Ludger Stühlmeyer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ludger_Stühlmeyer> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Ludmila Mikaël?", "Welche Person wurde verheiratet mit Ludmila Mikaël?", "Welche Persons werden verheiratet mit Ludmila Mikaël?", "Welche Persons wurden verheiratet mit Ludmila Mikaël?", "Wer wird verheiratet mit Ludmila Mikaël?", "Wer wurde verheiratet mit Ludmila Mikaël?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ludmila_Mikaël> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Ludmilla von Podiebrad?", "Welche Person wurde verheiratet mit Ludmilla von Podiebrad?", "Welche Persons werden verheiratet mit Ludmilla von Podiebrad?", "Welche Persons wurden verheiratet mit Ludmilla von Podiebrad?", "Wer wird verheiratet mit Ludmilla von Podiebrad?", "Wer wurde verheiratet mit Ludmilla von Podiebrad?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ludmila_of_Poděbrady> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Ludmilla von Böhmen (um 1170)?", "Welche Person wurde verheiratet mit Ludmilla von Böhmen (um 1170)?", "Welche Persons werden verheiratet mit Ludmilla von Böhmen (um 1170)?", "Welche Persons wurden verheiratet mit Ludmilla von Böhmen (um 1170)?", "Wer wird verheiratet mit Ludmilla von Böhmen (um 1170)?", "Wer wurde verheiratet mit Ludmilla von Böhmen (um 1170)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ludmilla_of_Bohemia> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Ludovic Kennedy?", "Welche Person wurde verheiratet mit Ludovic Kennedy?", "Welche Persons werden verheiratet mit Ludovic Kennedy?", "Welche Persons wurden verheiratet mit Ludovic Kennedy?", "Wer wird verheiratet mit Ludovic Kennedy?", "Wer wurde verheiratet mit Ludovic Kennedy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ludovic_Kennedy> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Ludovico III. Gonzaga?", "Welche Person wurde verheiratet mit Ludovico III. Gonzaga?", "Welche Persons werden verheiratet mit Ludovico III. Gonzaga?", "Welche Persons wurden verheiratet mit Ludovico III. Gonzaga?", "Wer wird verheiratet mit Ludovico III. Gonzaga?", "Wer wurde verheiratet mit Ludovico III. Gonzaga?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ludovico_III_Gonzaga,_Marquis_of_Mantua> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Ludovico Manin?", "Welche Person wurde verheiratet mit Ludovico Manin?", "Welche Persons werden verheiratet mit Ludovico Manin?", "Welche Persons wurden verheiratet mit Ludovico Manin?", "Wer wird verheiratet mit Ludovico Manin?", "Wer wurde verheiratet mit Ludovico Manin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ludovico_Manin> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Ludovico Sforza?", "Welche Person wurde verheiratet mit Ludovico Sforza?", "Welche Persons werden verheiratet mit Ludovico Sforza?", "Welche Persons wurden verheiratet mit Ludovico Sforza?", "Wer wird verheiratet mit Ludovico Sforza?", "Wer wurde verheiratet mit Ludovico Sforza?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ludovico_Sforza> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Ludovica Margaretha von Zweibrücken-Bitsch?", "Welche Person wurde verheiratet mit Ludovica Margaretha von Zweibrücken-Bitsch?", "Welche Persons werden verheiratet mit Ludovica Margaretha von Zweibrücken-Bitsch?", "Welche Persons wurden verheiratet mit Ludovica Margaretha von Zweibrücken-Bitsch?", "Wer wird verheiratet mit Ludovica Margaretha von Zweibrücken-Bitsch?", "Wer wurde verheiratet mit Ludovica Margaretha von Zweibrücken-Bitsch?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ludowika_Margaretha_of_Zweibrücken-Bitsch> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Ludwig Bemelmans?", "Welche Person wurde verheiratet mit Ludwig Bemelmans?", "Welche Persons werden verheiratet mit Ludwig Bemelmans?", "Welche Persons wurden verheiratet mit Ludwig Bemelmans?", "Wer wird verheiratet mit Ludwig Bemelmans?", "Wer wurde verheiratet mit Ludwig Bemelmans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ludwig_Bemelmans> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Ludwig Erhard?", "Welche Person wurde verheiratet mit Ludwig Erhard?", "Welche Persons werden verheiratet mit Ludwig Erhard?", "Welche Persons wurden verheiratet mit Ludwig Erhard?", "Wer wird verheiratet mit Ludwig Erhard?", "Wer wurde verheiratet mit Ludwig Erhard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ludwig_Erhard> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Ludwig III. (Bayern)?", "Welche Person wurde verheiratet mit Ludwig III. (Bayern)?", "Welche Persons werden verheiratet mit Ludwig III. (Bayern)?", "Welche Persons wurden verheiratet mit Ludwig III. (Bayern)?", "Wer wird verheiratet mit Ludwig III. (Bayern)?", "Wer wurde verheiratet mit Ludwig III. (Bayern)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ludwig_III_of_Bavaria> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Ludwig I. (Bayern)?", "Welche Person wurde verheiratet mit Ludwig I. (Bayern)?", "Welche Persons werden verheiratet mit Ludwig I. (Bayern)?", "Welche Persons wurden verheiratet mit Ludwig I. (Bayern)?", "Wer wird verheiratet mit Ludwig I. (Bayern)?", "Wer wurde verheiratet mit Ludwig I. (Bayern)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ludwig_I_of_Bavaria> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Luise Charlotte Radziwill?", "Welche Person wurde verheiratet mit Luise Charlotte Radziwill?", "Welche Persons werden verheiratet mit Luise Charlotte Radziwill?", "Welche Persons wurden verheiratet mit Luise Charlotte Radziwill?", "Wer wird verheiratet mit Luise Charlotte Radziwill?", "Wer wurde verheiratet mit Luise Charlotte Radziwill?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ludwika_Karolina_Radziwiłł> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Ludwika Paleta?", "Welche Person wurde verheiratet mit Ludwika Paleta?", "Welche Persons werden verheiratet mit Ludwika Paleta?", "Welche Persons wurden verheiratet mit Ludwika Paleta?", "Wer wird verheiratet mit Ludwika Paleta?", "Wer wurde verheiratet mit Ludwika Paleta?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ludwika_Paleta> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Luděk Munzar?", "Welche Person wurde verheiratet mit Luděk Munzar?", "Welche Persons werden verheiratet mit Luděk Munzar?", "Welche Persons wurden verheiratet mit Luděk Munzar?", "Wer wird verheiratet mit Luděk Munzar?", "Wer wurde verheiratet mit Luděk Munzar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luděk_Munzar> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Aurélien-Marie Lugné-Poe?", "Welche Person wurde verheiratet mit Aurélien-Marie Lugné-Poe?", "Welche Persons werden verheiratet mit Aurélien-Marie Lugné-Poe?", "Welche Persons wurden verheiratet mit Aurélien-Marie Lugné-Poe?", "Wer wird verheiratet mit Aurélien-Marie Lugné-Poe?", "Wer wurde verheiratet mit Aurélien-Marie Lugné-Poe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lugné-Poe> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Luis A. Ferré?", "Welche Person wurde verheiratet mit Luis A. Ferré?", "Welche Persons werden verheiratet mit Luis A. Ferré?", "Welche Persons wurden verheiratet mit Luis A. Ferré?", "Wer wird verheiratet mit Luis A. Ferré?", "Wer wurde verheiratet mit Luis A. Ferré?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luis_A._Ferré> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Luis Adolfo Siles Salinas?", "Welche Person wurde verheiratet mit Luis Adolfo Siles Salinas?", "Welche Persons werden verheiratet mit Luis Adolfo Siles Salinas?", "Welche Persons wurden verheiratet mit Luis Adolfo Siles Salinas?", "Wer wird verheiratet mit Luis Adolfo Siles Salinas?", "Wer wurde verheiratet mit Luis Adolfo Siles Salinas?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luis_Adolfo_Siles_Salinas> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Luis Alberto Lacalle Herrera?", "Welche Person wurde verheiratet mit Luis Alberto Lacalle Herrera?", "Welche Persons werden verheiratet mit Luis Alberto Lacalle Herrera?", "Welche Persons wurden verheiratet mit Luis Alberto Lacalle Herrera?", "Wer wird verheiratet mit Luis Alberto Lacalle Herrera?", "Wer wurde verheiratet mit Luis Alberto Lacalle Herrera?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luis_Alberto_Lacalle> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Luis Alberto Monge Álvarez?", "Welche Person wurde verheiratet mit Luis Alberto Monge Álvarez?", "Welche Persons werden verheiratet mit Luis Alberto Monge Álvarez?", "Welche Persons wurden verheiratet mit Luis Alberto Monge Álvarez?", "Wer wird verheiratet mit Luis Alberto Monge Álvarez?", "Wer wurde verheiratet mit Luis Alberto Monge Álvarez?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luis_Alberto_Monge> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Luis Alcoriza?", "Welche Person wurde verheiratet mit Luis Alcoriza?", "Welche Persons werden verheiratet mit Luis Alcoriza?", "Welche Persons wurden verheiratet mit Luis Alcoriza?", "Wer wird verheiratet mit Luis Alcoriza?", "Wer wurde verheiratet mit Luis Alcoriza?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luis_Alcoriza> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Luis Batlle Berres?", "Welche Person wurde verheiratet mit Luis Batlle Berres?", "Welche Persons werden verheiratet mit Luis Batlle Berres?", "Welche Persons wurden verheiratet mit Luis Batlle Berres?", "Wer wird verheiratet mit Luis Batlle Berres?", "Wer wurde verheiratet mit Luis Batlle Berres?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luis_Batlle_Berres> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Luis Buñuel?", "Welche Person wurde verheiratet mit Luis Buñuel?", "Welche Persons werden verheiratet mit Luis Buñuel?", "Welche Persons wurden verheiratet mit Luis Buñuel?", "Wer wird verheiratet mit Luis Buñuel?", "Wer wurde verheiratet mit Luis Buñuel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luis_Buñuel> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Luis Camnitzer?", "Welche Person wurde verheiratet mit Luis Camnitzer?", "Welche Persons werden verheiratet mit Luis Camnitzer?", "Welche Persons wurden verheiratet mit Luis Camnitzer?", "Wer wird verheiratet mit Luis Camnitzer?", "Wer wurde verheiratet mit Luis Camnitzer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luis_Camnitzer> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Luis Donaldo Colosio?", "Welche Person wurde verheiratet mit Luis Donaldo Colosio?", "Welche Persons werden verheiratet mit Luis Donaldo Colosio?", "Welche Persons wurden verheiratet mit Luis Donaldo Colosio?", "Wer wird verheiratet mit Luis Donaldo Colosio?", "Wer wurde verheiratet mit Luis Donaldo Colosio?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luis_Donaldo_Colosio> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Luis Fonsi?", "Welche Person wurde verheiratet mit Luis Fonsi?", "Welche Persons werden verheiratet mit Luis Fonsi?", "Welche Persons wurden verheiratet mit Luis Fonsi?", "Wer wird verheiratet mit Luis Fonsi?", "Wer wurde verheiratet mit Luis Fonsi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luis_Fonsi> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Lucas Black?", "Welche fiktiver Charakters wurden gespielt von Lucas Black?", "Welcher fiktiver Charakter wird gespielt von Lucas Black?", "Welcher fiktiver Charakter wurde gespielt von Lucas Black?", "Wer wird gespielt von Lucas Black?", "Wer wurde gespielt von Lucas Black?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucas_Black>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Lucas Grabeel?", "Welche fiktiver Charakters wurden gespielt von Lucas Grabeel?", "Welcher fiktiver Charakter wird gespielt von Lucas Grabeel?", "Welcher fiktiver Charakter wurde gespielt von Lucas Grabeel?", "Wer wird gespielt von Lucas Grabeel?", "Wer wurde gespielt von Lucas Grabeel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucas_Grabeel>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Lucas Jade Zumann?", "Welche fiktiver Charakters wurden gespielt von Lucas Jade Zumann?", "Welcher fiktiver Charakter wird gespielt von Lucas Jade Zumann?", "Welcher fiktiver Charakter wurde gespielt von Lucas Jade Zumann?", "Wer wird gespielt von Lucas Jade Zumann?", "Wer wurde gespielt von Lucas Jade Zumann?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucas_Jade_Zumann>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Lucas Till?", "Welche fiktiver Charakters wurden gespielt von Lucas Till?", "Welcher fiktiver Charakter wird gespielt von Lucas Till?", "Welcher fiktiver Charakter wurde gespielt von Lucas Till?", "Wer wird gespielt von Lucas Till?", "Wer wurde gespielt von Lucas Till?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucas_Till>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Lucian Msamati?", "Welche fiktiver Charakters wurden gespielt von Lucian Msamati?", "Welcher fiktiver Charakter wird gespielt von Lucian Msamati?", "Welcher fiktiver Charakter wurde gespielt von Lucian Msamati?", "Wer wird gespielt von Lucian Msamati?", "Wer wurde gespielt von Lucian Msamati?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucian_Msamati>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Luciana Carro?", "Welche fiktiver Charakters wurden gespielt von Luciana Carro?", "Welcher fiktiver Charakter wird gespielt von Luciana Carro?", "Welcher fiktiver Charakter wurde gespielt von Luciana Carro?", "Wer wird gespielt von Luciana Carro?", "Wer wurde gespielt von Luciana Carro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luciana_Carro>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Lucille Ball?", "Welche fiktiver Charakters wurden gespielt von Lucille Ball?", "Welcher fiktiver Charakter wird gespielt von Lucille Ball?", "Welcher fiktiver Charakter wurde gespielt von Lucille Ball?", "Wer wird gespielt von Lucille Ball?", "Wer wurde gespielt von Lucille Ball?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucille_Ball>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Lucy-Jo Hudson?", "Welche fiktiver Charakters wurden gespielt von Lucy-Jo Hudson?", "Welcher fiktiver Charakter wird gespielt von Lucy-Jo Hudson?", "Welcher fiktiver Charakter wurde gespielt von Lucy-Jo Hudson?", "Wer wird gespielt von Lucy-Jo Hudson?", "Wer wurde gespielt von Lucy-Jo Hudson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy-Jo_Hudson>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Lucy Brown?", "Welche fiktiver Charakters wurden gespielt von Lucy Brown?", "Welcher fiktiver Charakter wird gespielt von Lucy Brown?", "Welcher fiktiver Charakter wurde gespielt von Lucy Brown?", "Wer wird gespielt von Lucy Brown?", "Wer wurde gespielt von Lucy Brown?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Brown>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Lucy Davis (Schauspielerin)?", "Welche fiktiver Charakters wurden gespielt von Lucy Davis (Schauspielerin)?", "Welcher fiktiver Charakter wird gespielt von Lucy Davis (Schauspielerin)?", "Welcher fiktiver Charakter wurde gespielt von Lucy Davis (Schauspielerin)?", "Wer wird gespielt von Lucy Davis (Schauspielerin)?", "Wer wurde gespielt von Lucy Davis (Schauspielerin)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Davis>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Lucy Gaskell?", "Welche fiktiver Charakters wurden gespielt von Lucy Gaskell?", "Welcher fiktiver Charakter wird gespielt von Lucy Gaskell?", "Welcher fiktiver Charakter wurde gespielt von Lucy Gaskell?", "Wer wird gespielt von Lucy Gaskell?", "Wer wurde gespielt von Lucy Gaskell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Gaskell>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Lucy Griffiths (Schauspielerin, 1986)?", "Welche fiktiver Charakters wurden gespielt von Lucy Griffiths (Schauspielerin, 1986)?", "Welcher fiktiver Charakter wird gespielt von Lucy Griffiths (Schauspielerin, 1986)?", "Welcher fiktiver Charakter wurde gespielt von Lucy Griffiths (Schauspielerin, 1986)?", "Wer wird gespielt von Lucy Griffiths (Schauspielerin, 1986)?", "Wer wurde gespielt von Lucy Griffiths (Schauspielerin, 1986)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Griffiths_(actress,_born_1986)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Lucy Hale?", "Welche fiktiver Charakters wurden gespielt von Lucy Hale?", "Welcher fiktiver Charakter wird gespielt von Lucy Hale?", "Welcher fiktiver Charakter wurde gespielt von Lucy Hale?", "Wer wird gespielt von Lucy Hale?", "Wer wurde gespielt von Lucy Hale?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Hale>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Lucy Lawless?", "Welche fiktiver Charakters wurden gespielt von Lucy Lawless?", "Welcher fiktiver Charakter wird gespielt von Lucy Lawless?", "Welcher fiktiver Charakter wurde gespielt von Lucy Lawless?", "Wer wird gespielt von Lucy Lawless?", "Wer wurde gespielt von Lucy Lawless?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Lawless>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Lucy Liu?", "Welche fiktiver Charakters wurden gespielt von Lucy Liu?", "Welcher fiktiver Charakter wird gespielt von Lucy Liu?", "Welcher fiktiver Charakter wurde gespielt von Lucy Liu?", "Wer wird gespielt von Lucy Liu?", "Wer wurde gespielt von Lucy Liu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lucy_Liu>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Ludi Lin?", "Welche fiktiver Charakters wurden gespielt von Ludi Lin?", "Welcher fiktiver Charakter wird gespielt von Ludi Lin?", "Welcher fiktiver Charakter wurde gespielt von Ludi Lin?", "Wer wird gespielt von Ludi Lin?", "Wer wurde gespielt von Ludi Lin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ludi_Lin>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Ludivine Sagnier?", "Welche fiktiver Charakters wurden gespielt von Ludivine Sagnier?", "Welcher fiktiver Charakter wird gespielt von Ludivine Sagnier?", "Welcher fiktiver Charakter wurde gespielt von Ludivine Sagnier?", "Wer wird gespielt von Ludivine Sagnier?", "Wer wurde gespielt von Ludivine Sagnier?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ludivine_Sagnier>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Luke Evans?", "Welche fiktiver Charakters wurden gespielt von Luke Evans?", "Welcher fiktiver Charakter wird gespielt von Luke Evans?", "Welcher fiktiver Charakter wurde gespielt von Luke Evans?", "Wer wird gespielt von Luke Evans?", "Wer wurde gespielt von Luke Evans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Evans>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Luke Kleintank?", "Welche fiktiver Charakters wurden gespielt von Luke Kleintank?", "Welcher fiktiver Charakter wird gespielt von Luke Kleintank?", "Welcher fiktiver Charakter wurde gespielt von Luke Kleintank?", "Wer wird gespielt von Luke Kleintank?", "Wer wurde gespielt von Luke Kleintank?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Kleintank>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Luke Macfarlane?", "Welche fiktiver Charakters wurden gespielt von Luke Macfarlane?", "Welcher fiktiver Charakter wird gespielt von Luke Macfarlane?", "Welcher fiktiver Charakter wurde gespielt von Luke Macfarlane?", "Wer wird gespielt von Luke Macfarlane?", "Wer wurde gespielt von Luke Macfarlane?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Macfarlane>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Luke Mitchell?", "Welche fiktiver Charakters wurden gespielt von Luke Mitchell?", "Welcher fiktiver Charakter wird gespielt von Luke Mitchell?", "Welcher fiktiver Charakter wurde gespielt von Luke Mitchell?", "Wer wird gespielt von Luke Mitchell?", "Wer wurde gespielt von Luke Mitchell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Mitchell>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Luke Pasqualino?", "Welche fiktiver Charakters wurden gespielt von Luke Pasqualino?", "Welcher fiktiver Charakter wird gespielt von Luke Pasqualino?", "Welcher fiktiver Charakter wurde gespielt von Luke Pasqualino?", "Wer wird gespielt von Luke Pasqualino?", "Wer wurde gespielt von Luke Pasqualino?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Pasqualino>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Luke Perry?", "Welche fiktiver Charakters wurden gespielt von Luke Perry?", "Welcher fiktiver Charakter wird gespielt von Luke Perry?", "Welcher fiktiver Charakter wurde gespielt von Luke Perry?", "Wer wird gespielt von Luke Perry?", "Wer wurde gespielt von Luke Perry?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Perry>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Luke Roberts (Schauspieler)?", "Welche fiktiver Charakters wurden gespielt von Luke Roberts (Schauspieler)?", "Welcher fiktiver Charakter wird gespielt von Luke Roberts (Schauspieler)?", "Welcher fiktiver Charakter wurde gespielt von Luke Roberts (Schauspieler)?", "Wer wird gespielt von Luke Roberts (Schauspieler)?", "Wer wurde gespielt von Luke Roberts (Schauspieler)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Roberts_(actor)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Lulu (Sängerin)?", "Welche fiktiver Charakters wurden gespielt von Lulu (Sängerin)?", "Welcher fiktiver Charakter wird gespielt von Lulu (Sängerin)?", "Welcher fiktiver Charakter wurde gespielt von Lulu (Sängerin)?", "Wer wird gespielt von Lulu (Sängerin)?", "Wer wurde gespielt von Lulu (Sängerin)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lulu_(singer)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Lupita Nyong’o?", "Welche fiktiver Charakters wurden gespielt von Lupita Nyong’o?", "Welcher fiktiver Charakter wird gespielt von Lupita Nyong’o?", "Welcher fiktiver Charakter wurde gespielt von Lupita Nyong’o?", "Wer wird gespielt von Lupita Nyong’o?", "Wer wurde gespielt von Lupita Nyong’o?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lupita_Nyong'o>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Lydia Wilson?", "Welche fiktiver Charakters wurden gespielt von Lydia Wilson?", "Welcher fiktiver Charakter wird gespielt von Lydia Wilson?", "Welcher fiktiver Charakter wurde gespielt von Lydia Wilson?", "Wer wird gespielt von Lydia Wilson?", "Wer wurde gespielt von Lydia Wilson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lydia_Wilson>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Lyndsy Fonseca?", "Welche fiktiver Charakters wurden gespielt von Lyndsy Fonseca?", "Welcher fiktiver Charakter wird gespielt von Lyndsy Fonseca?", "Welcher fiktiver Charakter wurde gespielt von Lyndsy Fonseca?", "Wer wird gespielt von Lyndsy Fonseca?", "Wer wurde gespielt von Lyndsy Fonseca?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lyndsy_Fonseca>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Lynn Redgrave?", "Welche fiktiver Charakters wurden gespielt von Lynn Redgrave?", "Welcher fiktiver Charakter wird gespielt von Lynn Redgrave?", "Welcher fiktiver Charakter wurde gespielt von Lynn Redgrave?", "Wer wird gespielt von Lynn Redgrave?", "Wer wurde gespielt von Lynn Redgrave?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynn_Redgrave>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Lynne Perrie?", "Welche fiktiver Charakters wurden gespielt von Lynne Perrie?", "Welcher fiktiver Charakter wird gespielt von Lynne Perrie?", "Welcher fiktiver Charakter wurde gespielt von Lynne Perrie?", "Wer wird gespielt von Lynne Perrie?", "Wer wurde gespielt von Lynne Perrie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynne_Perrie>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Lynsey Bartilson?", "Welche fiktiver Charakters wurden gespielt von Lynsey Bartilson?", "Welcher fiktiver Charakter wird gespielt von Lynsey Bartilson?", "Welcher fiktiver Charakter wurde gespielt von Lynsey Bartilson?", "Wer wird gespielt von Lynsey Bartilson?", "Wer wurde gespielt von Lynsey Bartilson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lynsey_Bartilson>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Lysette Anthony?", "Welche fiktiver Charakters wurden gespielt von Lysette Anthony?", "Welcher fiktiver Charakter wird gespielt von Lysette Anthony?", "Welcher fiktiver Charakter wurde gespielt von Lysette Anthony?", "Wer wird gespielt von Lysette Anthony?", "Wer wurde gespielt von Lysette Anthony?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lysette_Anthony>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von M*A*S*H (Fernsehserie)?", "Welche fiktiver Charakters wurden gespielt von M*A*S*H (Fernsehserie)?", "Welcher fiktiver Charakter wird gespielt von M*A*S*H (Fernsehserie)?", "Welcher fiktiver Charakter wurde gespielt von M*A*S*H (Fernsehserie)?", "Wer wird gespielt von M*A*S*H (Fernsehserie)?", "Wer wurde gespielt von M*A*S*H (Fernsehserie)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/M*A*S*H_(TV_series)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von M. C. Gainey?", "Welche fiktiver Charakters wurden gespielt von M. C. Gainey?", "Welcher fiktiver Charakter wird gespielt von M. C. Gainey?", "Welcher fiktiver Charakter wurde gespielt von M. C. Gainey?", "Wer wird gespielt von M. C. Gainey?", "Wer wurde gespielt von M. C. Gainey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/M._C._Gainey>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von M. Pokora?", "Welche fiktiver Charakters wurden gespielt von M. Pokora?", "Welcher fiktiver Charakter wird gespielt von M. Pokora?", "Welcher fiktiver Charakter wurde gespielt von M. Pokora?", "Wer wird gespielt von M. Pokora?", "Wer wurde gespielt von M. Pokora?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/M._Pokora>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von MASH (Film)?", "Welche fiktiver Charakters wurden gespielt von MASH (Film)?", "Welcher fiktiver Charakter wird gespielt von MASH (Film)?", "Welcher fiktiver Charakter wurde gespielt von MASH (Film)?", "Wer wird gespielt von MASH (Film)?", "Wer wurde gespielt von MASH (Film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/MASH_(film)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von MacKenzie Mauzy?", "Welche fiktiver Charakters wurden gespielt von MacKenzie Mauzy?", "Welcher fiktiver Charakter wird gespielt von MacKenzie Mauzy?", "Welcher fiktiver Charakter wurde gespielt von MacKenzie Mauzy?", "Wer wird gespielt von MacKenzie Mauzy?", "Wer wurde gespielt von MacKenzie Mauzy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/MacKenzie_Mauzy>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Macdonald Carey?", "Welche fiktiver Charakters wurden gespielt von Macdonald Carey?", "Welcher fiktiver Charakter wird gespielt von Macdonald Carey?", "Welcher fiktiver Charakter wurde gespielt von Macdonald Carey?", "Wer wird gespielt von Macdonald Carey?", "Wer wurde gespielt von Macdonald Carey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Macdonald_Carey>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Mackenzie Crook?", "Welche fiktiver Charakters wurden gespielt von Mackenzie Crook?", "Welcher fiktiver Charakter wird gespielt von Mackenzie Crook?", "Welcher fiktiver Charakter wurde gespielt von Mackenzie Crook?", "Wer wird gespielt von Mackenzie Crook?", "Wer wurde gespielt von Mackenzie Crook?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mackenzie_Crook>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Mad Max II – Der Vollstrecker?", "Welche fiktiver Charakters wurden gespielt von Mad Max II – Der Vollstrecker?", "Welcher fiktiver Charakter wird gespielt von Mad Max II – Der Vollstrecker?", "Welcher fiktiver Charakter wurde gespielt von Mad Max II – Der Vollstrecker?", "Wer wird gespielt von Mad Max II – Der Vollstrecker?", "Wer wurde gespielt von Mad Max II – Der Vollstrecker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mad_Max_2>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Mad Max – Jenseits der Donnerkuppel?", "Welche fiktiver Charakters wurden gespielt von Mad Max – Jenseits der Donnerkuppel?", "Welcher fiktiver Charakter wird gespielt von Mad Max – Jenseits der Donnerkuppel?", "Welcher fiktiver Charakter wurde gespielt von Mad Max – Jenseits der Donnerkuppel?", "Wer wird gespielt von Mad Max – Jenseits der Donnerkuppel?", "Wer wurde gespielt von Mad Max – Jenseits der Donnerkuppel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mad_Max_Beyond_Thunderdome>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Madelaine Petsch?", "Welche fiktiver Charakters wurden gespielt von Madelaine Petsch?", "Welcher fiktiver Charakter wird gespielt von Madelaine Petsch?", "Welcher fiktiver Charakter wurde gespielt von Madelaine Petsch?", "Wer wird gespielt von Madelaine Petsch?", "Wer wurde gespielt von Madelaine Petsch?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madelaine_Petsch>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Madeleine West?", "Welche fiktiver Charakters wurden gespielt von Madeleine West?", "Welcher fiktiver Charakter wird gespielt von Madeleine West?", "Welcher fiktiver Charakter wurde gespielt von Madeleine West?", "Wer wird gespielt von Madeleine West?", "Wer wurde gespielt von Madeleine West?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madeleine_West>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Madeline Kahn?", "Welche fiktiver Charakters wurden gespielt von Madeline Kahn?", "Welcher fiktiver Charakter wird gespielt von Madeline Kahn?", "Welcher fiktiver Charakter wurde gespielt von Madeline Kahn?", "Wer wird gespielt von Madeline Kahn?", "Wer wurde gespielt von Madeline Kahn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madeline_Kahn>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Madhuri Dixit?", "Welche fiktiver Charakters wurden gespielt von Madhuri Dixit?", "Welcher fiktiver Charakter wird gespielt von Madhuri Dixit?", "Welcher fiktiver Charakter wurde gespielt von Madhuri Dixit?", "Wer wird gespielt von Madhuri Dixit?", "Wer wurde gespielt von Madhuri Dixit?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madhuri_Dixit>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Madison Davenport?", "Welche fiktiver Charakters wurden gespielt von Madison Davenport?", "Welcher fiktiver Charakter wird gespielt von Madison Davenport?", "Welcher fiktiver Charakter wurde gespielt von Madison Davenport?", "Wer wird gespielt von Madison Davenport?", "Wer wurde gespielt von Madison Davenport?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madison_Davenport>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Madison Square Garden?", "Welche fiktiver Charakters wurden gespielt von Madison Square Garden?", "Welcher fiktiver Charakter wird gespielt von Madison Square Garden?", "Welcher fiktiver Charakter wurde gespielt von Madison Square Garden?", "Wer wird gespielt von Madison Square Garden?", "Wer wurde gespielt von Madison Square Garden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madison_Square_Garden>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Mads Mikkelsen?", "Welche fiktiver Charakters wurden gespielt von Mads Mikkelsen?", "Welcher fiktiver Charakter wird gespielt von Mads Mikkelsen?", "Welcher fiktiver Charakter wurde gespielt von Mads Mikkelsen?", "Wer wird gespielt von Mads Mikkelsen?", "Wer wurde gespielt von Mads Mikkelsen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mads_Mikkelsen>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Mae Clarke?", "Welche fiktiver Charakters wurden gespielt von Mae Clarke?", "Welcher fiktiver Charakter wird gespielt von Mae Clarke?", "Welcher fiktiver Charakter wurde gespielt von Mae Clarke?", "Wer wird gespielt von Mae Clarke?", "Wer wurde gespielt von Mae Clarke?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mae_Clarke>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Mae Questel?", "Welche fiktiver Charakters wurden gespielt von Mae Questel?", "Welcher fiktiver Charakter wird gespielt von Mae Questel?", "Welcher fiktiver Charakter wurde gespielt von Mae Questel?", "Wer wird gespielt von Mae Questel?", "Wer wurde gespielt von Mae Questel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mae_Questel>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Magda Szubanski?", "Welche fiktiver Charakters wurden gespielt von Magda Szubanski?", "Welcher fiktiver Charakter wird gespielt von Magda Szubanski?", "Welcher fiktiver Charakter wurde gespielt von Magda Szubanski?", "Wer wird gespielt von Magda Szubanski?", "Wer wurde gespielt von Magda Szubanski?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Magda_Szubanski>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Maggie Grace?", "Welche fiktiver Charakters wurden gespielt von Maggie Grace?", "Welcher fiktiver Charakter wird gespielt von Maggie Grace?", "Welcher fiktiver Charakter wurde gespielt von Maggie Grace?", "Wer wird gespielt von Maggie Grace?", "Wer wurde gespielt von Maggie Grace?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Maggie_Grace>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Maggie Gyllenhaal?", "Welche fiktiver Charakters wurden gespielt von Maggie Gyllenhaal?", "Welcher fiktiver Charakter wird gespielt von Maggie Gyllenhaal?", "Welcher fiktiver Charakter wurde gespielt von Maggie Gyllenhaal?", "Wer wird gespielt von Maggie Gyllenhaal?", "Wer wurde gespielt von Maggie Gyllenhaal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Maggie_Gyllenhaal>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Maggie Lawson?", "Welche fiktiver Charakters wurden gespielt von Maggie Lawson?", "Welcher fiktiver Charakter wird gespielt von Maggie Lawson?", "Welcher fiktiver Charakter wurde gespielt von Maggie Lawson?", "Wer wird gespielt von Maggie Lawson?", "Wer wurde gespielt von Maggie Lawson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Maggie_Lawson>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Maggie Q?", "Welche fiktiver Charakters wurden gespielt von Maggie Q?", "Welcher fiktiver Charakter wird gespielt von Maggie Q?", "Welcher fiktiver Charakter wurde gespielt von Maggie Q?", "Wer wird gespielt von Maggie Q?", "Wer wurde gespielt von Maggie Q?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Maggie_Q>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Maggie Smith?", "Welche fiktiver Charakters wurden gespielt von Maggie Smith?", "Welcher fiktiver Charakter wird gespielt von Maggie Smith?", "Welcher fiktiver Charakter wurde gespielt von Maggie Smith?", "Wer wird gespielt von Maggie Smith?", "Wer wurde gespielt von Maggie Smith?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Maggie_Smith>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Achille Fould?", "Welche fiktiver Charakters wurden gespielt von Achille Fould?", "Welcher fiktiver Charakter wird gespielt von Achille Fould?", "Welcher fiktiver Charakter wurde gespielt von Achille Fould?", "Wer wird gespielt von Achille Fould?", "Wer wurde gespielt von Achille Fould?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Adolf Pichler?", "Welche fiktiver Charakters wurden gespielt von Adolf Pichler?", "Welcher fiktiver Charakter wird gespielt von Adolf Pichler?", "Welcher fiktiver Charakter wurde gespielt von Adolf Pichler?", "Wer wird gespielt von Adolf Pichler?", "Wer wurde gespielt von Adolf Pichler?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Adolf Sandberger?", "Welche fiktiver Charakters wurden gespielt von Adolf Sandberger?", "Welcher fiktiver Charakter wird gespielt von Adolf Sandberger?", "Welcher fiktiver Charakter wurde gespielt von Adolf Sandberger?", "Wer wird gespielt von Adolf Sandberger?", "Wer wurde gespielt von Adolf Sandberger?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Adolphe Noël des Vergers?", "Welche fiktiver Charakters wurden gespielt von Adolphe Noël des Vergers?", "Welcher fiktiver Charakter wird gespielt von Adolphe Noël des Vergers?", "Welcher fiktiver Charakter wurde gespielt von Adolphe Noël des Vergers?", "Wer wird gespielt von Adolphe Noël des Vergers?", "Wer wurde gespielt von Adolphe Noël des Vergers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Adolphe Sax?", "Welche fiktiver Charakters wurden gespielt von Adolphe Sax?", "Welcher fiktiver Charakter wird gespielt von Adolphe Sax?", "Welcher fiktiver Charakter wurde gespielt von Adolphe Sax?", "Wer wird gespielt von Adolphe Sax?", "Wer wurde gespielt von Adolphe Sax?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Alan Garner?", "Welche fiktiver Charakters wurden gespielt von Alan Garner?", "Welcher fiktiver Charakter wird gespielt von Alan Garner?", "Welcher fiktiver Charakter wurde gespielt von Alan Garner?", "Wer wird gespielt von Alan Garner?", "Wer wurde gespielt von Alan Garner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Albert Schreiner (Geologe)?", "Welche fiktiver Charakters wurden gespielt von Albert Schreiner (Geologe)?", "Welcher fiktiver Charakter wird gespielt von Albert Schreiner (Geologe)?", "Welcher fiktiver Charakter wurde gespielt von Albert Schreiner (Geologe)?", "Wer wird gespielt von Albert Schreiner (Geologe)?", "Wer wurde gespielt von Albert Schreiner (Geologe)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Alexander Haggerty Krappe?", "Welche fiktiver Charakters wurden gespielt von Alexander Haggerty Krappe?", "Welcher fiktiver Charakter wird gespielt von Alexander Haggerty Krappe?", "Welcher fiktiver Charakter wurde gespielt von Alexander Haggerty Krappe?", "Wer wird gespielt von Alexander Haggerty Krappe?", "Wer wurde gespielt von Alexander Haggerty Krappe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Alexandra von Dänemark?", "Welche fiktiver Charakters wurden gespielt von Alexandra von Dänemark?", "Welcher fiktiver Charakter wird gespielt von Alexandra von Dänemark?", "Welcher fiktiver Charakter wurde gespielt von Alexandra von Dänemark?", "Wer wird gespielt von Alexandra von Dänemark?", "Wer wurde gespielt von Alexandra von Dänemark?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Alexei Nikolajewitsch Tolstoi?", "Welche fiktiver Charakters wurden gespielt von Alexei Nikolajewitsch Tolstoi?", "Welcher fiktiver Charakter wird gespielt von Alexei Nikolajewitsch Tolstoi?", "Welcher fiktiver Charakter wurde gespielt von Alexei Nikolajewitsch Tolstoi?", "Wer wird gespielt von Alexei Nikolajewitsch Tolstoi?", "Wer wurde gespielt von Alexei Nikolajewitsch Tolstoi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Alfred Francis Přibram?", "Welche fiktiver Charakters wurden gespielt von Alfred Francis Přibram?", "Welcher fiktiver Charakter wird gespielt von Alfred Francis Přibram?", "Welcher fiktiver Charakter wurde gespielt von Alfred Francis Přibram?", "Wer wird gespielt von Alfred Francis Přibram?", "Wer wurde gespielt von Alfred Francis Přibram?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Alfred Hillebrandt?", "Welche fiktiver Charakters wurden gespielt von Alfred Hillebrandt?", "Welcher fiktiver Charakter wird gespielt von Alfred Hillebrandt?", "Welcher fiktiver Charakter wurde gespielt von Alfred Hillebrandt?", "Wer wird gespielt von Alfred Hillebrandt?", "Wer wurde gespielt von Alfred Hillebrandt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Alfred M. Freudenthal?", "Welche fiktiver Charakters wurden gespielt von Alfred M. Freudenthal?", "Welcher fiktiver Charakter wird gespielt von Alfred M. Freudenthal?", "Welcher fiktiver Charakter wurde gespielt von Alfred M. Freudenthal?", "Wer wird gespielt von Alfred M. Freudenthal?", "Wer wurde gespielt von Alfred M. Freudenthal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Alfredo Jaar?", "Welche fiktiver Charakters wurden gespielt von Alfredo Jaar?", "Welcher fiktiver Charakter wird gespielt von Alfredo Jaar?", "Welcher fiktiver Charakter wurde gespielt von Alfredo Jaar?", "Wer wird gespielt von Alfredo Jaar?", "Wer wurde gespielt von Alfredo Jaar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Alphonse Jeannet?", "Welche fiktiver Charakters wurden gespielt von Alphonse Jeannet?", "Welcher fiktiver Charakter wird gespielt von Alphonse Jeannet?", "Welcher fiktiver Charakter wurde gespielt von Alphonse Jeannet?", "Wer wird gespielt von Alphonse Jeannet?", "Wer wurde gespielt von Alphonse Jeannet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Amanda Brugel?", "Welche fiktiver Charakters wurden gespielt von Amanda Brugel?", "Welcher fiktiver Charakter wird gespielt von Amanda Brugel?", "Welcher fiktiver Charakter wurde gespielt von Amanda Brugel?", "Wer wird gespielt von Amanda Brugel?", "Wer wurde gespielt von Amanda Brugel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Andreas Cellarius (Astronom)?", "Welche fiktiver Charakters wurden gespielt von Andreas Cellarius (Astronom)?", "Welcher fiktiver Charakter wird gespielt von Andreas Cellarius (Astronom)?", "Welcher fiktiver Charakter wurde gespielt von Andreas Cellarius (Astronom)?", "Wer wird gespielt von Andreas Cellarius (Astronom)?", "Wer wurde gespielt von Andreas Cellarius (Astronom)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von André Masséna?", "Welche fiktiver Charakters wurden gespielt von André Masséna?", "Welcher fiktiver Charakter wird gespielt von André Masséna?", "Welcher fiktiver Charakter wurde gespielt von André Masséna?", "Wer wird gespielt von André Masséna?", "Wer wurde gespielt von André Masséna?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Annedore Kleist?", "Welche fiktiver Charakters wurden gespielt von Annedore Kleist?", "Welcher fiktiver Charakter wird gespielt von Annedore Kleist?", "Welcher fiktiver Charakter wurde gespielt von Annedore Kleist?", "Wer wird gespielt von Annedore Kleist?", "Wer wurde gespielt von Annedore Kleist?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Anton Seder?", "Welche fiktiver Charakters wurden gespielt von Anton Seder?", "Welcher fiktiver Charakter wird gespielt von Anton Seder?", "Welcher fiktiver Charakter wurde gespielt von Anton Seder?", "Wer wird gespielt von Anton Seder?", "Wer wurde gespielt von Anton Seder?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Antonello Manacorda?", "Welche fiktiver Charakters wurden gespielt von Antonello Manacorda?", "Welcher fiktiver Charakter wird gespielt von Antonello Manacorda?", "Welcher fiktiver Charakter wurde gespielt von Antonello Manacorda?", "Wer wird gespielt von Antonello Manacorda?", "Wer wurde gespielt von Antonello Manacorda?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Antonio Orbe?", "Welche fiktiver Charakters wurden gespielt von Antonio Orbe?", "Welcher fiktiver Charakter wird gespielt von Antonio Orbe?", "Welcher fiktiver Charakter wurde gespielt von Antonio Orbe?", "Wer wird gespielt von Antonio Orbe?", "Wer wurde gespielt von Antonio Orbe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Armand de Caulaincourt?", "Welche fiktiver Charakters wurden gespielt von Armand de Caulaincourt?", "Welcher fiktiver Charakter wird gespielt von Armand de Caulaincourt?", "Welcher fiktiver Charakter wurde gespielt von Armand de Caulaincourt?", "Wer wird gespielt von Armand de Caulaincourt?", "Wer wurde gespielt von Armand de Caulaincourt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von August Stöber?", "Welche fiktiver Charakters wurden gespielt von August Stöber?", "Welcher fiktiver Charakter wird gespielt von August Stöber?", "Welcher fiktiver Charakter wurde gespielt von August Stöber?", "Wer wird gespielt von August Stöber?", "Wer wurde gespielt von August Stöber?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Baldus de Ubaldis?", "Welche fiktiver Charakters wurden gespielt von Baldus de Ubaldis?", "Welcher fiktiver Charakter wird gespielt von Baldus de Ubaldis?", "Welcher fiktiver Charakter wurde gespielt von Baldus de Ubaldis?", "Wer wird gespielt von Baldus de Ubaldis?", "Wer wurde gespielt von Baldus de Ubaldis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Barbara Hammer (Filmemacherin)?", "Welche fiktiver Charakters wurden gespielt von Barbara Hammer (Filmemacherin)?", "Welcher fiktiver Charakter wird gespielt von Barbara Hammer (Filmemacherin)?", "Welcher fiktiver Charakter wurde gespielt von Barbara Hammer (Filmemacherin)?", "Wer wird gespielt von Barbara Hammer (Filmemacherin)?", "Wer wurde gespielt von Barbara Hammer (Filmemacherin)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Barbara Wolff (Fotografin)?", "Welche fiktiver Charakters wurden gespielt von Barbara Wolff (Fotografin)?", "Welcher fiktiver Charakter wird gespielt von Barbara Wolff (Fotografin)?", "Welcher fiktiver Charakter wurde gespielt von Barbara Wolff (Fotografin)?", "Wer wird gespielt von Barbara Wolff (Fotografin)?", "Wer wurde gespielt von Barbara Wolff (Fotografin)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Bartel Leendert van der Waerden?", "Welche fiktiver Charakters wurden gespielt von Bartel Leendert van der Waerden?", "Welcher fiktiver Charakter wird gespielt von Bartel Leendert van der Waerden?", "Welcher fiktiver Charakter wurde gespielt von Bartel Leendert van der Waerden?", "Wer wird gespielt von Bartel Leendert van der Waerden?", "Wer wurde gespielt von Bartel Leendert van der Waerden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Benny Barth?", "Welche fiktiver Charakters wurden gespielt von Benny Barth?", "Welcher fiktiver Charakter wird gespielt von Benny Barth?", "Welcher fiktiver Charakter wurde gespielt von Benny Barth?", "Wer wird gespielt von Benny Barth?", "Wer wurde gespielt von Benny Barth?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Bernhard Sigmund Schultze?", "Welche fiktiver Charakters wurden gespielt von Bernhard Sigmund Schultze?", "Welcher fiktiver Charakter wird gespielt von Bernhard Sigmund Schultze?", "Welcher fiktiver Charakter wurde gespielt von Bernhard Sigmund Schultze?", "Wer wird gespielt von Bernhard Sigmund Schultze?", "Wer wurde gespielt von Bernhard Sigmund Schultze?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Beth Carvalho?", "Welche fiktiver Charakters wurden gespielt von Beth Carvalho?", "Welcher fiktiver Charakter wird gespielt von Beth Carvalho?", "Welcher fiktiver Charakter wurde gespielt von Beth Carvalho?", "Wer wird gespielt von Beth Carvalho?", "Wer wurde gespielt von Beth Carvalho?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Bora Ćosić?", "Welche fiktiver Charakters wurden gespielt von Bora Ćosić?", "Welcher fiktiver Charakter wird gespielt von Bora Ćosić?", "Welcher fiktiver Charakter wurde gespielt von Bora Ćosić?", "Wer wird gespielt von Bora Ćosić?", "Wer wurde gespielt von Bora Ćosić?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Bruno Nicolai?", "Welche fiktiver Charakters wurden gespielt von Bruno Nicolai?", "Welcher fiktiver Charakter wird gespielt von Bruno Nicolai?", "Welcher fiktiver Charakter wurde gespielt von Bruno Nicolai?", "Wer wird gespielt von Bruno Nicolai?", "Wer wurde gespielt von Bruno Nicolai?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Carlo Pellion di Persano?", "Welche fiktiver Charakters wurden gespielt von Carlo Pellion di Persano?", "Welcher fiktiver Charakter wird gespielt von Carlo Pellion di Persano?", "Welcher fiktiver Charakter wurde gespielt von Carlo Pellion di Persano?", "Wer wird gespielt von Carlo Pellion di Persano?", "Wer wurde gespielt von Carlo Pellion di Persano?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Carlos Lyra?", "Welche fiktiver Charakters wurden gespielt von Carlos Lyra?", "Welcher fiktiver Charakter wird gespielt von Carlos Lyra?", "Welcher fiktiver Charakter wurde gespielt von Carlos Lyra?", "Wer wird gespielt von Carlos Lyra?", "Wer wurde gespielt von Carlos Lyra?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Cate Shortland?", "Welche fiktiver Charakters wurden gespielt von Cate Shortland?", "Welcher fiktiver Charakter wird gespielt von Cate Shortland?", "Welcher fiktiver Charakter wurde gespielt von Cate Shortland?", "Wer wird gespielt von Cate Shortland?", "Wer wurde gespielt von Cate Shortland?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Charles Edmond Kayser?", "Welche fiktiver Charakters wurden gespielt von Charles Edmond Kayser?", "Welcher fiktiver Charakter wird gespielt von Charles Edmond Kayser?", "Welcher fiktiver Charakter wurde gespielt von Charles Edmond Kayser?", "Wer wird gespielt von Charles Edmond Kayser?", "Wer wurde gespielt von Charles Edmond Kayser?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Charles Gounod?", "Welche fiktiver Charakters wurden gespielt von Charles Gounod?", "Welcher fiktiver Charakter wird gespielt von Charles Gounod?", "Welcher fiktiver Charakter wurde gespielt von Charles Gounod?", "Wer wird gespielt von Charles Gounod?", "Wer wurde gespielt von Charles Gounod?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Charles Klein (Regisseur)?", "Welche fiktiver Charakters wurden gespielt von Charles Klein (Regisseur)?", "Welcher fiktiver Charakter wird gespielt von Charles Klein (Regisseur)?", "Welcher fiktiver Charakter wurde gespielt von Charles Klein (Regisseur)?", "Wer wird gespielt von Charles Klein (Regisseur)?", "Wer wurde gespielt von Charles Klein (Regisseur)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Charles Louis Fleury Panckoucke?", "Welche fiktiver Charakters wurden gespielt von Charles Louis Fleury Panckoucke?", "Welcher fiktiver Charakter wird gespielt von Charles Louis Fleury Panckoucke?", "Welcher fiktiver Charakter wurde gespielt von Charles Louis Fleury Panckoucke?", "Wer wird gespielt von Charles Louis Fleury Panckoucke?", "Wer wurde gespielt von Charles Louis Fleury Panckoucke?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Charles Motte?", "Welche fiktiver Charakters wurden gespielt von Charles Motte?", "Welcher fiktiver Charakter wird gespielt von Charles Motte?", "Welcher fiktiver Charakter wurde gespielt von Charles Motte?", "Wer wird gespielt von Charles Motte?", "Wer wurde gespielt von Charles Motte?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Charles Perrault?", "Welche fiktiver Charakters wurden gespielt von Charles Perrault?", "Welcher fiktiver Charakter wird gespielt von Charles Perrault?", "Welcher fiktiver Charakter wurde gespielt von Charles Perrault?", "Wer wird gespielt von Charles Perrault?", "Wer wurde gespielt von Charles Perrault?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Chilperich II.?", "Welche fiktiver Charakters wurden gespielt von Chilperich II.?", "Welcher fiktiver Charakter wird gespielt von Chilperich II.?", "Welcher fiktiver Charakter wurde gespielt von Chilperich II.?", "Wer wird gespielt von Chilperich II.?", "Wer wurde gespielt von Chilperich II.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Christian Friedrich Richter?", "Welche fiktiver Charakters wurden gespielt von Christian Friedrich Richter?", "Welcher fiktiver Charakter wird gespielt von Christian Friedrich Richter?", "Welcher fiktiver Charakter wurde gespielt von Christian Friedrich Richter?", "Wer wird gespielt von Christian Friedrich Richter?", "Wer wurde gespielt von Christian Friedrich Richter?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mahershala_Ali>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von KGB?", "Was ist der Standort von der Standort von KGB?", "Was war der Standort von der Standort von KGB?", "Welcher Ort ist der Standort von der Standort von KGB?", "Welcher Ort war der Standort von der Standort von KGB?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/KGB> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Försvarets radioanstalt?", "Was ist der Standort von der Standort von Försvarets radioanstalt?", "Was war der Standort von der Standort von Försvarets radioanstalt?", "Welcher Ort ist der Standort von der Standort von Försvarets radioanstalt?", "Welcher Ort war der Standort von der Standort von Försvarets radioanstalt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/National_Defence_Radio_Establishment> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Founder's_Hall_(Rockefeller_University)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Founder's_Hall_(Rockefeller_University)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Founder's_Hall_(Rockefeller_University)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Founder's_Hall_(Rockefeller_University)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Founder's_Hall_(Rockefeller_University)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Founder's_Hall_(Rockefeller_University)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Manhattan_House?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Manhattan_House?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Manhattan_House?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Manhattan_House?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Manhattan_House?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Manhattan_House> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/826_National?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/826_National?", "Was war der Standort von der Standort von http://dbpedia.org/resource/826_National?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/826_National?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/826_National?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/826_National> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/1992_Scottish_Challenge_Cup_Final?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/1992_Scottish_Challenge_Cup_Final?", "Was war der Standort von der Standort von http://dbpedia.org/resource/1992_Scottish_Challenge_Cup_Final?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/1992_Scottish_Challenge_Cup_Final?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/1992_Scottish_Challenge_Cup_Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/1992_Scottish_Challenge_Cup_Final> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Black_Hawk_Statue?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Black_Hawk_Statue?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Black_Hawk_Statue?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Black_Hawk_Statue?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Black_Hawk_Statue?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Black_Hawk_Statue> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/CHS_Field?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/CHS_Field?", "Was war der Standort von der Standort von http://dbpedia.org/resource/CHS_Field?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/CHS_Field?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/CHS_Field?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/CHS_Field> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Chapel_No._1?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Chapel_No._1?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Chapel_No._1?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Chapel_No._1?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Chapel_No._1?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chapel_No._1> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Chapel_of_the_Holy_Trinity,_Lublin_Castle?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Chapel_of_the_Holy_Trinity,_Lublin_Castle?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Chapel_of_the_Holy_Trinity,_Lublin_Castle?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Chapel_of_the_Holy_Trinity,_Lublin_Castle?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Chapel_of_the_Holy_Trinity,_Lublin_Castle?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chapel_of_the_Holy_Trinity,_Lublin_Castle> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/FDIC_International?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/FDIC_International?", "Was war der Standort von der Standort von http://dbpedia.org/resource/FDIC_International?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/FDIC_International?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/FDIC_International?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/FDIC_International> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Isla-Verde-Straße?", "Was ist der Standort von der Standort von Isla-Verde-Straße?", "Was war der Standort von der Standort von Isla-Verde-Straße?", "Welcher Ort ist der Standort von der Standort von Isla-Verde-Straße?", "Welcher Ort war der Standort von der Standort von Isla-Verde-Straße?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Verde_Island_Passage> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Chambre des Pairs?", "Was ist der Standort von der Standort von Chambre des Pairs?", "Was war der Standort von der Standort von Chambre des Pairs?", "Welcher Ort ist der Standort von der Standort von Chambre des Pairs?", "Welcher Ort war der Standort von der Standort von Chambre des Pairs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chamber_of_Peers_(France)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Balayan-Bucht?", "Was ist der Standort von der Standort von Balayan-Bucht?", "Was war der Standort von der Standort von Balayan-Bucht?", "Welcher Ort ist der Standort von der Standort von Balayan-Bucht?", "Welcher Ort war der Standort von der Standort von Balayan-Bucht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Balayan_Bay> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Senat (Frankreich)?", "Was ist der Standort von der Standort von Senat (Frankreich)?", "Was war der Standort von der Standort von Senat (Frankreich)?", "Welcher Ort ist der Standort von der Standort von Senat (Frankreich)?", "Welcher Ort war der Standort von der Standort von Senat (Frankreich)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Senate_(France)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Bato-See?", "Was ist der Standort von der Standort von Bato-See?", "Was war der Standort von der Standort von Bato-See?", "Welcher Ort ist der Standort von der Standort von Bato-See?", "Welcher Ort war der Standort von der Standort von Bato-See?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lake_Bato> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Philippine National Railways?", "Was ist der Standort von der Standort von Philippine National Railways?", "Was war der Standort von der Standort von Philippine National Railways?", "Welcher Ort ist der Standort von der Standort von Philippine National Railways?", "Welcher Ort war der Standort von der Standort von Philippine National Railways?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Philippine_National_Railways> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Manilabucht?", "Was ist der Standort von der Standort von Manilabucht?", "Was war der Standort von der Standort von Manilabucht?", "Welcher Ort ist der Standort von der Standort von Manilabucht?", "Welcher Ort war der Standort von der Standort von Manilabucht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Manila_Bay> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Swedish_Ski_Games?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Swedish_Ski_Games?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Swedish_Ski_Games?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Swedish_Ski_Games?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Swedish_Ski_Games?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Swedish_Ski_Games> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Supreme_Court_Building_(Puerto_Rico)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Supreme_Court_Building_(Puerto_Rico)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Supreme_Court_Building_(Puerto_Rico)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Supreme_Court_Building_(Puerto_Rico)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Supreme_Court_Building_(Puerto_Rico)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Supreme_Court_Building_(Puerto_Rico)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central?", "Was war der Standort von der Standort von http://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/1999_Belgian_Super_Cup?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/1999_Belgian_Super_Cup?", "Was war der Standort von der Standort von http://dbpedia.org/resource/1999_Belgian_Super_Cup?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/1999_Belgian_Super_Cup?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/1999_Belgian_Super_Cup?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/1999_Belgian_Super_Cup> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/2002_Belgian_Super_Cup?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/2002_Belgian_Super_Cup?", "Was war der Standort von der Standort von http://dbpedia.org/resource/2002_Belgian_Super_Cup?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/2002_Belgian_Super_Cup?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/2002_Belgian_Super_Cup?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/2002_Belgian_Super_Cup> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/2019_Belgian_Super_Cup?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/2019_Belgian_Super_Cup?", "Was war der Standort von der Standort von http://dbpedia.org/resource/2019_Belgian_Super_Cup?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/2019_Belgian_Super_Cup?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/2019_Belgian_Super_Cup?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/2019_Belgian_Super_Cup> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/William_Wagner_House?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/William_Wagner_House?", "Was war der Standort von der Standort von http://dbpedia.org/resource/William_Wagner_House?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/William_Wagner_House?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/William_Wagner_House?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/William_Wagner_House> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Lum's_Mill_House?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Lum's_Mill_House?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Lum's_Mill_House?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Lum's_Mill_House?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Lum's_Mill_House?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lum's_Mill_House> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Luton_Borough_Council?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Luton_Borough_Council?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Luton_Borough_Council?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Luton_Borough_Council?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Luton_Borough_Council?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luton_Borough_Council> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Luzerne_County_Council?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Luzerne_County_Council?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Luzerne_County_Council?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Luzerne_County_Council?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Luzerne_County_Council?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luzerne_County_Council> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/2016_in_Fight_Nights_Global?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/2016_in_Fight_Nights_Global?", "Was war der Standort von der Standort von http://dbpedia.org/resource/2016_in_Fight_Nights_Global?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/2016_in_Fight_Nights_Global?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/2016_in_Fight_Nights_Global?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/2016_in_Fight_Nights_Global> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/2017_in_Absolute_Championship_Berkut?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/2017_in_Absolute_Championship_Berkut?", "Was war der Standort von der Standort von http://dbpedia.org/resource/2017_in_Absolute_Championship_Berkut?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/2017_in_Absolute_Championship_Berkut?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/2017_in_Absolute_Championship_Berkut?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/2017_in_Absolute_Championship_Berkut> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/2017_in_Fight_Nights_Global?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/2017_in_Fight_Nights_Global?", "Was war der Standort von der Standort von http://dbpedia.org/resource/2017_in_Fight_Nights_Global?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/2017_in_Fight_Nights_Global?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/2017_in_Fight_Nights_Global?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/2017_in_Fight_Nights_Global> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/2018_in_Fight_Nights_Global?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/2018_in_Fight_Nights_Global?", "Was war der Standort von der Standort von http://dbpedia.org/resource/2018_in_Fight_Nights_Global?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/2018_in_Fight_Nights_Global?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/2018_in_Fight_Nights_Global?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/2018_in_Fight_Nights_Global> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Bataan_Airfield?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Bataan_Airfield?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Bataan_Airfield?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Bataan_Airfield?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Bataan_Airfield?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bataan_Airfield> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Del_Carmen_Airfield?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Del_Carmen_Airfield?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Del_Carmen_Airfield?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Del_Carmen_Airfield?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Del_Carmen_Airfield?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Del_Carmen_Airfield> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Iba_Airfield?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Iba_Airfield?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Iba_Airfield?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Iba_Airfield?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Iba_Airfield?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Iba_Airfield> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Lake_Pinatubo?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Lake_Pinatubo?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Lake_Pinatubo?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Lake_Pinatubo?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Lake_Pinatubo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lake_Pinatubo> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Lake_Tikub?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Lake_Tikub?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Lake_Tikub?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Lake_Tikub?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Lake_Tikub?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lake_Tikub> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Paoay_Lake?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Paoay_Lake?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Paoay_Lake?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Paoay_Lake?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Paoay_Lake?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Paoay_Lake> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Pasaleng_Bay?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Pasaleng_Bay?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Pasaleng_Bay?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Pasaleng_Bay?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Pasaleng_Bay?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Pasaleng_Bay> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Nichols_Field?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Nichols_Field?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Nichols_Field?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Nichols_Field?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Nichols_Field?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nichols_Field> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Strafkolonie Macquarie Harbour?", "Was ist der Standort von der Standort von Strafkolonie Macquarie Harbour?", "Was war der Standort von der Standort von Strafkolonie Macquarie Harbour?", "Welcher Ort ist der Standort von der Standort von Strafkolonie Macquarie Harbour?", "Welcher Ort war der Standort von der Standort von Strafkolonie Macquarie Harbour?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Macquarie_Harbour_Penal_Station> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von The Gaslight Cafe?", "Was ist der Standort von der Standort von The Gaslight Cafe?", "Was war der Standort von der Standort von The Gaslight Cafe?", "Welcher Ort ist der Standort von der Standort von The Gaslight Cafe?", "Welcher Ort war der Standort von der Standort von The Gaslight Cafe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Gaslight_Cafe> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Delhi?", "Was ist der Standort von der Standort von Delhi?", "Was war der Standort von der Standort von Delhi?", "Welcher Ort ist der Standort von der Standort von Delhi?", "Welcher Ort war der Standort von der Standort von Delhi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Municipal_Corporation_of_Delhi> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Melrose High School (Massachusetts)?", "Was ist der Standort von der Standort von Melrose High School (Massachusetts)?", "Was war der Standort von der Standort von Melrose High School (Massachusetts)?", "Welcher Ort ist der Standort von der Standort von Melrose High School (Massachusetts)?", "Welcher Ort war der Standort von der Standort von Melrose High School (Massachusetts)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Melrose_High_School_(Massachusetts)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2014)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2014)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2014)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2014)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2014)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Field_of_Honor_(2014)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2015)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2015)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2015)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2015)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2015)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Field_of_Honor_(2015)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2016)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2016)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2016)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2016)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2016)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Field_of_Honor_(2016)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1996)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1996)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1996)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1996)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1996)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Halloween_Havoc_(1996)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1997)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1997)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1997)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1997)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1997)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Halloween_Havoc_(1997)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1998)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1998)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1998)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1998)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1998)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Halloween_Havoc_(1998)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1999)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1999)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1999)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1999)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1999)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Halloween_Havoc_(1999)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(2000)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(2000)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(2000)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(2000)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(2000)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Halloween_Havoc_(2000)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_91?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_91?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_91?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_91?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_91?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_91> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_92?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_92?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_92?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_92?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_92?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_92> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_108?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_108?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_108?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_108?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_108?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_108> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_114?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_114?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_114?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_114?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_114?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_114> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_34?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_34?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_34?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_34?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_34?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_34> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_132?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_132?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_132?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_132?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_132?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_132> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_141?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_141?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_141?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_141?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_141?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_141> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_168?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_168?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_168?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_168?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_168?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_168> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_94?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_94?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_94?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_94?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_94?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_94> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_146?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_146?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_146?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_146?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_146?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_146> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2019)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2019)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2019)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2019)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2019)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Double_or_Nothing_(2019)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_130?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_130?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_130?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_130?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_130?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_130> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_155?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_155?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_155?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_155?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_155?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_155> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_98?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_98?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_98?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_98?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_98?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_98> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_173?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_173?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_173?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_173?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_173?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_173> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_178?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_178?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_178?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_178?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_178?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_178> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_182?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_182?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_182?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_182?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_182?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_182> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_183?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_183?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_183?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_183?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_183?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_183> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_187?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_187?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_187?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_187?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_187?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_187> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_189?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_189?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_189?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_189?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_189?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_189> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_191?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_191?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_191?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_191?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_191?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_191> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_194?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_194?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_194?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_194?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_194?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_194> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_195?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_195?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_195?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_195?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_195?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_195> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_196?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_196?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_196?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_196?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_196?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_196> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_197?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_197?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_197?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_197?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_197?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_197> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_Hendricks_vs._Thompson?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_Hendricks_vs._Thompson?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_Hendricks_vs._Thompson?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_Hendricks_vs._Thompson?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_Hendricks_vs._Thompson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_Fight_Night:_Hendricks_vs._Thompson> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_dos_Anjos_vs._Alvarez?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_dos_Anjos_vs._Alvarez?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_dos_Anjos_vs._Alvarez?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_dos_Anjos_vs._Alvarez?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_dos_Anjos_vs._Alvarez?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_Fight_Night:_dos_Anjos_vs._Alvarez> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_148?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_148?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_148?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_148?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_148?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_148> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_167?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_167?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_167?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_167?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_167?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_167> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_160?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_160?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_160?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_160?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_160?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_160> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_71?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_71?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_71?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_71?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_71?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_71> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_125?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_125?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_125?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_125?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_125?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_125> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_162?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_162?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_162?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_162?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_162?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_162> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2021)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2021)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2021)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2021)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2021)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Double_or_Nothing_(2021)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_116?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_116?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_116?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_116?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_116?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_116> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UWF_Blackjack_Brawl?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UWF_Blackjack_Brawl?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UWF_Blackjack_Brawl?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UWF_Blackjack_Brawl?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UWF_Blackjack_Brawl?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UWF_Blackjack_Brawl> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_66?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_66?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_66?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_66?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_66?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_66> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_American_Top_Team_vs._Blackzilians__The_Ultimate_Fighter:_American_Top_Team_vs._Blackz__1?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_American_Top_Team_vs._Blackzilians__The_Ultimate_Fighter:_American_Top_Team_vs._Blackz__1?", "Was war der Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_American_Top_Team_vs._Blackzilians__The_Ultimate_Fighter:_American_Top_Team_vs._Blackz__1?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_American_Top_Team_vs._Blackzilians__The_Ultimate_Fighter:_American_Top_Team_vs._Blackz__1?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_American_Top_Team_vs._Blackzilians__The_Ultimate_Fighter:_American_Top_Team_vs._Blackz__1?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Ultimate_Fighter:_American_Top_Team_vs._Blackzilians__The_Ultimate_Fighter:_American_Top_Team_vs._Blackz__1> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__1?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__1?", "Was war der Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__1?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__1?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__1?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__1> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_84?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_84?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_84?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_84?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_84?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_84> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/CCC_Kei_Wai_Primary_School_(Ma_Wan)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/CCC_Kei_Wai_Primary_School_(Ma_Wan)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/CCC_Kei_Wai_Primary_School_(Ma_Wan)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/CCC_Kei_Wai_Primary_School_(Ma_Wan)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/CCC_Kei_Wai_Primary_School_(Ma_Wan)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/CCC_Kei_Wai_Primary_School_(Ma_Wan)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Maatsuyker_Island_Lighthouse?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Maatsuyker_Island_Lighthouse?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Maatsuyker_Island_Lighthouse?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Maatsuyker_Island_Lighthouse?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Maatsuyker_Island_Lighthouse?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maatsuyker_Island_Lighthouse> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Mabel_Lake_Airport?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Mabel_Lake_Airport?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Mabel_Lake_Airport?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Mabel_Lake_Airport?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Mabel_Lake_Airport?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mabel_Lake_Airport> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/MacDougal–Sullivan_Gardens_Historic_District?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/MacDougal–Sullivan_Gardens_Historic_District?", "Was war der Standort von der Standort von http://dbpedia.org/resource/MacDougal–Sullivan_Gardens_Historic_District?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/MacDougal–Sullivan_Gardens_Historic_District?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/MacDougal–Sullivan_Gardens_Historic_District?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/MacDougal–Sullivan_Gardens_Historic_District> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Brazil_76–0_Timor-Leste?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Brazil_76–0_Timor-Leste?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Brazil_76–0_Timor-Leste?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Brazil_76–0_Timor-Leste?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Brazil_76–0_Timor-Leste?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Brazil_76–0_Timor-Leste> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Wayne_State_University_Computer_Science_Department?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Wayne_State_University_Computer_Science_Department?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Wayne_State_University_Computer_Science_Department?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Wayne_State_University_Computer_Science_Department?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Wayne_State_University_Computer_Science_Department?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Wayne_State_University_Computer_Science_Department> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/1940_Mandatory_Palestine_v_Lebanon_football_match?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/1940_Mandatory_Palestine_v_Lebanon_football_match?", "Was war der Standort von der Standort von http://dbpedia.org/resource/1940_Mandatory_Palestine_v_Lebanon_football_match?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/1940_Mandatory_Palestine_v_Lebanon_football_match?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/1940_Mandatory_Palestine_v_Lebanon_football_match?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/1940_Mandatory_Palestine_v_Lebanon_football_match> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "27",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BUILDING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Avery_Rock_Light?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Avery_Rock_Light?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Avery_Rock_Light?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Avery_Rock_Light?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Avery_Rock_Light?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Avery_Rock_Light> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von KGB?", "Was ist der Standort von der Standort von KGB?", "Was war der Standort von der Standort von KGB?", "Welcher Ort ist der Standort von der Standort von KGB?", "Welcher Ort war der Standort von der Standort von KGB?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/KGB> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Försvarets radioanstalt?", "Was ist der Standort von der Standort von Försvarets radioanstalt?", "Was war der Standort von der Standort von Försvarets radioanstalt?", "Welcher Ort ist der Standort von der Standort von Försvarets radioanstalt?", "Welcher Ort war der Standort von der Standort von Försvarets radioanstalt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/National_Defence_Radio_Establishment> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Founder's_Hall_(Rockefeller_University)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Founder's_Hall_(Rockefeller_University)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Founder's_Hall_(Rockefeller_University)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Founder's_Hall_(Rockefeller_University)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Founder's_Hall_(Rockefeller_University)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Founder's_Hall_(Rockefeller_University)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Manhattan_House?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Manhattan_House?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Manhattan_House?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Manhattan_House?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Manhattan_House?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Manhattan_House> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/826_National?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/826_National?", "Was war der Standort von der Standort von http://dbpedia.org/resource/826_National?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/826_National?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/826_National?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/826_National> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/1992_Scottish_Challenge_Cup_Final?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/1992_Scottish_Challenge_Cup_Final?", "Was war der Standort von der Standort von http://dbpedia.org/resource/1992_Scottish_Challenge_Cup_Final?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/1992_Scottish_Challenge_Cup_Final?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/1992_Scottish_Challenge_Cup_Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/1992_Scottish_Challenge_Cup_Final> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Black_Hawk_Statue?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Black_Hawk_Statue?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Black_Hawk_Statue?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Black_Hawk_Statue?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Black_Hawk_Statue?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Black_Hawk_Statue> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/CHS_Field?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/CHS_Field?", "Was war der Standort von der Standort von http://dbpedia.org/resource/CHS_Field?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/CHS_Field?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/CHS_Field?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/CHS_Field> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Chapel_No._1?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Chapel_No._1?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Chapel_No._1?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Chapel_No._1?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Chapel_No._1?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chapel_No._1> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Chapel_of_the_Holy_Trinity,_Lublin_Castle?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Chapel_of_the_Holy_Trinity,_Lublin_Castle?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Chapel_of_the_Holy_Trinity,_Lublin_Castle?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Chapel_of_the_Holy_Trinity,_Lublin_Castle?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Chapel_of_the_Holy_Trinity,_Lublin_Castle?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chapel_of_the_Holy_Trinity,_Lublin_Castle> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/FDIC_International?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/FDIC_International?", "Was war der Standort von der Standort von http://dbpedia.org/resource/FDIC_International?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/FDIC_International?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/FDIC_International?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/FDIC_International> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Isla-Verde-Straße?", "Was ist der Standort von der Standort von Isla-Verde-Straße?", "Was war der Standort von der Standort von Isla-Verde-Straße?", "Welcher Ort ist der Standort von der Standort von Isla-Verde-Straße?", "Welcher Ort war der Standort von der Standort von Isla-Verde-Straße?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Verde_Island_Passage> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Chambre des Pairs?", "Was ist der Standort von der Standort von Chambre des Pairs?", "Was war der Standort von der Standort von Chambre des Pairs?", "Welcher Ort ist der Standort von der Standort von Chambre des Pairs?", "Welcher Ort war der Standort von der Standort von Chambre des Pairs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chamber_of_Peers_(France)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Balayan-Bucht?", "Was ist der Standort von der Standort von Balayan-Bucht?", "Was war der Standort von der Standort von Balayan-Bucht?", "Welcher Ort ist der Standort von der Standort von Balayan-Bucht?", "Welcher Ort war der Standort von der Standort von Balayan-Bucht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Balayan_Bay> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Senat (Frankreich)?", "Was ist der Standort von der Standort von Senat (Frankreich)?", "Was war der Standort von der Standort von Senat (Frankreich)?", "Welcher Ort ist der Standort von der Standort von Senat (Frankreich)?", "Welcher Ort war der Standort von der Standort von Senat (Frankreich)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Senate_(France)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Bato-See?", "Was ist der Standort von der Standort von Bato-See?", "Was war der Standort von der Standort von Bato-See?", "Welcher Ort ist der Standort von der Standort von Bato-See?", "Welcher Ort war der Standort von der Standort von Bato-See?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lake_Bato> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Philippine National Railways?", "Was ist der Standort von der Standort von Philippine National Railways?", "Was war der Standort von der Standort von Philippine National Railways?", "Welcher Ort ist der Standort von der Standort von Philippine National Railways?", "Welcher Ort war der Standort von der Standort von Philippine National Railways?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Philippine_National_Railways> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Manilabucht?", "Was ist der Standort von der Standort von Manilabucht?", "Was war der Standort von der Standort von Manilabucht?", "Welcher Ort ist der Standort von der Standort von Manilabucht?", "Welcher Ort war der Standort von der Standort von Manilabucht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Manila_Bay> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Swedish_Ski_Games?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Swedish_Ski_Games?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Swedish_Ski_Games?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Swedish_Ski_Games?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Swedish_Ski_Games?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Swedish_Ski_Games> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Supreme_Court_Building_(Puerto_Rico)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Supreme_Court_Building_(Puerto_Rico)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Supreme_Court_Building_(Puerto_Rico)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Supreme_Court_Building_(Puerto_Rico)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Supreme_Court_Building_(Puerto_Rico)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Supreme_Court_Building_(Puerto_Rico)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central?", "Was war der Standort von der Standort von http://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/1999_Belgian_Super_Cup?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/1999_Belgian_Super_Cup?", "Was war der Standort von der Standort von http://dbpedia.org/resource/1999_Belgian_Super_Cup?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/1999_Belgian_Super_Cup?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/1999_Belgian_Super_Cup?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/1999_Belgian_Super_Cup> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/2002_Belgian_Super_Cup?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/2002_Belgian_Super_Cup?", "Was war der Standort von der Standort von http://dbpedia.org/resource/2002_Belgian_Super_Cup?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/2002_Belgian_Super_Cup?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/2002_Belgian_Super_Cup?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/2002_Belgian_Super_Cup> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/2019_Belgian_Super_Cup?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/2019_Belgian_Super_Cup?", "Was war der Standort von der Standort von http://dbpedia.org/resource/2019_Belgian_Super_Cup?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/2019_Belgian_Super_Cup?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/2019_Belgian_Super_Cup?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/2019_Belgian_Super_Cup> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/William_Wagner_House?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/William_Wagner_House?", "Was war der Standort von der Standort von http://dbpedia.org/resource/William_Wagner_House?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/William_Wagner_House?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/William_Wagner_House?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/William_Wagner_House> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Lum's_Mill_House?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Lum's_Mill_House?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Lum's_Mill_House?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Lum's_Mill_House?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Lum's_Mill_House?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lum's_Mill_House> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Luton_Borough_Council?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Luton_Borough_Council?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Luton_Borough_Council?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Luton_Borough_Council?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Luton_Borough_Council?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luton_Borough_Council> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Luzerne_County_Council?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Luzerne_County_Council?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Luzerne_County_Council?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Luzerne_County_Council?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Luzerne_County_Council?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luzerne_County_Council> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/2016_in_Fight_Nights_Global?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/2016_in_Fight_Nights_Global?", "Was war der Standort von der Standort von http://dbpedia.org/resource/2016_in_Fight_Nights_Global?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/2016_in_Fight_Nights_Global?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/2016_in_Fight_Nights_Global?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/2016_in_Fight_Nights_Global> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/2017_in_Absolute_Championship_Berkut?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/2017_in_Absolute_Championship_Berkut?", "Was war der Standort von der Standort von http://dbpedia.org/resource/2017_in_Absolute_Championship_Berkut?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/2017_in_Absolute_Championship_Berkut?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/2017_in_Absolute_Championship_Berkut?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/2017_in_Absolute_Championship_Berkut> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/2017_in_Fight_Nights_Global?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/2017_in_Fight_Nights_Global?", "Was war der Standort von der Standort von http://dbpedia.org/resource/2017_in_Fight_Nights_Global?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/2017_in_Fight_Nights_Global?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/2017_in_Fight_Nights_Global?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/2017_in_Fight_Nights_Global> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/2018_in_Fight_Nights_Global?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/2018_in_Fight_Nights_Global?", "Was war der Standort von der Standort von http://dbpedia.org/resource/2018_in_Fight_Nights_Global?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/2018_in_Fight_Nights_Global?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/2018_in_Fight_Nights_Global?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/2018_in_Fight_Nights_Global> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Bataan_Airfield?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Bataan_Airfield?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Bataan_Airfield?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Bataan_Airfield?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Bataan_Airfield?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bataan_Airfield> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Del_Carmen_Airfield?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Del_Carmen_Airfield?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Del_Carmen_Airfield?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Del_Carmen_Airfield?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Del_Carmen_Airfield?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Del_Carmen_Airfield> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Iba_Airfield?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Iba_Airfield?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Iba_Airfield?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Iba_Airfield?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Iba_Airfield?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Iba_Airfield> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Lake_Pinatubo?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Lake_Pinatubo?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Lake_Pinatubo?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Lake_Pinatubo?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Lake_Pinatubo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lake_Pinatubo> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Lake_Tikub?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Lake_Tikub?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Lake_Tikub?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Lake_Tikub?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Lake_Tikub?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lake_Tikub> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Paoay_Lake?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Paoay_Lake?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Paoay_Lake?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Paoay_Lake?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Paoay_Lake?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Paoay_Lake> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Pasaleng_Bay?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Pasaleng_Bay?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Pasaleng_Bay?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Pasaleng_Bay?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Pasaleng_Bay?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Pasaleng_Bay> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Nichols_Field?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Nichols_Field?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Nichols_Field?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Nichols_Field?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Nichols_Field?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nichols_Field> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Strafkolonie Macquarie Harbour?", "Was ist der Standort von der Standort von Strafkolonie Macquarie Harbour?", "Was war der Standort von der Standort von Strafkolonie Macquarie Harbour?", "Welcher Ort ist der Standort von der Standort von Strafkolonie Macquarie Harbour?", "Welcher Ort war der Standort von der Standort von Strafkolonie Macquarie Harbour?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Macquarie_Harbour_Penal_Station> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von The Gaslight Cafe?", "Was ist der Standort von der Standort von The Gaslight Cafe?", "Was war der Standort von der Standort von The Gaslight Cafe?", "Welcher Ort ist der Standort von der Standort von The Gaslight Cafe?", "Welcher Ort war der Standort von der Standort von The Gaslight Cafe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Gaslight_Cafe> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Delhi?", "Was ist der Standort von der Standort von Delhi?", "Was war der Standort von der Standort von Delhi?", "Welcher Ort ist der Standort von der Standort von Delhi?", "Welcher Ort war der Standort von der Standort von Delhi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Municipal_Corporation_of_Delhi> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Melrose High School (Massachusetts)?", "Was ist der Standort von der Standort von Melrose High School (Massachusetts)?", "Was war der Standort von der Standort von Melrose High School (Massachusetts)?", "Welcher Ort ist der Standort von der Standort von Melrose High School (Massachusetts)?", "Welcher Ort war der Standort von der Standort von Melrose High School (Massachusetts)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Melrose_High_School_(Massachusetts)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2014)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2014)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2014)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2014)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2014)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Field_of_Honor_(2014)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2015)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2015)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2015)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2015)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2015)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Field_of_Honor_(2015)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2016)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2016)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2016)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2016)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2016)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Field_of_Honor_(2016)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1996)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1996)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1996)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1996)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1996)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Halloween_Havoc_(1996)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1997)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1997)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1997)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1997)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1997)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Halloween_Havoc_(1997)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1998)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1998)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1998)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1998)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1998)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Halloween_Havoc_(1998)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1999)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1999)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1999)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1999)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1999)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Halloween_Havoc_(1999)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(2000)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(2000)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(2000)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(2000)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(2000)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Halloween_Havoc_(2000)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_91?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_91?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_91?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_91?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_91?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_91> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_92?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_92?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_92?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_92?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_92?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_92> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_108?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_108?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_108?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_108?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_108?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_108> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_114?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_114?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_114?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_114?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_114?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_114> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_34?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_34?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_34?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_34?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_34?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_34> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_132?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_132?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_132?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_132?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_132?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_132> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_141?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_141?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_141?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_141?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_141?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_141> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_168?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_168?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_168?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_168?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_168?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_168> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_94?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_94?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_94?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_94?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_94?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_94> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_146?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_146?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_146?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_146?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_146?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_146> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2019)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2019)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2019)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2019)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2019)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Double_or_Nothing_(2019)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_130?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_130?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_130?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_130?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_130?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_130> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_155?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_155?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_155?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_155?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_155?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_155> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_98?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_98?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_98?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_98?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_98?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_98> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_173?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_173?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_173?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_173?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_173?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_173> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_178?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_178?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_178?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_178?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_178?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_178> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_182?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_182?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_182?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_182?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_182?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_182> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_183?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_183?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_183?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_183?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_183?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_183> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_187?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_187?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_187?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_187?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_187?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_187> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_189?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_189?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_189?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_189?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_189?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_189> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_191?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_191?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_191?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_191?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_191?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_191> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_194?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_194?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_194?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_194?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_194?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_194> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_195?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_195?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_195?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_195?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_195?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_195> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_196?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_196?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_196?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_196?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_196?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_196> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_197?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_197?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_197?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_197?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_197?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_197> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_Hendricks_vs._Thompson?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_Hendricks_vs._Thompson?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_Hendricks_vs._Thompson?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_Hendricks_vs._Thompson?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_Hendricks_vs._Thompson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_Fight_Night:_Hendricks_vs._Thompson> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_dos_Anjos_vs._Alvarez?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_dos_Anjos_vs._Alvarez?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_dos_Anjos_vs._Alvarez?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_dos_Anjos_vs._Alvarez?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_dos_Anjos_vs._Alvarez?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_Fight_Night:_dos_Anjos_vs._Alvarez> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_148?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_148?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_148?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_148?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_148?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_148> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_167?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_167?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_167?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_167?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_167?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_167> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_160?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_160?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_160?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_160?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_160?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_160> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_71?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_71?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_71?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_71?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_71?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_71> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_125?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_125?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_125?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_125?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_125?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_125> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_162?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_162?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_162?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_162?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_162?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_162> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2021)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2021)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2021)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2021)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2021)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Double_or_Nothing_(2021)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_116?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_116?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_116?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_116?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_116?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_116> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UWF_Blackjack_Brawl?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UWF_Blackjack_Brawl?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UWF_Blackjack_Brawl?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UWF_Blackjack_Brawl?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UWF_Blackjack_Brawl?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UWF_Blackjack_Brawl> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_66?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_66?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_66?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_66?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_66?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_66> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_American_Top_Team_vs._Blackzilians__The_Ultimate_Fighter:_American_Top_Team_vs._Blackz__1?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_American_Top_Team_vs._Blackzilians__The_Ultimate_Fighter:_American_Top_Team_vs._Blackz__1?", "Was war der Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_American_Top_Team_vs._Blackzilians__The_Ultimate_Fighter:_American_Top_Team_vs._Blackz__1?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_American_Top_Team_vs._Blackzilians__The_Ultimate_Fighter:_American_Top_Team_vs._Blackz__1?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_American_Top_Team_vs._Blackzilians__The_Ultimate_Fighter:_American_Top_Team_vs._Blackz__1?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Ultimate_Fighter:_American_Top_Team_vs._Blackzilians__The_Ultimate_Fighter:_American_Top_Team_vs._Blackz__1> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__1?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__1?", "Was war der Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__1?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__1?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__1?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__1> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_84?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_84?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_84?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_84?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_84?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_84> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/CCC_Kei_Wai_Primary_School_(Ma_Wan)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/CCC_Kei_Wai_Primary_School_(Ma_Wan)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/CCC_Kei_Wai_Primary_School_(Ma_Wan)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/CCC_Kei_Wai_Primary_School_(Ma_Wan)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/CCC_Kei_Wai_Primary_School_(Ma_Wan)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/CCC_Kei_Wai_Primary_School_(Ma_Wan)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Maatsuyker_Island_Lighthouse?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Maatsuyker_Island_Lighthouse?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Maatsuyker_Island_Lighthouse?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Maatsuyker_Island_Lighthouse?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Maatsuyker_Island_Lighthouse?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maatsuyker_Island_Lighthouse> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Mabel_Lake_Airport?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Mabel_Lake_Airport?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Mabel_Lake_Airport?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Mabel_Lake_Airport?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Mabel_Lake_Airport?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mabel_Lake_Airport> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/MacDougal–Sullivan_Gardens_Historic_District?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/MacDougal–Sullivan_Gardens_Historic_District?", "Was war der Standort von der Standort von http://dbpedia.org/resource/MacDougal–Sullivan_Gardens_Historic_District?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/MacDougal–Sullivan_Gardens_Historic_District?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/MacDougal–Sullivan_Gardens_Historic_District?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/MacDougal–Sullivan_Gardens_Historic_District> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Brazil_76–0_Timor-Leste?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Brazil_76–0_Timor-Leste?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Brazil_76–0_Timor-Leste?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Brazil_76–0_Timor-Leste?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Brazil_76–0_Timor-Leste?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Brazil_76–0_Timor-Leste> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Wayne_State_University_Computer_Science_Department?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Wayne_State_University_Computer_Science_Department?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Wayne_State_University_Computer_Science_Department?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Wayne_State_University_Computer_Science_Department?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Wayne_State_University_Computer_Science_Department?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Wayne_State_University_Computer_Science_Department> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/1940_Mandatory_Palestine_v_Lebanon_football_match?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/1940_Mandatory_Palestine_v_Lebanon_football_match?", "Was war der Standort von der Standort von http://dbpedia.org/resource/1940_Mandatory_Palestine_v_Lebanon_football_match?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/1940_Mandatory_Palestine_v_Lebanon_football_match?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/1940_Mandatory_Palestine_v_Lebanon_football_match?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/1940_Mandatory_Palestine_v_Lebanon_football_match> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "28",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Avery_Rock_Light?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Avery_Rock_Light?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Avery_Rock_Light?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Avery_Rock_Light?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Avery_Rock_Light?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Avery_Rock_Light> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von KGB?", "Was ist der Standort von der Standort von KGB?", "Was war der Standort von der Standort von KGB?", "Welcher Ort ist der Standort von der Standort von KGB?", "Welcher Ort war der Standort von der Standort von KGB?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/KGB> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Försvarets radioanstalt?", "Was ist der Standort von der Standort von Försvarets radioanstalt?", "Was war der Standort von der Standort von Försvarets radioanstalt?", "Welcher Ort ist der Standort von der Standort von Försvarets radioanstalt?", "Welcher Ort war der Standort von der Standort von Försvarets radioanstalt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/National_Defence_Radio_Establishment> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Founder's_Hall_(Rockefeller_University)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Founder's_Hall_(Rockefeller_University)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Founder's_Hall_(Rockefeller_University)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Founder's_Hall_(Rockefeller_University)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Founder's_Hall_(Rockefeller_University)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Founder's_Hall_(Rockefeller_University)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Manhattan_House?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Manhattan_House?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Manhattan_House?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Manhattan_House?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Manhattan_House?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Manhattan_House> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/826_National?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/826_National?", "Was war der Standort von der Standort von http://dbpedia.org/resource/826_National?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/826_National?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/826_National?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/826_National> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/1992_Scottish_Challenge_Cup_Final?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/1992_Scottish_Challenge_Cup_Final?", "Was war der Standort von der Standort von http://dbpedia.org/resource/1992_Scottish_Challenge_Cup_Final?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/1992_Scottish_Challenge_Cup_Final?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/1992_Scottish_Challenge_Cup_Final?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/1992_Scottish_Challenge_Cup_Final> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Black_Hawk_Statue?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Black_Hawk_Statue?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Black_Hawk_Statue?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Black_Hawk_Statue?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Black_Hawk_Statue?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Black_Hawk_Statue> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/CHS_Field?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/CHS_Field?", "Was war der Standort von der Standort von http://dbpedia.org/resource/CHS_Field?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/CHS_Field?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/CHS_Field?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/CHS_Field> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Chapel_No._1?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Chapel_No._1?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Chapel_No._1?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Chapel_No._1?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Chapel_No._1?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chapel_No._1> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Chapel_of_the_Holy_Trinity,_Lublin_Castle?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Chapel_of_the_Holy_Trinity,_Lublin_Castle?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Chapel_of_the_Holy_Trinity,_Lublin_Castle?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Chapel_of_the_Holy_Trinity,_Lublin_Castle?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Chapel_of_the_Holy_Trinity,_Lublin_Castle?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chapel_of_the_Holy_Trinity,_Lublin_Castle> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/FDIC_International?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/FDIC_International?", "Was war der Standort von der Standort von http://dbpedia.org/resource/FDIC_International?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/FDIC_International?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/FDIC_International?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/FDIC_International> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Isla-Verde-Straße?", "Was ist der Standort von der Standort von Isla-Verde-Straße?", "Was war der Standort von der Standort von Isla-Verde-Straße?", "Welcher Ort ist der Standort von der Standort von Isla-Verde-Straße?", "Welcher Ort war der Standort von der Standort von Isla-Verde-Straße?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Verde_Island_Passage> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Chambre des Pairs?", "Was ist der Standort von der Standort von Chambre des Pairs?", "Was war der Standort von der Standort von Chambre des Pairs?", "Welcher Ort ist der Standort von der Standort von Chambre des Pairs?", "Welcher Ort war der Standort von der Standort von Chambre des Pairs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chamber_of_Peers_(France)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Balayan-Bucht?", "Was ist der Standort von der Standort von Balayan-Bucht?", "Was war der Standort von der Standort von Balayan-Bucht?", "Welcher Ort ist der Standort von der Standort von Balayan-Bucht?", "Welcher Ort war der Standort von der Standort von Balayan-Bucht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Balayan_Bay> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Senat (Frankreich)?", "Was ist der Standort von der Standort von Senat (Frankreich)?", "Was war der Standort von der Standort von Senat (Frankreich)?", "Welcher Ort ist der Standort von der Standort von Senat (Frankreich)?", "Welcher Ort war der Standort von der Standort von Senat (Frankreich)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Senate_(France)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Bato-See?", "Was ist der Standort von der Standort von Bato-See?", "Was war der Standort von der Standort von Bato-See?", "Welcher Ort ist der Standort von der Standort von Bato-See?", "Welcher Ort war der Standort von der Standort von Bato-See?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lake_Bato> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Philippine National Railways?", "Was ist der Standort von der Standort von Philippine National Railways?", "Was war der Standort von der Standort von Philippine National Railways?", "Welcher Ort ist der Standort von der Standort von Philippine National Railways?", "Welcher Ort war der Standort von der Standort von Philippine National Railways?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Philippine_National_Railways> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Manilabucht?", "Was ist der Standort von der Standort von Manilabucht?", "Was war der Standort von der Standort von Manilabucht?", "Welcher Ort ist der Standort von der Standort von Manilabucht?", "Welcher Ort war der Standort von der Standort von Manilabucht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Manila_Bay> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Swedish_Ski_Games?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Swedish_Ski_Games?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Swedish_Ski_Games?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Swedish_Ski_Games?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Swedish_Ski_Games?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Swedish_Ski_Games> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Supreme_Court_Building_(Puerto_Rico)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Supreme_Court_Building_(Puerto_Rico)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Supreme_Court_Building_(Puerto_Rico)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Supreme_Court_Building_(Puerto_Rico)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Supreme_Court_Building_(Puerto_Rico)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Supreme_Court_Building_(Puerto_Rico)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central?", "Was war der Standort von der Standort von http://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/1999_Belgian_Super_Cup?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/1999_Belgian_Super_Cup?", "Was war der Standort von der Standort von http://dbpedia.org/resource/1999_Belgian_Super_Cup?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/1999_Belgian_Super_Cup?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/1999_Belgian_Super_Cup?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/1999_Belgian_Super_Cup> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/2002_Belgian_Super_Cup?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/2002_Belgian_Super_Cup?", "Was war der Standort von der Standort von http://dbpedia.org/resource/2002_Belgian_Super_Cup?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/2002_Belgian_Super_Cup?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/2002_Belgian_Super_Cup?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/2002_Belgian_Super_Cup> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/2019_Belgian_Super_Cup?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/2019_Belgian_Super_Cup?", "Was war der Standort von der Standort von http://dbpedia.org/resource/2019_Belgian_Super_Cup?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/2019_Belgian_Super_Cup?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/2019_Belgian_Super_Cup?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/2019_Belgian_Super_Cup> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/William_Wagner_House?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/William_Wagner_House?", "Was war der Standort von der Standort von http://dbpedia.org/resource/William_Wagner_House?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/William_Wagner_House?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/William_Wagner_House?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/William_Wagner_House> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Lum's_Mill_House?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Lum's_Mill_House?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Lum's_Mill_House?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Lum's_Mill_House?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Lum's_Mill_House?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lum's_Mill_House> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Luton_Borough_Council?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Luton_Borough_Council?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Luton_Borough_Council?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Luton_Borough_Council?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Luton_Borough_Council?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luton_Borough_Council> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Luzerne_County_Council?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Luzerne_County_Council?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Luzerne_County_Council?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Luzerne_County_Council?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Luzerne_County_Council?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luzerne_County_Council> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/2016_in_Fight_Nights_Global?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/2016_in_Fight_Nights_Global?", "Was war der Standort von der Standort von http://dbpedia.org/resource/2016_in_Fight_Nights_Global?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/2016_in_Fight_Nights_Global?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/2016_in_Fight_Nights_Global?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/2016_in_Fight_Nights_Global> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/2017_in_Absolute_Championship_Berkut?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/2017_in_Absolute_Championship_Berkut?", "Was war der Standort von der Standort von http://dbpedia.org/resource/2017_in_Absolute_Championship_Berkut?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/2017_in_Absolute_Championship_Berkut?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/2017_in_Absolute_Championship_Berkut?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/2017_in_Absolute_Championship_Berkut> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/2017_in_Fight_Nights_Global?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/2017_in_Fight_Nights_Global?", "Was war der Standort von der Standort von http://dbpedia.org/resource/2017_in_Fight_Nights_Global?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/2017_in_Fight_Nights_Global?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/2017_in_Fight_Nights_Global?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/2017_in_Fight_Nights_Global> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/2018_in_Fight_Nights_Global?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/2018_in_Fight_Nights_Global?", "Was war der Standort von der Standort von http://dbpedia.org/resource/2018_in_Fight_Nights_Global?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/2018_in_Fight_Nights_Global?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/2018_in_Fight_Nights_Global?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/2018_in_Fight_Nights_Global> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Bataan_Airfield?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Bataan_Airfield?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Bataan_Airfield?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Bataan_Airfield?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Bataan_Airfield?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bataan_Airfield> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Del_Carmen_Airfield?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Del_Carmen_Airfield?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Del_Carmen_Airfield?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Del_Carmen_Airfield?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Del_Carmen_Airfield?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Del_Carmen_Airfield> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Iba_Airfield?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Iba_Airfield?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Iba_Airfield?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Iba_Airfield?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Iba_Airfield?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Iba_Airfield> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Lake_Pinatubo?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Lake_Pinatubo?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Lake_Pinatubo?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Lake_Pinatubo?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Lake_Pinatubo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lake_Pinatubo> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Lake_Tikub?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Lake_Tikub?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Lake_Tikub?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Lake_Tikub?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Lake_Tikub?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lake_Tikub> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Paoay_Lake?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Paoay_Lake?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Paoay_Lake?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Paoay_Lake?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Paoay_Lake?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Paoay_Lake> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Pasaleng_Bay?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Pasaleng_Bay?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Pasaleng_Bay?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Pasaleng_Bay?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Pasaleng_Bay?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Pasaleng_Bay> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Nichols_Field?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Nichols_Field?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Nichols_Field?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Nichols_Field?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Nichols_Field?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nichols_Field> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Strafkolonie Macquarie Harbour?", "Was ist der Standort von der Standort von Strafkolonie Macquarie Harbour?", "Was war der Standort von der Standort von Strafkolonie Macquarie Harbour?", "Welcher Ort ist der Standort von der Standort von Strafkolonie Macquarie Harbour?", "Welcher Ort war der Standort von der Standort von Strafkolonie Macquarie Harbour?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Macquarie_Harbour_Penal_Station> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von The Gaslight Cafe?", "Was ist der Standort von der Standort von The Gaslight Cafe?", "Was war der Standort von der Standort von The Gaslight Cafe?", "Welcher Ort ist der Standort von der Standort von The Gaslight Cafe?", "Welcher Ort war der Standort von der Standort von The Gaslight Cafe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Gaslight_Cafe> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Delhi?", "Was ist der Standort von der Standort von Delhi?", "Was war der Standort von der Standort von Delhi?", "Welcher Ort ist der Standort von der Standort von Delhi?", "Welcher Ort war der Standort von der Standort von Delhi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Municipal_Corporation_of_Delhi> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von Melrose High School (Massachusetts)?", "Was ist der Standort von der Standort von Melrose High School (Massachusetts)?", "Was war der Standort von der Standort von Melrose High School (Massachusetts)?", "Welcher Ort ist der Standort von der Standort von Melrose High School (Massachusetts)?", "Welcher Ort war der Standort von der Standort von Melrose High School (Massachusetts)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Melrose_High_School_(Massachusetts)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2014)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2014)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2014)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2014)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2014)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Field_of_Honor_(2014)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2015)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2015)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2015)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2015)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2015)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Field_of_Honor_(2015)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2016)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2016)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2016)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2016)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Field_of_Honor_(2016)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Field_of_Honor_(2016)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1996)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1996)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1996)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1996)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1996)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Halloween_Havoc_(1996)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1997)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1997)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1997)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1997)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1997)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Halloween_Havoc_(1997)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1998)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1998)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1998)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1998)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1998)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Halloween_Havoc_(1998)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1999)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1999)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1999)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1999)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(1999)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Halloween_Havoc_(1999)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(2000)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(2000)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(2000)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(2000)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Halloween_Havoc_(2000)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Halloween_Havoc_(2000)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_91?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_91?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_91?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_91?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_91?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_91> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_92?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_92?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_92?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_92?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_92?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_92> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_108?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_108?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_108?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_108?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_108?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_108> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_114?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_114?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_114?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_114?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_114?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_114> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_34?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_34?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_34?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_34?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_34?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_34> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_132?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_132?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_132?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_132?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_132?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_132> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_141?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_141?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_141?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_141?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_141?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_141> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_168?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_168?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_168?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_168?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_168?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_168> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_94?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_94?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_94?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_94?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_94?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_94> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_146?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_146?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_146?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_146?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_146?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_146> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2019)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2019)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2019)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2019)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2019)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Double_or_Nothing_(2019)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_130?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_130?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_130?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_130?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_130?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_130> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_155?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_155?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_155?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_155?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_155?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_155> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_98?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_98?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_98?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_98?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_98?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_98> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_173?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_173?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_173?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_173?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_173?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_173> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_178?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_178?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_178?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_178?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_178?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_178> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_182?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_182?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_182?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_182?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_182?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_182> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_183?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_183?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_183?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_183?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_183?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_183> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_187?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_187?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_187?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_187?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_187?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_187> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_189?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_189?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_189?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_189?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_189?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_189> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_191?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_191?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_191?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_191?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_191?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_191> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_194?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_194?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_194?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_194?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_194?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_194> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_195?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_195?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_195?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_195?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_195?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_195> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_196?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_196?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_196?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_196?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_196?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_196> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_197?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_197?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_197?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_197?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_197?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_197> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_Hendricks_vs._Thompson?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_Hendricks_vs._Thompson?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_Hendricks_vs._Thompson?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_Hendricks_vs._Thompson?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_Hendricks_vs._Thompson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_Fight_Night:_Hendricks_vs._Thompson> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_dos_Anjos_vs._Alvarez?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_dos_Anjos_vs._Alvarez?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_dos_Anjos_vs._Alvarez?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_dos_Anjos_vs._Alvarez?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_Fight_Night:_dos_Anjos_vs._Alvarez?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_Fight_Night:_dos_Anjos_vs._Alvarez> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_148?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_148?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_148?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_148?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_148?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_148> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_167?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_167?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_167?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_167?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_167?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_167> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_160?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_160?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_160?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_160?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_160?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_160> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_71?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_71?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_71?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_71?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_71?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_71> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_125?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_125?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_125?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_125?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_125?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_125> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_162?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_162?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_162?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_162?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_162?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_162> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2021)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2021)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2021)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2021)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Double_or_Nothing_(2021)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Double_or_Nothing_(2021)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_116?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_116?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_116?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_116?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_116?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_116> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UWF_Blackjack_Brawl?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UWF_Blackjack_Brawl?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UWF_Blackjack_Brawl?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UWF_Blackjack_Brawl?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UWF_Blackjack_Brawl?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UWF_Blackjack_Brawl> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_66?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_66?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_66?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_66?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_66?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_66> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_American_Top_Team_vs._Blackzilians__The_Ultimate_Fighter:_American_Top_Team_vs._Blackz__1?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_American_Top_Team_vs._Blackzilians__The_Ultimate_Fighter:_American_Top_Team_vs._Blackz__1?", "Was war der Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_American_Top_Team_vs._Blackzilians__The_Ultimate_Fighter:_American_Top_Team_vs._Blackz__1?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_American_Top_Team_vs._Blackzilians__The_Ultimate_Fighter:_American_Top_Team_vs._Blackz__1?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_American_Top_Team_vs._Blackzilians__The_Ultimate_Fighter:_American_Top_Team_vs._Blackz__1?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Ultimate_Fighter:_American_Top_Team_vs._Blackzilians__The_Ultimate_Fighter:_American_Top_Team_vs._Blackz__1> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__1?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__1?", "Was war der Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__1?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__1?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__1?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__The_Ultimate_Fighter:_Team_Joanna_vs._Team_Cláudia__1> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/UFC_84?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/UFC_84?", "Was war der Standort von der Standort von http://dbpedia.org/resource/UFC_84?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/UFC_84?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/UFC_84?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/UFC_84> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/CCC_Kei_Wai_Primary_School_(Ma_Wan)?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/CCC_Kei_Wai_Primary_School_(Ma_Wan)?", "Was war der Standort von der Standort von http://dbpedia.org/resource/CCC_Kei_Wai_Primary_School_(Ma_Wan)?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/CCC_Kei_Wai_Primary_School_(Ma_Wan)?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/CCC_Kei_Wai_Primary_School_(Ma_Wan)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/CCC_Kei_Wai_Primary_School_(Ma_Wan)> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Maatsuyker_Island_Lighthouse?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Maatsuyker_Island_Lighthouse?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Maatsuyker_Island_Lighthouse?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Maatsuyker_Island_Lighthouse?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Maatsuyker_Island_Lighthouse?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maatsuyker_Island_Lighthouse> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Mabel_Lake_Airport?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Mabel_Lake_Airport?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Mabel_Lake_Airport?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Mabel_Lake_Airport?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Mabel_Lake_Airport?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mabel_Lake_Airport> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/MacDougal–Sullivan_Gardens_Historic_District?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/MacDougal–Sullivan_Gardens_Historic_District?", "Was war der Standort von der Standort von http://dbpedia.org/resource/MacDougal–Sullivan_Gardens_Historic_District?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/MacDougal–Sullivan_Gardens_Historic_District?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/MacDougal–Sullivan_Gardens_Historic_District?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/MacDougal–Sullivan_Gardens_Historic_District> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Brazil_76–0_Timor-Leste?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Brazil_76–0_Timor-Leste?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Brazil_76–0_Timor-Leste?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Brazil_76–0_Timor-Leste?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Brazil_76–0_Timor-Leste?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Brazil_76–0_Timor-Leste> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Wayne_State_University_Computer_Science_Department?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Wayne_State_University_Computer_Science_Department?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Wayne_State_University_Computer_Science_Department?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Wayne_State_University_Computer_Science_Department?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Wayne_State_University_Computer_Science_Department?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Wayne_State_University_Computer_Science_Department> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/1940_Mandatory_Palestine_v_Lebanon_football_match?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/1940_Mandatory_Palestine_v_Lebanon_football_match?", "Was war der Standort von der Standort von http://dbpedia.org/resource/1940_Mandatory_Palestine_v_Lebanon_football_match?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/1940_Mandatory_Palestine_v_Lebanon_football_match?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/1940_Mandatory_Palestine_v_Lebanon_football_match?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/1940_Mandatory_Palestine_v_Lebanon_football_match> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "29",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "ORGANISATION",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Standort von http://dbpedia.org/resource/Avery_Rock_Light?", "Was ist der Standort von der Standort von http://dbpedia.org/resource/Avery_Rock_Light?", "Was war der Standort von der Standort von http://dbpedia.org/resource/Avery_Rock_Light?", "Welcher Ort ist der Standort von der Standort von http://dbpedia.org/resource/Avery_Rock_Light?", "Welcher Ort war der Standort von der Standort von http://dbpedia.org/resource/Avery_Rock_Light?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Avery_Rock_Light> <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Luxusgut?", "Gib mir den Standort von die Produzenten von Luxusgut?", "Was ist der Standort von der Produzent von Luxusgut?", "Was ist der Standort von die Produzenten von Luxusgut?", "Was war der Standort von der Produzent von Luxusgut?", "Was war der Standort von die Produzenten von Luxusgut?", "Welcher Ort ist der Standort von der Produzent von Luxusgut?", "Welcher Ort ist der Standort von die Produzenten von Luxusgut?", "Welcher Ort war der Standort von der Produzent von Luxusgut?", "Welcher Ort war der Standort von die Produzenten von Luxusgut?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Luxury_goods>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Kontaktlinse?", "Gib mir den Standort von die Produzenten von Kontaktlinse?", "Was ist der Standort von der Produzent von Kontaktlinse?", "Was ist der Standort von die Produzenten von Kontaktlinse?", "Was war der Standort von der Produzent von Kontaktlinse?", "Was war der Standort von die Produzenten von Kontaktlinse?", "Welcher Ort ist der Standort von der Produzent von Kontaktlinse?", "Welcher Ort ist der Standort von die Produzenten von Kontaktlinse?", "Welcher Ort war der Standort von der Produzent von Kontaktlinse?", "Welcher Ort war der Standort von die Produzenten von Kontaktlinse?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Contact_lens>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Körperschaft?", "Gib mir den Standort von die Produzenten von Körperschaft?", "Was ist der Standort von der Produzent von Körperschaft?", "Was ist der Standort von die Produzenten von Körperschaft?", "Was war der Standort von der Produzent von Körperschaft?", "Was war der Standort von die Produzenten von Körperschaft?", "Welcher Ort ist der Standort von der Produzent von Körperschaft?", "Welcher Ort ist der Standort von die Produzenten von Körperschaft?", "Welcher Ort war der Standort von der Produzent von Körperschaft?", "Welcher Ort war der Standort von die Produzenten von Körperschaft?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Corporation>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Molkerei?", "Gib mir den Standort von die Produzenten von Molkerei?", "Was ist der Standort von der Produzent von Molkerei?", "Was ist der Standort von die Produzenten von Molkerei?", "Was war der Standort von der Produzent von Molkerei?", "Was war der Standort von die Produzenten von Molkerei?", "Welcher Ort ist der Standort von der Produzent von Molkerei?", "Welcher Ort ist der Standort von die Produzenten von Molkerei?", "Welcher Ort war der Standort von der Produzent von Molkerei?", "Welcher Ort war der Standort von die Produzenten von Molkerei?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Dairy>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Imbiss (Speise)?", "Gib mir den Standort von die Produzenten von Imbiss (Speise)?", "Was ist der Standort von der Produzent von Imbiss (Speise)?", "Was ist der Standort von die Produzenten von Imbiss (Speise)?", "Was war der Standort von der Produzent von Imbiss (Speise)?", "Was war der Standort von die Produzenten von Imbiss (Speise)?", "Welcher Ort ist der Standort von der Produzent von Imbiss (Speise)?", "Welcher Ort ist der Standort von die Produzenten von Imbiss (Speise)?", "Welcher Ort war der Standort von der Produzent von Imbiss (Speise)?", "Welcher Ort war der Standort von die Produzenten von Imbiss (Speise)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Snack>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Stahl?", "Gib mir den Standort von die Produzenten von Stahl?", "Was ist der Standort von der Produzent von Stahl?", "Was ist der Standort von die Produzenten von Stahl?", "Was war der Standort von der Produzent von Stahl?", "Was war der Standort von die Produzenten von Stahl?", "Welcher Ort ist der Standort von der Produzent von Stahl?", "Welcher Ort ist der Standort von die Produzenten von Stahl?", "Welcher Ort war der Standort von der Produzent von Stahl?", "Welcher Ort war der Standort von die Produzenten von Stahl?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Steel>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Wasseraufbereitungsanlage?", "Gib mir den Standort von die Produzenten von Wasseraufbereitungsanlage?", "Was ist der Standort von der Produzent von Wasseraufbereitungsanlage?", "Was ist der Standort von die Produzenten von Wasseraufbereitungsanlage?", "Was war der Standort von der Produzent von Wasseraufbereitungsanlage?", "Was war der Standort von die Produzenten von Wasseraufbereitungsanlage?", "Welcher Ort ist der Standort von der Produzent von Wasseraufbereitungsanlage?", "Welcher Ort ist der Standort von die Produzenten von Wasseraufbereitungsanlage?", "Welcher Ort war der Standort von der Produzent von Wasseraufbereitungsanlage?", "Welcher Ort war der Standort von die Produzenten von Wasseraufbereitungsanlage?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Water_treatment>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Wolle?", "Gib mir den Standort von die Produzenten von Wolle?", "Was ist der Standort von der Produzent von Wolle?", "Was ist der Standort von die Produzenten von Wolle?", "Was war der Standort von der Produzent von Wolle?", "Was war der Standort von die Produzenten von Wolle?", "Welcher Ort ist der Standort von der Produzent von Wolle?", "Welcher Ort ist der Standort von die Produzenten von Wolle?", "Welcher Ort war der Standort von der Produzent von Wolle?", "Welcher Ort war der Standort von die Produzenten von Wolle?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Wool>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Spamfilter?", "Gib mir den Standort von die Produzenten von Spamfilter?", "Was ist der Standort von der Produzent von Spamfilter?", "Was ist der Standort von die Produzenten von Spamfilter?", "Was war der Standort von der Produzent von Spamfilter?", "Was war der Standort von die Produzenten von Spamfilter?", "Welcher Ort ist der Standort von der Produzent von Spamfilter?", "Welcher Ort ist der Standort von die Produzenten von Spamfilter?", "Welcher Ort war der Standort von der Produzent von Spamfilter?", "Welcher Ort war der Standort von die Produzenten von Spamfilter?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Email_filtering>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Hut?", "Gib mir den Standort von die Produzenten von Hut?", "Was ist der Standort von der Produzent von Hut?", "Was ist der Standort von die Produzenten von Hut?", "Was war der Standort von der Produzent von Hut?", "Was war der Standort von die Produzenten von Hut?", "Welcher Ort ist der Standort von der Produzent von Hut?", "Welcher Ort ist der Standort von die Produzenten von Hut?", "Welcher Ort war der Standort von der Produzent von Hut?", "Welcher Ort war der Standort von die Produzenten von Hut?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Hat>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Scrapbooking?", "Gib mir den Standort von die Produzenten von Scrapbooking?", "Was ist der Standort von der Produzent von Scrapbooking?", "Was ist der Standort von die Produzenten von Scrapbooking?", "Was war der Standort von der Produzent von Scrapbooking?", "Was war der Standort von die Produzenten von Scrapbooking?", "Welcher Ort ist der Standort von der Produzent von Scrapbooking?", "Welcher Ort ist der Standort von die Produzenten von Scrapbooking?", "Welcher Ort war der Standort von der Produzent von Scrapbooking?", "Welcher Ort war der Standort von die Produzenten von Scrapbooking?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Scrapbooking>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Storage Area Network?", "Gib mir den Standort von die Produzenten von Storage Area Network?", "Was ist der Standort von der Produzent von Storage Area Network?", "Was ist der Standort von die Produzenten von Storage Area Network?", "Was war der Standort von der Produzent von Storage Area Network?", "Was war der Standort von die Produzenten von Storage Area Network?", "Welcher Ort ist der Standort von der Produzent von Storage Area Network?", "Welcher Ort ist der Standort von die Produzenten von Storage Area Network?", "Welcher Ort war der Standort von der Produzent von Storage Area Network?", "Welcher Ort war der Standort von die Produzenten von Storage Area Network?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Storage_area_network>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Leasing?", "Gib mir den Standort von die Produzenten von Leasing?", "Was ist der Standort von der Produzent von Leasing?", "Was ist der Standort von die Produzenten von Leasing?", "Was war der Standort von der Produzent von Leasing?", "Was war der Standort von die Produzenten von Leasing?", "Welcher Ort ist der Standort von der Produzent von Leasing?", "Welcher Ort ist der Standort von die Produzenten von Leasing?", "Welcher Ort war der Standort von der Produzent von Leasing?", "Welcher Ort war der Standort von die Produzenten von Leasing?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Leasing>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von ATA over Ethernet?", "Gib mir den Standort von die Produzenten von ATA over Ethernet?", "Was ist der Standort von der Produzent von ATA over Ethernet?", "Was ist der Standort von die Produzenten von ATA over Ethernet?", "Was war der Standort von der Produzent von ATA over Ethernet?", "Was war der Standort von die Produzenten von ATA over Ethernet?", "Welcher Ort ist der Standort von der Produzent von ATA over Ethernet?", "Welcher Ort ist der Standort von die Produzenten von ATA over Ethernet?", "Welcher Ort war der Standort von der Produzent von ATA over Ethernet?", "Welcher Ort war der Standort von die Produzenten von ATA over Ethernet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/ATA_over_Ethernet>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Dieselmotor?", "Gib mir den Standort von die Produzenten von Dieselmotor?", "Was ist der Standort von der Produzent von Dieselmotor?", "Was ist der Standort von die Produzenten von Dieselmotor?", "Was war der Standort von der Produzent von Dieselmotor?", "Was war der Standort von die Produzenten von Dieselmotor?", "Welcher Ort ist der Standort von der Produzent von Dieselmotor?", "Welcher Ort ist der Standort von die Produzenten von Dieselmotor?", "Welcher Ort war der Standort von der Produzent von Dieselmotor?", "Welcher Ort war der Standort von die Produzenten von Dieselmotor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Diesel_engine>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Eigentum?", "Gib mir den Standort von die Produzenten von Eigentum?", "Was ist der Standort von der Produzent von Eigentum?", "Was ist der Standort von die Produzenten von Eigentum?", "Was war der Standort von der Produzent von Eigentum?", "Was war der Standort von die Produzenten von Eigentum?", "Welcher Ort ist der Standort von der Produzent von Eigentum?", "Welcher Ort ist der Standort von die Produzenten von Eigentum?", "Welcher Ort war der Standort von der Produzent von Eigentum?", "Welcher Ort war der Standort von die Produzenten von Eigentum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Property>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Edition?", "Gib mir den Standort von die Produzenten von Edition?", "Was ist der Standort von der Produzent von Edition?", "Was ist der Standort von die Produzenten von Edition?", "Was war der Standort von der Produzent von Edition?", "Was war der Standort von die Produzenten von Edition?", "Welcher Ort ist der Standort von der Produzent von Edition?", "Welcher Ort ist der Standort von die Produzenten von Edition?", "Welcher Ort war der Standort von der Produzent von Edition?", "Welcher Ort war der Standort von die Produzenten von Edition?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Publishing>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Eisenbahnwagen?", "Gib mir den Standort von die Produzenten von Eisenbahnwagen?", "Was ist der Standort von der Produzent von Eisenbahnwagen?", "Was ist der Standort von die Produzenten von Eisenbahnwagen?", "Was war der Standort von der Produzent von Eisenbahnwagen?", "Was war der Standort von die Produzenten von Eisenbahnwagen?", "Welcher Ort ist der Standort von der Produzent von Eisenbahnwagen?", "Welcher Ort ist der Standort von die Produzenten von Eisenbahnwagen?", "Welcher Ort war der Standort von der Produzent von Eisenbahnwagen?", "Welcher Ort war der Standort von die Produzenten von Eisenbahnwagen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Railroad_car>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Internetzugang?", "Gib mir den Standort von die Produzenten von Internetzugang?", "Was ist der Standort von der Produzent von Internetzugang?", "Was ist der Standort von die Produzenten von Internetzugang?", "Was war der Standort von der Produzent von Internetzugang?", "Was war der Standort von die Produzenten von Internetzugang?", "Welcher Ort ist der Standort von der Produzent von Internetzugang?", "Welcher Ort ist der Standort von die Produzenten von Internetzugang?", "Welcher Ort war der Standort von der Produzent von Internetzugang?", "Welcher Ort war der Standort von die Produzenten von Internetzugang?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Internet_access>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Netzmanagement?", "Gib mir den Standort von die Produzenten von Netzmanagement?", "Was ist der Standort von der Produzent von Netzmanagement?", "Was ist der Standort von die Produzenten von Netzmanagement?", "Was war der Standort von der Produzent von Netzmanagement?", "Was war der Standort von die Produzenten von Netzmanagement?", "Welcher Ort ist der Standort von der Produzent von Netzmanagement?", "Welcher Ort ist der Standort von die Produzenten von Netzmanagement?", "Welcher Ort war der Standort von der Produzent von Netzmanagement?", "Welcher Ort war der Standort von die Produzenten von Netzmanagement?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Network_management>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Kunststoff?", "Gib mir den Standort von die Produzenten von Kunststoff?", "Was ist der Standort von der Produzent von Kunststoff?", "Was ist der Standort von die Produzenten von Kunststoff?", "Was war der Standort von der Produzent von Kunststoff?", "Was war der Standort von die Produzenten von Kunststoff?", "Welcher Ort ist der Standort von der Produzent von Kunststoff?", "Welcher Ort ist der Standort von die Produzenten von Kunststoff?", "Welcher Ort war der Standort von der Produzent von Kunststoff?", "Welcher Ort war der Standort von die Produzenten von Kunststoff?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Plastic>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Pornofilm?", "Gib mir den Standort von die Produzenten von Pornofilm?", "Was ist der Standort von der Produzent von Pornofilm?", "Was ist der Standort von die Produzenten von Pornofilm?", "Was war der Standort von der Produzent von Pornofilm?", "Was war der Standort von die Produzenten von Pornofilm?", "Welcher Ort ist der Standort von der Produzent von Pornofilm?", "Welcher Ort ist der Standort von die Produzenten von Pornofilm?", "Welcher Ort war der Standort von der Produzent von Pornofilm?", "Welcher Ort war der Standort von die Produzenten von Pornofilm?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Pornographic_film>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Reis?", "Gib mir den Standort von die Produzenten von Reis?", "Was ist der Standort von der Produzent von Reis?", "Was ist der Standort von die Produzenten von Reis?", "Was war der Standort von der Produzent von Reis?", "Was war der Standort von die Produzenten von Reis?", "Welcher Ort ist der Standort von der Produzent von Reis?", "Welcher Ort ist der Standort von die Produzenten von Reis?", "Welcher Ort war der Standort von der Produzent von Reis?", "Welcher Ort war der Standort von die Produzenten von Reis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Rice>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Feuerwaffe?", "Gib mir den Standort von die Produzenten von Feuerwaffe?", "Was ist der Standort von der Produzent von Feuerwaffe?", "Was ist der Standort von die Produzenten von Feuerwaffe?", "Was war der Standort von der Produzent von Feuerwaffe?", "Was war der Standort von die Produzenten von Feuerwaffe?", "Welcher Ort ist der Standort von der Produzent von Feuerwaffe?", "Welcher Ort ist der Standort von die Produzenten von Feuerwaffe?", "Welcher Ort war der Standort von der Produzent von Feuerwaffe?", "Welcher Ort war der Standort von die Produzenten von Feuerwaffe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Firearm>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Waffe?", "Gib mir den Standort von die Produzenten von Waffe?", "Was ist der Standort von der Produzent von Waffe?", "Was ist der Standort von die Produzenten von Waffe?", "Was war der Standort von der Produzent von Waffe?", "Was war der Standort von die Produzenten von Waffe?", "Welcher Ort ist der Standort von der Produzent von Waffe?", "Welcher Ort ist der Standort von die Produzenten von Waffe?", "Welcher Ort war der Standort von der Produzent von Waffe?", "Welcher Ort war der Standort von die Produzenten von Waffe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Weapon>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Schutzbrille?", "Gib mir den Standort von die Produzenten von Schutzbrille?", "Was ist der Standort von der Produzent von Schutzbrille?", "Was ist der Standort von die Produzenten von Schutzbrille?", "Was war der Standort von der Produzent von Schutzbrille?", "Was war der Standort von die Produzenten von Schutzbrille?", "Welcher Ort ist der Standort von der Produzent von Schutzbrille?", "Welcher Ort ist der Standort von die Produzenten von Schutzbrille?", "Welcher Ort war der Standort von der Produzent von Schutzbrille?", "Welcher Ort war der Standort von die Produzenten von Schutzbrille?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Goggles>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Platzwart?", "Gib mir den Standort von die Produzenten von Platzwart?", "Was ist der Standort von der Produzent von Platzwart?", "Was ist der Standort von die Produzenten von Platzwart?", "Was war der Standort von der Produzent von Platzwart?", "Was war der Standort von die Produzenten von Platzwart?", "Welcher Ort ist der Standort von der Produzent von Platzwart?", "Welcher Ort ist der Standort von die Produzenten von Platzwart?", "Welcher Ort war der Standort von der Produzent von Platzwart?", "Welcher Ort war der Standort von die Produzenten von Platzwart?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Groundskeeping>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Autorenwerkzeug?", "Gib mir den Standort von die Produzenten von Autorenwerkzeug?", "Was ist der Standort von der Produzent von Autorenwerkzeug?", "Was ist der Standort von die Produzenten von Autorenwerkzeug?", "Was war der Standort von der Produzent von Autorenwerkzeug?", "Was war der Standort von die Produzenten von Autorenwerkzeug?", "Welcher Ort ist der Standort von der Produzent von Autorenwerkzeug?", "Welcher Ort ist der Standort von die Produzenten von Autorenwerkzeug?", "Welcher Ort war der Standort von der Produzent von Autorenwerkzeug?", "Welcher Ort war der Standort von die Produzenten von Autorenwerkzeug?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Help_authoring_tool>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Absturzsicherung (Mensch)?", "Gib mir den Standort von die Produzenten von Absturzsicherung (Mensch)?", "Was ist der Standort von der Produzent von Absturzsicherung (Mensch)?", "Was ist der Standort von die Produzenten von Absturzsicherung (Mensch)?", "Was war der Standort von der Produzent von Absturzsicherung (Mensch)?", "Was war der Standort von die Produzenten von Absturzsicherung (Mensch)?", "Welcher Ort ist der Standort von der Produzent von Absturzsicherung (Mensch)?", "Welcher Ort ist der Standort von die Produzenten von Absturzsicherung (Mensch)?", "Welcher Ort war der Standort von der Produzent von Absturzsicherung (Mensch)?", "Welcher Ort war der Standort von die Produzenten von Absturzsicherung (Mensch)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Safety_harness>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Gastgewerbe?", "Gib mir den Standort von die Produzenten von Gastgewerbe?", "Was ist der Standort von der Produzent von Gastgewerbe?", "Was ist der Standort von die Produzenten von Gastgewerbe?", "Was war der Standort von der Produzent von Gastgewerbe?", "Was war der Standort von die Produzenten von Gastgewerbe?", "Welcher Ort ist der Standort von der Produzent von Gastgewerbe?", "Welcher Ort ist der Standort von die Produzenten von Gastgewerbe?", "Welcher Ort war der Standort von der Produzent von Gastgewerbe?", "Welcher Ort war der Standort von die Produzenten von Gastgewerbe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Hospitality_industry>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Speiseeis?", "Gib mir den Standort von die Produzenten von Speiseeis?", "Was ist der Standort von der Produzent von Speiseeis?", "Was ist der Standort von die Produzenten von Speiseeis?", "Was war der Standort von der Produzent von Speiseeis?", "Was war der Standort von die Produzenten von Speiseeis?", "Welcher Ort ist der Standort von der Produzent von Speiseeis?", "Welcher Ort ist der Standort von die Produzenten von Speiseeis?", "Welcher Ort war der Standort von der Produzent von Speiseeis?", "Welcher Ort war der Standort von die Produzenten von Speiseeis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Ice_cream>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Versicherung (Kollektiv)?", "Gib mir den Standort von die Produzenten von Versicherung (Kollektiv)?", "Was ist der Standort von der Produzent von Versicherung (Kollektiv)?", "Was ist der Standort von die Produzenten von Versicherung (Kollektiv)?", "Was war der Standort von der Produzent von Versicherung (Kollektiv)?", "Was war der Standort von die Produzenten von Versicherung (Kollektiv)?", "Welcher Ort ist der Standort von der Produzent von Versicherung (Kollektiv)?", "Welcher Ort ist der Standort von die Produzenten von Versicherung (Kollektiv)?", "Welcher Ort war der Standort von der Produzent von Versicherung (Kollektiv)?", "Welcher Ort war der Standort von die Produzenten von Versicherung (Kollektiv)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Insurance>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Musikinstrument?", "Gib mir den Standort von die Produzenten von Musikinstrument?", "Was ist der Standort von der Produzent von Musikinstrument?", "Was ist der Standort von die Produzenten von Musikinstrument?", "Was war der Standort von der Produzent von Musikinstrument?", "Was war der Standort von die Produzenten von Musikinstrument?", "Welcher Ort ist der Standort von der Produzent von Musikinstrument?", "Welcher Ort ist der Standort von die Produzenten von Musikinstrument?", "Welcher Ort war der Standort von der Produzent von Musikinstrument?", "Welcher Ort war der Standort von die Produzenten von Musikinstrument?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Musical_instrument>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Scheck?", "Gib mir den Standort von die Produzenten von Scheck?", "Was ist der Standort von der Produzent von Scheck?", "Was ist der Standort von die Produzenten von Scheck?", "Was war der Standort von der Produzent von Scheck?", "Was war der Standort von die Produzenten von Scheck?", "Welcher Ort ist der Standort von der Produzent von Scheck?", "Welcher Ort ist der Standort von die Produzenten von Scheck?", "Welcher Ort war der Standort von der Produzent von Scheck?", "Welcher Ort war der Standort von die Produzenten von Scheck?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Cheque>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Finanzen?", "Gib mir den Standort von die Produzenten von Finanzen?", "Was ist der Standort von der Produzent von Finanzen?", "Was ist der Standort von die Produzenten von Finanzen?", "Was war der Standort von der Produzent von Finanzen?", "Was war der Standort von die Produzenten von Finanzen?", "Welcher Ort ist der Standort von der Produzent von Finanzen?", "Welcher Ort ist der Standort von die Produzenten von Finanzen?", "Welcher Ort war der Standort von der Produzent von Finanzen?", "Welcher Ort war der Standort von die Produzenten von Finanzen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Finance>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Fontographer?", "Gib mir den Standort von die Produzenten von Fontographer?", "Was ist der Standort von der Produzent von Fontographer?", "Was ist der Standort von die Produzenten von Fontographer?", "Was war der Standort von der Produzent von Fontographer?", "Was war der Standort von die Produzenten von Fontographer?", "Welcher Ort ist der Standort von der Produzent von Fontographer?", "Welcher Ort ist der Standort von die Produzenten von Fontographer?", "Welcher Ort war der Standort von der Produzent von Fontographer?", "Welcher Ort war der Standort von die Produzenten von Fontographer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Fontographer>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Lebensmittel?", "Gib mir den Standort von die Produzenten von Lebensmittel?", "Was ist der Standort von der Produzent von Lebensmittel?", "Was ist der Standort von die Produzenten von Lebensmittel?", "Was war der Standort von der Produzent von Lebensmittel?", "Was war der Standort von die Produzenten von Lebensmittel?", "Welcher Ort ist der Standort von der Produzent von Lebensmittel?", "Welcher Ort ist der Standort von die Produzenten von Lebensmittel?", "Welcher Ort war der Standort von der Produzent von Lebensmittel?", "Welcher Ort war der Standort von die Produzenten von Lebensmittel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Food>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Schalung (Beton)?", "Gib mir den Standort von die Produzenten von Schalung (Beton)?", "Was ist der Standort von der Produzent von Schalung (Beton)?", "Was ist der Standort von die Produzenten von Schalung (Beton)?", "Was war der Standort von der Produzent von Schalung (Beton)?", "Was war der Standort von die Produzenten von Schalung (Beton)?", "Welcher Ort ist der Standort von der Produzent von Schalung (Beton)?", "Welcher Ort ist der Standort von die Produzenten von Schalung (Beton)?", "Welcher Ort war der Standort von der Produzent von Schalung (Beton)?", "Welcher Ort war der Standort von die Produzenten von Schalung (Beton)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Formwork>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Brennstoff?", "Gib mir den Standort von die Produzenten von Brennstoff?", "Was ist der Standort von der Produzent von Brennstoff?", "Was ist der Standort von die Produzenten von Brennstoff?", "Was war der Standort von der Produzent von Brennstoff?", "Was war der Standort von die Produzenten von Brennstoff?", "Welcher Ort ist der Standort von der Produzent von Brennstoff?", "Welcher Ort ist der Standort von die Produzenten von Brennstoff?", "Welcher Ort war der Standort von der Produzent von Brennstoff?", "Welcher Ort war der Standort von die Produzenten von Brennstoff?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Fuel>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Terminbörse?", "Gib mir den Standort von die Produzenten von Terminbörse?", "Was ist der Standort von der Produzent von Terminbörse?", "Was ist der Standort von die Produzenten von Terminbörse?", "Was war der Standort von der Produzent von Terminbörse?", "Was war der Standort von die Produzenten von Terminbörse?", "Welcher Ort ist der Standort von der Produzent von Terminbörse?", "Welcher Ort ist der Standort von die Produzenten von Terminbörse?", "Welcher Ort war der Standort von der Produzent von Terminbörse?", "Welcher Ort war der Standort von die Produzenten von Terminbörse?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Futures_exchange>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Hedgefonds?", "Gib mir den Standort von die Produzenten von Hedgefonds?", "Was ist der Standort von der Produzent von Hedgefonds?", "Was ist der Standort von die Produzenten von Hedgefonds?", "Was war der Standort von der Produzent von Hedgefonds?", "Was war der Standort von die Produzenten von Hedgefonds?", "Welcher Ort ist der Standort von der Produzent von Hedgefonds?", "Welcher Ort ist der Standort von die Produzenten von Hedgefonds?", "Welcher Ort war der Standort von der Produzent von Hedgefonds?", "Welcher Ort war der Standort von die Produzenten von Hedgefonds?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Hedge_fund>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Post?", "Gib mir den Standort von die Produzenten von Post?", "Was ist der Standort von der Produzent von Post?", "Was ist der Standort von die Produzenten von Post?", "Was war der Standort von der Produzent von Post?", "Was war der Standort von die Produzenten von Post?", "Welcher Ort ist der Standort von der Produzent von Post?", "Welcher Ort ist der Standort von die Produzenten von Post?", "Welcher Ort war der Standort von der Produzent von Post?", "Welcher Ort war der Standort von die Produzenten von Post?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Mail>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Erdgas?", "Gib mir den Standort von die Produzenten von Erdgas?", "Was ist der Standort von der Produzent von Erdgas?", "Was ist der Standort von die Produzenten von Erdgas?", "Was war der Standort von der Produzent von Erdgas?", "Was war der Standort von die Produzenten von Erdgas?", "Welcher Ort ist der Standort von der Produzent von Erdgas?", "Welcher Ort ist der Standort von die Produzenten von Erdgas?", "Welcher Ort war der Standort von der Produzent von Erdgas?", "Welcher Ort war der Standort von die Produzenten von Erdgas?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Natural_gas>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Blech?", "Gib mir den Standort von die Produzenten von Blech?", "Was ist der Standort von der Produzent von Blech?", "Was ist der Standort von die Produzenten von Blech?", "Was war der Standort von der Produzent von Blech?", "Was war der Standort von die Produzenten von Blech?", "Welcher Ort ist der Standort von der Produzent von Blech?", "Welcher Ort ist der Standort von die Produzenten von Blech?", "Welcher Ort war der Standort von der Produzent von Blech?", "Welcher Ort war der Standort von die Produzenten von Blech?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Sheet_metal>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Schaltanlage?", "Gib mir den Standort von die Produzenten von Schaltanlage?", "Was ist der Standort von der Produzent von Schaltanlage?", "Was ist der Standort von die Produzenten von Schaltanlage?", "Was war der Standort von der Produzent von Schaltanlage?", "Was war der Standort von die Produzenten von Schaltanlage?", "Welcher Ort ist der Standort von der Produzent von Schaltanlage?", "Welcher Ort ist der Standort von die Produzenten von Schaltanlage?", "Welcher Ort war der Standort von der Produzent von Schaltanlage?", "Welcher Ort war der Standort von die Produzenten von Schaltanlage?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Switchgear>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Wein?", "Gib mir den Standort von die Produzenten von Wein?", "Was ist der Standort von der Produzent von Wein?", "Was ist der Standort von die Produzenten von Wein?", "Was war der Standort von der Produzent von Wein?", "Was war der Standort von die Produzenten von Wein?", "Welcher Ort ist der Standort von der Produzent von Wein?", "Welcher Ort ist der Standort von die Produzenten von Wein?", "Welcher Ort war der Standort von der Produzent von Wein?", "Welcher Ort war der Standort von die Produzenten von Wein?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Wine>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Elektronische Beschaffung?", "Gib mir den Standort von die Produzenten von Elektronische Beschaffung?", "Was ist der Standort von der Produzent von Elektronische Beschaffung?", "Was ist der Standort von die Produzenten von Elektronische Beschaffung?", "Was war der Standort von der Produzent von Elektronische Beschaffung?", "Was war der Standort von die Produzenten von Elektronische Beschaffung?", "Welcher Ort ist der Standort von der Produzent von Elektronische Beschaffung?", "Welcher Ort ist der Standort von die Produzenten von Elektronische Beschaffung?", "Welcher Ort war der Standort von der Produzent von Elektronische Beschaffung?", "Welcher Ort war der Standort von die Produzenten von Elektronische Beschaffung?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/E-procurement>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Lenkflugkörper?", "Gib mir den Standort von die Produzenten von Lenkflugkörper?", "Was ist der Standort von der Produzent von Lenkflugkörper?", "Was ist der Standort von die Produzenten von Lenkflugkörper?", "Was war der Standort von der Produzent von Lenkflugkörper?", "Was war der Standort von die Produzenten von Lenkflugkörper?", "Welcher Ort ist der Standort von der Produzent von Lenkflugkörper?", "Welcher Ort ist der Standort von die Produzenten von Lenkflugkörper?", "Welcher Ort war der Standort von der Produzent von Lenkflugkörper?", "Welcher Ort war der Standort von die Produzenten von Lenkflugkörper?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Missile>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Geldmarkt?", "Gib mir den Standort von die Produzenten von Geldmarkt?", "Was ist der Standort von der Produzent von Geldmarkt?", "Was ist der Standort von die Produzenten von Geldmarkt?", "Was war der Standort von der Produzent von Geldmarkt?", "Was war der Standort von die Produzenten von Geldmarkt?", "Welcher Ort ist der Standort von der Produzent von Geldmarkt?", "Welcher Ort ist der Standort von die Produzenten von Geldmarkt?", "Welcher Ort war der Standort von der Produzent von Geldmarkt?", "Welcher Ort war der Standort von die Produzenten von Geldmarkt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Money_market>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Partitur?", "Gib mir den Standort von die Produzenten von Partitur?", "Was ist der Standort von der Produzent von Partitur?", "Was ist der Standort von die Produzenten von Partitur?", "Was war der Standort von der Produzent von Partitur?", "Was war der Standort von die Produzenten von Partitur?", "Welcher Ort ist der Standort von der Produzent von Partitur?", "Welcher Ort ist der Standort von die Produzenten von Partitur?", "Welcher Ort war der Standort von der Produzent von Partitur?", "Welcher Ort war der Standort von die Produzenten von Partitur?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Sheet_music>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Pornografie im Internet?", "Gib mir den Standort von die Produzenten von Pornografie im Internet?", "Was ist der Standort von der Produzent von Pornografie im Internet?", "Was ist der Standort von die Produzenten von Pornografie im Internet?", "Was war der Standort von der Produzent von Pornografie im Internet?", "Was war der Standort von die Produzenten von Pornografie im Internet?", "Welcher Ort ist der Standort von der Produzent von Pornografie im Internet?", "Welcher Ort ist der Standort von die Produzenten von Pornografie im Internet?", "Welcher Ort war der Standort von der Produzent von Pornografie im Internet?", "Welcher Ort war der Standort von die Produzenten von Pornografie im Internet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Internet_pornography>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Radio?", "Gib mir den Standort von die Produzenten von Radio?", "Was ist der Standort von der Produzent von Radio?", "Was ist der Standort von die Produzenten von Radio?", "Was war der Standort von der Produzent von Radio?", "Was war der Standort von die Produzenten von Radio?", "Welcher Ort ist der Standort von der Produzent von Radio?", "Welcher Ort ist der Standort von die Produzenten von Radio?", "Welcher Ort war der Standort von der Produzent von Radio?", "Welcher Ort war der Standort von die Produzenten von Radio?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Radio>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Resort?", "Gib mir den Standort von die Produzenten von Resort?", "Was ist der Standort von der Produzent von Resort?", "Was ist der Standort von die Produzenten von Resort?", "Was war der Standort von der Produzent von Resort?", "Was war der Standort von die Produzenten von Resort?", "Welcher Ort ist der Standort von der Produzent von Resort?", "Welcher Ort ist der Standort von die Produzenten von Resort?", "Welcher Ort war der Standort von der Produzent von Resort?", "Welcher Ort war der Standort von die Produzenten von Resort?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Resort>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Wagniskapital?", "Gib mir den Standort von die Produzenten von Wagniskapital?", "Was ist der Standort von der Produzent von Wagniskapital?", "Was ist der Standort von die Produzenten von Wagniskapital?", "Was war der Standort von der Produzent von Wagniskapital?", "Was war der Standort von die Produzenten von Wagniskapital?", "Welcher Ort ist der Standort von der Produzent von Wagniskapital?", "Welcher Ort ist der Standort von die Produzenten von Wagniskapital?", "Welcher Ort war der Standort von der Produzent von Wagniskapital?", "Welcher Ort war der Standort von die Produzenten von Wagniskapital?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Venture_capital>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Dünger?", "Gib mir den Standort von die Produzenten von Dünger?", "Was ist der Standort von der Produzent von Dünger?", "Was ist der Standort von die Produzenten von Dünger?", "Was war der Standort von der Produzent von Dünger?", "Was war der Standort von die Produzenten von Dünger?", "Welcher Ort ist der Standort von der Produzent von Dünger?", "Welcher Ort ist der Standort von die Produzenten von Dünger?", "Welcher Ort war der Standort von der Produzent von Dünger?", "Welcher Ort war der Standort von die Produzenten von Dünger?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Fertilizer>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Finanzdienstleistung?", "Gib mir den Standort von die Produzenten von Finanzdienstleistung?", "Was ist der Standort von der Produzent von Finanzdienstleistung?", "Was ist der Standort von die Produzenten von Finanzdienstleistung?", "Was war der Standort von der Produzent von Finanzdienstleistung?", "Was war der Standort von die Produzenten von Finanzdienstleistung?", "Welcher Ort ist der Standort von der Produzent von Finanzdienstleistung?", "Welcher Ort ist der Standort von die Produzenten von Finanzdienstleistung?", "Welcher Ort war der Standort von der Produzent von Finanzdienstleistung?", "Welcher Ort war der Standort von die Produzenten von Finanzdienstleistung?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Financial_services>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Tiefkühlkost?", "Gib mir den Standort von die Produzenten von Tiefkühlkost?", "Was ist der Standort von der Produzent von Tiefkühlkost?", "Was ist der Standort von die Produzenten von Tiefkühlkost?", "Was war der Standort von der Produzent von Tiefkühlkost?", "Was war der Standort von die Produzenten von Tiefkühlkost?", "Welcher Ort ist der Standort von der Produzent von Tiefkühlkost?", "Welcher Ort ist der Standort von die Produzenten von Tiefkühlkost?", "Welcher Ort war der Standort von der Produzent von Tiefkühlkost?", "Welcher Ort war der Standort von die Produzenten von Tiefkühlkost?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Frozen_food>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Dampfturbine?", "Gib mir den Standort von die Produzenten von Dampfturbine?", "Was ist der Standort von der Produzent von Dampfturbine?", "Was ist der Standort von die Produzenten von Dampfturbine?", "Was war der Standort von der Produzent von Dampfturbine?", "Was war der Standort von die Produzenten von Dampfturbine?", "Welcher Ort ist der Standort von der Produzent von Dampfturbine?", "Welcher Ort ist der Standort von die Produzenten von Dampfturbine?", "Welcher Ort war der Standort von der Produzent von Dampfturbine?", "Welcher Ort war der Standort von die Produzenten von Dampfturbine?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Steam_turbine>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Automatisierung?", "Gib mir den Standort von die Produzenten von Automatisierung?", "Was ist der Standort von der Produzent von Automatisierung?", "Was ist der Standort von die Produzenten von Automatisierung?", "Was war der Standort von der Produzent von Automatisierung?", "Was war der Standort von die Produzenten von Automatisierung?", "Welcher Ort ist der Standort von der Produzent von Automatisierung?", "Welcher Ort ist der Standort von die Produzenten von Automatisierung?", "Welcher Ort war der Standort von der Produzent von Automatisierung?", "Welcher Ort war der Standort von die Produzenten von Automatisierung?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Automation>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Bier?", "Gib mir den Standort von die Produzenten von Bier?", "Was ist der Standort von der Produzent von Bier?", "Was ist der Standort von die Produzenten von Bier?", "Was war der Standort von der Produzent von Bier?", "Was war der Standort von die Produzenten von Bier?", "Welcher Ort ist der Standort von der Produzent von Bier?", "Welcher Ort ist der Standort von die Produzenten von Bier?", "Welcher Ort war der Standort von der Produzent von Bier?", "Welcher Ort war der Standort von die Produzenten von Bier?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Beer>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Ferngespräch?", "Gib mir den Standort von die Produzenten von Ferngespräch?", "Was ist der Standort von der Produzent von Ferngespräch?", "Was ist der Standort von die Produzenten von Ferngespräch?", "Was war der Standort von der Produzent von Ferngespräch?", "Was war der Standort von die Produzenten von Ferngespräch?", "Welcher Ort ist der Standort von der Produzent von Ferngespräch?", "Welcher Ort ist der Standort von die Produzenten von Ferngespräch?", "Welcher Ort war der Standort von der Produzent von Ferngespräch?", "Welcher Ort war der Standort von die Produzenten von Ferngespräch?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Long-distance_calling>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Deep Learning?", "Gib mir den Standort von die Produzenten von Deep Learning?", "Was ist der Standort von der Produzent von Deep Learning?", "Was ist der Standort von die Produzenten von Deep Learning?", "Was war der Standort von der Produzent von Deep Learning?", "Was war der Standort von die Produzenten von Deep Learning?", "Welcher Ort ist der Standort von der Produzent von Deep Learning?", "Welcher Ort ist der Standort von die Produzenten von Deep Learning?", "Welcher Ort war der Standort von der Produzent von Deep Learning?", "Welcher Ort war der Standort von die Produzenten von Deep Learning?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Deep_learning>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Feinkost?", "Gib mir den Standort von die Produzenten von Feinkost?", "Was ist der Standort von der Produzent von Feinkost?", "Was ist der Standort von die Produzenten von Feinkost?", "Was war der Standort von der Produzent von Feinkost?", "Was war der Standort von die Produzenten von Feinkost?", "Welcher Ort ist der Standort von der Produzent von Feinkost?", "Welcher Ort ist der Standort von die Produzenten von Feinkost?", "Welcher Ort war der Standort von der Produzent von Feinkost?", "Welcher Ort war der Standort von die Produzenten von Feinkost?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Delicatessen>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Spedition?", "Gib mir den Standort von die Produzenten von Spedition?", "Was ist der Standort von der Produzent von Spedition?", "Was ist der Standort von die Produzenten von Spedition?", "Was war der Standort von der Produzent von Spedition?", "Was war der Standort von die Produzenten von Spedition?", "Welcher Ort ist der Standort von der Produzent von Spedition?", "Welcher Ort ist der Standort von die Produzenten von Spedition?", "Welcher Ort war der Standort von der Produzent von Spedition?", "Welcher Ort war der Standort von die Produzenten von Spedition?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Freight_forwarder>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Electronic Banking?", "Gib mir den Standort von die Produzenten von Electronic Banking?", "Was ist der Standort von der Produzent von Electronic Banking?", "Was ist der Standort von die Produzenten von Electronic Banking?", "Was war der Standort von der Produzent von Electronic Banking?", "Was war der Standort von die Produzenten von Electronic Banking?", "Welcher Ort ist der Standort von der Produzent von Electronic Banking?", "Welcher Ort ist der Standort von die Produzenten von Electronic Banking?", "Welcher Ort war der Standort von der Produzent von Electronic Banking?", "Welcher Ort war der Standort von die Produzenten von Electronic Banking?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Online_banking>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Kalender?", "Gib mir den Standort von die Produzenten von Kalender?", "Was ist der Standort von der Produzent von Kalender?", "Was ist der Standort von die Produzenten von Kalender?", "Was war der Standort von der Produzent von Kalender?", "Was war der Standort von die Produzenten von Kalender?", "Welcher Ort ist der Standort von der Produzent von Kalender?", "Welcher Ort ist der Standort von die Produzenten von Kalender?", "Welcher Ort war der Standort von der Produzent von Kalender?", "Welcher Ort war der Standort von die Produzenten von Kalender?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Calendar>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Spielbank?", "Gib mir den Standort von die Produzenten von Spielbank?", "Was ist der Standort von der Produzent von Spielbank?", "Was ist der Standort von die Produzenten von Spielbank?", "Was war der Standort von der Produzent von Spielbank?", "Was war der Standort von die Produzenten von Spielbank?", "Welcher Ort ist der Standort von der Produzent von Spielbank?", "Welcher Ort ist der Standort von die Produzenten von Spielbank?", "Welcher Ort war der Standort von der Produzent von Spielbank?", "Welcher Ort war der Standort von die Produzenten von Spielbank?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Casino>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Kleidung?", "Gib mir den Standort von die Produzenten von Kleidung?", "Was ist der Standort von der Produzent von Kleidung?", "Was ist der Standort von die Produzenten von Kleidung?", "Was war der Standort von der Produzent von Kleidung?", "Was war der Standort von die Produzenten von Kleidung?", "Welcher Ort ist der Standort von der Produzent von Kleidung?", "Welcher Ort ist der Standort von die Produzenten von Kleidung?", "Welcher Ort war der Standort von der Produzent von Kleidung?", "Welcher Ort war der Standort von die Produzenten von Kleidung?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Clothing>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Private Bank?", "Gib mir den Standort von die Produzenten von Private Bank?", "Was ist der Standort von der Produzent von Private Bank?", "Was ist der Standort von die Produzenten von Private Bank?", "Was war der Standort von der Produzent von Private Bank?", "Was war der Standort von die Produzenten von Private Bank?", "Welcher Ort ist der Standort von der Produzent von Private Bank?", "Welcher Ort ist der Standort von die Produzenten von Private Bank?", "Welcher Ort war der Standort von der Produzent von Private Bank?", "Welcher Ort war der Standort von die Produzenten von Private Bank?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Private_bank>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Pushback (Flugzeug)?", "Gib mir den Standort von die Produzenten von Pushback (Flugzeug)?", "Was ist der Standort von der Produzent von Pushback (Flugzeug)?", "Was ist der Standort von die Produzenten von Pushback (Flugzeug)?", "Was war der Standort von der Produzent von Pushback (Flugzeug)?", "Was war der Standort von die Produzenten von Pushback (Flugzeug)?", "Welcher Ort ist der Standort von der Produzent von Pushback (Flugzeug)?", "Welcher Ort ist der Standort von die Produzenten von Pushback (Flugzeug)?", "Welcher Ort war der Standort von der Produzent von Pushback (Flugzeug)?", "Welcher Ort war der Standort von die Produzenten von Pushback (Flugzeug)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Pushback>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Unedle Metalle?", "Gib mir den Standort von die Produzenten von Unedle Metalle?", "Was ist der Standort von der Produzent von Unedle Metalle?", "Was ist der Standort von die Produzenten von Unedle Metalle?", "Was war der Standort von der Produzent von Unedle Metalle?", "Was war der Standort von die Produzenten von Unedle Metalle?", "Welcher Ort ist der Standort von der Produzent von Unedle Metalle?", "Welcher Ort ist der Standort von die Produzenten von Unedle Metalle?", "Welcher Ort war der Standort von der Produzent von Unedle Metalle?", "Welcher Ort war der Standort von die Produzenten von Unedle Metalle?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Base_metal>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Standleitung?", "Gib mir den Standort von die Produzenten von Standleitung?", "Was ist der Standort von der Produzent von Standleitung?", "Was ist der Standort von die Produzenten von Standleitung?", "Was war der Standort von der Produzent von Standleitung?", "Was war der Standort von die Produzenten von Standleitung?", "Welcher Ort ist der Standort von der Produzent von Standleitung?", "Welcher Ort ist der Standort von die Produzenten von Standleitung?", "Welcher Ort war der Standort von der Produzent von Standleitung?", "Welcher Ort war der Standort von die Produzenten von Standleitung?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Leased_line>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Platform as a Service?", "Gib mir den Standort von die Produzenten von Platform as a Service?", "Was ist der Standort von der Produzent von Platform as a Service?", "Was ist der Standort von die Produzenten von Platform as a Service?", "Was war der Standort von der Produzent von Platform as a Service?", "Was war der Standort von die Produzenten von Platform as a Service?", "Welcher Ort ist der Standort von der Produzent von Platform as a Service?", "Welcher Ort ist der Standort von die Produzenten von Platform as a Service?", "Welcher Ort war der Standort von der Produzent von Platform as a Service?", "Welcher Ort war der Standort von die Produzenten von Platform as a Service?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Platform_as_a_service>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Öffentlichkeitsarbeit?", "Gib mir den Standort von die Produzenten von Öffentlichkeitsarbeit?", "Was ist der Standort von der Produzent von Öffentlichkeitsarbeit?", "Was ist der Standort von die Produzenten von Öffentlichkeitsarbeit?", "Was war der Standort von der Produzent von Öffentlichkeitsarbeit?", "Was war der Standort von die Produzenten von Öffentlichkeitsarbeit?", "Welcher Ort ist der Standort von der Produzent von Öffentlichkeitsarbeit?", "Welcher Ort ist der Standort von die Produzenten von Öffentlichkeitsarbeit?", "Welcher Ort war der Standort von der Produzent von Öffentlichkeitsarbeit?", "Welcher Ort war der Standort von die Produzenten von Öffentlichkeitsarbeit?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Public_relations>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Einzelhandel?", "Gib mir den Standort von die Produzenten von Einzelhandel?", "Was ist der Standort von der Produzent von Einzelhandel?", "Was ist der Standort von die Produzenten von Einzelhandel?", "Was war der Standort von der Produzent von Einzelhandel?", "Was war der Standort von die Produzenten von Einzelhandel?", "Welcher Ort ist der Standort von der Produzent von Einzelhandel?", "Welcher Ort ist der Standort von die Produzenten von Einzelhandel?", "Welcher Ort war der Standort von der Produzent von Einzelhandel?", "Welcher Ort war der Standort von die Produzenten von Einzelhandel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Retail>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Werft?", "Gib mir den Standort von die Produzenten von Werft?", "Was ist der Standort von der Produzent von Werft?", "Was ist der Standort von die Produzenten von Werft?", "Was war der Standort von der Produzent von Werft?", "Was war der Standort von die Produzenten von Werft?", "Welcher Ort ist der Standort von der Produzent von Werft?", "Welcher Ort ist der Standort von die Produzenten von Werft?", "Welcher Ort war der Standort von der Produzent von Werft?", "Welcher Ort war der Standort von die Produzenten von Werft?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Shipyard>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Smokeless Tobacco?", "Gib mir den Standort von die Produzenten von Smokeless Tobacco?", "Was ist der Standort von der Produzent von Smokeless Tobacco?", "Was ist der Standort von die Produzenten von Smokeless Tobacco?", "Was war der Standort von der Produzent von Smokeless Tobacco?", "Was war der Standort von die Produzenten von Smokeless Tobacco?", "Welcher Ort ist der Standort von der Produzent von Smokeless Tobacco?", "Welcher Ort ist der Standort von die Produzenten von Smokeless Tobacco?", "Welcher Ort war der Standort von der Produzent von Smokeless Tobacco?", "Welcher Ort war der Standort von die Produzenten von Smokeless Tobacco?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Smokeless_tobacco>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Schnupftabak?", "Gib mir den Standort von die Produzenten von Schnupftabak?", "Was ist der Standort von der Produzent von Schnupftabak?", "Was ist der Standort von die Produzenten von Schnupftabak?", "Was war der Standort von der Produzent von Schnupftabak?", "Was war der Standort von die Produzenten von Schnupftabak?", "Welcher Ort ist der Standort von der Produzent von Schnupftabak?", "Welcher Ort ist der Standort von die Produzenten von Schnupftabak?", "Welcher Ort war der Standort von der Produzent von Schnupftabak?", "Welcher Ort war der Standort von die Produzenten von Schnupftabak?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Snuff_(tobacco)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Lösung (Chemie)?", "Gib mir den Standort von die Produzenten von Lösung (Chemie)?", "Was ist der Standort von der Produzent von Lösung (Chemie)?", "Was ist der Standort von die Produzenten von Lösung (Chemie)?", "Was war der Standort von der Produzent von Lösung (Chemie)?", "Was war der Standort von die Produzenten von Lösung (Chemie)?", "Welcher Ort ist der Standort von der Produzent von Lösung (Chemie)?", "Welcher Ort ist der Standort von die Produzenten von Lösung (Chemie)?", "Welcher Ort war der Standort von der Produzent von Lösung (Chemie)?", "Welcher Ort war der Standort von die Produzenten von Lösung (Chemie)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Solution>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Tourismus?", "Gib mir den Standort von die Produzenten von Tourismus?", "Was ist der Standort von der Produzent von Tourismus?", "Was ist der Standort von die Produzenten von Tourismus?", "Was war der Standort von der Produzent von Tourismus?", "Was war der Standort von die Produzenten von Tourismus?", "Welcher Ort ist der Standort von der Produzent von Tourismus?", "Welcher Ort ist der Standort von die Produzenten von Tourismus?", "Welcher Ort war der Standort von der Produzent von Tourismus?", "Welcher Ort war der Standort von die Produzenten von Tourismus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Tourism>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Sicherheitslücke?", "Gib mir den Standort von die Produzenten von Sicherheitslücke?", "Was ist der Standort von der Produzent von Sicherheitslücke?", "Was ist der Standort von die Produzenten von Sicherheitslücke?", "Was war der Standort von der Produzent von Sicherheitslücke?", "Was war der Standort von die Produzenten von Sicherheitslücke?", "Welcher Ort ist der Standort von der Produzent von Sicherheitslücke?", "Welcher Ort ist der Standort von die Produzenten von Sicherheitslücke?", "Welcher Ort war der Standort von der Produzent von Sicherheitslücke?", "Welcher Ort war der Standort von die Produzenten von Sicherheitslücke?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Vulnerability_(computing)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Faulgas?", "Gib mir den Standort von die Produzenten von Faulgas?", "Was ist der Standort von der Produzent von Faulgas?", "Was ist der Standort von die Produzenten von Faulgas?", "Was war der Standort von der Produzent von Faulgas?", "Was war der Standort von die Produzenten von Faulgas?", "Welcher Ort ist der Standort von der Produzent von Faulgas?", "Welcher Ort ist der Standort von die Produzenten von Faulgas?", "Welcher Ort war der Standort von der Produzent von Faulgas?", "Welcher Ort war der Standort von die Produzenten von Faulgas?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Biogas>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Biogas?", "Gib mir den Standort von die Produzenten von Biogas?", "Was ist der Standort von der Produzent von Biogas?", "Was ist der Standort von die Produzenten von Biogas?", "Was war der Standort von der Produzent von Biogas?", "Was war der Standort von die Produzenten von Biogas?", "Welcher Ort ist der Standort von der Produzent von Biogas?", "Welcher Ort ist der Standort von die Produzenten von Biogas?", "Welcher Ort war der Standort von der Produzent von Biogas?", "Welcher Ort war der Standort von die Produzenten von Biogas?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Biogas>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Bioremediation?", "Gib mir den Standort von die Produzenten von Bioremediation?", "Was ist der Standort von der Produzent von Bioremediation?", "Was ist der Standort von die Produzenten von Bioremediation?", "Was war der Standort von der Produzent von Bioremediation?", "Was war der Standort von die Produzenten von Bioremediation?", "Welcher Ort ist der Standort von der Produzent von Bioremediation?", "Welcher Ort ist der Standort von die Produzenten von Bioremediation?", "Welcher Ort war der Standort von der Produzent von Bioremediation?", "Welcher Ort war der Standort von die Produzenten von Bioremediation?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Bioremediation>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Mobiltelefon?", "Gib mir den Standort von die Produzenten von Mobiltelefon?", "Was ist der Standort von der Produzent von Mobiltelefon?", "Was ist der Standort von die Produzenten von Mobiltelefon?", "Was war der Standort von der Produzent von Mobiltelefon?", "Was war der Standort von die Produzenten von Mobiltelefon?", "Welcher Ort ist der Standort von der Produzent von Mobiltelefon?", "Welcher Ort ist der Standort von die Produzenten von Mobiltelefon?", "Welcher Ort war der Standort von der Produzent von Mobiltelefon?", "Welcher Ort war der Standort von die Produzenten von Mobiltelefon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Mobile_phone>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Jackpot?", "Gib mir den Standort von die Produzenten von Jackpot?", "Was ist der Standort von der Produzent von Jackpot?", "Was ist der Standort von die Produzenten von Jackpot?", "Was war der Standort von der Produzent von Jackpot?", "Was war der Standort von die Produzenten von Jackpot?", "Welcher Ort ist der Standort von der Produzent von Jackpot?", "Welcher Ort ist der Standort von die Produzenten von Jackpot?", "Welcher Ort war der Standort von der Produzent von Jackpot?", "Welcher Ort war der Standort von die Produzenten von Jackpot?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Progressive_jackpot>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Verpackung?", "Gib mir den Standort von die Produzenten von Verpackung?", "Was ist der Standort von der Produzent von Verpackung?", "Was ist der Standort von die Produzenten von Verpackung?", "Was war der Standort von der Produzent von Verpackung?", "Was war der Standort von die Produzenten von Verpackung?", "Welcher Ort ist der Standort von der Produzent von Verpackung?", "Welcher Ort ist der Standort von die Produzenten von Verpackung?", "Welcher Ort war der Standort von der Produzent von Verpackung?", "Welcher Ort war der Standort von die Produzenten von Verpackung?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Packaging_and_labeling>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Rasen?", "Gib mir den Standort von die Produzenten von Rasen?", "Was ist der Standort von der Produzent von Rasen?", "Was ist der Standort von die Produzenten von Rasen?", "Was war der Standort von der Produzent von Rasen?", "Was war der Standort von die Produzenten von Rasen?", "Welcher Ort ist der Standort von der Produzent von Rasen?", "Welcher Ort ist der Standort von die Produzenten von Rasen?", "Welcher Ort war der Standort von der Produzent von Rasen?", "Welcher Ort war der Standort von die Produzenten von Rasen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Lawn>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Spirituose?", "Gib mir den Standort von die Produzenten von Spirituose?", "Was ist der Standort von der Produzent von Spirituose?", "Was ist der Standort von die Produzenten von Spirituose?", "Was war der Standort von der Produzent von Spirituose?", "Was war der Standort von die Produzenten von Spirituose?", "Welcher Ort ist der Standort von der Produzent von Spirituose?", "Welcher Ort ist der Standort von die Produzenten von Spirituose?", "Welcher Ort war der Standort von der Produzent von Spirituose?", "Welcher Ort war der Standort von die Produzenten von Spirituose?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Liquor>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Lotto?", "Gib mir den Standort von die Produzenten von Lotto?", "Was ist der Standort von der Produzent von Lotto?", "Was ist der Standort von die Produzenten von Lotto?", "Was war der Standort von der Produzent von Lotto?", "Was war der Standort von die Produzenten von Lotto?", "Welcher Ort ist der Standort von der Produzent von Lotto?", "Welcher Ort ist der Standort von die Produzenten von Lotto?", "Welcher Ort war der Standort von der Produzent von Lotto?", "Welcher Ort war der Standort von die Produzenten von Lotto?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Lottery>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Fleisch?", "Gib mir den Standort von die Produzenten von Fleisch?", "Was ist der Standort von der Produzent von Fleisch?", "Was ist der Standort von die Produzenten von Fleisch?", "Was war der Standort von der Produzent von Fleisch?", "Was war der Standort von die Produzenten von Fleisch?", "Welcher Ort ist der Standort von der Produzent von Fleisch?", "Welcher Ort ist der Standort von die Produzenten von Fleisch?", "Welcher Ort war der Standort von der Produzent von Fleisch?", "Welcher Ort war der Standort von die Produzenten von Fleisch?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Meat>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Metalle?", "Gib mir den Standort von die Produzenten von Metalle?", "Was ist der Standort von der Produzent von Metalle?", "Was ist der Standort von die Produzenten von Metalle?", "Was war der Standort von der Produzent von Metalle?", "Was war der Standort von die Produzenten von Metalle?", "Welcher Ort ist der Standort von der Produzent von Metalle?", "Welcher Ort ist der Standort von die Produzenten von Metalle?", "Welcher Ort war der Standort von der Produzent von Metalle?", "Welcher Ort war der Standort von die Produzenten von Metalle?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Metal>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Zug (Schienenverkehr)?", "Gib mir den Standort von die Produzenten von Zug (Schienenverkehr)?", "Was ist der Standort von der Produzent von Zug (Schienenverkehr)?", "Was ist der Standort von die Produzenten von Zug (Schienenverkehr)?", "Was war der Standort von der Produzent von Zug (Schienenverkehr)?", "Was war der Standort von die Produzenten von Zug (Schienenverkehr)?", "Welcher Ort ist der Standort von der Produzent von Zug (Schienenverkehr)?", "Welcher Ort ist der Standort von die Produzenten von Zug (Schienenverkehr)?", "Welcher Ort war der Standort von der Produzent von Zug (Schienenverkehr)?", "Welcher Ort war der Standort von die Produzenten von Zug (Schienenverkehr)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Train>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Malz?", "Gib mir den Standort von die Produzenten von Malz?", "Was ist der Standort von der Produzent von Malz?", "Was ist der Standort von die Produzenten von Malz?", "Was war der Standort von der Produzent von Malz?", "Was war der Standort von die Produzenten von Malz?", "Welcher Ort ist der Standort von der Produzent von Malz?", "Welcher Ort ist der Standort von die Produzenten von Malz?", "Welcher Ort war der Standort von der Produzent von Malz?", "Welcher Ort war der Standort von die Produzenten von Malz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Malt>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Massenmedien?", "Gib mir den Standort von die Produzenten von Massenmedien?", "Was ist der Standort von der Produzent von Massenmedien?", "Was ist der Standort von die Produzenten von Massenmedien?", "Was war der Standort von der Produzent von Massenmedien?", "Was war der Standort von die Produzenten von Massenmedien?", "Welcher Ort ist der Standort von der Produzent von Massenmedien?", "Welcher Ort ist der Standort von die Produzenten von Massenmedien?", "Welcher Ort war der Standort von der Produzent von Massenmedien?", "Welcher Ort war der Standort von die Produzenten von Massenmedien?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Mass_media>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Gassensor?", "Gib mir den Standort von die Produzenten von Gassensor?", "Was ist der Standort von der Produzent von Gassensor?", "Was ist der Standort von die Produzenten von Gassensor?", "Was war der Standort von der Produzent von Gassensor?", "Was war der Standort von die Produzenten von Gassensor?", "Welcher Ort ist der Standort von der Produzent von Gassensor?", "Welcher Ort ist der Standort von die Produzenten von Gassensor?", "Welcher Ort war der Standort von der Produzent von Gassensor?", "Welcher Ort war der Standort von die Produzenten von Gassensor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Gas_detector>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Sonnenenergie?", "Gib mir den Standort von die Produzenten von Sonnenenergie?", "Was ist der Standort von der Produzent von Sonnenenergie?", "Was ist der Standort von die Produzenten von Sonnenenergie?", "Was war der Standort von der Produzent von Sonnenenergie?", "Was war der Standort von die Produzenten von Sonnenenergie?", "Welcher Ort ist der Standort von der Produzent von Sonnenenergie?", "Welcher Ort ist der Standort von die Produzenten von Sonnenenergie?", "Welcher Ort war der Standort von der Produzent von Sonnenenergie?", "Welcher Ort war der Standort von die Produzenten von Sonnenenergie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Solar_energy>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Franchising?", "Gib mir den Standort von die Produzenten von Franchising?", "Was ist der Standort von der Produzent von Franchising?", "Was ist der Standort von die Produzenten von Franchising?", "Was war der Standort von der Produzent von Franchising?", "Was war der Standort von die Produzenten von Franchising?", "Welcher Ort ist der Standort von der Produzent von Franchising?", "Welcher Ort ist der Standort von die Produzenten von Franchising?", "Welcher Ort war der Standort von der Produzent von Franchising?", "Welcher Ort war der Standort von die Produzenten von Franchising?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Franchising>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Möbel?", "Gib mir den Standort von die Produzenten von Möbel?", "Was ist der Standort von der Produzent von Möbel?", "Was ist der Standort von die Produzenten von Möbel?", "Was war der Standort von der Produzent von Möbel?", "Was war der Standort von die Produzenten von Möbel?", "Welcher Ort ist der Standort von der Produzent von Möbel?", "Welcher Ort ist der Standort von die Produzenten von Möbel?", "Welcher Ort war der Standort von der Produzent von Möbel?", "Welcher Ort war der Standort von die Produzenten von Möbel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Furniture>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "30",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den Standort von der Produzent von Schutzhelm?", "Gib mir den Standort von die Produzenten von Schutzhelm?", "Was ist der Standort von der Produzent von Schutzhelm?", "Was ist der Standort von die Produzenten von Schutzhelm?", "Was war der Standort von der Produzent von Schutzhelm?", "Was war der Standort von die Produzenten von Schutzhelm?", "Welcher Ort ist der Standort von der Produzent von Schutzhelm?", "Welcher Ort ist der Standort von die Produzenten von Schutzhelm?", "Welcher Ort war der Standort von der Produzent von Schutzhelm?", "Welcher Ort war der Standort von die Produzenten von Schutzhelm?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Hard_hat>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von LucasArts?", "Welcher Agent entwickelte Werks entwickelt von LucasArts?", "Wer entwickelt Werks entwickelt von LucasArts?", "Wer entwickelte Werks entwickelt von LucasArts?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/LucasArts>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von MOL?", "Welcher Agent entwickelte Werks entwickelt von MOL?", "Wer entwickelt Werks entwickelt von MOL?", "Wer entwickelte Werks entwickelt von MOL?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MOL_(company)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Mabrouk El Mechri?", "Welcher Agent entwickelte Werks entwickelt von Mabrouk El Mechri?", "Wer entwickelt Werks entwickelt von Mabrouk El Mechri?", "Wer entwickelte Werks entwickelt von Mabrouk El Mechri?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mabrouk_El_Mechri>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Macromedia?", "Welcher Agent entwickelte Werks entwickelt von Macromedia?", "Wer entwickelt Werks entwickelt von Macromedia?", "Wer entwickelte Werks entwickelt von Macromedia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Macromedia>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von University of Bristol?", "Welcher Agent entwickelte Werks entwickelt von University of Bristol?", "Wer entwickelt Werks entwickelt von University of Bristol?", "Wer entwickelte Werks entwickelt von University of Bristol?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Bristol>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von University of California, San Francisco?", "Welcher Agent entwickelte Werks entwickelt von University of California, San Francisco?", "Wer entwickelt Werks entwickelt von University of California, San Francisco?", "Wer entwickelte Werks entwickelt von University of California, San Francisco?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_California,_San_Francisco>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von University of South Florida?", "Welcher Agent entwickelte Werks entwickelt von University of South Florida?", "Wer entwickelt Werks entwickelt von University of South Florida?", "Wer entwickelte Werks entwickelt von University of South Florida?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_South_Florida>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Universität Sydney?", "Welcher Agent entwickelte Werks entwickelt von Universität Sydney?", "Wer entwickelt Werks entwickelt von Universität Sydney?", "Wer entwickelte Werks entwickelt von Universität Sydney?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/University_of_Sydney>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Softdisk?", "Welcher Agent entwickelte Werks entwickelt von Softdisk?", "Wer entwickelt Werks entwickelt von Softdisk?", "Wer entwickelte Werks entwickelt von Softdisk?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Softdisk>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von BioWare?", "Welcher Agent entwickelte Werks entwickelt von BioWare?", "Wer entwickelt Werks entwickelt von BioWare?", "Wer entwickelte Werks entwickelt von BioWare?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/BioWare>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Digital Equipment Corporation?", "Welcher Agent entwickelte Werks entwickelt von Digital Equipment Corporation?", "Wer entwickelt Werks entwickelt von Digital Equipment Corporation?", "Wer entwickelte Werks entwickelt von Digital Equipment Corporation?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Digital_Equipment_Corporation>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Digital Research?", "Welcher Agent entwickelte Werks entwickelt von Digital Research?", "Wer entwickelt Werks entwickelt von Digital Research?", "Wer entwickelte Werks entwickelt von Digital Research?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Digital_Research>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Wesley Pentz?", "Welcher Agent entwickelte Werks entwickelt von Wesley Pentz?", "Wer entwickelt Werks entwickelt von Wesley Pentz?", "Wer entwickelte Werks entwickelt von Wesley Pentz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Diplo>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Google LLC?", "Welcher Agent entwickelte Werks entwickelt von Google LLC?", "Wer entwickelt Werks entwickelt von Google LLC?", "Wer entwickelte Werks entwickelt von Google LLC?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Google>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von D. Gottlieb & Co.?", "Welcher Agent entwickelte Werks entwickelt von D. Gottlieb & Co.?", "Wer entwickelt Werks entwickelt von D. Gottlieb & Co.?", "Wer entwickelte Werks entwickelt von D. Gottlieb & Co.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Gottlieb>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Kojima Productions?", "Welcher Agent entwickelte Werks entwickelt von Kojima Productions?", "Wer entwickelt Werks entwickelt von Kojima Productions?", "Wer entwickelte Werks entwickelt von Kojima Productions?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Kojima_Productions>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Konami?", "Welcher Agent entwickelte Werks entwickelt von Konami?", "Wer entwickelt Werks entwickelt von Konami?", "Wer entwickelte Werks entwickelt von Konami?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Konami>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Korean Broadcasting System?", "Welcher Agent entwickelte Werks entwickelt von Korean Broadcasting System?", "Wer entwickelt Werks entwickelt von Korean Broadcasting System?", "Wer entwickelte Werks entwickelt von Korean Broadcasting System?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Korean_Broadcasting_System>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Radical Entertainment?", "Welcher Agent entwickelte Werks entwickelt von Radical Entertainment?", "Wer entwickelt Werks entwickelt von Radical Entertainment?", "Wer entwickelte Werks entwickelt von Radical Entertainment?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Radical_Entertainment>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Rainbow Arts?", "Welcher Agent entwickelte Werks entwickelt von Rainbow Arts?", "Wer entwickelt Werks entwickelt von Rainbow Arts?", "Wer entwickelte Werks entwickelt von Rainbow Arts?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Rainbow_Arts>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Irem (Unternehmen)?", "Welcher Agent entwickelte Werks entwickelt von Irem (Unternehmen)?", "Wer entwickelt Werks entwickelt von Irem (Unternehmen)?", "Wer entwickelte Werks entwickelt von Irem (Unternehmen)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Irem>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Central Point Software?", "Welcher Agent entwickelte Werks entwickelt von Central Point Software?", "Wer entwickelt Werks entwickelt von Central Point Software?", "Wer entwickelte Werks entwickelt von Central Point Software?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Central_Point_Software>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Nintendo?", "Welcher Agent entwickelte Werks entwickelt von Nintendo?", "Wer entwickelt Werks entwickelt von Nintendo?", "Wer entwickelte Werks entwickelt von Nintendo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Nintendo>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Nintendo DS?", "Welcher Agent entwickelte Werks entwickelt von Nintendo DS?", "Wer entwickelt Werks entwickelt von Nintendo DS?", "Wer entwickelte Werks entwickelt von Nintendo DS?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Nintendo_DS>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Nintendo Entertainment Analysis & Development?", "Welcher Agent entwickelte Werks entwickelt von Nintendo Entertainment Analysis & Development?", "Wer entwickelt Werks entwickelt von Nintendo Entertainment Analysis & Development?", "Wer entwickelte Werks entwickelt von Nintendo Entertainment Analysis & Development?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Nintendo_Entertainment_Analysis_&_Development>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Nippon Ichi Software?", "Welcher Agent entwickelte Werks entwickelt von Nippon Ichi Software?", "Wer entwickelt Werks entwickelt von Nippon Ichi Software?", "Wer entwickelte Werks entwickelt von Nippon Ichi Software?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Nippon_Ichi_Software>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Nokia?", "Welcher Agent entwickelte Werks entwickelt von Nokia?", "Wer entwickelt Werks entwickelt von Nokia?", "Wer entwickelte Werks entwickelt von Nokia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Nokia>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Novell?", "Welcher Agent entwickelte Werks entwickelt von Novell?", "Wer entwickelt Werks entwickelt von Novell?", "Wer entwickelte Werks entwickelt von Novell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Novell>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Oak Ridge National Laboratory?", "Welcher Agent entwickelte Werks entwickelt von Oak Ridge National Laboratory?", "Wer entwickelt Werks entwickelt von Oak Ridge National Laboratory?", "Wer entwickelte Werks entwickelt von Oak Ridge National Laboratory?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Oak_Ridge_National_Laboratory>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Ocean Software?", "Welcher Agent entwickelte Werks entwickelt von Ocean Software?", "Wer entwickelt Werks entwickelt von Ocean Software?", "Wer entwickelte Werks entwickelt von Ocean Software?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Ocean_Software>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von GNU-Projekt?", "Welcher Agent entwickelte Werks entwickelt von GNU-Projekt?", "Wer entwickelt Werks entwickelt von GNU-Projekt?", "Wer entwickelte Werks entwickelt von GNU-Projekt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/GNU_Project>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Bandai?", "Welcher Agent entwickelte Werks entwickelt von Bandai?", "Wer entwickelt Werks entwickelt von Bandai?", "Wer entwickelte Werks entwickelt von Bandai?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Bandai>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Capcom?", "Welcher Agent entwickelte Werks entwickelt von Capcom?", "Wer entwickelt Werks entwickelt von Capcom?", "Wer entwickelte Werks entwickelt von Capcom?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Capcom>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Adam Cadre?", "Welcher Agent entwickelte Werks entwickelt von Adam Cadre?", "Wer entwickelt Werks entwickelt von Adam Cadre?", "Wer entwickelte Werks entwickelt von Adam Cadre?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Adam_Cadre>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von City University of New York?", "Welcher Agent entwickelte Werks entwickelt von City University of New York?", "Wer entwickelt Werks entwickelt von City University of New York?", "Wer entwickelte Werks entwickelt von City University of New York?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/City_University_of_New_York>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Codemasters?", "Welcher Agent entwickelte Werks entwickelt von Codemasters?", "Wer entwickelt Werks entwickelt von Codemasters?", "Wer entwickelte Werks entwickelt von Codemasters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Codemasters>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Game Arts?", "Welcher Agent entwickelte Werks entwickelt von Game Arts?", "Wer entwickelt Werks entwickelt von Game Arts?", "Wer entwickelte Werks entwickelt von Game Arts?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Game_Arts>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Gameloft?", "Welcher Agent entwickelte Werks entwickelt von Gameloft?", "Wer entwickelt Werks entwickelt von Gameloft?", "Wer entwickelte Werks entwickelt von Gameloft?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Gameloft>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Gary Kildall?", "Welcher Agent entwickelte Werks entwickelt von Gary Kildall?", "Wer entwickelt Werks entwickelt von Gary Kildall?", "Wer entwickelte Werks entwickelt von Gary Kildall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Gary_Kildall>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Gene Reynolds?", "Welcher Agent entwickelte Werks entwickelt von Gene Reynolds?", "Wer entwickelt Werks entwickelt von Gene Reynolds?", "Wer entwickelte Werks entwickelt von Gene Reynolds?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Gene_Reynolds>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Genki?", "Welcher Agent entwickelte Werks entwickelt von Genki?", "Wer entwickelt Werks entwickelt von Genki?", "Wer entwickelte Werks entwickelt von Genki?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Genki_(company)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Beenox?", "Welcher Agent entwickelte Werks entwickelt von Beenox?", "Wer entwickelt Werks entwickelt von Beenox?", "Wer entwickelte Werks entwickelt von Beenox?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Beenox>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Bell Laboratories?", "Welcher Agent entwickelte Werks entwickelt von Bell Laboratories?", "Wer entwickelt Werks entwickelt von Bell Laboratories?", "Wer entwickelte Werks entwickelt von Bell Laboratories?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Bell_Labs>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Big Huge Games?", "Welcher Agent entwickelte Werks entwickelt von Big Huge Games?", "Wer entwickelt Werks entwickelt von Big Huge Games?", "Wer entwickelte Werks entwickelt von Big Huge Games?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Big_Huge_Games>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Linux Foundation?", "Welcher Agent entwickelte Werks entwickelt von Linux Foundation?", "Wer entwickelt Werks entwickelt von Linux Foundation?", "Wer entwickelte Werks entwickelt von Linux Foundation?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Linux_Foundation>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Zilog?", "Welcher Agent entwickelte Werks entwickelt von Zilog?", "Wer entwickelt Werks entwickelt von Zilog?", "Wer entwickelte Werks entwickelt von Zilog?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Zilog>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Zipper Interactive?", "Welcher Agent entwickelte Werks entwickelt von Zipper Interactive?", "Wer entwickelt Werks entwickelt von Zipper Interactive?", "Wer entwickelte Werks entwickelt von Zipper Interactive?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Zipper_Interactive>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Stainless Games?", "Welcher Agent entwickelte Werks entwickelt von Stainless Games?", "Wer entwickelt Werks entwickelt von Stainless Games?", "Wer entwickelte Werks entwickelt von Stainless Games?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Stainless_Games>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Microchip Technology?", "Welcher Agent entwickelte Werks entwickelt von Microchip Technology?", "Wer entwickelt Werks entwickelt von Microchip Technology?", "Wer entwickelte Werks entwickelt von Microchip Technology?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Microchip_Technology>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Microsoft?", "Welcher Agent entwickelte Werks entwickelt von Microsoft?", "Wer entwickelt Werks entwickelt von Microsoft?", "Wer entwickelte Werks entwickelt von Microsoft?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Microsoft>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Microware Software?", "Welcher Agent entwickelte Werks entwickelt von Microware Software?", "Wer entwickelt Werks entwickelt von Microware Software?", "Wer entwickelte Werks entwickelt von Microware Software?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Microware>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Midway Games?", "Welcher Agent entwickelte Werks entwickelt von Midway Games?", "Wer entwickelt Werks entwickelt von Midway Games?", "Wer entwickelte Werks entwickelt von Midway Games?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Midway_Games>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Mike Oldfield?", "Welcher Agent entwickelte Werks entwickelt von Mike Oldfield?", "Wer entwickelt Werks entwickelt von Mike Oldfield?", "Wer entwickelte Werks entwickelt von Mike Oldfield?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mike_Oldfield>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Mitchell (Unternehmen)?", "Welcher Agent entwickelte Werks entwickelt von Mitchell (Unternehmen)?", "Wer entwickelt Werks entwickelt von Mitchell (Unternehmen)?", "Wer entwickelte Werks entwickelt von Mitchell (Unternehmen)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mitchell_Corporation>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Monash University?", "Welcher Agent entwickelte Werks entwickelt von Monash University?", "Wer entwickelt Werks entwickelt von Monash University?", "Wer entwickelte Werks entwickelt von Monash University?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Monash_University>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Tom Kapinos?", "Welcher Agent entwickelte Werks entwickelt von Tom Kapinos?", "Wer entwickelt Werks entwickelt von Tom Kapinos?", "Wer entwickelte Werks entwickelt von Tom Kapinos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Tom_Kapinos>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von 2K Czech?", "Welcher Agent entwickelte Werks entwickelt von 2K Czech?", "Wer entwickelt Werks entwickelt von 2K Czech?", "Wer entwickelte Werks entwickelt von 2K Czech?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/2K_Czech>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Sony Interactive Entertainment?", "Welcher Agent entwickelte Werks entwickelt von Sony Interactive Entertainment?", "Wer entwickelt Werks entwickelt von Sony Interactive Entertainment?", "Wer entwickelte Werks entwickelt von Sony Interactive Entertainment?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Sony_Interactive_Entertainment>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Square (Zahlungsunternehmen)?", "Welcher Agent entwickelte Werks entwickelt von Square (Zahlungsunternehmen)?", "Wer entwickelt Werks entwickelt von Square (Zahlungsunternehmen)?", "Wer entwickelte Werks entwickelt von Square (Zahlungsunternehmen)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Square,_Inc.>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Square Enix?", "Welcher Agent entwickelte Werks entwickelt von Square Enix?", "Wer entwickelt Werks entwickelt von Square Enix?", "Wer entwickelte Werks entwickelt von Square Enix?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Square_Enix>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von MetaComCo?", "Welcher Agent entwickelte Werks entwickelt von MetaComCo?", "Wer entwickelt Werks entwickelt von MetaComCo?", "Wer entwickelte Werks entwickelt von MetaComCo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/MetaComCo>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Dropbox?", "Welcher Agent entwickelte Werks entwickelt von Dropbox?", "Wer entwickelt Werks entwickelt von Dropbox?", "Wer entwickelte Werks entwickelt von Dropbox?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Dropbox_(service)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von EA Sports?", "Welcher Agent entwickelte Werks entwickelt von EA Sports?", "Wer entwickelt Werks entwickelt von EA Sports?", "Wer entwickelte Werks entwickelt von EA Sports?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/EA_Sports>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von EA Tiburon?", "Welcher Agent entwickelte Werks entwickelt von EA Tiburon?", "Wer entwickelt Werks entwickelt von EA Tiburon?", "Wer entwickelte Werks entwickelt von EA Tiburon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/EA_Tiburon>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Amanita Design?", "Welcher Agent entwickelte Werks entwickelt von Amanita Design?", "Wer entwickelt Werks entwickelt von Amanita Design?", "Wer entwickelte Werks entwickelt von Amanita Design?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Amanita_Design>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Fujitsu?", "Welcher Agent entwickelte Werks entwickelt von Fujitsu?", "Wer entwickelt Werks entwickelt von Fujitsu?", "Wer entwickelte Werks entwickelt von Fujitsu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Fujitsu>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Hangar 13?", "Welcher Agent entwickelte Werks entwickelt von Hangar 13?", "Wer entwickelt Werks entwickelt von Hangar 13?", "Wer entwickelte Werks entwickelt von Hangar 13?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Hangar_13_(company)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von IBM?", "Welcher Agent entwickelte Werks entwickelt von IBM?", "Wer entwickelt Werks entwickelt von IBM?", "Wer entwickelte Werks entwickelt von IBM?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/IBM>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Idaho National Laboratory?", "Welcher Agent entwickelte Werks entwickelt von Idaho National Laboratory?", "Wer entwickelt Werks entwickelt von Idaho National Laboratory?", "Wer entwickelte Werks entwickelt von Idaho National Laboratory?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Idaho_National_Laboratory>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Intel?", "Welcher Agent entwickelte Werks entwickelt von Intel?", "Wer entwickelt Werks entwickelt von Intel?", "Wer entwickelte Werks entwickelt von Intel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Intel>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Jagex?", "Welcher Agent entwickelte Werks entwickelt von Jagex?", "Wer entwickelt Werks entwickelt von Jagex?", "Wer entwickelte Werks entwickelt von Jagex?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Jagex>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Sega?", "Welcher Agent entwickelte Werks entwickelt von Sega?", "Wer entwickelt Werks entwickelt von Sega?", "Wer entwickelte Werks entwickelt von Sega?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Sega>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Nihon Bussan?", "Welcher Agent entwickelte Werks entwickelt von Nihon Bussan?", "Wer entwickelt Werks entwickelt von Nihon Bussan?", "Wer entwickelte Werks entwickelt von Nihon Bussan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Nihon_Bussan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Amiga?", "Welcher Agent entwickelte Werks entwickelt von Amiga?", "Wer entwickelt Werks entwickelt von Amiga?", "Wer entwickelte Werks entwickelt von Amiga?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Amiga>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Andrew S. Tanenbaum?", "Welcher Agent entwickelte Werks entwickelt von Andrew S. Tanenbaum?", "Wer entwickelt Werks entwickelt von Andrew S. Tanenbaum?", "Wer entwickelte Werks entwickelt von Andrew S. Tanenbaum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Andrew_S._Tanenbaum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Apple?", "Welcher Agent entwickelte Werks entwickelt von Apple?", "Wer entwickelt Werks entwickelt von Apple?", "Wer entwickelte Werks entwickelt von Apple?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Apple_Inc.>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Argonne National Laboratory?", "Welcher Agent entwickelte Werks entwickelt von Argonne National Laboratory?", "Wer entwickelt Werks entwickelt von Argonne National Laboratory?", "Wer entwickelte Werks entwickelt von Argonne National Laboratory?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Argonne_National_Laboratory>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Atari, Inc. (1972)?", "Welcher Agent entwickelte Werks entwickelt von Atari, Inc. (1972)?", "Wer entwickelt Werks entwickelt von Atari, Inc. (1972)?", "Wer entwickelte Werks entwickelt von Atari, Inc. (1972)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Atari,_Inc.>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Atari Games?", "Welcher Agent entwickelte Werks entwickelt von Atari Games?", "Wer entwickelt Werks entwickelt von Atari Games?", "Wer entwickelte Werks entwickelt von Atari Games?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Atari_Games>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Atlus?", "Welcher Agent entwickelte Werks entwickelt von Atlus?", "Wer entwickelt Werks entwickelt von Atlus?", "Wer entwickelte Werks entwickelt von Atlus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Atlus>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Optimized Systems Software?", "Welcher Agent entwickelte Werks entwickelt von Optimized Systems Software?", "Wer entwickelt Werks entwickelt von Optimized Systems Software?", "Wer entwickelte Werks entwickelt von Optimized Systems Software?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Optimized_Systems_Software>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Cdv Software Entertainment?", "Welcher Agent entwickelte Werks entwickelt von Cdv Software Entertainment?", "Wer entwickelt Werks entwickelt von Cdv Software Entertainment?", "Wer entwickelte Werks entwickelt von Cdv Software Entertainment?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/CDV_Software>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Thalion Software?", "Welcher Agent entwickelte Werks entwickelt von Thalion Software?", "Wer entwickelt Werks entwickelt von Thalion Software?", "Wer entwickelte Werks entwickelt von Thalion Software?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Thalion_Software>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von ABS-CBN Corporation?", "Welcher Agent entwickelte Werks entwickelt von ABS-CBN Corporation?", "Wer entwickelt Werks entwickelt von ABS-CBN Corporation?", "Wer entwickelte Werks entwickelt von ABS-CBN Corporation?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/ABS-CBN>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von AOL?", "Welcher Agent entwickelte Werks entwickelt von AOL?", "Wer entwickelt Werks entwickelt von AOL?", "Wer entwickelte Werks entwickelt von AOL?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/AOL>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Acorn?", "Welcher Agent entwickelte Werks entwickelt von Acorn?", "Wer entwickelt Werks entwickelt von Acorn?", "Wer entwickelte Werks entwickelt von Acorn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Acorn_Computers>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von AMD?", "Welcher Agent entwickelte Werks entwickelt von AMD?", "Wer entwickelt Werks entwickelt von AMD?", "Wer entwickelte Werks entwickelt von AMD?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Advanced_Micro_Devices>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Toshiba?", "Welcher Agent entwickelte Werks entwickelt von Toshiba?", "Wer entwickelt Werks entwickelt von Toshiba?", "Wer entwickelte Werks entwickelt von Toshiba?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Toshiba>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Tishman Speyer Properties?", "Welcher Agent entwickelte Werks entwickelt von Tishman Speyer Properties?", "Wer entwickelt Werks entwickelt von Tishman Speyer Properties?", "Wer entwickelte Werks entwickelt von Tishman Speyer Properties?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Tishman_Speyer>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Brenda Hampton?", "Welcher Agent entwickelte Werks entwickelt von Brenda Hampton?", "Wer entwickelt Werks entwickelt von Brenda Hampton?", "Wer entwickelte Werks entwickelt von Brenda Hampton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Brenda_Hampton>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Bullfrog Productions?", "Welcher Agent entwickelte Werks entwickelt von Bullfrog Productions?", "Wer entwickelt Werks entwickelt von Bullfrog Productions?", "Wer entwickelte Werks entwickelt von Bullfrog Productions?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Bullfrog_Productions>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Autonome Gemeinschaft Madrid?", "Welcher Agent entwickelte Werks entwickelt von Autonome Gemeinschaft Madrid?", "Wer entwickelt Werks entwickelt von Autonome Gemeinschaft Madrid?", "Wer entwickelte Werks entwickelt von Autonome Gemeinschaft Madrid?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Community_of_Madrid>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Connectix?", "Welcher Agent entwickelte Werks entwickelt von Connectix?", "Wer entwickelt Werks entwickelt von Connectix?", "Wer entwickelte Werks entwickelt von Connectix?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Connectix>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Conrad Hotels?", "Welcher Agent entwickelte Werks entwickelt von Conrad Hotels?", "Wer entwickelt Werks entwickelt von Conrad Hotels?", "Wer entwickelte Werks entwickelt von Conrad Hotels?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Conrad_Hotels>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Criterion Games?", "Welcher Agent entwickelte Werks entwickelt von Criterion Games?", "Wer entwickelt Werks entwickelt von Criterion Games?", "Wer entwickelte Werks entwickelt von Criterion Games?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Criterion_Games>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Crystal Dynamics?", "Welcher Agent entwickelte Werks entwickelt von Crystal Dynamics?", "Wer entwickelt Werks entwickelt von Crystal Dynamics?", "Wer entwickelte Werks entwickelt von Crystal Dynamics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Crystal_Dynamics>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Kuju Entertainment?", "Welcher Agent entwickelte Werks entwickelt von Kuju Entertainment?", "Wer entwickelt Werks entwickelt von Kuju Entertainment?", "Wer entwickelte Werks entwickelt von Kuju Entertainment?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Kuju_(company)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Griptonite Games?", "Welcher Agent entwickelte Werks entwickelt von Griptonite Games?", "Wer entwickelt Werks entwickelt von Griptonite Games?", "Wer entwickelte Werks entwickelt von Griptonite Games?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Griptonite_Games>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von D-Wave Systems?", "Welcher Agent entwickelte Werks entwickelt von D-Wave Systems?", "Wer entwickelt Werks entwickelt von D-Wave Systems?", "Wer entwickelte Werks entwickelt von D-Wave Systems?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/D-Wave_Systems>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "31",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welcher Agent entwickelt Werks entwickelt von Dassault Systèmes?", "Welcher Agent entwickelte Werks entwickelt von Dassault Systèmes?", "Wer entwickelt Werks entwickelt von Dassault Systèmes?", "Wer entwickelte Werks entwickelt von Dassault Systèmes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Dassault_Systèmes>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für In Bed with Madonna?", "Welche Person heiratete die Komponisten für In Bed with Madonna?", "Wer heiratete der Komponist für In Bed with Madonna?", "Wer heiratete die Komponisten für In Bed with Madonna?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Madonna:_Truth_or_Dare> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für Raajakumara?", "Welche Person heiratete die Komponisten für Raajakumara?", "Wer heiratete der Komponist für Raajakumara?", "Wer heiratete die Komponisten für Raajakumara?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Raajakumara> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für Dr. T and the Women?", "Welche Person heiratete die Komponisten für Dr. T and the Women?", "Wer heiratete der Komponist für Dr. T and the Women?", "Wer heiratete die Komponisten für Dr. T and the Women?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dr._T_&_the_Women> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für Die Söhne der drei Musketiere?", "Welche Person heiratete die Komponisten für Die Söhne der drei Musketiere?", "Wer heiratete der Komponist für Die Söhne der drei Musketiere?", "Wer heiratete die Komponisten für Die Söhne der drei Musketiere?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/At_Sword's_Point> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für Dheere Rana Vikrama?", "Welche Person heiratete die Komponisten für Dheere Rana Vikrama?", "Wer heiratete der Komponist für Dheere Rana Vikrama?", "Wer heiratete die Komponisten für Dheere Rana Vikrama?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rana_Vikrama> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für Ring frei für Stoker Thompson?", "Welche Person heiratete die Komponisten für Ring frei für Stoker Thompson?", "Wer heiratete der Komponist für Ring frei für Stoker Thompson?", "Wer heiratete die Komponisten für Ring frei für Stoker Thompson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Set-Up_(1949_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für Days of Glory (1944)?", "Welche Person heiratete die Komponisten für Days of Glory (1944)?", "Wer heiratete der Komponist für Days of Glory (1944)?", "Wer heiratete die Komponisten für Days of Glory (1944)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Days_of_Glory_(1944_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Come_Back,_Africa?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Come_Back,_Africa?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Come_Back,_Africa?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Come_Back,_Africa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Come_Back,_Africa> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Ladrones_(2015_film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Ladrones_(2015_film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Ladrones_(2015_film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Ladrones_(2015_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ladrones_(2015_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Looking_for_Leonard?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Looking_for_Leonard?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Looking_for_Leonard?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Looking_for_Leonard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Looking_for_Leonard> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Who_Loves_the_Sun?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Who_Loves_the_Sun?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Who_Loves_the_Sun?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Who_Loves_the_Sun?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Who_Loves_the_Sun> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Variety_Time?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Variety_Time?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Variety_Time?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Variety_Time?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Variety_Time> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Government_Girl?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Government_Girl?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Government_Girl?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Government_Girl?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Government_Girl> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Radio_Stars_on_Parade?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Radio_Stars_on_Parade?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Radio_Stars_on_Parade?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Radio_Stars_on_Parade?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Radio_Stars_on_Parade> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Bad_Men_of_Tombstone?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Bad_Men_of_Tombstone?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Bad_Men_of_Tombstone?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Bad_Men_of_Tombstone?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bad_Men_of_Tombstone> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Gildersleeve's_Bad_Day?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Gildersleeve's_Bad_Day?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Gildersleeve's_Bad_Day?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Gildersleeve's_Bad_Day?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gildersleeve's_Bad_Day> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Gildersleeve's_Ghost?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Gildersleeve's_Ghost?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Gildersleeve's_Ghost?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Gildersleeve's_Ghost?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gildersleeve's_Ghost> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Gildersleeve_on_Broadway?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Gildersleeve_on_Broadway?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Gildersleeve_on_Broadway?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Gildersleeve_on_Broadway?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gildersleeve_on_Broadway> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Below_the_Sahara?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Below_the_Sahara?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Below_the_Sahara?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Below_the_Sahara?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Below_the_Sahara> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Ten_Cents_a_Dance_(1931_film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Ten_Cents_a_Dance_(1931_film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Ten_Cents_a_Dance_(1931_film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Ten_Cents_a_Dance_(1931_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ten_Cents_a_Dance_(1931_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Saddle_Legion?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Saddle_Legion?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Saddle_Legion?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Saddle_Legion?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Saddle_Legion> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Double_Deal_(1950_film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Double_Deal_(1950_film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Double_Deal_(1950_film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Double_Deal_(1950_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Double_Deal_(1950_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Footlight_Varieties?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Footlight_Varieties?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Footlight_Varieties?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Footlight_Varieties?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Footlight_Varieties> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Around_the_World_(1943_film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Around_the_World_(1943_film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Around_the_World_(1943_film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Around_the_World_(1943_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Around_the_World_(1943_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Outrage_(1950_film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Outrage_(1950_film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Outrage_(1950_film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Outrage_(1950_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Outrage_(1950_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Overland_Telegraph_(film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Overland_Telegraph_(film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Overland_Telegraph_(film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Overland_Telegraph_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Overland_Telegraph_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Pan-Americana?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Pan-Americana?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Pan-Americana?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Pan-Americana?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Pan-Americana> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/The_Boy_with_Green_Hair?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/The_Boy_with_Green_Hair?", "Wer heiratete der Komponist für http://dbpedia.org/resource/The_Boy_with_Green_Hair?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/The_Boy_with_Green_Hair?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Boy_with_Green_Hair> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/The_Falcon_Takes_Over?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/The_Falcon_Takes_Over?", "Wer heiratete der Komponist für http://dbpedia.org/resource/The_Falcon_Takes_Over?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/The_Falcon_Takes_Over?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Falcon_Takes_Over> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/The_Falcon_and_the_Co-eds?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/The_Falcon_and_the_Co-eds?", "Wer heiratete der Komponist für http://dbpedia.org/resource/The_Falcon_and_the_Co-eds?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/The_Falcon_and_the_Co-eds?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Falcon_and_the_Co-eds> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/The_Falcon_in_Hollywood?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/The_Falcon_in_Hollywood?", "Wer heiratete der Komponist für http://dbpedia.org/resource/The_Falcon_in_Hollywood?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/The_Falcon_in_Hollywood?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Falcon_in_Hollywood> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/The_Falcon_in_Mexico?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/The_Falcon_in_Mexico?", "Wer heiratete der Komponist für http://dbpedia.org/resource/The_Falcon_in_Mexico?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/The_Falcon_in_Mexico?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Falcon_in_Mexico> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/The_Great_Gildersleeve_(film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/The_Great_Gildersleeve_(film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/The_Great_Gildersleeve_(film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/The_Great_Gildersleeve_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Great_Gildersleeve_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Rookies_in_Burma?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Rookies_in_Burma?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Rookies_in_Burma?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Rookies_in_Burma?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rookies_in_Burma> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Seven_Keys_to_Baldpate_(1947_film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Seven_Keys_to_Baldpate_(1947_film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Seven_Keys_to_Baldpate_(1947_film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Seven_Keys_to_Baldpate_(1947_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Seven_Keys_to_Baldpate_(1947_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Every_Girl_Should_Be_Married?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Every_Girl_Should_Be_Married?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Every_Girl_Should_Be_Married?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Every_Girl_Should_Be_Married?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Every_Girl_Should_Be_Married> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Fighting_Father_Dunne?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Fighting_Father_Dunne?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Fighting_Father_Dunne?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Fighting_Father_Dunne?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Fighting_Father_Dunne> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Petticoat_Larceny?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Petticoat_Larceny?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Petticoat_Larceny?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Petticoat_Larceny?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Petticoat_Larceny> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Sunset_Pass_(1946_film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Sunset_Pass_(1946_film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Sunset_Pass_(1946_film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Sunset_Pass_(1946_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sunset_Pass_(1946_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Here_We_Go_Again_(film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Here_We_Go_Again_(film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Here_We_Go_Again_(film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Here_We_Go_Again_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Here_We_Go_Again_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Higher_and_Higher_(film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Higher_and_Higher_(film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Higher_and_Higher_(film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Higher_and_Higher_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Higher_and_Higher_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Highways_by_Night?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Highways_by_Night?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Highways_by_Night?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Highways_by_Night?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Highways_by_Night> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/My_Pal_Wolf?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/My_Pal_Wolf?", "Wer heiratete der Komponist für http://dbpedia.org/resource/My_Pal_Wolf?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/My_Pal_Wolf?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/My_Pal_Wolf> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Mexican_Spitfire's_Blessed_Event?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Mexican_Spitfire's_Blessed_Event?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Mexican_Spitfire's_Blessed_Event?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Mexican_Spitfire's_Blessed_Event?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mexican_Spitfire's_Blessed_Event> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Mexican_Spitfire's_Elephant?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Mexican_Spitfire's_Elephant?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Mexican_Spitfire's_Elephant?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Mexican_Spitfire's_Elephant?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mexican_Spitfire's_Elephant> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Saat_Hindustani?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Saat_Hindustani?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Saat_Hindustani?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Saat_Hindustani?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Saat_Hindustani> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/On_Board_(film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/On_Board_(film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/On_Board_(film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/On_Board_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/On_Board_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/A_Madonna_in_Laleli?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/A_Madonna_in_Laleli?", "Wer heiratete der Komponist für http://dbpedia.org/resource/A_Madonna_in_Laleli?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/A_Madonna_in_Laleli?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A_Madonna_in_Laleli> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Maduveya_Mamatheya_Kareyole?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Maduveya_Mamatheya_Kareyole?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Maduveya_Mamatheya_Kareyole?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Maduveya_Mamatheya_Kareyole?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maduveya_Mamatheya_Kareyole> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Maleyali_Jotheyali?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Maleyali_Jotheyali?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Maleyali_Jotheyali?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Maleyali_Jotheyali?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maleyali_Jotheyali> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Uppina_Kagada?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Uppina_Kagada?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Uppina_Kagada?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Uppina_Kagada?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Uppina_Kagada> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Vaastu_Prakaara?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Vaastu_Prakaara?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Vaastu_Prakaara?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Vaastu_Prakaara?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Vaastu_Prakaara> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Vayuputra?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Vayuputra?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Vayuputra?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Vayuputra?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Vayuputra> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Veera_Bahu_(film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Veera_Bahu_(film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Veera_Bahu_(film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Veera_Bahu_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Veera_Bahu_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Boss_(2011_film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Boss_(2011_film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Boss_(2011_film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Boss_(2011_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Boss_(2011_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Boxer_(2015_film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Boxer_(2015_film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Boxer_(2015_film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Boxer_(2015_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Boxer_(2015_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Dhool_(2011_film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Dhool_(2011_film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Dhool_(2011_film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Dhool_(2011_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dhool_(2011_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Doddmane_Hudga?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Doddmane_Hudga?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Doddmane_Hudga?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Doddmane_Hudga?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Doddmane_Hudga> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Kiccha_Huccha?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Kiccha_Huccha?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Kiccha_Huccha?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Kiccha_Huccha?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kiccha_Huccha> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Kiss_(2019_film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Kiss_(2019_film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Kiss_(2019_film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Kiss_(2019_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kiss_(2019_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Kool...Sakkath_Hot_Maga?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Kool...Sakkath_Hot_Maga?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Kool...Sakkath_Hot_Maga?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Kool...Sakkath_Hot_Maga?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kool...Sakkath_Hot_Maga> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Prince_(2011_film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Prince_(2011_film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Prince_(2011_film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Prince_(2011_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Prince_(2011_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Raaj_the_Showman?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Raaj_the_Showman?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Raaj_the_Showman?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Raaj_the_Showman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Raaj_the_Showman> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Raam_(2009_film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Raam_(2009_film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Raam_(2009_film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Raam_(2009_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Raam_(2009_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Rajakumari_(2009_film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Rajakumari_(2009_film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Rajakumari_(2009_film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Rajakumari_(2009_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rajakumari_(2009_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Ajith_(film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Ajith_(film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Ajith_(film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Ajith_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ajith_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Cheluveye_Ninne_Nodalu?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Cheluveye_Ninne_Nodalu?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Cheluveye_Ninne_Nodalu?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Cheluveye_Ninne_Nodalu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cheluveye_Ninne_Nodalu> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Odeya_(film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Odeya_(film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Odeya_(film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Odeya_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Odeya_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Bachchan_(2013_film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Bachchan_(2013_film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Bachchan_(2013_film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Bachchan_(2013_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bachchan_(2013_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Bahaddur?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Bahaddur?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Bahaddur?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Bahaddur?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bahaddur> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Bangara_s/o_Bangarada_Manushya?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Bangara_s/o_Bangarada_Manushya?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Bangara_s/o_Bangarada_Manushya?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Bangara_s/o_Bangarada_Manushya?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bangara_s/o_Bangarada_Manushya> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Chingari_(2012_film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Chingari_(2012_film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Chingari_(2012_film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Chingari_(2012_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chingari_(2012_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Chowka?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Chowka?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Chowka?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Chowka?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chowka> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Jogayya?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Jogayya?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Jogayya?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Jogayya?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jogayya> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Bharjari?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Bharjari?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Bharjari?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Bharjari?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bharjari> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Bhoopathi_(2007_film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Bhoopathi_(2007_film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Bhoopathi_(2007_film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Bhoopathi_(2007_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bhoopathi_(2007_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Kaddipudi?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Kaddipudi?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Kaddipudi?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Kaddipudi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kaddipudi> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Kalpana_(2012_film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Kalpana_(2012_film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Kalpana_(2012_film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Kalpana_(2012_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kalpana_(2012_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Katari_Veera_Surasundarangi?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Katari_Veera_Surasundarangi?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Katari_Veera_Surasundarangi?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Katari_Veera_Surasundarangi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Katari_Veera_Surasundarangi> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Kendasampige?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Kendasampige?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Kendasampige?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Kendasampige?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kendasampige> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Life_Jothe_Ondh_Selfie?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Life_Jothe_Ondh_Selfie?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Life_Jothe_Ondh_Selfie?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Life_Jothe_Ondh_Selfie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Life_Jothe_Ondh_Selfie> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Minchagi_Nee_Baralu?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Minchagi_Nee_Baralu?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Minchagi_Nee_Baralu?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Minchagi_Nee_Baralu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Minchagi_Nee_Baralu> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Modalasala?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Modalasala?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Modalasala?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Modalasala?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Modalasala> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Rudra_Tandava?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Rudra_Tandava?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Rudra_Tandava?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Rudra_Tandava?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rudra_Tandava> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Saarathi?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Saarathi?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Saarathi?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Saarathi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Saarathi> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Saheba_(film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Saheba_(film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Saheba_(film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Saheba_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Saheba_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Sakkare?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Sakkare?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Sakkare?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Sakkare?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sakkare> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Krishna_(2007_film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Krishna_(2007_film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Krishna_(2007_film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Krishna_(2007_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Krishna_(2007_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Snehana_Preethina?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Snehana_Preethina?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Snehana_Preethina?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Snehana_Preethina?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Snehana_Preethina> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Snehitaru?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Snehitaru?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Snehitaru?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Snehitaru?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Snehitaru> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Drama_(2012_film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Drama_(2012_film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Drama_(2012_film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Drama_(2012_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Drama_(2012_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Gaalipata?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Gaalipata?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Gaalipata?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Gaalipata?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gaalipata> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Gaja_(film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Gaja_(film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Gaja_(film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Gaja_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gaja_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Gajakesari?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Gajakesari?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Gajakesari?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Gajakesari?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gajakesari> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Happy_Birthday_(2016_Indian_film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Happy_Birthday_(2016_Indian_film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Happy_Birthday_(2016_Indian_film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Happy_Birthday_(2016_Indian_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Happy_Birthday_(2016_Indian_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Hoo_(film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Hoo_(film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Hoo_(film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Hoo_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hoo_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Hudugaru?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Hudugaru?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Hudugaru?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Hudugaru?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hudugaru> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Indra_(2008_film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Indra_(2008_film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Indra_(2008_film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Indra_(2008_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Indra_(2008_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Jaanu?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Jaanu?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Jaanu?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Jaanu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jaanu> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "33",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete der Komponist für http://dbpedia.org/resource/Jackie_(2010_film)?", "Welche Person heiratete die Komponisten für http://dbpedia.org/resource/Jackie_(2010_film)?", "Wer heiratete der Komponist für http://dbpedia.org/resource/Jackie_(2010_film)?", "Wer heiratete die Komponisten für http://dbpedia.org/resource/Jackie_(2010_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jackie_(2010_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von The Boomtown Rats?", "Welche Person heiratete die Mitglieder von The Boomtown Rats?", "Wer heiratete das Mitglied von The Boomtown Rats?", "Wer heiratete die Mitglieder von The Boomtown Rats?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Boomtown_Rats> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von New Edition?", "Welche Person heiratete die Mitglieder von New Edition?", "Wer heiratete das Mitglied von New Edition?", "Wer heiratete die Mitglieder von New Edition?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/New_Edition> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Band From TV?", "Welche Person heiratete die Mitglieder von Band From TV?", "Wer heiratete das Mitglied von Band From TV?", "Wer heiratete die Mitglieder von Band From TV?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Band_from_TV> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von The Saturdays?", "Welche Person heiratete die Mitglieder von The Saturdays?", "Wer heiratete das Mitglied von The Saturdays?", "Wer heiratete die Mitglieder von The Saturdays?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Saturdays> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von ABBA?", "Welche Person heiratete die Mitglieder von ABBA?", "Wer heiratete das Mitglied von ABBA?", "Wer heiratete die Mitglieder von ABBA?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/ABBA> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von U2 (Band)?", "Welche Person heiratete die Mitglieder von U2 (Band)?", "Wer heiratete das Mitglied von U2 (Band)?", "Wer heiratete die Mitglieder von U2 (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/U2> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Tight Fit?", "Welche Person heiratete die Mitglieder von Tight Fit?", "Wer heiratete das Mitglied von Tight Fit?", "Wer heiratete die Mitglieder von Tight Fit?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tight_Fit> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/The_Halo_Method?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/The_Halo_Method?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/The_Halo_Method?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/The_Halo_Method?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Halo_Method> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Portastatic?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Portastatic?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Portastatic?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Portastatic?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Portastatic> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Superchunk?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Superchunk?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Superchunk?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Superchunk?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Superchunk> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/T_with_the_Maggies?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/T_with_the_Maggies?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/T_with_the_Maggies?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/T_with_the_Maggies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/T_with_the_Maggies> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Skara_Brae_(band)?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Skara_Brae_(band)?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Skara_Brae_(band)?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Skara_Brae_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Skara_Brae_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/The_Boxmasters?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/The_Boxmasters?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/The_Boxmasters?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/The_Boxmasters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Boxmasters> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Billy_Joel_Band?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Billy_Joel_Band?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Billy_Joel_Band?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Billy_Joel_Band?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Billy_Joel_Band> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Brother_Clyde?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Brother_Clyde?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Brother_Clyde?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Brother_Clyde?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Brother_Clyde> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/The_Rhythm_Boys?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/The_Rhythm_Boys?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/The_Rhythm_Boys?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/The_Rhythm_Boys?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Rhythm_Boys> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Bombaj_Štampa?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Bombaj_Štampa?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Bombaj_Štampa?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Bombaj_Štampa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bombaj_Štampa> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Crystal_Skulls?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Crystal_Skulls?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Crystal_Skulls?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Crystal_Skulls?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Crystal_Skulls> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Beachwood_Sparks?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Beachwood_Sparks?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Beachwood_Sparks?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Beachwood_Sparks?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Beachwood_Sparks> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Army of Lovers?", "Welche Person heiratete die Mitglieder von Army of Lovers?", "Wer heiratete das Mitglied von Army of Lovers?", "Wer heiratete die Mitglieder von Army of Lovers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Army_of_Lovers> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von The Ordinary Boys?", "Welche Person heiratete die Mitglieder von The Ordinary Boys?", "Wer heiratete das Mitglied von The Ordinary Boys?", "Wer heiratete die Mitglieder von The Ordinary Boys?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Ordinary_Boys> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Alcatrazz?", "Welche Person heiratete die Mitglieder von Alcatrazz?", "Wer heiratete das Mitglied von Alcatrazz?", "Wer heiratete die Mitglieder von Alcatrazz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alcatrazz> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von The Marbles?", "Welche Person heiratete die Mitglieder von The Marbles?", "Wer heiratete das Mitglied von The Marbles?", "Wer heiratete die Mitglieder von The Marbles?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Marbles_(duo)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Sum 41?", "Welche Person heiratete die Mitglieder von Sum 41?", "Wer heiratete das Mitglied von Sum 41?", "Wer heiratete die Mitglieder von Sum 41?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sum_41> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Jonas Brothers?", "Welche Person heiratete die Mitglieder von Jonas Brothers?", "Wer heiratete das Mitglied von Jonas Brothers?", "Wer heiratete die Mitglieder von Jonas Brothers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jonas_Brothers> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Prayers?", "Welche Person heiratete die Mitglieder von Prayers?", "Wer heiratete das Mitglied von Prayers?", "Wer heiratete die Mitglieder von Prayers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Prayers_(duo)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Foreign_Objects_(band)?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Foreign_Objects_(band)?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Foreign_Objects_(band)?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Foreign_Objects_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Foreign_Objects_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/World_Under_Blood?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/World_Under_Blood?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/World_Under_Blood?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/World_Under_Blood?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/World_Under_Blood> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Weep_(band)?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Weep_(band)?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Weep_(band)?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Weep_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Weep_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Jal_(band)?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Jal_(band)?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Jal_(band)?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Jal_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jal_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/A-Studio?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/A-Studio?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/A-Studio?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/A-Studio?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A-Studio> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/The_Bacon_Brothers?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/The_Bacon_Brothers?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/The_Bacon_Brothers?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/The_Bacon_Brothers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Bacon_Brothers> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Hiroshi_Uchiyamada_and_Cool_Five?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Hiroshi_Uchiyamada_and_Cool_Five?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Hiroshi_Uchiyamada_and_Cool_Five?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Hiroshi_Uchiyamada_and_Cool_Five?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hiroshi_Uchiyamada_and_Cool_Five> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/London_Philharmonic_Choir?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/London_Philharmonic_Choir?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/London_Philharmonic_Choir?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/London_Philharmonic_Choir?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/London_Philharmonic_Choir> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Push_Push_(band)?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Push_Push_(band)?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Push_Push_(band)?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Push_Push_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Push_Push_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Teriyaki Boyz?", "Welche Person heiratete die Mitglieder von Teriyaki Boyz?", "Wer heiratete das Mitglied von Teriyaki Boyz?", "Wer heiratete die Mitglieder von Teriyaki Boyz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Teriyaki_Boyz> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Migos?", "Welche Person heiratete die Mitglieder von Migos?", "Wer heiratete das Mitglied von Migos?", "Wer heiratete die Mitglieder von Migos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Migos> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Sixx:A.M.?", "Welche Person heiratete die Mitglieder von Sixx:A.M.?", "Wer heiratete das Mitglied von Sixx:A.M.?", "Wer heiratete die Mitglieder von Sixx:A.M.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sixx:A.M.> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von The Lonely Island?", "Welche Person heiratete die Mitglieder von The Lonely Island?", "Wer heiratete das Mitglied von The Lonely Island?", "Wer heiratete die Mitglieder von The Lonely Island?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Lonely_Island> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Al Bano & Romina Power?", "Welche Person heiratete die Mitglieder von Al Bano & Romina Power?", "Wer heiratete das Mitglied von Al Bano & Romina Power?", "Wer heiratete die Mitglieder von Al Bano & Romina Power?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Al_Bano_and_Romina_Power> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Twins (Band)?", "Welche Person heiratete die Mitglieder von Twins (Band)?", "Wer heiratete das Mitglied von Twins (Band)?", "Wer heiratete die Mitglieder von Twins (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Twins_(group)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Crime & the City Solution?", "Welche Person heiratete die Mitglieder von Crime & the City Solution?", "Wer heiratete das Mitglied von Crime & the City Solution?", "Wer heiratete die Mitglieder von Crime & the City Solution?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Crime_&_the_City_Solution> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Deadsy?", "Welche Person heiratete die Mitglieder von Deadsy?", "Wer heiratete das Mitglied von Deadsy?", "Wer heiratete die Mitglieder von Deadsy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Deadsy> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Rouge (brasilianische Band)?", "Welche Person heiratete die Mitglieder von Rouge (brasilianische Band)?", "Wer heiratete das Mitglied von Rouge (brasilianische Band)?", "Wer heiratete die Mitglieder von Rouge (brasilianische Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rouge_(group)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Exile (japanische Band)?", "Welche Person heiratete die Mitglieder von Exile (japanische Band)?", "Wer heiratete das Mitglied von Exile (japanische Band)?", "Wer heiratete die Mitglieder von Exile (japanische Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Exile_(Japanese_band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Exile (US-amerikanische Band)?", "Welche Person heiratete die Mitglieder von Exile (US-amerikanische Band)?", "Wer heiratete das Mitglied von Exile (US-amerikanische Band)?", "Wer heiratete die Mitglieder von Exile (US-amerikanische Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Exile_(Japanese_band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Exposé (Band)?", "Welche Person heiratete die Mitglieder von Exposé (Band)?", "Wer heiratete das Mitglied von Exposé (Band)?", "Wer heiratete die Mitglieder von Exposé (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Exposé_(group)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von New Found Glory?", "Welche Person heiratete die Mitglieder von New Found Glory?", "Wer heiratete das Mitglied von New Found Glory?", "Wer heiratete die Mitglieder von New Found Glory?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/New_Found_Glory> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Nickelback?", "Welche Person heiratete die Mitglieder von Nickelback?", "Wer heiratete das Mitglied von Nickelback?", "Wer heiratete die Mitglieder von Nickelback?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nickelback> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Nico Vega?", "Welche Person heiratete die Mitglieder von Nico Vega?", "Wer heiratete das Mitglied von Nico Vega?", "Wer heiratete die Mitglieder von Nico Vega?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nico_Vega> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Einstürzende Neubauten?", "Welche Person heiratete die Mitglieder von Einstürzende Neubauten?", "Wer heiratete das Mitglied von Einstürzende Neubauten?", "Wer heiratete die Mitglieder von Einstürzende Neubauten?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Einstürzende_Neubauten> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Mötley Crüe?", "Welche Person heiratete die Mitglieder von Mötley Crüe?", "Wer heiratete das Mitglied von Mötley Crüe?", "Wer heiratete die Mitglieder von Mötley Crüe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mötley_Crüe> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/The_White_Mandingos?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/The_White_Mandingos?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/The_White_Mandingos?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/The_White_Mandingos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_White_Mandingos> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Egyptian_(band)?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Egyptian_(band)?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Egyptian_(band)?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Egyptian_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Egyptian_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Exile_The_Second?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Exile_The_Second?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Exile_The_Second?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Exile_The_Second?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Exile_The_Second> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Vodka_Collins?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Vodka_Collins?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Vodka_Collins?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Vodka_Collins?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Vodka_Collins> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Sentidos_Opuestos?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Sentidos_Opuestos?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Sentidos_Opuestos?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Sentidos_Opuestos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sentidos_Opuestos> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Leyla_The_Band?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Leyla_The_Band?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Leyla_The_Band?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Leyla_The_Band?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Leyla_The_Band> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/CRX_(band)?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/CRX_(band)?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/CRX_(band)?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/CRX_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/CRX_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Honest_Boyz?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Honest_Boyz?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Honest_Boyz?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Honest_Boyz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Honest_Boyz> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Triad_(band)?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Triad_(band)?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Triad_(band)?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Triad_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Triad_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/GES_(band)?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/GES_(band)?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/GES_(band)?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/GES_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/GES_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Hujan?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Hujan?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Hujan?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Hujan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hujan> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Shonentai?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Shonentai?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Shonentai?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Shonentai?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Shonentai> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Cabin_(band)?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Cabin_(band)?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Cabin_(band)?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Cabin_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cabin_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Alexander_Jean?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Alexander_Jean?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Alexander_Jean?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Alexander_Jean?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alexander_Jean> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Gnarkill?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Gnarkill?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Gnarkill?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Gnarkill?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gnarkill> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Dalchhut?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Dalchhut?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Dalchhut?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Dalchhut?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dalchhut> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Kiss (Band)?", "Welche Person heiratete die Mitglieder von Kiss (Band)?", "Wer heiratete das Mitglied von Kiss (Band)?", "Wer heiratete die Mitglieder von Kiss (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kiss_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Coldplay?", "Welche Person heiratete die Mitglieder von Coldplay?", "Wer heiratete das Mitglied von Coldplay?", "Wer heiratete die Mitglieder von Coldplay?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Coldplay> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Bluesbreakers?", "Welche Person heiratete die Mitglieder von Bluesbreakers?", "Wer heiratete das Mitglied von Bluesbreakers?", "Wer heiratete die Mitglieder von Bluesbreakers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_Mayall_&_the_Bluesbreakers> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von The Prize Fighter Inferno?", "Welche Person heiratete die Mitglieder von The Prize Fighter Inferno?", "Wer heiratete das Mitglied von The Prize Fighter Inferno?", "Wer heiratete die Mitglieder von The Prize Fighter Inferno?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Prize_Fighter_Inferno> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Spice Girls?", "Welche Person heiratete die Mitglieder von Spice Girls?", "Wer heiratete das Mitglied von Spice Girls?", "Wer heiratete die Mitglieder von Spice Girls?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Spice_Girls> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Spin Doctors?", "Welche Person heiratete die Mitglieder von Spin Doctors?", "Wer heiratete das Mitglied von Spin Doctors?", "Wer heiratete die Mitglieder von Spin Doctors?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Spin_Doctors> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Jane’s Addiction?", "Welche Person heiratete die Mitglieder von Jane’s Addiction?", "Wer heiratete das Mitglied von Jane’s Addiction?", "Wer heiratete die Mitglieder von Jane’s Addiction?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jane's_Addiction> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von The Black Crowes?", "Welche Person heiratete die Mitglieder von The Black Crowes?", "Wer heiratete das Mitglied von The Black Crowes?", "Wer heiratete die Mitglieder von The Black Crowes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Black_Crowes> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Coheed and Cambria?", "Welche Person heiratete die Mitglieder von Coheed and Cambria?", "Wer heiratete das Mitglied von Coheed and Cambria?", "Wer heiratete die Mitglieder von Coheed and Cambria?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Coheed_and_Cambria> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Bush (Band)?", "Welche Person heiratete die Mitglieder von Bush (Band)?", "Wer heiratete das Mitglied von Bush (Band)?", "Wer heiratete die Mitglieder von Bush (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bush_(British_band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Nickel Creek?", "Welche Person heiratete die Mitglieder von Nickel Creek?", "Wer heiratete das Mitglied von Nickel Creek?", "Wer heiratete die Mitglieder von Nickel Creek?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nickel_Creek> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Rogue Traders?", "Welche Person heiratete die Mitglieder von Rogue Traders?", "Wer heiratete das Mitglied von Rogue Traders?", "Wer heiratete die Mitglieder von Rogue Traders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rogue_Traders> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Wilson Phillips?", "Welche Person heiratete die Mitglieder von Wilson Phillips?", "Wer heiratete das Mitglied von Wilson Phillips?", "Wer heiratete die Mitglieder von Wilson Phillips?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Wilson_Phillips> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Punch Brothers?", "Welche Person heiratete die Mitglieder von Punch Brothers?", "Wer heiratete das Mitglied von Punch Brothers?", "Wer heiratete die Mitglieder von Punch Brothers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Punch_Brothers> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von These New Puritans?", "Welche Person heiratete die Mitglieder von These New Puritans?", "Wer heiratete das Mitglied von These New Puritans?", "Wer heiratete die Mitglieder von These New Puritans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/These_New_Puritans> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Spartan_Fidelity?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Spartan_Fidelity?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Spartan_Fidelity?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Spartan_Fidelity?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Spartan_Fidelity> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/The_Growl?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/The_Growl?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/The_Growl?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/The_Growl?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Growl> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/The_Simon_Sisters?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/The_Simon_Sisters?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/The_Simon_Sisters?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/The_Simon_Sisters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Simon_Sisters> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Parokya_ni_Edgar?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Parokya_ni_Edgar?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Parokya_ni_Edgar?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Parokya_ni_Edgar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Parokya_ni_Edgar> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/The_Panic_Channel?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/The_Panic_Channel?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/The_Panic_Channel?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/The_Panic_Channel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Panic_Channel> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Camp_Freddy?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Camp_Freddy?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Camp_Freddy?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Camp_Freddy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Camp_Freddy> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Taylor_Hawkins_and_the_Coattail_Riders?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Taylor_Hawkins_and_the_Coattail_Riders?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Taylor_Hawkins_and_the_Coattail_Riders?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Taylor_Hawkins_and_the_Coattail_Riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Taylor_Hawkins_and_the_Coattail_Riders> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Mutual_Admiration_Society_(collaboration)?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Mutual_Admiration_Society_(collaboration)?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Mutual_Admiration_Society_(collaboration)?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Mutual_Admiration_Society_(collaboration)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mutual_Admiration_Society_(collaboration)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/The_Beyman_Bros?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/The_Beyman_Bros?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/The_Beyman_Bros?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/The_Beyman_Bros?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Beyman_Bros> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Team_Unicorn?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Team_Unicorn?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Team_Unicorn?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Team_Unicorn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Team_Unicorn> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/The_Nolans?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/The_Nolans?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/The_Nolans?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/The_Nolans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Nolans> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/The_Decemberists?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/The_Decemberists?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/The_Decemberists?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/The_Decemberists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Decemberists> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/Lt._Dan_Band?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/Lt._Dan_Band?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/Lt._Dan_Band?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/Lt._Dan_Band?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lt._Dan_Band> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von http://dbpedia.org/resource/The_Southland_(band)?", "Welche Person heiratete die Mitglieder von http://dbpedia.org/resource/The_Southland_(band)?", "Wer heiratete das Mitglied von http://dbpedia.org/resource/The_Southland_(band)?", "Wer heiratete die Mitglieder von http://dbpedia.org/resource/The_Southland_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Southland_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Good Charlotte?", "Welche Person heiratete die Mitglieder von Good Charlotte?", "Wer heiratete das Mitglied von Good Charlotte?", "Wer heiratete die Mitglieder von Good Charlotte?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Good_Charlotte> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von The Blues Brothers?", "Welche Person heiratete die Mitglieder von The Blues Brothers?", "Wer heiratete das Mitglied von The Blues Brothers?", "Wer heiratete die Mitglieder von The Blues Brothers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Blues_Brothers> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "34",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete das Mitglied von Fleetwood Mac?", "Welche Person heiratete die Mitglieder von Fleetwood Mac?", "Wer heiratete das Mitglied von Fleetwood Mac?", "Wer heiratete die Mitglieder von Fleetwood Mac?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Fleetwood_Mac> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Luana Patten?", "Wer heiratete Persons verheiratet mit Luana Patten?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luana_Patten> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Lucia Bosè?", "Wer heiratete Persons verheiratet mit Lucia Bosè?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucia_Bosè> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Lucia Moholy?", "Wer heiratete Persons verheiratet mit Lucia Moholy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucia_Moholy> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Lucilla?", "Wer heiratete Persons verheiratet mit Lucilla?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucilla> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Lucius Verus?", "Wer heiratete Persons verheiratet mit Lucius Verus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucius_Verus> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Ludovico III. Gonzaga?", "Wer heiratete Persons verheiratet mit Ludovico III. Gonzaga?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ludovico_III_Gonzaga,_Marquis_of_Mantua> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Luis Fortuño?", "Wer heiratete Persons verheiratet mit Luis Fortuño?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luis_Fortuño> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Lysette Anthony?", "Wer heiratete Persons verheiratet mit Lysette Anthony?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lysette_Anthony> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit László Moholy-Nagy?", "Wer heiratete Persons verheiratet mit László Moholy-Nagy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/László_Moholy-Nagy> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Mae West?", "Wer heiratete Persons verheiratet mit Mae West?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mae_West> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Malcolm Turnbull?", "Wer heiratete Persons verheiratet mit Malcolm Turnbull?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Malcolm_Turnbull> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Walerij Borsow?", "Wer heiratete Persons verheiratet mit Walerij Borsow?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Valeriy_Borzov> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Suriyothai?", "Wer heiratete Persons verheiratet mit Suriyothai?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Suriyothai> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Manuel Sadosky?", "Wer heiratete Persons verheiratet mit Manuel Sadosky?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Manuel_Sadosky> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Blanche von Namur?", "Wer heiratete Persons verheiratet mit Blanche von Namur?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Blanche_of_Namur> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Bořivoj I.?", "Wer heiratete Persons verheiratet mit Bořivoj I.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bořivoj_I,_Duke_of_Bohemia> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Desmond FitzGerald?", "Wer heiratete Persons verheiratet mit Desmond FitzGerald?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Diahann Carroll?", "Wer heiratete Persons verheiratet mit Diahann Carroll?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Diahann_Carroll> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Dick Cheney?", "Wer heiratete Persons verheiratet mit Dick Cheney?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dick_Cheney> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Gladys Moore Vanderbilt?", "Wer heiratete Persons verheiratet mit Gladys Moore Vanderbilt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gladys_Vanderbilt_Széchenyi> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Grigori Wassiljewitsch Alexandrow?", "Wer heiratete Persons verheiratet mit Grigori Wassiljewitsch Alexandrow?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Grigori_Aleksandrov> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Kim Hunter?", "Wer heiratete Persons verheiratet mit Kim Hunter?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kim_Hunter> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Kishore Kumar?", "Wer heiratete Persons verheiratet mit Kishore Kumar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kishore_Kumar> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Franz Xaver von Bourbon-Parma?", "Wer heiratete Persons verheiratet mit Franz Xaver von Bourbon-Parma?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Prince_Xavier_of_Bourbon-Parma> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Ratna von Nepal?", "Wer heiratete Persons verheiratet mit Ratna von Nepal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Queen_Ratna_of_Nepal> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Quinn Martin?", "Wer heiratete Persons verheiratet mit Quinn Martin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Quinn_Martin> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Rachel Miner?", "Wer heiratete Persons verheiratet mit Rachel Miner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rachel_Miner> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Rachel Portman?", "Wer heiratete Persons verheiratet mit Rachel Portman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rachel_Portman> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Iulia (Tochter Agrippas)?", "Wer heiratete Persons verheiratet mit Iulia (Tochter Agrippas)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Julia_the_Younger> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Richard Lane (Schriftsteller)?", "Wer heiratete Persons verheiratet mit Richard Lane (Schriftsteller)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Richard_Lane_(writer)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Jakob II. (Zypern)?", "Wer heiratete Persons verheiratet mit Jakob II. (Zypern)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/James_II_of_Cyprus> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Alan Halsall?", "Wer heiratete Persons verheiratet mit Alan Halsall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alan_Halsall> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Albert S. Ruddy?", "Wer heiratete Persons verheiratet mit Albert S. Ruddy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Albert_S._Ruddy> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Alex O’Loughlin?", "Wer heiratete Persons verheiratet mit Alex O’Loughlin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alex_O'Loughlin> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Alexander Borissowitsch Godunow?", "Wer heiratete Persons verheiratet mit Alexander Borissowitsch Godunow?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alexander_Godunov> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Alfonso I. d’Este?", "Wer heiratete Persons verheiratet mit Alfonso I. d’Este?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alfonso_I_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Alfred Lunt?", "Wer heiratete Persons verheiratet mit Alfred Lunt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alfred_Lunt> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Alistair Petrie?", "Wer heiratete Persons verheiratet mit Alistair Petrie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alistair_Petrie> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Allan Edwall?", "Wer heiratete Persons verheiratet mit Allan Edwall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Allan_Edwall> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Allen Tate?", "Wer heiratete Persons verheiratet mit Allen Tate?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Allen_Tate> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Chamlong Srimuang?", "Wer heiratete Persons verheiratet mit Chamlong Srimuang?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chamlong_Srimuang> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Karl I. (Valois)?", "Wer heiratete Persons verheiratet mit Karl I. (Valois)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charles,_Count_of_Valois> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Charles Howard, 1. Earl of Nottingham?", "Wer heiratete Persons verheiratet mit Charles Howard, 1. Earl of Nottingham?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charles_Howard,_1st_Earl_of_Nottingham> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Karl III. Philipp (Pfalz)?", "Wer heiratete Persons verheiratet mit Karl III. Philipp (Pfalz)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charles_III_Philip,_Elector_Palatine> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Karl III. Wilhelm (Baden-Durlach)?", "Wer heiratete Persons verheiratet mit Karl III. Wilhelm (Baden-Durlach)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charles_III_William,_Margrave_of_Baden-Durlach> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Charles Townshend (Politiker)?", "Wer heiratete Persons verheiratet mit Charles Townshend (Politiker)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charles_Townshend> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Charlton Heston?", "Wer heiratete Persons verheiratet mit Charlton Heston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charlton_Heston> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Nieves Navarro?", "Wer heiratete Persons verheiratet mit Nieves Navarro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nieves_Navarro> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Nnamdi Azikiwe?", "Wer heiratete Persons verheiratet mit Nnamdi Azikiwe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nnamdi_Azikiwe> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Noah Baumbach?", "Wer heiratete Persons verheiratet mit Noah Baumbach?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Noah_Baumbach> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Noah Bean?", "Wer heiratete Persons verheiratet mit Noah Bean?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Noah_Bean> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Georg I. (Hessen-Darmstadt)?", "Wer heiratete Persons verheiratet mit Georg I. (Hessen-Darmstadt)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/George_I,_Landgrave_of_Hesse-Darmstadt> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Sulochana Gadgil?", "Wer heiratete Persons verheiratet mit Sulochana Gadgil?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sulochana_Gadgil> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Sulinyavongsa?", "Wer heiratete Persons verheiratet mit Sulinyavongsa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sourigna_Vongsa> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Barbara Stühlmeyer?", "Wer heiratete Persons verheiratet mit Barbara Stühlmeyer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Barbara_Stühlmeyer> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Barbara von Brandenburg (1422–1481)?", "Wer heiratete Persons verheiratet mit Barbara von Brandenburg (1422–1481)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Barbara_of_Brandenburg,_Marquise_of_Mantua> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Frederick Cavendish?", "Wer heiratete Persons verheiratet mit Frederick Cavendish?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lord_Frederick_Cavendish> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Lorenzo di Piero de’ Medici?", "Wer heiratete Persons verheiratet mit Lorenzo di Piero de’ Medici?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lorenzo_de'_Medici,_Duke_of_Urbino> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Louis-Ferdinand Céline?", "Wer heiratete Persons verheiratet mit Louis-Ferdinand Céline?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Louis-Ferdinand_Céline> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Ludwig Friedrich II. (Schwarzburg-Rudolstadt)?", "Wer heiratete Persons verheiratet mit Ludwig Friedrich II. (Schwarzburg-Rudolstadt)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Louis_Frederick_II,_Prince_of_Schwarzburg-Rudolstadt> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Ludwig der Kelheimer?", "Wer heiratete Persons verheiratet mit Ludwig der Kelheimer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Louis_I,_Duke_of_Bavaria> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Ludwig VI. (Frankreich)?", "Wer heiratete Persons verheiratet mit Ludwig VI. (Frankreich)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Louis_VI_of_France> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Tullia die Jüngere?", "Wer heiratete Persons verheiratet mit Tullia die Jüngere?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tullia_Minor> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Sigurður Hlöðvisson?", "Wer heiratete Persons verheiratet mit Sigurður Hlöðvisson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sigurd_the_Stout> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Caitlin Stasey?", "Wer heiratete Persons verheiratet mit Caitlin Stasey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Caitlin_Stasey> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Carl Demmer (Sänger, 1766)?", "Wer heiratete Persons verheiratet mit Carl Demmer (Sänger, 1766)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carl_Demmer> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Carl Sagan?", "Wer heiratete Persons verheiratet mit Carl Sagan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carl_Sagan> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Carlos Arthur Nuzman?", "Wer heiratete Persons verheiratet mit Carlos Arthur Nuzman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carlos_Arthur_Nuzman> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Ilich Ramírez Sánchez?", "Wer heiratete Persons verheiratet mit Ilich Ramírez Sánchez?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carlos_the_Jackal> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Karl II. (Rumänien)?", "Wer heiratete Persons verheiratet mit Karl II. (Rumänien)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carol_II_of_Romania> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Chien-Shiung Wu?", "Wer heiratete Persons verheiratet mit Chien-Shiung Wu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chien-Shiung_Wu> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Chris Hardwick?", "Wer heiratete Persons verheiratet mit Chris Hardwick?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chris_Hardwick> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Chris Rock?", "Wer heiratete Persons verheiratet mit Chris Rock?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chris_Rock> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Christian von Dänemark?", "Wer heiratete Persons verheiratet mit Christian von Dänemark?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Christian,_Prince-Elect_of_Denmark> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Christine Boyer?", "Wer heiratete Persons verheiratet mit Christine Boyer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Christine_Boyer> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Christopher George?", "Wer heiratete Persons verheiratet mit Christopher George?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Christopher_George> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Chuck Robb?", "Wer heiratete Persons verheiratet mit Chuck Robb?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chuck_Robb> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Cindy Pickett?", "Wer heiratete Persons verheiratet mit Cindy Pickett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cindy_Pickett> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Clifford Odets?", "Wer heiratete Persons verheiratet mit Clifford Odets?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Clifford_Odets> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Colin Low?", "Wer heiratete Persons verheiratet mit Colin Low?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Colin_Low_(filmmaker)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Andrew J. West?", "Wer heiratete Persons verheiratet mit Andrew J. West?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Andrew_J._West> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Gaspar Noé?", "Wer heiratete Persons verheiratet mit Gaspar Noé?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gaspar_Noé> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Gaston de Foix (Viana)?", "Wer heiratete Persons verheiratet mit Gaston de Foix (Viana)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gaston,_Prince_of_Viana> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit George Montagu, 8. Duke of Manchester?", "Wer heiratete Persons verheiratet mit George Montagu, 8. Duke of Manchester?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/George_Montagu,_8th_Duke_of_Manchester> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit George Reid?", "Wer heiratete Persons verheiratet mit George Reid?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/George_Reid> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit George Sand?", "Wer heiratete Persons verheiratet mit George Sand?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/George_Sand> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit George Sanders (Schauspieler)?", "Wer heiratete Persons verheiratet mit George Sanders (Schauspieler)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/George_Sanders> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit George Wallace?", "Wer heiratete Persons verheiratet mit George Wallace?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/George_Wallace> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Georges Rivière (Schauspieler)?", "Wer heiratete Persons verheiratet mit Georges Rivière (Schauspieler)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Georges_Rivière> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Gia Long?", "Wer heiratete Persons verheiratet mit Gia Long?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gia_Long> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Giorgi Margwelaschwili?", "Wer heiratete Persons verheiratet mit Giorgi Margwelaschwili?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Giorgi_Margvelashvili> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Giovanni di Pierfrancesco de’ Medici?", "Wer heiratete Persons verheiratet mit Giovanni di Pierfrancesco de’ Medici?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Giovanni_il_Popolano> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Girolamo Riario?", "Wer heiratete Persons verheiratet mit Girolamo Riario?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Girolamo_Riario> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Jean-Louis Barrault?", "Wer heiratete Persons verheiratet mit Jean-Louis Barrault?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jean-Louis_Barrault> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Jean-Marie Roland de La Platière?", "Wer heiratete Persons verheiratet mit Jean-Marie Roland de La Platière?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jean-Marie_Roland_de_la_Platière> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Jeanne Blum?", "Wer heiratete Persons verheiratet mit Jeanne Blum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jeanne_Blum> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Jeff Bezos?", "Wer heiratete Persons verheiratet mit Jeff Bezos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jeff_Bezos> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit Joachim II. (Brandenburg)?", "Wer heiratete Persons verheiratet mit Joachim II. (Brandenburg)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joachim_II_Hector,_Elector_of_Brandenburg> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit John D. Waihee?", "Wer heiratete Persons verheiratet mit John D. Waihee?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_D._Waiheʻe_III> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "35",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete Persons verheiratet mit John Eden, Baron Eden of Winton?", "Wer heiratete Persons verheiratet mit John Eden, Baron Eden of Winton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_Eden,_Baron_Eden_of_Winton> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Luke Macfarlane?", "Wer heiratete fiktiver Charakters gespielt von Luke Macfarlane?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Macfarlane>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Lysette Anthony?", "Wer heiratete fiktiver Charakters gespielt von Lysette Anthony?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lysette_Anthony>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Maggie Smith?", "Wer heiratete fiktiver Charakters gespielt von Maggie Smith?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Maggie_Smith>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Uta Hagen?", "Wer heiratete fiktiver Charakters gespielt von Uta Hagen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Uta_Hagen>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Lana Hutton Bowen-Judd?", "Wer heiratete fiktiver Charakters gespielt von Lana Hutton Bowen-Judd?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sara_Woods>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Goran Višnjić?", "Wer heiratete fiktiver Charakters gespielt von Goran Višnjić?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Goran_Višnjić>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Krista Allen?", "Wer heiratete fiktiver Charakters gespielt von Krista Allen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Krista_Allen>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Krista Tesreau?", "Wer heiratete fiktiver Charakters gespielt von Krista Tesreau?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Krista_Tesreau>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Prunella Scales?", "Wer heiratete fiktiver Charakters gespielt von Prunella Scales?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Prunella_Scales>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Alexander Beyer?", "Wer heiratete fiktiver Charakters gespielt von Alexander Beyer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Alexander_Beyer>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Catherine O’Hara?", "Wer heiratete fiktiver Charakters gespielt von Catherine O’Hara?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Catherine_O'Hara>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Chad Michael Murray?", "Wer heiratete fiktiver Charakters gespielt von Chad Michael Murray?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Chad_Michael_Murray>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Noah Ringer?", "Wer heiratete fiktiver Charakters gespielt von Noah Ringer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Noah_Ringer>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Nathalie Kelley?", "Wer heiratete fiktiver Charakters gespielt von Nathalie Kelley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Nathalie_Kelley>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Barbara Crampton?", "Wer heiratete fiktiver Charakters gespielt von Barbara Crampton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Barbara_Crampton>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Barbara Hershey?", "Wer heiratete fiktiver Charakters gespielt von Barbara Hershey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Barbara_Hershey>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Calista Flockhart?", "Wer heiratete fiktiver Charakters gespielt von Calista Flockhart?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Calista_Flockhart>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Chris Pratt?", "Wer heiratete fiktiver Charakters gespielt von Chris Pratt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Chris_Pratt>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Christian Serratos?", "Wer heiratete fiktiver Charakters gespielt von Christian Serratos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Christian_Serratos>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Jeanine Mason?", "Wer heiratete fiktiver Charakters gespielt von Jeanine Mason?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jeanine_Mason>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Jed Allan?", "Wer heiratete fiktiver Charakters gespielt von Jed Allan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jed_Allan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Jennifer Garner?", "Wer heiratete fiktiver Charakters gespielt von Jennifer Garner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jennifer_Garner>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Joan Van Ark?", "Wer heiratete fiktiver Charakters gespielt von Joan Van Ark?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Joan_Van_Ark>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Joey Luthman?", "Wer heiratete fiktiver Charakters gespielt von Joey Luthman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Joey_Luthman>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von John Goodman?", "Wer heiratete fiktiver Charakters gespielt von John Goodman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/John_Goodman>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Bebe Neuwirth?", "Wer heiratete fiktiver Charakters gespielt von Bebe Neuwirth?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Bebe_Neuwirth>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Kareena Kapoor?", "Wer heiratete fiktiver Charakters gespielt von Kareena Kapoor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kareena_Kapoor>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Kassie DePaiva?", "Wer heiratete fiktiver Charakters gespielt von Kassie DePaiva?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kassie_DePaiva>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Kathy Bates?", "Wer heiratete fiktiver Charakters gespielt von Kathy Bates?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kathy_Bates>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Lexi Ainsworth?", "Wer heiratete fiktiver Charakters gespielt von Lexi Ainsworth?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lexi_Ainsworth>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Linda Evans?", "Wer heiratete fiktiver Charakters gespielt von Linda Evans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Linda_Evans>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Lindsay Wagner?", "Wer heiratete fiktiver Charakters gespielt von Lindsay Wagner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lindsay_Wagner>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Lindsey Morgan?", "Wer heiratete fiktiver Charakters gespielt von Lindsey Morgan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lindsey_Morgan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Lisa Rinna?", "Wer heiratete fiktiver Charakters gespielt von Lisa Rinna?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lisa_Rinna>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Teri Hatcher?", "Wer heiratete fiktiver Charakters gespielt von Teri Hatcher?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Teri_Hatcher>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Yvonne Strahovski?", "Wer heiratete fiktiver Charakters gespielt von Yvonne Strahovski?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Yvonne_Strahovski>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Kimberley Simms?", "Wer heiratete fiktiver Charakters gespielt von Kimberley Simms?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kimberley_Simms>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Michael Nader?", "Wer heiratete fiktiver Charakters gespielt von Michael Nader?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Michael_Nader>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Michaela Conlin?", "Wer heiratete fiktiver Charakters gespielt von Michaela Conlin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Michaela_Conlin>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Ryan Carnes?", "Wer heiratete fiktiver Charakters gespielt von Ryan Carnes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ryan_Carnes>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Rachel Kimsey?", "Wer heiratete fiktiver Charakters gespielt von Rachel Kimsey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Rachel_Kimsey>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Dragonball Evolution?", "Wer heiratete fiktiver Charakters gespielt von Dragonball Evolution?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Dragonball_Evolution>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Dylan Minnette?", "Wer heiratete fiktiver Charakters gespielt von Dylan Minnette?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Dylan_Minnette>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Children of Dune?", "Wer heiratete fiktiver Charakters gespielt von Children of Dune?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Frank_Herbert's_Children_of_Dune>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Ian Carmichael (Schauspieler)?", "Wer heiratete fiktiver Charakters gespielt von Ian Carmichael (Schauspieler)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ian_Carmichael>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Ian Somerhalder?", "Wer heiratete fiktiver Charakters gespielt von Ian Somerhalder?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ian_Somerhalder>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von James Patrick Stuart?", "Wer heiratete fiktiver Charakters gespielt von James Patrick Stuart?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/James_Patrick_Stuart>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Jason Behr?", "Wer heiratete fiktiver Charakters gespielt von Jason Behr?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jason_Behr>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Jayne Atkinson?", "Wer heiratete fiktiver Charakters gespielt von Jayne Atkinson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jayne_Atkinson>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Sarah Jessica Parker?", "Wer heiratete fiktiver Charakters gespielt von Sarah Jessica Parker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sarah_Jessica_Parker>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Sarah Siddons?", "Wer heiratete fiktiver Charakters gespielt von Sarah Siddons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sarah_Siddons>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Sergei Fjodorowitsch Bondartschuk?", "Wer heiratete fiktiver Charakters gespielt von Sergei Fjodorowitsch Bondartschuk?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sergei_Bondarchuk>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Amy Brenneman?", "Wer heiratete fiktiver Charakters gespielt von Amy Brenneman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Amy_Brenneman>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Andy Griffith?", "Wer heiratete fiktiver Charakters gespielt von Andy Griffith?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Andy_Griffith>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Angela Kinsey?", "Wer heiratete fiktiver Charakters gespielt von Angela Kinsey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Angela_Kinsey>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Anjelica Huston?", "Wer heiratete fiktiver Charakters gespielt von Anjelica Huston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Anjelica_Huston>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von AnnaSophia Robb?", "Wer heiratete fiktiver Charakters gespielt von AnnaSophia Robb?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/AnnaSophia_Robb>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Anthony Geary?", "Wer heiratete fiktiver Charakters gespielt von Anthony Geary?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Anthony_Geary>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Anthony Hopkins?", "Wer heiratete fiktiver Charakters gespielt von Anthony Hopkins?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Anthony_Hopkins>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Arthur Darvill?", "Wer heiratete fiktiver Charakters gespielt von Arthur Darvill?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Arthur_Darvill>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Ashley Peldon?", "Wer heiratete fiktiver Charakters gespielt von Ashley Peldon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ashley_Peldon>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Rhea Seehorn?", "Wer heiratete fiktiver Charakters gespielt von Rhea Seehorn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Rhea_Seehorn>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Richard Burgi?", "Wer heiratete fiktiver Charakters gespielt von Richard Burgi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Richard_Burgi>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Tessa Allen?", "Wer heiratete fiktiver Charakters gespielt von Tessa Allen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Tessa_Allen>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von The Carrie Diaries (Fernsehserie)?", "Wer heiratete fiktiver Charakters gespielt von The Carrie Diaries (Fernsehserie)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/The_Carrie_Diaries_(TV_series)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Adrian Paul?", "Wer heiratete fiktiver Charakters gespielt von Adrian Paul?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Adrian_Paul>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Brooke Shields?", "Wer heiratete fiktiver Charakters gespielt von Brooke Shields?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Brooke_Shields>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Laura Allen?", "Wer heiratete fiktiver Charakters gespielt von Laura Allen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Laura_Allen>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Leah Remini?", "Wer heiratete fiktiver Charakters gespielt von Leah Remini?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Leah_Remini>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Dan Gauthier?", "Wer heiratete fiktiver Charakters gespielt von Dan Gauthier?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Dan_Gauthier>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Daniel Olbrychski?", "Wer heiratete fiktiver Charakters gespielt von Daniel Olbrychski?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Daniel_Olbrychski>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Daniella Alonso?", "Wer heiratete fiktiver Charakters gespielt von Daniella Alonso?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Daniella_Alonso>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Daryl Hannah?", "Wer heiratete fiktiver Charakters gespielt von Daryl Hannah?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Daryl_Hannah>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von David Boreanaz?", "Wer heiratete fiktiver Charakters gespielt von David Boreanaz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/David_Boreanaz>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Debra Jo Rupp?", "Wer heiratete fiktiver Charakters gespielt von Debra Jo Rupp?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Debra_Jo_Rupp>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Patrick Duffy?", "Wer heiratete fiktiver Charakters gespielt von Patrick Duffy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Patrick_Duffy>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Paul Adelstein?", "Wer heiratete fiktiver Charakters gespielt von Paul Adelstein?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Paul_Adelstein>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Paul Dano?", "Wer heiratete fiktiver Charakters gespielt von Paul Dano?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Paul_Dano>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Peggy Ashcroft?", "Wer heiratete fiktiver Charakters gespielt von Peggy Ashcroft?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Peggy_Ashcroft>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Robert Montgomery (Schauspieler)?", "Wer heiratete fiktiver Charakters gespielt von Robert Montgomery (Schauspieler)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Robert_Montgomery_(actor)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Sex and the City?", "Wer heiratete fiktiver Charakters gespielt von Sex and the City?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sex_and_the_City>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Shelley Morrison?", "Wer heiratete fiktiver Charakters gespielt von Shelley Morrison?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Shelley_Morrison>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Sherri Saum?", "Wer heiratete fiktiver Charakters gespielt von Sherri Saum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sherri_Saum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Sherry Stringfield?", "Wer heiratete fiktiver Charakters gespielt von Sherry Stringfield?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sherry_Stringfield>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Shiri Appleby?", "Wer heiratete fiktiver Charakters gespielt von Shiri Appleby?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Shiri_Appleby>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Suzanne Rogers?", "Wer heiratete fiktiver Charakters gespielt von Suzanne Rogers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Suzanne_Rogers>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von T. R. Knight?", "Wer heiratete fiktiver Charakters gespielt von T. R. Knight?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/T._R._Knight>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Taye Diggs?", "Wer heiratete fiktiver Charakters gespielt von Taye Diggs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Taye_Diggs>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Victor Webster?", "Wer heiratete fiktiver Charakters gespielt von Victor Webster?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Victor_Webster>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Victoria Clark?", "Wer heiratete fiktiver Charakters gespielt von Victoria Clark?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Victoria_Clark>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Virginia Madsen?", "Wer heiratete fiktiver Charakters gespielt von Virginia Madsen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Virginia_Madsen>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Merle Louise?", "Wer heiratete fiktiver Charakters gespielt von Merle Louise?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Merle_Louise>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Eva Green?", "Wer heiratete fiktiver Charakters gespielt von Eva Green?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Eva_Green>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Naya Rivera?", "Wer heiratete fiktiver Charakters gespielt von Naya Rivera?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Naya_Rivera>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Stacy Haiduk?", "Wer heiratete fiktiver Charakters gespielt von Stacy Haiduk?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Stacy_Haiduk>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Star Wars: Episode III – Die Rache der Sith?", "Wer heiratete fiktiver Charakters gespielt von Star Wars: Episode III – Die Rache der Sith?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Star_Wars:_Episode_III_–_Revenge_of_the_Sith>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Star Wars: Der Aufstieg Skywalkers?", "Wer heiratete fiktiver Charakters gespielt von Star Wars: Der Aufstieg Skywalkers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Star_Wars:_The_Rise_of_Skywalker>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Stefanie Scott?", "Wer heiratete fiktiver Charakters gespielt von Stefanie Scott?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Stefanie_Scott>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Wentworth Miller?", "Wer heiratete fiktiver Charakters gespielt von Wentworth Miller?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Wentworth_Miller>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "36",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person heiratete fiktiver Charakters gespielt von Michelle Fairley?", "Wer heiratete fiktiver Charakters gespielt von Michelle Fairley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Michelle_Fairley>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "37",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt der Komponist für http://dbpedia.org/resource/Under_California_Stars?", "Welche Person spielt die Komponisten für http://dbpedia.org/resource/Under_California_Stars?", "Welche Person spielte der Komponist für http://dbpedia.org/resource/Under_California_Stars?", "Welche Person spielte die Komponisten für http://dbpedia.org/resource/Under_California_Stars?", "Wer spielt der Komponist für http://dbpedia.org/resource/Under_California_Stars?", "Wer spielt die Komponisten für http://dbpedia.org/resource/Under_California_Stars?", "Wer spielte der Komponist für http://dbpedia.org/resource/Under_California_Stars?", "Wer spielte die Komponisten für http://dbpedia.org/resource/Under_California_Stars?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Under_California_Stars> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "37",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt der Komponist für http://dbpedia.org/resource/Calendar_Girl_(1947_film)?", "Welche Person spielt die Komponisten für http://dbpedia.org/resource/Calendar_Girl_(1947_film)?", "Welche Person spielte der Komponist für http://dbpedia.org/resource/Calendar_Girl_(1947_film)?", "Welche Person spielte die Komponisten für http://dbpedia.org/resource/Calendar_Girl_(1947_film)?", "Wer spielt der Komponist für http://dbpedia.org/resource/Calendar_Girl_(1947_film)?", "Wer spielt die Komponisten für http://dbpedia.org/resource/Calendar_Girl_(1947_film)?", "Wer spielte der Komponist für http://dbpedia.org/resource/Calendar_Girl_(1947_film)?", "Wer spielte die Komponisten für http://dbpedia.org/resource/Calendar_Girl_(1947_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Calendar_Girl_(1947_film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "37",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt der Komponist für http://dbpedia.org/resource/Springtime_in_the_Sierras?", "Welche Person spielt die Komponisten für http://dbpedia.org/resource/Springtime_in_the_Sierras?", "Welche Person spielte der Komponist für http://dbpedia.org/resource/Springtime_in_the_Sierras?", "Welche Person spielte die Komponisten für http://dbpedia.org/resource/Springtime_in_the_Sierras?", "Wer spielt der Komponist für http://dbpedia.org/resource/Springtime_in_the_Sierras?", "Wer spielt die Komponisten für http://dbpedia.org/resource/Springtime_in_the_Sierras?", "Wer spielte der Komponist für http://dbpedia.org/resource/Springtime_in_the_Sierras?", "Wer spielte die Komponisten für http://dbpedia.org/resource/Springtime_in_the_Sierras?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Springtime_in_the_Sierras> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "37",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt der Komponist für http://dbpedia.org/resource/Susanna_Pass?", "Welche Person spielt die Komponisten für http://dbpedia.org/resource/Susanna_Pass?", "Welche Person spielte der Komponist für http://dbpedia.org/resource/Susanna_Pass?", "Welche Person spielte die Komponisten für http://dbpedia.org/resource/Susanna_Pass?", "Wer spielt der Komponist für http://dbpedia.org/resource/Susanna_Pass?", "Wer spielt die Komponisten für http://dbpedia.org/resource/Susanna_Pass?", "Wer spielte der Komponist für http://dbpedia.org/resource/Susanna_Pass?", "Wer spielte die Komponisten für http://dbpedia.org/resource/Susanna_Pass?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Susanna_Pass> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "37",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt der Komponist für http://dbpedia.org/resource/Night_Time_in_Nevada?", "Welche Person spielt die Komponisten für http://dbpedia.org/resource/Night_Time_in_Nevada?", "Welche Person spielte der Komponist für http://dbpedia.org/resource/Night_Time_in_Nevada?", "Welche Person spielte die Komponisten für http://dbpedia.org/resource/Night_Time_in_Nevada?", "Wer spielt der Komponist für http://dbpedia.org/resource/Night_Time_in_Nevada?", "Wer spielt die Komponisten für http://dbpedia.org/resource/Night_Time_in_Nevada?", "Wer spielte der Komponist für http://dbpedia.org/resource/Night_Time_in_Nevada?", "Wer spielte die Komponisten für http://dbpedia.org/resource/Night_Time_in_Nevada?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Night_Time_in_Nevada> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "37",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt der Komponist für http://dbpedia.org/resource/Woh_Lamhe...?", "Welche Person spielt die Komponisten für http://dbpedia.org/resource/Woh_Lamhe...?", "Welche Person spielte der Komponist für http://dbpedia.org/resource/Woh_Lamhe...?", "Welche Person spielte die Komponisten für http://dbpedia.org/resource/Woh_Lamhe...?", "Wer spielt der Komponist für http://dbpedia.org/resource/Woh_Lamhe...?", "Wer spielt die Komponisten für http://dbpedia.org/resource/Woh_Lamhe...?", "Wer spielte der Komponist für http://dbpedia.org/resource/Woh_Lamhe...?", "Wer spielte die Komponisten für http://dbpedia.org/resource/Woh_Lamhe...?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Woh_Lamhe...> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "38",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt das Mitglied von http://dbpedia.org/resource/Monsta_Island_Czars?", "Welche Person spielt die Mitglieder von http://dbpedia.org/resource/Monsta_Island_Czars?", "Welche Person spielte das Mitglied von http://dbpedia.org/resource/Monsta_Island_Czars?", "Welche Person spielte die Mitglieder von http://dbpedia.org/resource/Monsta_Island_Czars?", "Wer spielt das Mitglied von http://dbpedia.org/resource/Monsta_Island_Czars?", "Wer spielt die Mitglieder von http://dbpedia.org/resource/Monsta_Island_Czars?", "Wer spielte das Mitglied von http://dbpedia.org/resource/Monsta_Island_Czars?", "Wer spielte die Mitglieder von http://dbpedia.org/resource/Monsta_Island_Czars?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Monsta_Island_Czars> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit Mara Jade?", "Welche Person spielte Persons verheiratet mit Mara Jade?", "Wer spielt Persons verheiratet mit Mara Jade?", "Wer spielte Persons verheiratet mit Mara Jade?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mara_Jade> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit Saul Goodman?", "Welche Person spielte Persons verheiratet mit Saul Goodman?", "Wer spielt Persons verheiratet mit Saul Goodman?", "Wer spielte Persons verheiratet mit Saul Goodman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Saul_Goodman> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit Sweeney Todd?", "Welche Person spielte Persons verheiratet mit Sweeney Todd?", "Wer spielt Persons verheiratet mit Sweeney Todd?", "Wer spielte Persons verheiratet mit Sweeney Todd?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sweeney_Todd> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/List_of_General_Hospital_characters_(2010s)?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/List_of_General_Hospital_characters_(2010s)?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/List_of_General_Hospital_characters_(2010s)?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/List_of_General_Hospital_characters_(2010s)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/List_of_General_Hospital_characters_(2010s)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Peyton_Sawyer?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Peyton_Sawyer?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Peyton_Sawyer?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Peyton_Sawyer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Peyton_Sawyer> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Brian_Wheatley?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Brian_Wheatley?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Brian_Wheatley?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Brian_Wheatley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Brian_Wheatley> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/James_Stenbeck?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/James_Stenbeck?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/James_Stenbeck?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/James_Stenbeck?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/James_Stenbeck> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Alan_Quartermaine_(General_Hospital)?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Alan_Quartermaine_(General_Hospital)?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Alan_Quartermaine_(General_Hospital)?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Alan_Quartermaine_(General_Hospital)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alan_Quartermaine_(General_Hospital)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/List_of_General_Hospital_characters_(1990s)?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/List_of_General_Hospital_characters_(1990s)?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/List_of_General_Hospital_characters_(1990s)?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/List_of_General_Hospital_characters_(1990s)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/List_of_General_Hospital_characters_(1990s)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Scott_Baldwin?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Scott_Baldwin?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Scott_Baldwin?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Scott_Baldwin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Scott_Baldwin> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Abby_Lockhart?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Abby_Lockhart?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Abby_Lockhart?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Abby_Lockhart?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Abby_Lockhart> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Tracy_Quartermaine?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Tracy_Quartermaine?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Tracy_Quartermaine?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Tracy_Quartermaine?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tracy_Quartermaine> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Laura_Spencer_(General_Hospital)?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Laura_Spencer_(General_Hospital)?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Laura_Spencer_(General_Hospital)?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Laura_Spencer_(General_Hospital)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Laura_Spencer_(General_Hospital)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/List_of_General_Hospital_characters_(1980s)?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/List_of_General_Hospital_characters_(1980s)?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/List_of_General_Hospital_characters_(1980s)?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/List_of_General_Hospital_characters_(1980s)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/List_of_General_Hospital_characters_(1980s)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Dante_Falconeri?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Dante_Falconeri?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Dante_Falconeri?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Dante_Falconeri?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dante_Falconeri> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/J._T._Hellstrom?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/J._T._Hellstrom?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/J._T._Hellstrom?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/J._T._Hellstrom?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/J._T._Hellstrom> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Victor_Kiriakis?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Victor_Kiriakis?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Victor_Kiriakis?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Victor_Kiriakis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Victor_Kiriakis> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Mr._Big_(Sex_and_the_City)?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Mr._Big_(Sex_and_the_City)?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Mr._Big_(Sex_and_the_City)?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Mr._Big_(Sex_and_the_City)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mr._Big_(Sex_and_the_City)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Doug_Heffernan?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Doug_Heffernan?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Doug_Heffernan?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Doug_Heffernan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Doug_Heffernan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Ned_Stark?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Ned_Stark?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Ned_Stark?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Ned_Stark?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ned_Stark> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Phoebe_Halliwell?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Phoebe_Halliwell?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Phoebe_Halliwell?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Phoebe_Halliwell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Phoebe_Halliwell> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Charlotte_King?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Charlotte_King?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Charlotte_King?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Charlotte_King?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charlotte_King> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Michael_Bourne?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Michael_Bourne?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Michael_Bourne?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Michael_Bourne?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Michael_Bourne> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Khal_Drogo?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Khal_Drogo?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Khal_Drogo?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Khal_Drogo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Khal_Drogo> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Elena_Gilbert?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Elena_Gilbert?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Elena_Gilbert?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Elena_Gilbert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elena_Gilbert> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Roseanne_Conner?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Roseanne_Conner?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Roseanne_Conner?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Roseanne_Conner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Roseanne_Conner> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/James_Bellamy_(Upstairs,_Downstairs)?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/James_Bellamy_(Upstairs,_Downstairs)?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/James_Bellamy_(Upstairs,_Downstairs)?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/James_Bellamy_(Upstairs,_Downstairs)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/James_Bellamy_(Upstairs,_Downstairs)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Steve_Austin_(character)?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Steve_Austin_(character)?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Steve_Austin_(character)?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Steve_Austin_(character)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Steve_Austin_(character)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Katja_Brandner?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Katja_Brandner?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Katja_Brandner?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Katja_Brandner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Katja_Brandner> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Nathalie_Brandner?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Nathalie_Brandner?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Nathalie_Brandner?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Nathalie_Brandner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nathalie_Brandner> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Natasha_Rostova?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Natasha_Rostova?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Natasha_Rostova?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Natasha_Rostova?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Natasha_Rostova> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Hélène_Kuragina?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Hélène_Kuragina?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Hélène_Kuragina?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Hélène_Kuragina?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hélène_Kuragina> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Temperance_%22Bones%22_Brennan?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Temperance_%22Bones%22_Brennan?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Temperance_%22Bones%22_Brennan?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Temperance_%22Bones%22_Brennan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Temperance_%22Bones%22_Brennan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Michael_Vaughn?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Michael_Vaughn?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Michael_Vaughn?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Michael_Vaughn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Michael_Vaughn> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Seeley_Booth?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Seeley_Booth?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Seeley_Booth?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Seeley_Booth?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Seeley_Booth> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Sara_Tancredi?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Sara_Tancredi?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Sara_Tancredi?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Sara_Tancredi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sara_Tancredi> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Lucas_Scott?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Lucas_Scott?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Lucas_Scott?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Lucas_Scott?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucas_Scott> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Amy_Pond?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Amy_Pond?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Amy_Pond?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Amy_Pond?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Amy_Pond> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Jack_McFarland?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Jack_McFarland?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Jack_McFarland?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Jack_McFarland?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jack_McFarland> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Eugene_Porter?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Eugene_Porter?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Eugene_Porter?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Eugene_Porter?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Eugene_Porter> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Naomi_Bennett?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Naomi_Bennett?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Naomi_Bennett?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Naomi_Bennett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Naomi_Bennett> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Brittany_Pierce?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Brittany_Pierce?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Brittany_Pierce?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Brittany_Pierce?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Brittany_Pierce> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Chuck_Bartowski?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Chuck_Bartowski?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Chuck_Bartowski?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Chuck_Bartowski?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chuck_Bartowski> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Kevin_Walker_(Brothers_&_Sisters)?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Kevin_Walker_(Brothers_&_Sisters)?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Kevin_Walker_(Brothers_&_Sisters)?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Kevin_Walker_(Brothers_&_Sisters)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kevin_Walker_(Brothers_&_Sisters)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Terri_Schuester?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Terri_Schuester?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Terri_Schuester?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Terri_Schuester?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Terri_Schuester> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Emma_Pillsbury?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Emma_Pillsbury?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Emma_Pillsbury?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Emma_Pillsbury?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Emma_Pillsbury> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Callie_Torres?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Callie_Torres?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Callie_Torres?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Callie_Torres?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Callie_Torres> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Josette_du_Pres?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Josette_du_Pres?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Josette_du_Pres?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Josette_du_Pres?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Josette_du_Pres> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Susan_Mayer?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Susan_Mayer?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Susan_Mayer?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Susan_Mayer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Susan_Mayer> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Michael_Britten?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Michael_Britten?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Michael_Britten?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Michael_Britten?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Michael_Britten> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Pete_Wilder?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Pete_Wilder?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Pete_Wilder?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Pete_Wilder?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Pete_Wilder> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Max_Evans_(Roswell)?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Max_Evans_(Roswell)?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Max_Evans_(Roswell)?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Max_Evans_(Roswell)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Max_Evans_(Roswell)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Harriet_Vane?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Harriet_Vane?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Harriet_Vane?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Harriet_Vane?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Harriet_Vane> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Gomez_Addams?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Gomez_Addams?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Gomez_Addams?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Gomez_Addams?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gomez_Addams> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Paul_Atreides?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Paul_Atreides?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Paul_Atreides?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Paul_Atreides?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Paul_Atreides> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Basil_Fawlty?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Basil_Fawlty?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Basil_Fawlty?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Basil_Fawlty?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Basil_Fawlty> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Bill_Buchanan?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Bill_Buchanan?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Bill_Buchanan?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Bill_Buchanan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bill_Buchanan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Liz_Parker?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Liz_Parker?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Liz_Parker?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Liz_Parker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Liz_Parker> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Karl_Mayer?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Karl_Mayer?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Karl_Mayer?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Karl_Mayer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Karl_Mayer> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Mike_Delfino?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Mike_Delfino?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Mike_Delfino?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Mike_Delfino?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mike_Delfino> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Phillip_Spaulding?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Phillip_Spaulding?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Phillip_Spaulding?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Phillip_Spaulding?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Phillip_Spaulding> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Dexter_Morgan?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Dexter_Morgan?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Dexter_Morgan?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Dexter_Morgan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dexter_Morgan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Johnny_Rose?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Johnny_Rose?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Johnny_Rose?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Johnny_Rose?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Johnny_Rose> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Bo_Brady?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Bo_Brady?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Bo_Brady?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Bo_Brady?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bo_Brady> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/List_of_One_Life_to_Live_characters_(2000s)?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/List_of_One_Life_to_Live_characters_(2000s)?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/List_of_One_Life_to_Live_characters_(2000s)?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/List_of_One_Life_to_Live_characters_(2000s)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/List_of_One_Life_to_Live_characters_(2000s)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/List_of_One_Life_to_Live_characters_(2010s)?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/List_of_One_Life_to_Live_characters_(2010s)?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/List_of_One_Life_to_Live_characters_(2010s)?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/List_of_One_Life_to_Live_characters_(2010s)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/List_of_One_Life_to_Live_characters_(2010s)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/John_McBain_(character)?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/John_McBain_(character)?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/John_McBain_(character)?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/John_McBain_(character)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_McBain_(character)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Asa_Buchanan?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Asa_Buchanan?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Asa_Buchanan?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Asa_Buchanan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Asa_Buchanan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Todd_Manning?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Todd_Manning?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Todd_Manning?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Todd_Manning?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Todd_Manning> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Nora_Hanen?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Nora_Hanen?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Nora_Hanen?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Nora_Hanen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nora_Hanen> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/List_of_One_Life_to_Live_characters_(1980s)?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/List_of_One_Life_to_Live_characters_(1980s)?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/List_of_One_Life_to_Live_characters_(1980s)?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/List_of_One_Life_to_Live_characters_(1980s)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/List_of_One_Life_to_Live_characters_(1980s)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Kim_Sullivan_Hughes?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Kim_Sullivan_Hughes?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Kim_Sullivan_Hughes?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Kim_Sullivan_Hughes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kim_Sullivan_Hughes> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Lisa_Grimaldi?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Lisa_Grimaldi?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Lisa_Grimaldi?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Lisa_Grimaldi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lisa_Grimaldi> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/April_Stevens_Ewing?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/April_Stevens_Ewing?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/April_Stevens_Ewing?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/April_Stevens_Ewing?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/April_Stevens_Ewing> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Cassandra_Rawlins?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Cassandra_Rawlins?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Cassandra_Rawlins?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Cassandra_Rawlins?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cassandra_Rawlins> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Ashley_Abbott?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Ashley_Abbott?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Ashley_Abbott?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Ashley_Abbott?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ashley_Abbott> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Traci_Abbott?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Traci_Abbott?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Traci_Abbott?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Traci_Abbott?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Traci_Abbott> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Chloe_Lane?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Chloe_Lane?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Chloe_Lane?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Chloe_Lane?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chloe_Lane> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Theresa_Donovan?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Theresa_Donovan?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Theresa_Donovan?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Theresa_Donovan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Theresa_Donovan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Sami_Brady?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Sami_Brady?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Sami_Brady?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Sami_Brady?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sami_Brady> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Rex_Van_de_Kamp?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Rex_Van_de_Kamp?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Rex_Van_de_Kamp?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Rex_Van_de_Kamp?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rex_Van_de_Kamp> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Orson_Hodge?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Orson_Hodge?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Orson_Hodge?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Orson_Hodge?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Orson_Hodge> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Katara_(Avatar:_The_Last_Airbender)?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Katara_(Avatar:_The_Last_Airbender)?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Katara_(Avatar:_The_Last_Airbender)?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Katara_(Avatar:_The_Last_Airbender)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Katara_(Avatar:_The_Last_Airbender)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Beth_Clemmons?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Beth_Clemmons?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Beth_Clemmons?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Beth_Clemmons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Beth_Clemmons> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Othello_(character)?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Othello_(character)?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Othello_(character)?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Othello_(character)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Othello_(character)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Hilary_Curtis?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Hilary_Curtis?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Hilary_Curtis?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Hilary_Curtis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hilary_Curtis> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Alexis_Colby?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Alexis_Colby?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Alexis_Colby?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Alexis_Colby?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alexis_Colby> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Alex_Marick?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Alex_Marick?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Alex_Marick?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Alex_Marick?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alex_Marick> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Erica_Kane?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Erica_Kane?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Erica_Kane?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Erica_Kane?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Erica_Kane> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Marlena_Evans?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Marlena_Evans?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Marlena_Evans?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Marlena_Evans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Marlena_Evans> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Aleksandra_Billewiczówna?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Aleksandra_Billewiczówna?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Aleksandra_Billewiczówna?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Aleksandra_Billewiczówna?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Aleksandra_Billewiczówna> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/April_Ludgate?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/April_Ludgate?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/April_Ludgate?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/April_Ludgate?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/April_Ludgate> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Helen_Crump?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Helen_Crump?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Helen_Crump?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Helen_Crump?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Helen_Crump> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Dwight_Schrute?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Dwight_Schrute?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Dwight_Schrute?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Dwight_Schrute?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dwight_Schrute> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Jack_Hodgins_(Bones)?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Jack_Hodgins_(Bones)?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Jack_Hodgins_(Bones)?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Jack_Hodgins_(Bones)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jack_Hodgins_(Bones)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Barnabas_Collins?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Barnabas_Collins?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Barnabas_Collins?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Barnabas_Collins?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Barnabas_Collins> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/List_of_The_Young_and_the_Restless_characters_(2000s)?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/List_of_The_Young_and_the_Restless_characters_(2000s)?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/List_of_The_Young_and_the_Restless_characters_(2000s)?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/List_of_The_Young_and_the_Restless_characters_(2000s)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/List_of_The_Young_and_the_Restless_characters_(2000s)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Chi-Chi_(Dragon_Ball)?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Chi-Chi_(Dragon_Ball)?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Chi-Chi_(Dragon_Ball)?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Chi-Chi_(Dragon_Ball)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chi-Chi_(Dragon_Ball)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/Kelly_Cramer?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/Kelly_Cramer?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/Kelly_Cramer?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/Kelly_Cramer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kelly_Cramer> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "39",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt Persons verheiratet mit http://dbpedia.org/resource/List_of_One_Life_to_Live_characters_(1990s)?", "Welche Person spielte Persons verheiratet mit http://dbpedia.org/resource/List_of_One_Life_to_Live_characters_(1990s)?", "Wer spielt Persons verheiratet mit http://dbpedia.org/resource/List_of_One_Life_to_Live_characters_(1990s)?", "Wer spielte Persons verheiratet mit http://dbpedia.org/resource/List_of_One_Life_to_Live_characters_(1990s)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/List_of_One_Life_to_Live_characters_(1990s)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Madelaine Petsch?", "Welche Person spielte fiktiver Charakters gespielt von Madelaine Petsch?", "Wer spielt fiktiver Charakters gespielt von Madelaine Petsch?", "Wer spielte fiktiver Charakters gespielt von Madelaine Petsch?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madelaine_Petsch>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Maggie Q?", "Welche Person spielte fiktiver Charakters gespielt von Maggie Q?", "Wer spielt fiktiver Charakters gespielt von Maggie Q?", "Wer spielte fiktiver Charakters gespielt von Maggie Q?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Maggie_Q>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Maleficent – Die dunkle Fee?", "Welche Person spielte fiktiver Charakters gespielt von Maleficent – Die dunkle Fee?", "Wer spielt fiktiver Charakters gespielt von Maleficent – Die dunkle Fee?", "Wer spielte fiktiver Charakters gespielt von Maleficent – Die dunkle Fee?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Maleficent_(film)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Lana Hutton Bowen-Judd?", "Welche Person spielte fiktiver Charakters gespielt von Lana Hutton Bowen-Judd?", "Wer spielt fiktiver Charakters gespielt von Lana Hutton Bowen-Judd?", "Wer spielte fiktiver Charakters gespielt von Lana Hutton Bowen-Judd?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sara_Woods>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Descendants – Die Nachkommen?", "Welche Person spielte fiktiver Charakters gespielt von Descendants – Die Nachkommen?", "Wer spielt fiktiver Charakters gespielt von Descendants – Die Nachkommen?", "Wer spielte fiktiver Charakters gespielt von Descendants – Die Nachkommen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Descendants_(2015_film)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Diane Neal?", "Welche Person spielte fiktiver Charakters gespielt von Diane Neal?", "Wer spielt fiktiver Charakters gespielt von Diane Neal?", "Wer spielte fiktiver Charakters gespielt von Diane Neal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Diane_Neal>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Diego Luna?", "Welche Person spielte fiktiver Charakters gespielt von Diego Luna?", "Wer spielt fiktiver Charakters gespielt von Diego Luna?", "Wer spielte fiktiver Charakters gespielt von Diego Luna?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Diego_Luna>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Goran Višnjić?", "Welche Person spielte fiktiver Charakters gespielt von Goran Višnjić?", "Wer spielt fiktiver Charakters gespielt von Goran Višnjić?", "Wer spielte fiktiver Charakters gespielt von Goran Višnjić?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Goran_Višnjić>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Greg Vaughan?", "Welche Person spielte fiktiver Charakters gespielt von Greg Vaughan?", "Wer spielt fiktiver Charakters gespielt von Greg Vaughan?", "Wer spielte fiktiver Charakters gespielt von Greg Vaughan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Greg_Vaughan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Kristen Bell?", "Welche Person spielte fiktiver Charakters gespielt von Kristen Bell?", "Wer spielt fiktiver Charakters gespielt von Kristen Bell?", "Wer spielte fiktiver Charakters gespielt von Kristen Bell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kristen_Bell>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Kristin Chenoweth?", "Welche Person spielte fiktiver Charakters gespielt von Kristin Chenoweth?", "Wer spielt fiktiver Charakters gespielt von Kristin Chenoweth?", "Wer spielte fiktiver Charakters gespielt von Kristin Chenoweth?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kristin_Chenoweth>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Kristine Sutherland?", "Welche Person spielte fiktiver Charakters gespielt von Kristine Sutherland?", "Wer spielt fiktiver Charakters gespielt von Kristine Sutherland?", "Wer spielte fiktiver Charakters gespielt von Kristine Sutherland?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kristine_Sutherland>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Queen Latifah?", "Welche Person spielte fiktiver Charakters gespielt von Queen Latifah?", "Wer spielt fiktiver Charakters gespielt von Queen Latifah?", "Wer spielte fiktiver Charakters gespielt von Queen Latifah?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Queen_Latifah>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Ralph Fiennes?", "Welche Person spielte fiktiver Charakters gespielt von Ralph Fiennes?", "Wer spielt fiktiver Charakters gespielt von Ralph Fiennes?", "Wer spielte fiktiver Charakters gespielt von Ralph Fiennes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ralph_Fiennes>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Alexandra Chando?", "Welche Person spielte fiktiver Charakters gespielt von Alexandra Chando?", "Wer spielt fiktiver Charakters gespielt von Alexandra Chando?", "Wer spielte fiktiver Charakters gespielt von Alexandra Chando?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Alexandra_Chando>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Catherine Bach?", "Welche Person spielte fiktiver Charakters gespielt von Catherine Bach?", "Wer spielt fiktiver Charakters gespielt von Catherine Bach?", "Wer spielte fiktiver Charakters gespielt von Catherine Bach?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Catherine_Bach>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Chad Michael Murray?", "Welche Person spielte fiktiver Charakters gespielt von Chad Michael Murray?", "Wer spielt fiktiver Charakters gespielt von Chad Michael Murray?", "Wer spielte fiktiver Charakters gespielt von Chad Michael Murray?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Chad_Michael_Murray>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Charisma Carpenter?", "Welche Person spielte fiktiver Charakters gespielt von Charisma Carpenter?", "Wer spielt fiktiver Charakters gespielt von Charisma Carpenter?", "Wer spielte fiktiver Charakters gespielt von Charisma Carpenter?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Charisma_Carpenter>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Charles Gray?", "Welche Person spielte fiktiver Charakters gespielt von Charles Gray?", "Wer spielt fiktiver Charakters gespielt von Charles Gray?", "Wer spielte fiktiver Charakters gespielt von Charles Gray?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Charles_Gray_(actor)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Noah Hathaway?", "Welche Person spielte fiktiver Charakters gespielt von Noah Hathaway?", "Wer spielt fiktiver Charakters gespielt von Noah Hathaway?", "Wer spielte fiktiver Charakters gespielt von Noah Hathaway?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Noah_Hathaway>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Azura Skye?", "Welche Person spielte fiktiver Charakters gespielt von Azura Skye?", "Wer spielt fiktiver Charakters gespielt von Azura Skye?", "Wer spielte fiktiver Charakters gespielt von Azura Skye?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Azura_Skye>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Lois Wilson?", "Welche Person spielte fiktiver Charakters gespielt von Lois Wilson?", "Wer spielt fiktiver Charakters gespielt von Lois Wilson?", "Wer spielte fiktiver Charakters gespielt von Lois Wilson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lois_Wilson_(actress)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Camila Mendes?", "Welche Person spielte fiktiver Charakters gespielt von Camila Mendes?", "Wer spielt fiktiver Charakters gespielt von Camila Mendes?", "Wer spielte fiktiver Charakters gespielt von Camila Mendes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Camila_Mendes>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Carel Struycken?", "Welche Person spielte fiktiver Charakters gespielt von Carel Struycken?", "Wer spielt fiktiver Charakters gespielt von Carel Struycken?", "Wer spielte fiktiver Charakters gespielt von Carel Struycken?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Carel_Struycken>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Carey Mulligan?", "Welche Person spielte fiktiver Charakters gespielt von Carey Mulligan?", "Wer spielt fiktiver Charakters gespielt von Carey Mulligan?", "Wer spielte fiktiver Charakters gespielt von Carey Mulligan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Carey_Mulligan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Chloë Grace Moretz?", "Welche Person spielte fiktiver Charakters gespielt von Chloë Grace Moretz?", "Wer spielt fiktiver Charakters gespielt von Chloë Grace Moretz?", "Wer spielte fiktiver Charakters gespielt von Chloë Grace Moretz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Chloë_Grace_Moretz>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Christoph Waltz?", "Welche Person spielte fiktiver Charakters gespielt von Christoph Waltz?", "Wer spielt fiktiver Charakters gespielt von Christoph Waltz?", "Wer spielte fiktiver Charakters gespielt von Christoph Waltz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Christoph_Waltz>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Clare Kramer?", "Welche Person spielte fiktiver Charakters gespielt von Clare Kramer?", "Wer spielt fiktiver Charakters gespielt von Clare Kramer?", "Wer spielte fiktiver Charakters gespielt von Clare Kramer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Clare_Kramer>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von George Hertzberg?", "Welche Person spielte fiktiver Charakters gespielt von George Hertzberg?", "Wer spielt fiktiver Charakters gespielt von George Hertzberg?", "Wer spielte fiktiver Charakters gespielt von George Hertzberg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/George_Hertzberg>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von George Kennedy?", "Welche Person spielte fiktiver Charakters gespielt von George Kennedy?", "Wer spielt fiktiver Charakters gespielt von George Kennedy?", "Wer spielte fiktiver Charakters gespielt von George Kennedy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/George_Kennedy>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Jean-Claude Van Damme?", "Welche Person spielte fiktiver Charakters gespielt von Jean-Claude Van Damme?", "Wer spielt fiktiver Charakters gespielt von Jean-Claude Van Damme?", "Wer spielte fiktiver Charakters gespielt von Jean-Claude Van Damme?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jean-Claude_Van_Damme>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Jeffrey DeMunn?", "Welche Person spielte fiktiver Charakters gespielt von Jeffrey DeMunn?", "Wer spielt fiktiver Charakters gespielt von Jeffrey DeMunn?", "Wer spielte fiktiver Charakters gespielt von Jeffrey DeMunn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jeffrey_DeMunn>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Jeremy Sisto?", "Welche Person spielte fiktiver Charakters gespielt von Jeremy Sisto?", "Wer spielt fiktiver Charakters gespielt von Jeremy Sisto?", "Wer spielte fiktiver Charakters gespielt von Jeremy Sisto?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jeremy_Sisto>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Jessica Simpson?", "Welche Person spielte fiktiver Charakters gespielt von Jessica Simpson?", "Wer spielt fiktiver Charakters gespielt von Jessica Simpson?", "Wer spielte fiktiver Charakters gespielt von Jessica Simpson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jessica_Simpson>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Jodelle Ferland?", "Welche Person spielte fiktiver Charakters gespielt von Jodelle Ferland?", "Wer spielt fiktiver Charakters gespielt von Jodelle Ferland?", "Wer spielte fiktiver Charakters gespielt von Jodelle Ferland?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jodelle_Ferland>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Joey Luthman?", "Welche Person spielte fiktiver Charakters gespielt von Joey Luthman?", "Wer spielt fiktiver Charakters gespielt von Joey Luthman?", "Wer spielte fiktiver Charakters gespielt von Joey Luthman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Joey_Luthman>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von John DeSantis?", "Welche Person spielte fiktiver Charakters gespielt von John DeSantis?", "Wer spielt fiktiver Charakters gespielt von John DeSantis?", "Wer spielte fiktiver Charakters gespielt von John DeSantis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/John_DeSantis>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von John Goodman?", "Welche Person spielte fiktiver Charakters gespielt von John Goodman?", "Wer spielt fiktiver Charakters gespielt von John Goodman?", "Wer spielte fiktiver Charakters gespielt von John Goodman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/John_Goodman>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von John Hollis?", "Welche Person spielte fiktiver Charakters gespielt von John Hollis?", "Wer spielt fiktiver Charakters gespielt von John Hollis?", "Wer spielte fiktiver Charakters gespielt von John Hollis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/John_Hollis>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von John Huston?", "Welche Person spielte fiktiver Charakters gespielt von John Huston?", "Wer spielt fiktiver Charakters gespielt von John Huston?", "Wer spielte fiktiver Charakters gespielt von John Huston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/John_Huston>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von John Leguizamo?", "Welche Person spielte fiktiver Charakters gespielt von John Leguizamo?", "Wer spielt fiktiver Charakters gespielt von John Leguizamo?", "Wer spielte fiktiver Charakters gespielt von John Leguizamo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/John_Leguizamo>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Bernard Lee?", "Welche Person spielte fiktiver Charakters gespielt von Bernard Lee?", "Wer spielt fiktiver Charakters gespielt von Bernard Lee?", "Wer spielte fiktiver Charakters gespielt von Bernard Lee?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Bernard_Lee>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Betty Field?", "Welche Person spielte fiktiver Charakters gespielt von Betty Field?", "Wer spielt fiktiver Charakters gespielt von Betty Field?", "Wer spielte fiktiver Charakters gespielt von Betty Field?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Betty_Field>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Karen Kopins?", "Welche Person spielte fiktiver Charakters gespielt von Karen Kopins?", "Wer spielt fiktiver Charakters gespielt von Karen Kopins?", "Wer spielte fiktiver Charakters gespielt von Karen Kopins?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Karen_Kopins>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Kent McCord?", "Welche Person spielte fiktiver Charakters gespielt von Kent McCord?", "Wer spielt fiktiver Charakters gespielt von Kent McCord?", "Wer spielte fiktiver Charakters gespielt von Kent McCord?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kent_McCord>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Lincoln Younes?", "Welche Person spielte fiktiver Charakters gespielt von Lincoln Younes?", "Wer spielt fiktiver Charakters gespielt von Lincoln Younes?", "Wer spielte fiktiver Charakters gespielt von Lincoln Younes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lincoln_Younes>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Linzi Hateley?", "Welche Person spielte fiktiver Charakters gespielt von Linzi Hateley?", "Wer spielt fiktiver Charakters gespielt von Linzi Hateley?", "Wer spielte fiktiver Charakters gespielt von Linzi Hateley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Linzi_Hateley>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Lisa McCune?", "Welche Person spielte fiktiver Charakters gespielt von Lisa McCune?", "Wer spielt fiktiver Charakters gespielt von Lisa McCune?", "Wer spielte fiktiver Charakters gespielt von Lisa McCune?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lisa_McCune>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Yvonne Zima?", "Welche Person spielte fiktiver Charakters gespielt von Yvonne Zima?", "Wer spielt fiktiver Charakters gespielt von Yvonne Zima?", "Wer spielte fiktiver Charakters gespielt von Yvonne Zima?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Yvonne_Zima>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Michiel Huisman?", "Welche Person spielte fiktiver Charakters gespielt von Michiel Huisman?", "Wer spielt fiktiver Charakters gespielt von Michiel Huisman?", "Wer spielte fiktiver Charakters gespielt von Michiel Huisman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Michiel_Huisman>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Mira Sorvino?", "Welche Person spielte fiktiver Charakters gespielt von Mira Sorvino?", "Wer spielt fiktiver Charakters gespielt von Mira Sorvino?", "Wer spielte fiktiver Charakters gespielt von Mira Sorvino?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mira_Sorvino>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Misha Collins?", "Welche Person spielte fiktiver Charakters gespielt von Misha Collins?", "Wer spielt fiktiver Charakters gespielt von Misha Collins?", "Wer spielte fiktiver Charakters gespielt von Misha Collins?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Misha_Collins>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Ryan Carnes?", "Welche Person spielte fiktiver Charakters gespielt von Ryan Carnes?", "Wer spielt fiktiver Charakters gespielt von Ryan Carnes?", "Wer spielte fiktiver Charakters gespielt von Ryan Carnes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ryan_Carnes>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Sam Neill?", "Welche Person spielte fiktiver Charakters gespielt von Sam Neill?", "Wer spielt fiktiver Charakters gespielt von Sam Neill?", "Wer spielte fiktiver Charakters gespielt von Sam Neill?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sam_Neill>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Rachel Kimsey?", "Welche Person spielte fiktiver Charakters gespielt von Rachel Kimsey?", "Wer spielt fiktiver Charakters gespielt von Rachel Kimsey?", "Wer spielte fiktiver Charakters gespielt von Rachel Kimsey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Rachel_Kimsey>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Donald Pleasence?", "Welche Person spielte fiktiver Charakters gespielt von Donald Pleasence?", "Wer spielt fiktiver Charakters gespielt von Donald Pleasence?", "Wer spielte fiktiver Charakters gespielt von Donald Pleasence?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Donald_Pleasence>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Donovan Scott?", "Welche Person spielte fiktiver Charakters gespielt von Donovan Scott?", "Wer spielt fiktiver Charakters gespielt von Donovan Scott?", "Wer spielte fiktiver Charakters gespielt von Donovan Scott?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Donovan_Scott>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Ed Skrein?", "Welche Person spielte fiktiver Charakters gespielt von Ed Skrein?", "Wer spielt fiktiver Charakters gespielt von Ed Skrein?", "Wer spielte fiktiver Charakters gespielt von Ed Skrein?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ed_Skrein>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Edward Fox?", "Welche Person spielte fiktiver Charakters gespielt von Edward Fox?", "Wer spielt fiktiver Charakters gespielt von Edward Fox?", "Wer spielte fiktiver Charakters gespielt von Edward Fox?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Edward_Fox_(actor)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Frank Bank?", "Welche Person spielte fiktiver Charakters gespielt von Frank Bank?", "Wer spielt fiktiver Charakters gespielt von Frank Bank?", "Wer spielte fiktiver Charakters gespielt von Frank Bank?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Frank_Bank>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Frank Oz?", "Welche Person spielte fiktiver Charakters gespielt von Frank Oz?", "Wer spielt fiktiver Charakters gespielt von Frank Oz?", "Wer spielte fiktiver Charakters gespielt von Frank Oz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Frank_Oz>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Hannah Murray?", "Welche Person spielte fiktiver Charakters gespielt von Hannah Murray?", "Wer spielt fiktiver Charakters gespielt von Hannah Murray?", "Wer spielte fiktiver Charakters gespielt von Hannah Murray?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Hannah_Murray>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Harry Groener?", "Welche Person spielte fiktiver Charakters gespielt von Harry Groener?", "Wer spielt fiktiver Charakters gespielt von Harry Groener?", "Wer spielte fiktiver Charakters gespielt von Harry Groener?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Harry_Groener>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Haruo Nakajima?", "Welche Person spielte fiktiver Charakters gespielt von Haruo Nakajima?", "Wer spielt fiktiver Charakters gespielt von Haruo Nakajima?", "Wer spielte fiktiver Charakters gespielt von Haruo Nakajima?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Haruo_Nakajima>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Holliday Grainger?", "Welche Person spielte fiktiver Charakters gespielt von Holliday Grainger?", "Wer spielt fiktiver Charakters gespielt von Holliday Grainger?", "Wer spielte fiktiver Charakters gespielt von Holliday Grainger?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Holliday_Grainger>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Ian Somerhalder?", "Welche Person spielte fiktiver Charakters gespielt von Ian Somerhalder?", "Wer spielt fiktiver Charakters gespielt von Ian Somerhalder?", "Wer spielte fiktiver Charakters gespielt von Ian Somerhalder?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ian_Somerhalder>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von James Marsters?", "Welche Person spielte fiktiver Charakters gespielt von James Marsters?", "Wer spielt fiktiver Charakters gespielt von James Marsters?", "Wer spielte fiktiver Charakters gespielt von James Marsters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/James_Marsters>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von James Patrick Stuart?", "Welche Person spielte fiktiver Charakters gespielt von James Patrick Stuart?", "Wer spielt fiktiver Charakters gespielt von James Patrick Stuart?", "Wer spielte fiktiver Charakters gespielt von James Patrick Stuart?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/James_Patrick_Stuart>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Jason Anthony Miller?", "Welche Person spielte fiktiver Charakters gespielt von Jason Anthony Miller?", "Wer spielt fiktiver Charakters gespielt von Jason Anthony Miller?", "Wer spielte fiktiver Charakters gespielt von Jason Anthony Miller?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jason_Miller_(playwright)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Samuel L. Jackson?", "Welche Person spielte fiktiver Charakters gespielt von Samuel L. Jackson?", "Wer spielt fiktiver Charakters gespielt von Samuel L. Jackson?", "Wer spielte fiktiver Charakters gespielt von Samuel L. Jackson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Samuel_L._Jackson>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Sarah Jessica Parker?", "Welche Person spielte fiktiver Charakters gespielt von Sarah Jessica Parker?", "Wer spielt fiktiver Charakters gespielt von Sarah Jessica Parker?", "Wer spielte fiktiver Charakters gespielt von Sarah Jessica Parker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sarah_Jessica_Parker>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Sarah Lancashire?", "Welche Person spielte fiktiver Charakters gespielt von Sarah Lancashire?", "Wer spielt fiktiver Charakters gespielt von Sarah Lancashire?", "Wer spielte fiktiver Charakters gespielt von Sarah Lancashire?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sarah_Lancashire>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Sarah Michelle Gellar?", "Welche Person spielte fiktiver Charakters gespielt von Sarah Michelle Gellar?", "Wer spielt fiktiver Charakters gespielt von Sarah Michelle Gellar?", "Wer spielte fiktiver Charakters gespielt von Sarah Michelle Gellar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sarah_Michelle_Gellar>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Seamus Davey-Fitzpatrick?", "Welche Person spielte fiktiver Charakters gespielt von Seamus Davey-Fitzpatrick?", "Wer spielt fiktiver Charakters gespielt von Seamus Davey-Fitzpatrick?", "Wer spielte fiktiver Charakters gespielt von Seamus Davey-Fitzpatrick?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Seamus_Davey-Fitzpatrick>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Angela Bassett?", "Welche Person spielte fiktiver Charakters gespielt von Angela Bassett?", "Wer spielt fiktiver Charakters gespielt von Angela Bassett?", "Wer spielte fiktiver Charakters gespielt von Angela Bassett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Angela_Bassett>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Angela Bettis?", "Welche Person spielte fiktiver Charakters gespielt von Angela Bettis?", "Wer spielt fiktiver Charakters gespielt von Angela Bettis?", "Wer spielte fiktiver Charakters gespielt von Angela Bettis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Angela_Bettis>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Angelina Jolie?", "Welche Person spielte fiktiver Charakters gespielt von Angelina Jolie?", "Wer spielt fiktiver Charakters gespielt von Angelina Jolie?", "Wer spielte fiktiver Charakters gespielt von Angelina Jolie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Angelina_Jolie>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von AnnaSophia Robb?", "Welche Person spielte fiktiver Charakters gespielt von AnnaSophia Robb?", "Wer spielt fiktiver Charakters gespielt von AnnaSophia Robb?", "Wer spielte fiktiver Charakters gespielt von AnnaSophia Robb?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/AnnaSophia_Robb>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Anna Maxwell Martin?", "Welche Person spielte fiktiver Charakters gespielt von Anna Maxwell Martin?", "Wer spielt fiktiver Charakters gespielt von Anna Maxwell Martin?", "Wer spielte fiktiver Charakters gespielt von Anna Maxwell Martin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Anna_Maxwell_Martin>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Anthony Dawson?", "Welche Person spielte fiktiver Charakters gespielt von Anthony Dawson?", "Wer spielt fiktiver Charakters gespielt von Anthony Dawson?", "Wer spielte fiktiver Charakters gespielt von Anthony Dawson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Anthony_Dawson>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Anthony Geary?", "Welche Person spielte fiktiver Charakters gespielt von Anthony Geary?", "Wer spielt fiktiver Charakters gespielt von Anthony Geary?", "Wer spielte fiktiver Charakters gespielt von Anthony Geary?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Anthony_Geary>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von April Scott?", "Welche Person spielte fiktiver Charakters gespielt von April Scott?", "Wer spielt fiktiver Charakters gespielt von April Scott?", "Wer spielte fiktiver Charakters gespielt von April Scott?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/April_Scott>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Barbara’s Baby – Omen III?", "Welche Person spielte fiktiver Charakters gespielt von Barbara’s Baby – Omen III?", "Wer spielt fiktiver Charakters gespielt von Barbara’s Baby – Omen III?", "Wer spielte fiktiver Charakters gespielt von Barbara’s Baby – Omen III?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Omen_III:_The_Final_Conflict>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Rebecca Grant (Schauspielerin, 1982)?", "Welche Person spielte fiktiver Charakters gespielt von Rebecca Grant (Schauspielerin, 1982)?", "Wer spielt fiktiver Charakters gespielt von Rebecca Grant (Schauspielerin, 1982)?", "Wer spielte fiktiver Charakters gespielt von Rebecca Grant (Schauspielerin, 1982)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Rebecca_Grant_(British_actress)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Rhys Wakefield?", "Welche Person spielte fiktiver Charakters gespielt von Rhys Wakefield?", "Wer spielt fiktiver Charakters gespielt von Rhys Wakefield?", "Wer spielte fiktiver Charakters gespielt von Rhys Wakefield?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Rhys_Wakefield>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Tessa Allen?", "Welche Person spielte fiktiver Charakters gespielt von Tessa Allen?", "Wer spielt fiktiver Charakters gespielt von Tessa Allen?", "Wer spielte fiktiver Charakters gespielt von Tessa Allen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Tessa_Allen>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von The Carrie Diaries (Fernsehserie)?", "Welche Person spielte fiktiver Charakters gespielt von The Carrie Diaries (Fernsehserie)?", "Wer spielt fiktiver Charakters gespielt von The Carrie Diaries (Fernsehserie)?", "Wer spielte fiktiver Charakters gespielt von The Carrie Diaries (Fernsehserie)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/The_Carrie_Diaries_(TV_series)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Adam Busch?", "Welche Person spielte fiktiver Charakters gespielt von Adam Busch?", "Wer spielt fiktiver Charakters gespielt von Adam Busch?", "Wer spielte fiktiver Charakters gespielt von Adam Busch?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Adam_Busch>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Adam Garcia?", "Welche Person spielte fiktiver Charakters gespielt von Adam Garcia?", "Wer spielt fiktiver Charakters gespielt von Adam Garcia?", "Wer spielte fiktiver Charakters gespielt von Adam Garcia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Adam_Garcia>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von The Little Mermaid (Musical)?", "Welche Person spielte fiktiver Charakters gespielt von The Little Mermaid (Musical)?", "Wer spielt fiktiver Charakters gespielt von The Little Mermaid (Musical)?", "Wer spielte fiktiver Charakters gespielt von The Little Mermaid (Musical)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/The_Little_Mermaid_(musical)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Bruno Campos?", "Welche Person spielte fiktiver Charakters gespielt von Bruno Campos?", "Wer spielt fiktiver Charakters gespielt von Bruno Campos?", "Wer spielte fiktiver Charakters gespielt von Bruno Campos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Bruno_Campos>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Connor Trinneer?", "Welche Person spielte fiktiver Charakters gespielt von Connor Trinneer?", "Wer spielt fiktiver Charakters gespielt von Connor Trinneer?", "Wer spielte fiktiver Charakters gespielt von Connor Trinneer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Connor_Trinneer>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Kyle MacLachlan?", "Welche Person spielte fiktiver Charakters gespielt von Kyle MacLachlan?", "Wer spielt fiktiver Charakters gespielt von Kyle MacLachlan?", "Wer spielte fiktiver Charakters gespielt von Kyle MacLachlan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kyle_MacLachlan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Lalaine Vergara-Paras?", "Welche Person spielte fiktiver Charakters gespielt von Lalaine Vergara-Paras?", "Wer spielt fiktiver Charakters gespielt von Lalaine Vergara-Paras?", "Wer spielte fiktiver Charakters gespielt von Lalaine Vergara-Paras?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lalaine>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Leah Remini?", "Welche Person spielte fiktiver Charakters gespielt von Leah Remini?", "Wer spielt fiktiver Charakters gespielt von Leah Remini?", "Wer spielte fiktiver Charakters gespielt von Leah Remini?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Leah_Remini>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Bradley James?", "Welche Person spielte fiktiver Charakters gespielt von Bradley James?", "Wer spielt fiktiver Charakters gespielt von Bradley James?", "Wer spielte fiktiver Charakters gespielt von Bradley James?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Bradley_James>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Dafne Keen?", "Welche Person spielte fiktiver Charakters gespielt von Dafne Keen?", "Wer spielt fiktiver Charakters gespielt von Dafne Keen?", "Wer spielte fiktiver Charakters gespielt von Dafne Keen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Dafne_Keen>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Daigo (Sänger)?", "Welche Person spielte fiktiver Charakters gespielt von Daigo (Sänger)?", "Wer spielt fiktiver Charakters gespielt von Daigo (Sänger)?", "Wer spielte fiktiver Charakters gespielt von Daigo (Sänger)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Daigo_(musician)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Dakota Blue Richards?", "Welche Person spielte fiktiver Charakters gespielt von Dakota Blue Richards?", "Wer spielt fiktiver Charakters gespielt von Dakota Blue Richards?", "Wer spielte fiktiver Charakters gespielt von Dakota Blue Richards?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Dakota_Blue_Richards>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "40",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Welche Person spielt fiktiver Charakters gespielt von Damien (Fernsehserie)?", "Welche Person spielte fiktiver Charakters gespielt von Damien (Fernsehserie)?", "Wer spielt fiktiver Charakters gespielt von Damien (Fernsehserie)?", "Wer spielte fiktiver Charakters gespielt von Damien (Fernsehserie)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Damien_(TV_series)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Madrid?", "Was stellte aus Kunstwerks ausgestellt von Madrid?", "Welches Museum stellt aus Kunstwerks ausgestellt von Madrid?", "Welches Museum stellte aus Kunstwerks ausgestellt von Madrid?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Madrid>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von San Domenico (Fiesole)?", "Was stellte aus Kunstwerks ausgestellt von San Domenico (Fiesole)?", "Welches Museum stellt aus Kunstwerks ausgestellt von San Domenico (Fiesole)?", "Welches Museum stellte aus Kunstwerks ausgestellt von San Domenico (Fiesole)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Convent_of_San_Domenico,_Fiesole>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Uffizien?", "Was stellte aus Kunstwerks ausgestellt von Uffizien?", "Welches Museum stellt aus Kunstwerks ausgestellt von Uffizien?", "Welches Museum stellte aus Kunstwerks ausgestellt von Uffizien?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Uffizi>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Generalversammlung der Vereinten Nationen?", "Was stellte aus Kunstwerks ausgestellt von Generalversammlung der Vereinten Nationen?", "Welches Museum stellt aus Kunstwerks ausgestellt von Generalversammlung der Vereinten Nationen?", "Welches Museum stellte aus Kunstwerks ausgestellt von Generalversammlung der Vereinten Nationen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/United_Nations_General_Assembly>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Kapitol (Washington)?", "Was stellte aus Kunstwerks ausgestellt von Kapitol (Washington)?", "Welches Museum stellt aus Kunstwerks ausgestellt von Kapitol (Washington)?", "Welches Museum stellte aus Kunstwerks ausgestellt von Kapitol (Washington)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/United_States_Capitol>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Valletta?", "Was stellte aus Kunstwerks ausgestellt von Valletta?", "Welches Museum stellt aus Kunstwerks ausgestellt von Valletta?", "Welches Museum stellte aus Kunstwerks ausgestellt von Valletta?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Valletta>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Van Gogh Museum?", "Was stellte aus Kunstwerks ausgestellt von Van Gogh Museum?", "Welches Museum stellt aus Kunstwerks ausgestellt von Van Gogh Museum?", "Welches Museum stellte aus Kunstwerks ausgestellt von Van Gogh Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Van_Gogh_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Vatikanische Museen?", "Was stellte aus Kunstwerks ausgestellt von Vatikanische Museen?", "Welches Museum stellt aus Kunstwerks ausgestellt von Vatikanische Museen?", "Welches Museum stellte aus Kunstwerks ausgestellt von Vatikanische Museen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Vatican_Museums>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Dallas Museum of Art?", "Was stellte aus Kunstwerks ausgestellt von Dallas Museum of Art?", "Welches Museum stellt aus Kunstwerks ausgestellt von Dallas Museum of Art?", "Welches Museum stellte aus Kunstwerks ausgestellt von Dallas Museum of Art?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Dallas_Museum_of_Art>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Statens Museum for Kunst?", "Was stellte aus Kunstwerks ausgestellt von Statens Museum for Kunst?", "Welches Museum stellt aus Kunstwerks ausgestellt von Statens Museum for Kunst?", "Welches Museum stellte aus Kunstwerks ausgestellt von Statens Museum for Kunst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/National_Gallery_of_Denmark>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Biblioteca Reale?", "Was stellte aus Kunstwerks ausgestellt von Biblioteca Reale?", "Welches Museum stellt aus Kunstwerks ausgestellt von Biblioteca Reale?", "Welches Museum stellte aus Kunstwerks ausgestellt von Biblioteca Reale?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Royal_Library_of_Turin>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Scuola di San Giorgio degli Schiavoni?", "Was stellte aus Kunstwerks ausgestellt von Scuola di San Giorgio degli Schiavoni?", "Welches Museum stellt aus Kunstwerks ausgestellt von Scuola di San Giorgio degli Schiavoni?", "Welches Museum stellte aus Kunstwerks ausgestellt von Scuola di San Giorgio degli Schiavoni?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Scuola_di_San_Giorgio_degli_Schiavoni>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Slowakische Nationalgalerie?", "Was stellte aus Kunstwerks ausgestellt von Slowakische Nationalgalerie?", "Welches Museum stellt aus Kunstwerks ausgestellt von Slowakische Nationalgalerie?", "Welches Museum stellte aus Kunstwerks ausgestellt von Slowakische Nationalgalerie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Slovak_National_Gallery>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Menil Collection?", "Was stellte aus Kunstwerks ausgestellt von Menil Collection?", "Welches Museum stellt aus Kunstwerks ausgestellt von Menil Collection?", "Welches Museum stellte aus Kunstwerks ausgestellt von Menil Collection?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Menil_Collection>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Bletchley Park?", "Was stellte aus Kunstwerks ausgestellt von Bletchley Park?", "Welches Museum stellt aus Kunstwerks ausgestellt von Bletchley Park?", "Welches Museum stellte aus Kunstwerks ausgestellt von Bletchley Park?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Bletchley_Park>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Delaware Art Museum?", "Was stellte aus Kunstwerks ausgestellt von Delaware Art Museum?", "Welches Museum stellt aus Kunstwerks ausgestellt von Delaware Art Museum?", "Welches Museum stellte aus Kunstwerks ausgestellt von Delaware Art Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Delaware_Art_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Derby Museum and Art Gallery?", "Was stellte aus Kunstwerks ausgestellt von Derby Museum and Art Gallery?", "Welches Museum stellt aus Kunstwerks ausgestellt von Derby Museum and Art Gallery?", "Welches Museum stellte aus Kunstwerks ausgestellt von Derby Museum and Art Gallery?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Derby_Museum_and_Art_Gallery>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Detroit Institute of Arts?", "Was stellte aus Kunstwerks ausgestellt von Detroit Institute of Arts?", "Welches Museum stellt aus Kunstwerks ausgestellt von Detroit Institute of Arts?", "Welches Museum stellte aus Kunstwerks ausgestellt von Detroit Institute of Arts?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Detroit_Institute_of_Arts>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Golden Gate Park?", "Was stellte aus Kunstwerks ausgestellt von Golden Gate Park?", "Welches Museum stellt aus Kunstwerks ausgestellt von Golden Gate Park?", "Welches Museum stellte aus Kunstwerks ausgestellt von Golden Gate Park?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Golden_Gate_Park>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Kröller-Müller Museum?", "Was stellte aus Kunstwerks ausgestellt von Kröller-Müller Museum?", "Welches Museum stellt aus Kunstwerks ausgestellt von Kröller-Müller Museum?", "Welches Museum stellte aus Kunstwerks ausgestellt von Kröller-Müller Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Kröller-Müller_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Kunstmuseum Basel?", "Was stellte aus Kunstwerks ausgestellt von Kunstmuseum Basel?", "Welches Museum stellt aus Kunstwerks ausgestellt von Kunstmuseum Basel?", "Welches Museum stellte aus Kunstwerks ausgestellt von Kunstmuseum Basel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Kunstmuseum_Basel>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Kunsthaus Zürich?", "Was stellte aus Kunstwerks ausgestellt von Kunsthaus Zürich?", "Welches Museum stellt aus Kunstwerks ausgestellt von Kunsthaus Zürich?", "Welches Museum stellte aus Kunstwerks ausgestellt von Kunsthaus Zürich?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Kunstmuseum_Basel>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Palazzo Pitti?", "Was stellte aus Kunstwerks ausgestellt von Palazzo Pitti?", "Welches Museum stellt aus Kunstwerks ausgestellt von Palazzo Pitti?", "Welches Museum stellte aus Kunstwerks ausgestellt von Palazzo Pitti?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Palazzo_Pitti>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Albertina (Wien)?", "Was stellte aus Kunstwerks ausgestellt von Albertina (Wien)?", "Welches Museum stellt aus Kunstwerks ausgestellt von Albertina (Wien)?", "Welches Museum stellte aus Kunstwerks ausgestellt von Albertina (Wien)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Albertina>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Albright-Knox Art Gallery?", "Was stellte aus Kunstwerks ausgestellt von Albright-Knox Art Gallery?", "Welches Museum stellt aus Kunstwerks ausgestellt von Albright-Knox Art Gallery?", "Welches Museum stellte aus Kunstwerks ausgestellt von Albright-Knox Art Gallery?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Albright–Knox_Art_Gallery>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Alnwick Castle?", "Was stellte aus Kunstwerks ausgestellt von Alnwick Castle?", "Welches Museum stellt aus Kunstwerks ausgestellt von Alnwick Castle?", "Welches Museum stellte aus Kunstwerks ausgestellt von Alnwick Castle?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Alnwick_Castle>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Alte Nationalgalerie?", "Was stellte aus Kunstwerks ausgestellt von Alte Nationalgalerie?", "Welches Museum stellt aus Kunstwerks ausgestellt von Alte Nationalgalerie?", "Welches Museum stellte aus Kunstwerks ausgestellt von Alte Nationalgalerie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Alte_Nationalgalerie>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Alte Pinakothek?", "Was stellte aus Kunstwerks ausgestellt von Alte Pinakothek?", "Welches Museum stellt aus Kunstwerks ausgestellt von Alte Pinakothek?", "Welches Museum stellte aus Kunstwerks ausgestellt von Alte Pinakothek?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Alte_Pinakothek>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Chatsworth House?", "Was stellte aus Kunstwerks ausgestellt von Chatsworth House?", "Welches Museum stellt aus Kunstwerks ausgestellt von Chatsworth House?", "Welches Museum stellte aus Kunstwerks ausgestellt von Chatsworth House?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Chatsworth_House>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Fitzwilliam-Museum?", "Was stellte aus Kunstwerks ausgestellt von Fitzwilliam-Museum?", "Welches Museum stellt aus Kunstwerks ausgestellt von Fitzwilliam-Museum?", "Welches Museum stellte aus Kunstwerks ausgestellt von Fitzwilliam-Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Fitzwilliam_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Florenz?", "Was stellte aus Kunstwerks ausgestellt von Florenz?", "Welches Museum stellt aus Kunstwerks ausgestellt von Florenz?", "Welches Museum stellte aus Kunstwerks ausgestellt von Florenz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Florence>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Folger Shakespeare Library?", "Was stellte aus Kunstwerks ausgestellt von Folger Shakespeare Library?", "Welches Museum stellt aus Kunstwerks ausgestellt von Folger Shakespeare Library?", "Welches Museum stellte aus Kunstwerks ausgestellt von Folger Shakespeare Library?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Folger_Shakespeare_Library>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Amon Carter Museum?", "Was stellte aus Kunstwerks ausgestellt von Amon Carter Museum?", "Welches Museum stellt aus Kunstwerks ausgestellt von Amon Carter Museum?", "Welches Museum stellte aus Kunstwerks ausgestellt von Amon Carter Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Amon_Carter_Museum_of_American_Art>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Norton Simon Museum?", "Was stellte aus Kunstwerks ausgestellt von Norton Simon Museum?", "Welches Museum stellt aus Kunstwerks ausgestellt von Norton Simon Museum?", "Welches Museum stellte aus Kunstwerks ausgestellt von Norton Simon Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Norton_Simon_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Norwich Castle?", "Was stellte aus Kunstwerks ausgestellt von Norwich Castle?", "Welches Museum stellt aus Kunstwerks ausgestellt von Norwich Castle?", "Welches Museum stellte aus Kunstwerks ausgestellt von Norwich Castle?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Norwich_Castle>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Olana?", "Was stellte aus Kunstwerks ausgestellt von Olana?", "Welches Museum stellt aus Kunstwerks ausgestellt von Olana?", "Welches Museum stellte aus Kunstwerks ausgestellt von Olana?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Olana_State_Historic_Site>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Gemäldegalerie (Berlin)?", "Was stellte aus Kunstwerks ausgestellt von Gemäldegalerie (Berlin)?", "Welches Museum stellt aus Kunstwerks ausgestellt von Gemäldegalerie (Berlin)?", "Welches Museum stellte aus Kunstwerks ausgestellt von Gemäldegalerie (Berlin)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Gemäldegalerie,_Berlin>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Gemäldegalerie Alte Meister?", "Was stellte aus Kunstwerks ausgestellt von Gemäldegalerie Alte Meister?", "Welches Museum stellt aus Kunstwerks ausgestellt von Gemäldegalerie Alte Meister?", "Welches Museum stellte aus Kunstwerks ausgestellt von Gemäldegalerie Alte Meister?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Gemäldegalerie_Alte_Meister>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Museo dell’Opera del Duomo (Florenz)?", "Was stellte aus Kunstwerks ausgestellt von Museo dell’Opera del Duomo (Florenz)?", "Welches Museum stellt aus Kunstwerks ausgestellt von Museo dell’Opera del Duomo (Florenz)?", "Welches Museum stellte aus Kunstwerks ausgestellt von Museo dell’Opera del Duomo (Florenz)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Museo_dell'Opera_del_Duomo_(Florence)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von National Museums Liverpool?", "Was stellte aus Kunstwerks ausgestellt von National Museums Liverpool?", "Welches Museum stellt aus Kunstwerks ausgestellt von National Museums Liverpool?", "Welches Museum stellte aus Kunstwerks ausgestellt von National Museums Liverpool?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/National_Museums_Liverpool>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Königliches Museum der Schönen Künste (Antwerpen)?", "Was stellte aus Kunstwerks ausgestellt von Königliches Museum der Schönen Künste (Antwerpen)?", "Welches Museum stellt aus Kunstwerks ausgestellt von Königliches Museum der Schönen Künste (Antwerpen)?", "Welches Museum stellte aus Kunstwerks ausgestellt von Königliches Museum der Schönen Künste (Antwerpen)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Royal_Museum_of_Fine_Arts_Antwerp>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Fundació Joan Miró?", "Was stellte aus Kunstwerks ausgestellt von Fundació Joan Miró?", "Welches Museum stellt aus Kunstwerks ausgestellt von Fundació Joan Miró?", "Welches Museum stellte aus Kunstwerks ausgestellt von Fundació Joan Miró?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Fundació_Joan_Miró>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Russisches Museum?", "Was stellte aus Kunstwerks ausgestellt von Russisches Museum?", "Welches Museum stellt aus Kunstwerks ausgestellt von Russisches Museum?", "Welches Museum stellte aus Kunstwerks ausgestellt von Russisches Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Russian_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Scuola Grande di San Rocco?", "Was stellte aus Kunstwerks ausgestellt von Scuola Grande di San Rocco?", "Welches Museum stellt aus Kunstwerks ausgestellt von Scuola Grande di San Rocco?", "Welches Museum stellte aus Kunstwerks ausgestellt von Scuola Grande di San Rocco?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Scuola_Grande_di_San_Rocco>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Australian Centre for Contemporary Art?", "Was stellte aus Kunstwerks ausgestellt von Australian Centre for Contemporary Art?", "Welches Museum stellt aus Kunstwerks ausgestellt von Australian Centre for Contemporary Art?", "Welches Museum stellte aus Kunstwerks ausgestellt von Australian Centre for Contemporary Art?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Australian_Centre_for_Contemporary_Art>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Baltimore Museum of Art?", "Was stellte aus Kunstwerks ausgestellt von Baltimore Museum of Art?", "Welches Museum stellt aus Kunstwerks ausgestellt von Baltimore Museum of Art?", "Welches Museum stellte aus Kunstwerks ausgestellt von Baltimore Museum of Art?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Baltimore_Museum_of_Art>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Barnes Foundation?", "Was stellte aus Kunstwerks ausgestellt von Barnes Foundation?", "Welches Museum stellt aus Kunstwerks ausgestellt von Barnes Foundation?", "Welches Museum stellte aus Kunstwerks ausgestellt von Barnes Foundation?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Barnes_Foundation>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Kanton Basel-Stadt?", "Was stellte aus Kunstwerks ausgestellt von Kanton Basel-Stadt?", "Welches Museum stellt aus Kunstwerks ausgestellt von Kanton Basel-Stadt?", "Welches Museum stellte aus Kunstwerks ausgestellt von Kanton Basel-Stadt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Basel>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Basel?", "Was stellte aus Kunstwerks ausgestellt von Basel?", "Welches Museum stellt aus Kunstwerks ausgestellt von Basel?", "Welches Museum stellte aus Kunstwerks ausgestellt von Basel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Basel>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Art Gallery of South Australia?", "Was stellte aus Kunstwerks ausgestellt von Art Gallery of South Australia?", "Welches Museum stellt aus Kunstwerks ausgestellt von Art Gallery of South Australia?", "Welches Museum stellte aus Kunstwerks ausgestellt von Art Gallery of South Australia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Art_Gallery_of_South_Australia>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Litauisches Kunstmuseum?", "Was stellte aus Kunstwerks ausgestellt von Litauisches Kunstmuseum?", "Welches Museum stellt aus Kunstwerks ausgestellt von Litauisches Kunstmuseum?", "Welches Museum stellte aus Kunstwerks ausgestellt von Litauisches Kunstmuseum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Lithuanian_Art_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Greater London?", "Was stellte aus Kunstwerks ausgestellt von Greater London?", "Welches Museum stellt aus Kunstwerks ausgestellt von Greater London?", "Welches Museum stellte aus Kunstwerks ausgestellt von Greater London?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/London>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von London?", "Was stellte aus Kunstwerks ausgestellt von London?", "Welches Museum stellt aus Kunstwerks ausgestellt von London?", "Welches Museum stellte aus Kunstwerks ausgestellt von London?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/London>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Los Angeles County Museum of Art?", "Was stellte aus Kunstwerks ausgestellt von Los Angeles County Museum of Art?", "Welches Museum stellt aus Kunstwerks ausgestellt von Los Angeles County Museum of Art?", "Welches Museum stellte aus Kunstwerks ausgestellt von Los Angeles County Museum of Art?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Los_Angeles_County_Museum_of_Art>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Louvre?", "Was stellte aus Kunstwerks ausgestellt von Louvre?", "Welches Museum stellt aus Kunstwerks ausgestellt von Louvre?", "Welches Museum stellte aus Kunstwerks ausgestellt von Louvre?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Louvre>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Louvre-Lens?", "Was stellte aus Kunstwerks ausgestellt von Louvre-Lens?", "Welches Museum stellt aus Kunstwerks ausgestellt von Louvre-Lens?", "Welches Museum stellte aus Kunstwerks ausgestellt von Louvre-Lens?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Louvre>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Munch-Museum Oslo?", "Was stellte aus Kunstwerks ausgestellt von Munch-Museum Oslo?", "Welches Museum stellt aus Kunstwerks ausgestellt von Munch-Museum Oslo?", "Welches Museum stellte aus Kunstwerks ausgestellt von Munch-Museum Oslo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Munch_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von North Carolina Museum of Art?", "Was stellte aus Kunstwerks ausgestellt von North Carolina Museum of Art?", "Welches Museum stellt aus Kunstwerks ausgestellt von North Carolina Museum of Art?", "Welches Museum stellte aus Kunstwerks ausgestellt von North Carolina Museum of Art?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/North_Carolina_Museum_of_Art>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Carcassonne?", "Was stellte aus Kunstwerks ausgestellt von Carcassonne?", "Welches Museum stellt aus Kunstwerks ausgestellt von Carcassonne?", "Welches Museum stellte aus Kunstwerks ausgestellt von Carcassonne?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Carcassonne>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Carnegie Museum of Natural History?", "Was stellte aus Kunstwerks ausgestellt von Carnegie Museum of Natural History?", "Welches Museum stellt aus Kunstwerks ausgestellt von Carnegie Museum of Natural History?", "Welches Museum stellte aus Kunstwerks ausgestellt von Carnegie Museum of Natural History?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Carnegie_Museum_of_Natural_History>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Liebfrauenkirche (Brügge)?", "Was stellte aus Kunstwerks ausgestellt von Liebfrauenkirche (Brügge)?", "Welches Museum stellt aus Kunstwerks ausgestellt von Liebfrauenkirche (Brügge)?", "Welches Museum stellte aus Kunstwerks ausgestellt von Liebfrauenkirche (Brügge)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Church_of_Our_Lady,_Bruges>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Schloss Montsoreau – Museum für zeitgenössische Kunst?", "Was stellte aus Kunstwerks ausgestellt von Schloss Montsoreau – Museum für zeitgenössische Kunst?", "Welches Museum stellt aus Kunstwerks ausgestellt von Schloss Montsoreau – Museum für zeitgenössische Kunst?", "Welches Museum stellte aus Kunstwerks ausgestellt von Schloss Montsoreau – Museum für zeitgenössische Kunst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Château_de_Montsoreau-Museum_of_Contemporary_Art>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Cincinnati Art Museum?", "Was stellte aus Kunstwerks ausgestellt von Cincinnati Art Museum?", "Welches Museum stellt aus Kunstwerks ausgestellt von Cincinnati Art Museum?", "Welches Museum stellte aus Kunstwerks ausgestellt von Cincinnati Art Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Cincinnati_Art_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Sterling and Francine Clark Art Institute?", "Was stellte aus Kunstwerks ausgestellt von Sterling and Francine Clark Art Institute?", "Welches Museum stellt aus Kunstwerks ausgestellt von Sterling and Francine Clark Art Institute?", "Welches Museum stellte aus Kunstwerks ausgestellt von Sterling and Francine Clark Art Institute?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Clark_Art_Institute>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Cleveland Museum of Art?", "Was stellte aus Kunstwerks ausgestellt von Cleveland Museum of Art?", "Welches Museum stellt aus Kunstwerks ausgestellt von Cleveland Museum of Art?", "Welches Museum stellte aus Kunstwerks ausgestellt von Cleveland Museum of Art?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Cleveland_Museum_of_Art>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Colgate University?", "Was stellte aus Kunstwerks ausgestellt von Colgate University?", "Welches Museum stellt aus Kunstwerks ausgestellt von Colgate University?", "Welches Museum stellte aus Kunstwerks ausgestellt von Colgate University?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Colgate_University>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Provinzmuseum Gansu?", "Was stellte aus Kunstwerks ausgestellt von Provinzmuseum Gansu?", "Welches Museum stellt aus Kunstwerks ausgestellt von Provinzmuseum Gansu?", "Welches Museum stellte aus Kunstwerks ausgestellt von Provinzmuseum Gansu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Gansu_Provincial_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Getty Center?", "Was stellte aus Kunstwerks ausgestellt von Getty Center?", "Welches Museum stellt aus Kunstwerks ausgestellt von Getty Center?", "Welches Museum stellte aus Kunstwerks ausgestellt von Getty Center?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Getty_Center>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Gettysburg National Military Park?", "Was stellte aus Kunstwerks ausgestellt von Gettysburg National Military Park?", "Welches Museum stellt aus Kunstwerks ausgestellt von Gettysburg National Military Park?", "Welches Museum stellte aus Kunstwerks ausgestellt von Gettysburg National Military Park?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Gettysburg_National_Military_Park>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Städtische Galerie im Lenbachhaus?", "Was stellte aus Kunstwerks ausgestellt von Städtische Galerie im Lenbachhaus?", "Welches Museum stellt aus Kunstwerks ausgestellt von Städtische Galerie im Lenbachhaus?", "Welches Museum stellte aus Kunstwerks ausgestellt von Städtische Galerie im Lenbachhaus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Lenbachhaus>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Tartu Kunstimuuseum?", "Was stellte aus Kunstwerks ausgestellt von Tartu Kunstimuuseum?", "Welches Museum stellt aus Kunstwerks ausgestellt von Tartu Kunstimuuseum?", "Welches Museum stellte aus Kunstwerks ausgestellt von Tartu Kunstimuuseum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Tartu_Art_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Nationalgalerie Oslo?", "Was stellte aus Kunstwerks ausgestellt von Nationalgalerie Oslo?", "Welches Museum stellt aus Kunstwerks ausgestellt von Nationalgalerie Oslo?", "Welches Museum stellte aus Kunstwerks ausgestellt von Nationalgalerie Oslo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/National_Gallery_(Norway)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Museo Correr?", "Was stellte aus Kunstwerks ausgestellt von Museo Correr?", "Welches Museum stellt aus Kunstwerks ausgestellt von Museo Correr?", "Welches Museum stellte aus Kunstwerks ausgestellt von Museo Correr?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Museo_Correr>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Biblioteca Nacional de Portugal?", "Was stellte aus Kunstwerks ausgestellt von Biblioteca Nacional de Portugal?", "Welches Museum stellt aus Kunstwerks ausgestellt von Biblioteca Nacional de Portugal?", "Welches Museum stellte aus Kunstwerks ausgestellt von Biblioteca Nacional de Portugal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Biblioteca_Nacional_de_Portugal>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Museo de Bellas Artes de Bilbao?", "Was stellte aus Kunstwerks ausgestellt von Museo de Bellas Artes de Bilbao?", "Welches Museum stellt aus Kunstwerks ausgestellt von Museo de Bellas Artes de Bilbao?", "Welches Museum stellte aus Kunstwerks ausgestellt von Museo de Bellas Artes de Bilbao?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Bilbao_Fine_Arts_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Kenneth C. Griffin?", "Was stellte aus Kunstwerks ausgestellt von Kenneth C. Griffin?", "Welches Museum stellt aus Kunstwerks ausgestellt von Kenneth C. Griffin?", "Welches Museum stellte aus Kunstwerks ausgestellt von Kenneth C. Griffin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Kenneth_C._Griffin>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Provinzmuseum Liaoning?", "Was stellte aus Kunstwerks ausgestellt von Provinzmuseum Liaoning?", "Welches Museum stellt aus Kunstwerks ausgestellt von Provinzmuseum Liaoning?", "Welches Museum stellte aus Kunstwerks ausgestellt von Provinzmuseum Liaoning?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Liaoning_Provincial_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Lincoln Memorial?", "Was stellte aus Kunstwerks ausgestellt von Lincoln Memorial?", "Welches Museum stellt aus Kunstwerks ausgestellt von Lincoln Memorial?", "Welches Museum stellte aus Kunstwerks ausgestellt von Lincoln Memorial?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Lincoln_Memorial>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Kathedrale von Zadar?", "Was stellte aus Kunstwerks ausgestellt von Kathedrale von Zadar?", "Welches Museum stellt aus Kunstwerks ausgestellt von Kathedrale von Zadar?", "Welches Museum stellte aus Kunstwerks ausgestellt von Kathedrale von Zadar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Zadar_Cathedral>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Mailand?", "Was stellte aus Kunstwerks ausgestellt von Mailand?", "Welches Museum stellt aus Kunstwerks ausgestellt von Mailand?", "Welches Museum stellte aus Kunstwerks ausgestellt von Mailand?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Milan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Mailänder Dom?", "Was stellte aus Kunstwerks ausgestellt von Mailänder Dom?", "Welches Museum stellt aus Kunstwerks ausgestellt von Mailänder Dom?", "Welches Museum stellte aus Kunstwerks ausgestellt von Mailänder Dom?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Milan_Cathedral>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Moderna Museet?", "Was stellte aus Kunstwerks ausgestellt von Moderna Museet?", "Welches Museum stellt aus Kunstwerks ausgestellt von Moderna Museet?", "Welches Museum stellte aus Kunstwerks ausgestellt von Moderna Museet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Moderna_Museet>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Sankt Petersburg?", "Was stellte aus Kunstwerks ausgestellt von Sankt Petersburg?", "Welches Museum stellt aus Kunstwerks ausgestellt von Sankt Petersburg?", "Welches Museum stellte aus Kunstwerks ausgestellt von Sankt Petersburg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Saint_Petersburg>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Leningrad (Band)?", "Was stellte aus Kunstwerks ausgestellt von Leningrad (Band)?", "Welches Museum stellt aus Kunstwerks ausgestellt von Leningrad (Band)?", "Welches Museum stellte aus Kunstwerks ausgestellt von Leningrad (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Saint_Petersburg>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Dalí Museum (St. Petersburg)?", "Was stellte aus Kunstwerks ausgestellt von Dalí Museum (St. Petersburg)?", "Welches Museum stellt aus Kunstwerks ausgestellt von Dalí Museum (St. Petersburg)?", "Welches Museum stellte aus Kunstwerks ausgestellt von Dalí Museum (St. Petersburg)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Salvador_Dalí_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Musée du quai Branly?", "Was stellte aus Kunstwerks ausgestellt von Musée du quai Branly?", "Welches Museum stellt aus Kunstwerks ausgestellt von Musée du quai Branly?", "Welches Museum stellte aus Kunstwerks ausgestellt von Musée du quai Branly?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Musée_du_quai_Branly_–_Jacques_Chirac>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Manege (Moskau)?", "Was stellte aus Kunstwerks ausgestellt von Manege (Moskau)?", "Welches Museum stellt aus Kunstwerks ausgestellt von Manege (Moskau)?", "Welches Museum stellte aus Kunstwerks ausgestellt von Manege (Moskau)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Moscow_Manege>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Stiftung Sammlung E. G. Bührle?", "Was stellte aus Kunstwerks ausgestellt von Stiftung Sammlung E. G. Bührle?", "Welches Museum stellt aus Kunstwerks ausgestellt von Stiftung Sammlung E. G. Bührle?", "Welches Museum stellte aus Kunstwerks ausgestellt von Stiftung Sammlung E. G. Bührle?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Foundation_E.G._Bührle>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Galleria nazionale di Parma?", "Was stellte aus Kunstwerks ausgestellt von Galleria nazionale di Parma?", "Welches Museum stellt aus Kunstwerks ausgestellt von Galleria nazionale di Parma?", "Welches Museum stellte aus Kunstwerks ausgestellt von Galleria nazionale di Parma?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Galleria_nazionale_di_Parma>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Smithsonian American Art Museum?", "Was stellte aus Kunstwerks ausgestellt von Smithsonian American Art Museum?", "Welches Museum stellt aus Kunstwerks ausgestellt von Smithsonian American Art Museum?", "Welches Museum stellte aus Kunstwerks ausgestellt von Smithsonian American Art Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Smithsonian_American_Art_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Sofia?", "Was stellte aus Kunstwerks ausgestellt von Sofia?", "Welches Museum stellt aus Kunstwerks ausgestellt von Sofia?", "Welches Museum stellte aus Kunstwerks ausgestellt von Sofia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Sofia>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Solomon R. Guggenheim Museum?", "Was stellte aus Kunstwerks ausgestellt von Solomon R. Guggenheim Museum?", "Welches Museum stellt aus Kunstwerks ausgestellt von Solomon R. Guggenheim Museum?", "Welches Museum stellte aus Kunstwerks ausgestellt von Solomon R. Guggenheim Museum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Solomon_R._Guggenheim_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Petersdom?", "Was stellte aus Kunstwerks ausgestellt von Petersdom?", "Welches Museum stellt aus Kunstwerks ausgestellt von Petersdom?", "Welches Museum stellte aus Kunstwerks ausgestellt von Petersdom?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/St._Peter's_Basilica>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Nationalmuseum Nara?", "Was stellte aus Kunstwerks ausgestellt von Nationalmuseum Nara?", "Welches Museum stellt aus Kunstwerks ausgestellt von Nationalmuseum Nara?", "Welches Museum stellte aus Kunstwerks ausgestellt von Nationalmuseum Nara?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Nara_National_Museum>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Lettisches Nationales Kunstmuseum?", "Was stellte aus Kunstwerks ausgestellt von Lettisches Nationales Kunstmuseum?", "Welches Museum stellt aus Kunstwerks ausgestellt von Lettisches Nationales Kunstmuseum?", "Welches Museum stellte aus Kunstwerks ausgestellt von Lettisches Nationales Kunstmuseum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Latvian_National_Museum_of_Art>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Museu Nacional de Belas Artes?", "Was stellte aus Kunstwerks ausgestellt von Museu Nacional de Belas Artes?", "Welches Museum stellt aus Kunstwerks ausgestellt von Museu Nacional de Belas Artes?", "Welches Museum stellte aus Kunstwerks ausgestellt von Museu Nacional de Belas Artes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Museu_Nacional_de_Belas_Artes>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Frick Collection?", "Was stellte aus Kunstwerks ausgestellt von Frick Collection?", "Welches Museum stellt aus Kunstwerks ausgestellt von Frick Collection?", "Welches Museum stellte aus Kunstwerks ausgestellt von Frick Collection?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Frick_Collection>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Accademia (Venedig)?", "Was stellte aus Kunstwerks ausgestellt von Accademia (Venedig)?", "Welches Museum stellt aus Kunstwerks ausgestellt von Accademia (Venedig)?", "Welches Museum stellte aus Kunstwerks ausgestellt von Accademia (Venedig)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Gallerie_dell'Accademia>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Accademia di belle arti di Venezia?", "Was stellte aus Kunstwerks ausgestellt von Accademia di belle arti di Venezia?", "Welches Museum stellt aus Kunstwerks ausgestellt von Accademia di belle arti di Venezia?", "Welches Museum stellte aus Kunstwerks ausgestellt von Accademia di belle arti di Venezia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Gallerie_dell'Accademia>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "42",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MUSEUM",
    "returnType" : "MUSEUM",
    "frameType" : "VP",
    "sentences" : [ "Was stellt aus Kunstwerks ausgestellt von Harvard Art Museums?", "Was stellte aus Kunstwerks ausgestellt von Harvard Art Museums?", "Welches Museum stellt aus Kunstwerks ausgestellt von Harvard Art Museums?", "Welches Museum stellte aus Kunstwerks ausgestellt von Harvard Art Museums?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/museum> <http://dbpedia.org/resource/Harvard_Art_Museums>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Renai_Bakumatsu_Kareshi?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Renai_Bakumatsu_Kareshi?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Renai_Bakumatsu_Kareshi?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Renai_Bakumatsu_Kareshi?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Renai_Bakumatsu_Kareshi?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Renai_Bakumatsu_Kareshi?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Renai_Bakumatsu_Kareshi?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Renai_Bakumatsu_Kareshi?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Renai_Bakumatsu_Kareshi?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Renai_Bakumatsu_Kareshi?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Renai_Bakumatsu_Kareshi?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Renai_Bakumatsu_Kareshi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Renai_Bakumatsu_Kareshi> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Strawberry_Shortcake:_The_Sweet_Dreams_Movie?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Strawberry_Shortcake:_The_Sweet_Dreams_Movie?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Strawberry_Shortcake:_The_Sweet_Dreams_Movie?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Strawberry_Shortcake:_The_Sweet_Dreams_Movie?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Strawberry_Shortcake:_The_Sweet_Dreams_Movie?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Strawberry_Shortcake:_The_Sweet_Dreams_Movie?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Strawberry_Shortcake:_The_Sweet_Dreams_Movie?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Strawberry_Shortcake:_The_Sweet_Dreams_Movie?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Strawberry_Shortcake:_The_Sweet_Dreams_Movie?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Strawberry_Shortcake:_The_Sweet_Dreams_Movie?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Strawberry_Shortcake:_The_Sweet_Dreams_Movie?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Strawberry_Shortcake:_The_Sweet_Dreams_Movie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Strawberry_Shortcake:_The_Sweet_Dreams_Movie> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Das schönste Freudenhaus in Texas?", "Was wird entwickelt von die Komponisten für Das schönste Freudenhaus in Texas?", "Was wurde entwickelt von der Komponist für Das schönste Freudenhaus in Texas?", "Was wurde entwickelt von die Komponisten für Das schönste Freudenhaus in Texas?", "Welche Werks werden entwickelt von der Komponist für Das schönste Freudenhaus in Texas?", "Welche Werks werden entwickelt von die Komponisten für Das schönste Freudenhaus in Texas?", "Welche Werks wurden entwickelt von der Komponist für Das schönste Freudenhaus in Texas?", "Welche Werks wurden entwickelt von die Komponisten für Das schönste Freudenhaus in Texas?", "Welches Werk wird entwickelt von der Komponist für Das schönste Freudenhaus in Texas?", "Welches Werk wird entwickelt von die Komponisten für Das schönste Freudenhaus in Texas?", "Welches Werk wurde entwickelt von der Komponist für Das schönste Freudenhaus in Texas?", "Welches Werk wurde entwickelt von die Komponisten für Das schönste Freudenhaus in Texas?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Best_Little_Whorehouse_in_Texas_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Jab_Harry_Met_Sejal?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Jab_Harry_Met_Sejal?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Jab_Harry_Met_Sejal?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Jab_Harry_Met_Sejal?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Jab_Harry_Met_Sejal?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Jab_Harry_Met_Sejal?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Jab_Harry_Met_Sejal?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Jab_Harry_Met_Sejal?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Jab_Harry_Met_Sejal?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Jab_Harry_Met_Sejal?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Jab_Harry_Met_Sejal?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Jab_Harry_Met_Sejal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jab_Harry_Met_Sejal> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Rhinestone_(film)?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Rhinestone_(film)?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Rhinestone_(film)?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Rhinestone_(film)?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Rhinestone_(film)?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Rhinestone_(film)?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Rhinestone_(film)?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Rhinestone_(film)?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Rhinestone_(film)?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Rhinestone_(film)?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Rhinestone_(film)?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Rhinestone_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rhinestone_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Straight_Talk?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Straight_Talk?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Straight_Talk?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Straight_Talk?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Straight_Talk?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Straight_Talk?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Straight_Talk?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Straight_Talk?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Straight_Talk?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Straight_Talk?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Straight_Talk?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Straight_Talk?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Straight_Talk> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Moderne Zeiten?", "Was wird entwickelt von die Komponisten für Moderne Zeiten?", "Was wurde entwickelt von der Komponist für Moderne Zeiten?", "Was wurde entwickelt von die Komponisten für Moderne Zeiten?", "Welche Werks werden entwickelt von der Komponist für Moderne Zeiten?", "Welche Werks werden entwickelt von die Komponisten für Moderne Zeiten?", "Welche Werks wurden entwickelt von der Komponist für Moderne Zeiten?", "Welche Werks wurden entwickelt von die Komponisten für Moderne Zeiten?", "Welches Werk wird entwickelt von der Komponist für Moderne Zeiten?", "Welches Werk wird entwickelt von die Komponisten für Moderne Zeiten?", "Welches Werk wurde entwickelt von der Komponist für Moderne Zeiten?", "Welches Werk wurde entwickelt von die Komponisten für Moderne Zeiten?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Modern_Times_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Lichter der Großstadt?", "Was wird entwickelt von die Komponisten für Lichter der Großstadt?", "Was wurde entwickelt von der Komponist für Lichter der Großstadt?", "Was wurde entwickelt von die Komponisten für Lichter der Großstadt?", "Welche Werks werden entwickelt von der Komponist für Lichter der Großstadt?", "Welche Werks werden entwickelt von die Komponisten für Lichter der Großstadt?", "Welche Werks wurden entwickelt von der Komponist für Lichter der Großstadt?", "Welche Werks wurden entwickelt von die Komponisten für Lichter der Großstadt?", "Welches Werk wird entwickelt von der Komponist für Lichter der Großstadt?", "Welches Werk wird entwickelt von die Komponisten für Lichter der Großstadt?", "Welches Werk wurde entwickelt von der Komponist für Lichter der Großstadt?", "Welches Werk wurde entwickelt von die Komponisten für Lichter der Großstadt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/City_Lights> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Rampenlicht (Film)?", "Was wird entwickelt von die Komponisten für Rampenlicht (Film)?", "Was wurde entwickelt von der Komponist für Rampenlicht (Film)?", "Was wurde entwickelt von die Komponisten für Rampenlicht (Film)?", "Welche Werks werden entwickelt von der Komponist für Rampenlicht (Film)?", "Welche Werks werden entwickelt von die Komponisten für Rampenlicht (Film)?", "Welche Werks wurden entwickelt von der Komponist für Rampenlicht (Film)?", "Welche Werks wurden entwickelt von die Komponisten für Rampenlicht (Film)?", "Welches Werk wird entwickelt von der Komponist für Rampenlicht (Film)?", "Welches Werk wird entwickelt von die Komponisten für Rampenlicht (Film)?", "Welches Werk wurde entwickelt von der Komponist für Rampenlicht (Film)?", "Welches Werk wurde entwickelt von die Komponisten für Rampenlicht (Film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Limelight_(1952_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Goldrausch (Chaplin)?", "Was wird entwickelt von die Komponisten für Goldrausch (Chaplin)?", "Was wurde entwickelt von der Komponist für Goldrausch (Chaplin)?", "Was wurde entwickelt von die Komponisten für Goldrausch (Chaplin)?", "Welche Werks werden entwickelt von der Komponist für Goldrausch (Chaplin)?", "Welche Werks werden entwickelt von die Komponisten für Goldrausch (Chaplin)?", "Welche Werks wurden entwickelt von der Komponist für Goldrausch (Chaplin)?", "Welche Werks wurden entwickelt von die Komponisten für Goldrausch (Chaplin)?", "Welches Werk wird entwickelt von der Komponist für Goldrausch (Chaplin)?", "Welches Werk wird entwickelt von die Komponisten für Goldrausch (Chaplin)?", "Welches Werk wurde entwickelt von der Komponist für Goldrausch (Chaplin)?", "Welches Werk wurde entwickelt von die Komponisten für Goldrausch (Chaplin)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Gold_Rush> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Der große Diktator?", "Was wird entwickelt von die Komponisten für Der große Diktator?", "Was wurde entwickelt von der Komponist für Der große Diktator?", "Was wurde entwickelt von die Komponisten für Der große Diktator?", "Welche Werks werden entwickelt von der Komponist für Der große Diktator?", "Welche Werks werden entwickelt von die Komponisten für Der große Diktator?", "Welche Werks wurden entwickelt von der Komponist für Der große Diktator?", "Welche Werks wurden entwickelt von die Komponisten für Der große Diktator?", "Welches Werk wird entwickelt von der Komponist für Der große Diktator?", "Welches Werk wird entwickelt von die Komponisten für Der große Diktator?", "Welches Werk wurde entwickelt von der Komponist für Der große Diktator?", "Welches Werk wurde entwickelt von die Komponisten für Der große Diktator?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Great_Dictator> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Die Gräfin von Hongkong?", "Was wird entwickelt von die Komponisten für Die Gräfin von Hongkong?", "Was wurde entwickelt von der Komponist für Die Gräfin von Hongkong?", "Was wurde entwickelt von die Komponisten für Die Gräfin von Hongkong?", "Welche Werks werden entwickelt von der Komponist für Die Gräfin von Hongkong?", "Welche Werks werden entwickelt von die Komponisten für Die Gräfin von Hongkong?", "Welche Werks wurden entwickelt von der Komponist für Die Gräfin von Hongkong?", "Welche Werks wurden entwickelt von die Komponisten für Die Gräfin von Hongkong?", "Welches Werk wird entwickelt von der Komponist für Die Gräfin von Hongkong?", "Welches Werk wird entwickelt von die Komponisten für Die Gräfin von Hongkong?", "Welches Werk wurde entwickelt von der Komponist für Die Gräfin von Hongkong?", "Welches Werk wurde entwickelt von die Komponisten für Die Gräfin von Hongkong?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A_Countess_from_Hong_Kong> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Ein König in New York?", "Was wird entwickelt von die Komponisten für Ein König in New York?", "Was wurde entwickelt von der Komponist für Ein König in New York?", "Was wurde entwickelt von die Komponisten für Ein König in New York?", "Welche Werks werden entwickelt von der Komponist für Ein König in New York?", "Welche Werks werden entwickelt von die Komponisten für Ein König in New York?", "Welche Werks wurden entwickelt von der Komponist für Ein König in New York?", "Welche Werks wurden entwickelt von die Komponisten für Ein König in New York?", "Welches Werk wird entwickelt von der Komponist für Ein König in New York?", "Welches Werk wird entwickelt von die Komponisten für Ein König in New York?", "Welches Werk wurde entwickelt von der Komponist für Ein König in New York?", "Welches Werk wurde entwickelt von die Komponisten für Ein König in New York?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A_King_in_New_York> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Monsieur Verdoux – Der Frauenmörder von Paris?", "Was wird entwickelt von die Komponisten für Monsieur Verdoux – Der Frauenmörder von Paris?", "Was wurde entwickelt von der Komponist für Monsieur Verdoux – Der Frauenmörder von Paris?", "Was wurde entwickelt von die Komponisten für Monsieur Verdoux – Der Frauenmörder von Paris?", "Welche Werks werden entwickelt von der Komponist für Monsieur Verdoux – Der Frauenmörder von Paris?", "Welche Werks werden entwickelt von die Komponisten für Monsieur Verdoux – Der Frauenmörder von Paris?", "Welche Werks wurden entwickelt von der Komponist für Monsieur Verdoux – Der Frauenmörder von Paris?", "Welche Werks wurden entwickelt von die Komponisten für Monsieur Verdoux – Der Frauenmörder von Paris?", "Welches Werk wird entwickelt von der Komponist für Monsieur Verdoux – Der Frauenmörder von Paris?", "Welches Werk wird entwickelt von die Komponisten für Monsieur Verdoux – Der Frauenmörder von Paris?", "Welches Werk wurde entwickelt von der Komponist für Monsieur Verdoux – Der Frauenmörder von Paris?", "Welches Werk wurde entwickelt von die Komponisten für Monsieur Verdoux – Der Frauenmörder von Paris?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Monsieur_Verdoux> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/The_Circus_(1928_film)?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/The_Circus_(1928_film)?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/The_Circus_(1928_film)?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/The_Circus_(1928_film)?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/The_Circus_(1928_film)?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/The_Circus_(1928_film)?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/The_Circus_(1928_film)?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/The_Circus_(1928_film)?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/The_Circus_(1928_film)?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/The_Circus_(1928_film)?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/The_Circus_(1928_film)?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/The_Circus_(1928_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Circus_(1928_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Stalin's_Funeral?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Stalin's_Funeral?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Stalin's_Funeral?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Stalin's_Funeral?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Stalin's_Funeral?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Stalin's_Funeral?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Stalin's_Funeral?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Stalin's_Funeral?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Stalin's_Funeral?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Stalin's_Funeral?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Stalin's_Funeral?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Stalin's_Funeral?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Stalin's_Funeral> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Ys_(anime)?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Ys_(anime)?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Ys_(anime)?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Ys_(anime)?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Ys_(anime)?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Ys_(anime)?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Ys_(anime)?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Ys_(anime)?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Ys_(anime)?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Ys_(anime)?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Ys_(anime)?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Ys_(anime)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ys_(anime)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Trouble_Chocolate?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Trouble_Chocolate?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Trouble_Chocolate?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Trouble_Chocolate?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Trouble_Chocolate?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Trouble_Chocolate?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Trouble_Chocolate?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Trouble_Chocolate?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Trouble_Chocolate?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Trouble_Chocolate?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Trouble_Chocolate?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Trouble_Chocolate?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Trouble_Chocolate> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Ladybug_&_Cat_Noir_Awakening?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Ladybug_&_Cat_Noir_Awakening?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Ladybug_&_Cat_Noir_Awakening?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Ladybug_&_Cat_Noir_Awakening?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Ladybug_&_Cat_Noir_Awakening?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Ladybug_&_Cat_Noir_Awakening?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Ladybug_&_Cat_Noir_Awakening?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Ladybug_&_Cat_Noir_Awakening?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Ladybug_&_Cat_Noir_Awakening?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Ladybug_&_Cat_Noir_Awakening?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Ladybug_&_Cat_Noir_Awakening?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Ladybug_&_Cat_Noir_Awakening?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ladybug_&_Cat_Noir_Awakening> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Timerider – Das Abenteuer des Lyle Swann?", "Was wird entwickelt von die Komponisten für Timerider – Das Abenteuer des Lyle Swann?", "Was wurde entwickelt von der Komponist für Timerider – Das Abenteuer des Lyle Swann?", "Was wurde entwickelt von die Komponisten für Timerider – Das Abenteuer des Lyle Swann?", "Welche Werks werden entwickelt von der Komponist für Timerider – Das Abenteuer des Lyle Swann?", "Welche Werks werden entwickelt von die Komponisten für Timerider – Das Abenteuer des Lyle Swann?", "Welche Werks wurden entwickelt von der Komponist für Timerider – Das Abenteuer des Lyle Swann?", "Welche Werks wurden entwickelt von die Komponisten für Timerider – Das Abenteuer des Lyle Swann?", "Welches Werk wird entwickelt von der Komponist für Timerider – Das Abenteuer des Lyle Swann?", "Welches Werk wird entwickelt von die Komponisten für Timerider – Das Abenteuer des Lyle Swann?", "Welches Werk wurde entwickelt von der Komponist für Timerider – Das Abenteuer des Lyle Swann?", "Welches Werk wurde entwickelt von die Komponisten für Timerider – Das Abenteuer des Lyle Swann?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Timerider:_The_Adventure_of_Lyle_Swann> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Northville_Cemetery_Massacre?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Northville_Cemetery_Massacre?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Northville_Cemetery_Massacre?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Northville_Cemetery_Massacre?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Northville_Cemetery_Massacre?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Northville_Cemetery_Massacre?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Northville_Cemetery_Massacre?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Northville_Cemetery_Massacre?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Northville_Cemetery_Massacre?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Northville_Cemetery_Massacre?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Northville_Cemetery_Massacre?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Northville_Cemetery_Massacre?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Northville_Cemetery_Massacre> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Eine starke Nummer?", "Was wird entwickelt von die Komponisten für Eine starke Nummer?", "Was wurde entwickelt von der Komponist für Eine starke Nummer?", "Was wurde entwickelt von die Komponisten für Eine starke Nummer?", "Welche Werks werden entwickelt von der Komponist für Eine starke Nummer?", "Welche Werks werden entwickelt von die Komponisten für Eine starke Nummer?", "Welche Werks wurden entwickelt von der Komponist für Eine starke Nummer?", "Welche Werks wurden entwickelt von die Komponisten für Eine starke Nummer?", "Welches Werk wird entwickelt von der Komponist für Eine starke Nummer?", "Welches Werk wird entwickelt von die Komponisten für Eine starke Nummer?", "Welches Werk wurde entwickelt von der Komponist für Eine starke Nummer?", "Welches Werk wurde entwickelt von die Komponisten für Eine starke Nummer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/No_Small_Affair> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für The Killing Fields – Schreiendes Land?", "Was wird entwickelt von die Komponisten für The Killing Fields – Schreiendes Land?", "Was wurde entwickelt von der Komponist für The Killing Fields – Schreiendes Land?", "Was wurde entwickelt von die Komponisten für The Killing Fields – Schreiendes Land?", "Welche Werks werden entwickelt von der Komponist für The Killing Fields – Schreiendes Land?", "Welche Werks werden entwickelt von die Komponisten für The Killing Fields – Schreiendes Land?", "Welche Werks wurden entwickelt von der Komponist für The Killing Fields – Schreiendes Land?", "Welche Werks wurden entwickelt von die Komponisten für The Killing Fields – Schreiendes Land?", "Welches Werk wird entwickelt von der Komponist für The Killing Fields – Schreiendes Land?", "Welches Werk wird entwickelt von die Komponisten für The Killing Fields – Schreiendes Land?", "Welches Werk wurde entwickelt von der Komponist für The Killing Fields – Schreiendes Land?", "Welches Werk wurde entwickelt von die Komponisten für The Killing Fields – Schreiendes Land?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Killing_Fields_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Memories Within Miss Aggie?", "Was wird entwickelt von die Komponisten für Memories Within Miss Aggie?", "Was wurde entwickelt von der Komponist für Memories Within Miss Aggie?", "Was wurde entwickelt von die Komponisten für Memories Within Miss Aggie?", "Welche Werks werden entwickelt von der Komponist für Memories Within Miss Aggie?", "Welche Werks werden entwickelt von die Komponisten für Memories Within Miss Aggie?", "Welche Werks wurden entwickelt von der Komponist für Memories Within Miss Aggie?", "Welche Werks wurden entwickelt von die Komponisten für Memories Within Miss Aggie?", "Welches Werk wird entwickelt von der Komponist für Memories Within Miss Aggie?", "Welches Werk wird entwickelt von die Komponisten für Memories Within Miss Aggie?", "Welches Werk wurde entwickelt von der Komponist für Memories Within Miss Aggie?", "Welches Werk wurde entwickelt von die Komponisten für Memories Within Miss Aggie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Memories_Within_Miss_Aggie> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Charlotte_(1974_film)?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Charlotte_(1974_film)?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Charlotte_(1974_film)?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Charlotte_(1974_film)?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Charlotte_(1974_film)?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Charlotte_(1974_film)?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Charlotte_(1974_film)?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Charlotte_(1974_film)?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Charlotte_(1974_film)?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Charlotte_(1974_film)?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Charlotte_(1974_film)?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Charlotte_(1974_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charlotte_(1974_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/The_Space_Movie?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/The_Space_Movie?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/The_Space_Movie?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/The_Space_Movie?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/The_Space_Movie?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/The_Space_Movie?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/The_Space_Movie?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/The_Space_Movie?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/The_Space_Movie?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/The_Space_Movie?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/The_Space_Movie?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/The_Space_Movie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Space_Movie> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Digimon (Anime)?", "Was wird entwickelt von die Komponisten für Digimon (Anime)?", "Was wurde entwickelt von der Komponist für Digimon (Anime)?", "Was wurde entwickelt von die Komponisten für Digimon (Anime)?", "Welche Werks werden entwickelt von der Komponist für Digimon (Anime)?", "Welche Werks werden entwickelt von die Komponisten für Digimon (Anime)?", "Welche Werks wurden entwickelt von der Komponist für Digimon (Anime)?", "Welche Werks wurden entwickelt von die Komponisten für Digimon (Anime)?", "Welches Werk wird entwickelt von der Komponist für Digimon (Anime)?", "Welches Werk wird entwickelt von die Komponisten für Digimon (Anime)?", "Welches Werk wurde entwickelt von der Komponist für Digimon (Anime)?", "Welches Werk wurde entwickelt von die Komponisten für Digimon (Anime)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Digimon_Adventure> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Die geheimnisvollen Städte des Goldes?", "Was wird entwickelt von die Komponisten für Die geheimnisvollen Städte des Goldes?", "Was wurde entwickelt von der Komponist für Die geheimnisvollen Städte des Goldes?", "Was wurde entwickelt von die Komponisten für Die geheimnisvollen Städte des Goldes?", "Welche Werks werden entwickelt von der Komponist für Die geheimnisvollen Städte des Goldes?", "Welche Werks werden entwickelt von die Komponisten für Die geheimnisvollen Städte des Goldes?", "Welche Werks wurden entwickelt von der Komponist für Die geheimnisvollen Städte des Goldes?", "Welche Werks wurden entwickelt von die Komponisten für Die geheimnisvollen Städte des Goldes?", "Welches Werk wird entwickelt von der Komponist für Die geheimnisvollen Städte des Goldes?", "Welches Werk wird entwickelt von die Komponisten für Die geheimnisvollen Städte des Goldes?", "Welches Werk wurde entwickelt von der Komponist für Die geheimnisvollen Städte des Goldes?", "Welches Werk wurde entwickelt von die Komponisten für Die geheimnisvollen Städte des Goldes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Mysterious_Cities_of_Gold> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Münchhausens Abenteuer auf dem Mond?", "Was wird entwickelt von die Komponisten für Münchhausens Abenteuer auf dem Mond?", "Was wurde entwickelt von der Komponist für Münchhausens Abenteuer auf dem Mond?", "Was wurde entwickelt von die Komponisten für Münchhausens Abenteuer auf dem Mond?", "Welche Werks werden entwickelt von der Komponist für Münchhausens Abenteuer auf dem Mond?", "Welche Werks werden entwickelt von die Komponisten für Münchhausens Abenteuer auf dem Mond?", "Welche Werks wurden entwickelt von der Komponist für Münchhausens Abenteuer auf dem Mond?", "Welche Werks wurden entwickelt von die Komponisten für Münchhausens Abenteuer auf dem Mond?", "Welches Werk wird entwickelt von der Komponist für Münchhausens Abenteuer auf dem Mond?", "Welches Werk wird entwickelt von die Komponisten für Münchhausens Abenteuer auf dem Mond?", "Welches Werk wurde entwickelt von der Komponist für Münchhausens Abenteuer auf dem Mond?", "Welches Werk wurde entwickelt von die Komponisten für Münchhausens Abenteuer auf dem Mond?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Secret_of_the_Selenites> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Das Geheimnis des Zauberschwertes?", "Was wird entwickelt von die Komponisten für Das Geheimnis des Zauberschwertes?", "Was wurde entwickelt von der Komponist für Das Geheimnis des Zauberschwertes?", "Was wurde entwickelt von die Komponisten für Das Geheimnis des Zauberschwertes?", "Welche Werks werden entwickelt von der Komponist für Das Geheimnis des Zauberschwertes?", "Welche Werks werden entwickelt von die Komponisten für Das Geheimnis des Zauberschwertes?", "Welche Werks wurden entwickelt von der Komponist für Das Geheimnis des Zauberschwertes?", "Welche Werks wurden entwickelt von die Komponisten für Das Geheimnis des Zauberschwertes?", "Welches Werk wird entwickelt von der Komponist für Das Geheimnis des Zauberschwertes?", "Welches Werk wird entwickelt von die Komponisten für Das Geheimnis des Zauberschwertes?", "Welches Werk wurde entwickelt von der Komponist für Das Geheimnis des Zauberschwertes?", "Welches Werk wurde entwickelt von die Komponisten für Das Geheimnis des Zauberschwertes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Secret_of_the_Sword> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Person_to_Bunny?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Person_to_Bunny?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Person_to_Bunny?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Person_to_Bunny?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Person_to_Bunny?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Person_to_Bunny?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Person_to_Bunny?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Person_to_Bunny?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Person_to_Bunny?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Person_to_Bunny?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Person_to_Bunny?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Person_to_Bunny?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Person_to_Bunny> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Rainbow_Brite_and_the_Star_Stealer?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Rainbow_Brite_and_the_Star_Stealer?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Rainbow_Brite_and_the_Star_Stealer?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Rainbow_Brite_and_the_Star_Stealer?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Rainbow_Brite_and_the_Star_Stealer?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Rainbow_Brite_and_the_Star_Stealer?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Rainbow_Brite_and_the_Star_Stealer?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Rainbow_Brite_and_the_Star_Stealer?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Rainbow_Brite_and_the_Star_Stealer?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Rainbow_Brite_and_the_Star_Stealer?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Rainbow_Brite_and_the_Star_Stealer?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Rainbow_Brite_and_the_Star_Stealer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rainbow_Brite_and_the_Star_Stealer> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Ox_Tales?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Ox_Tales?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Ox_Tales?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Ox_Tales?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Ox_Tales?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Ox_Tales?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Ox_Tales?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Ox_Tales?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Ox_Tales?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Ox_Tales?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Ox_Tales?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Ox_Tales?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ox_Tales> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Heathcliff:_The_Movie?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Heathcliff:_The_Movie?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Heathcliff:_The_Movie?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Heathcliff:_The_Movie?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Heathcliff:_The_Movie?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Heathcliff:_The_Movie?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Heathcliff:_The_Movie?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Heathcliff:_The_Movie?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Heathcliff:_The_Movie?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Heathcliff:_The_Movie?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Heathcliff:_The_Movie?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Heathcliff:_The_Movie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Heathcliff:_The_Movie> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Here_Come_the_Littles?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Here_Come_the_Littles?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Here_Come_the_Littles?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Here_Come_the_Littles?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Here_Come_the_Littles?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Here_Come_the_Littles?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Here_Come_the_Littles?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Here_Come_the_Littles?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Here_Come_the_Littles?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Here_Come_the_Littles?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Here_Come_the_Littles?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Here_Come_the_Littles?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Here_Come_the_Littles> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Wie das Leben so spielt?", "Was wird entwickelt von die Komponisten für Wie das Leben so spielt?", "Was wurde entwickelt von der Komponist für Wie das Leben so spielt?", "Was wurde entwickelt von die Komponisten für Wie das Leben so spielt?", "Welche Werks werden entwickelt von der Komponist für Wie das Leben so spielt?", "Welche Werks werden entwickelt von die Komponisten für Wie das Leben so spielt?", "Welche Werks wurden entwickelt von der Komponist für Wie das Leben so spielt?", "Welche Werks wurden entwickelt von die Komponisten für Wie das Leben so spielt?", "Welches Werk wird entwickelt von der Komponist für Wie das Leben so spielt?", "Welches Werk wird entwickelt von die Komponisten für Wie das Leben so spielt?", "Welches Werk wurde entwickelt von der Komponist für Wie das Leben so spielt?", "Welches Werk wurde entwickelt von die Komponisten für Wie das Leben so spielt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Funny_People> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Goats_(film)?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Goats_(film)?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Goats_(film)?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Goats_(film)?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Goats_(film)?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Goats_(film)?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Goats_(film)?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Goats_(film)?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Goats_(film)?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Goats_(film)?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Goats_(film)?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Goats_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Goats_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Clean (Film)?", "Was wird entwickelt von die Komponisten für Clean (Film)?", "Was wurde entwickelt von der Komponist für Clean (Film)?", "Was wurde entwickelt von die Komponisten für Clean (Film)?", "Welche Werks werden entwickelt von der Komponist für Clean (Film)?", "Welche Werks werden entwickelt von die Komponisten für Clean (Film)?", "Welche Werks wurden entwickelt von der Komponist für Clean (Film)?", "Welche Werks wurden entwickelt von die Komponisten für Clean (Film)?", "Welches Werk wird entwickelt von der Komponist für Clean (Film)?", "Welches Werk wird entwickelt von die Komponisten für Clean (Film)?", "Welches Werk wurde entwickelt von der Komponist für Clean (Film)?", "Welches Werk wurde entwickelt von die Komponisten für Clean (Film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Clean_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Der Wüstenplanet (Film)?", "Was wird entwickelt von die Komponisten für Der Wüstenplanet (Film)?", "Was wurde entwickelt von der Komponist für Der Wüstenplanet (Film)?", "Was wurde entwickelt von die Komponisten für Der Wüstenplanet (Film)?", "Welche Werks werden entwickelt von der Komponist für Der Wüstenplanet (Film)?", "Welche Werks werden entwickelt von die Komponisten für Der Wüstenplanet (Film)?", "Welche Werks wurden entwickelt von der Komponist für Der Wüstenplanet (Film)?", "Welche Werks wurden entwickelt von die Komponisten für Der Wüstenplanet (Film)?", "Welches Werk wird entwickelt von der Komponist für Der Wüstenplanet (Film)?", "Welches Werk wird entwickelt von die Komponisten für Der Wüstenplanet (Film)?", "Welches Werk wurde entwickelt von der Komponist für Der Wüstenplanet (Film)?", "Welches Werk wurde entwickelt von die Komponisten für Der Wüstenplanet (Film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dune_(1984_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Sebastiane?", "Was wird entwickelt von die Komponisten für Sebastiane?", "Was wurde entwickelt von der Komponist für Sebastiane?", "Was wurde entwickelt von die Komponisten für Sebastiane?", "Welche Werks werden entwickelt von der Komponist für Sebastiane?", "Welche Werks werden entwickelt von die Komponisten für Sebastiane?", "Welche Werks wurden entwickelt von der Komponist für Sebastiane?", "Welche Werks wurden entwickelt von die Komponisten für Sebastiane?", "Welches Werk wird entwickelt von der Komponist für Sebastiane?", "Welches Werk wird entwickelt von die Komponisten für Sebastiane?", "Welches Werk wurde entwickelt von der Komponist für Sebastiane?", "Welches Werk wurde entwickelt von die Komponisten für Sebastiane?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sebastiane> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für The Jacket?", "Was wird entwickelt von die Komponisten für The Jacket?", "Was wurde entwickelt von der Komponist für The Jacket?", "Was wurde entwickelt von die Komponisten für The Jacket?", "Welche Werks werden entwickelt von der Komponist für The Jacket?", "Welche Werks werden entwickelt von die Komponisten für The Jacket?", "Welche Werks wurden entwickelt von der Komponist für The Jacket?", "Welche Werks wurden entwickelt von die Komponisten für The Jacket?", "Welches Werk wird entwickelt von der Komponist für The Jacket?", "Welches Werk wird entwickelt von die Komponisten für The Jacket?", "Welches Werk wurde entwickelt von der Komponist für The Jacket?", "Welches Werk wurde entwickelt von die Komponisten für The Jacket?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Jacket> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für In meinem Himmel?", "Was wird entwickelt von die Komponisten für In meinem Himmel?", "Was wurde entwickelt von der Komponist für In meinem Himmel?", "Was wurde entwickelt von die Komponisten für In meinem Himmel?", "Welche Werks werden entwickelt von der Komponist für In meinem Himmel?", "Welche Werks werden entwickelt von die Komponisten für In meinem Himmel?", "Welche Werks wurden entwickelt von der Komponist für In meinem Himmel?", "Welche Werks wurden entwickelt von die Komponisten für In meinem Himmel?", "Welches Werk wird entwickelt von der Komponist für In meinem Himmel?", "Welches Werk wird entwickelt von die Komponisten für In meinem Himmel?", "Welches Werk wurde entwickelt von der Komponist für In meinem Himmel?", "Welches Werk wurde entwickelt von die Komponisten für In meinem Himmel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Lovely_Bones_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für The Million Dollar Hotel?", "Was wird entwickelt von die Komponisten für The Million Dollar Hotel?", "Was wurde entwickelt von der Komponist für The Million Dollar Hotel?", "Was wurde entwickelt von die Komponisten für The Million Dollar Hotel?", "Welche Werks werden entwickelt von der Komponist für The Million Dollar Hotel?", "Welche Werks werden entwickelt von die Komponisten für The Million Dollar Hotel?", "Welche Werks wurden entwickelt von der Komponist für The Million Dollar Hotel?", "Welche Werks wurden entwickelt von die Komponisten für The Million Dollar Hotel?", "Welches Werk wird entwickelt von der Komponist für The Million Dollar Hotel?", "Welches Werk wird entwickelt von die Komponisten für The Million Dollar Hotel?", "Welches Werk wurde entwickelt von der Komponist für The Million Dollar Hotel?", "Welches Werk wurde entwickelt von die Komponisten für The Million Dollar Hotel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Million_Dollar_Hotel> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für The Pervert’s Guide to Cinema?", "Was wird entwickelt von die Komponisten für The Pervert’s Guide to Cinema?", "Was wurde entwickelt von der Komponist für The Pervert’s Guide to Cinema?", "Was wurde entwickelt von die Komponisten für The Pervert’s Guide to Cinema?", "Welche Werks werden entwickelt von der Komponist für The Pervert’s Guide to Cinema?", "Welche Werks werden entwickelt von die Komponisten für The Pervert’s Guide to Cinema?", "Welche Werks wurden entwickelt von der Komponist für The Pervert’s Guide to Cinema?", "Welche Werks wurden entwickelt von die Komponisten für The Pervert’s Guide to Cinema?", "Welches Werk wird entwickelt von der Komponist für The Pervert’s Guide to Cinema?", "Welches Werk wird entwickelt von die Komponisten für The Pervert’s Guide to Cinema?", "Welches Werk wurde entwickelt von der Komponist für The Pervert’s Guide to Cinema?", "Welches Werk wurde entwickelt von die Komponisten für The Pervert’s Guide to Cinema?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Pervert's_Guide_to_Cinema> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Die Bettlektüre?", "Was wird entwickelt von die Komponisten für Die Bettlektüre?", "Was wurde entwickelt von der Komponist für Die Bettlektüre?", "Was wurde entwickelt von die Komponisten für Die Bettlektüre?", "Welche Werks werden entwickelt von der Komponist für Die Bettlektüre?", "Welche Werks werden entwickelt von die Komponisten für Die Bettlektüre?", "Welche Werks wurden entwickelt von der Komponist für Die Bettlektüre?", "Welche Werks wurden entwickelt von die Komponisten für Die Bettlektüre?", "Welches Werk wird entwickelt von der Komponist für Die Bettlektüre?", "Welches Werk wird entwickelt von die Komponisten für Die Bettlektüre?", "Welches Werk wurde entwickelt von der Komponist für Die Bettlektüre?", "Welches Werk wurde entwickelt von die Komponisten für Die Bettlektüre?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Pillow_Book_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Daft Punk’s Electroma?", "Was wird entwickelt von die Komponisten für Daft Punk’s Electroma?", "Was wurde entwickelt von der Komponist für Daft Punk’s Electroma?", "Was wurde entwickelt von die Komponisten für Daft Punk’s Electroma?", "Welche Werks werden entwickelt von der Komponist für Daft Punk’s Electroma?", "Welche Werks werden entwickelt von die Komponisten für Daft Punk’s Electroma?", "Welche Werks wurden entwickelt von der Komponist für Daft Punk’s Electroma?", "Welche Werks wurden entwickelt von die Komponisten für Daft Punk’s Electroma?", "Welches Werk wird entwickelt von der Komponist für Daft Punk’s Electroma?", "Welches Werk wird entwickelt von die Komponisten für Daft Punk’s Electroma?", "Welches Werk wurde entwickelt von der Komponist für Daft Punk’s Electroma?", "Welches Werk wurde entwickelt von die Komponisten für Daft Punk’s Electroma?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Daft_Punk's_Electroma> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Ich und Earl und das Mädchen (Film)?", "Was wird entwickelt von die Komponisten für Ich und Earl und das Mädchen (Film)?", "Was wurde entwickelt von der Komponist für Ich und Earl und das Mädchen (Film)?", "Was wurde entwickelt von die Komponisten für Ich und Earl und das Mädchen (Film)?", "Welche Werks werden entwickelt von der Komponist für Ich und Earl und das Mädchen (Film)?", "Welche Werks werden entwickelt von die Komponisten für Ich und Earl und das Mädchen (Film)?", "Welche Werks wurden entwickelt von der Komponist für Ich und Earl und das Mädchen (Film)?", "Welche Werks wurden entwickelt von die Komponisten für Ich und Earl und das Mädchen (Film)?", "Welches Werk wird entwickelt von der Komponist für Ich und Earl und das Mädchen (Film)?", "Welches Werk wird entwickelt von die Komponisten für Ich und Earl und das Mädchen (Film)?", "Welches Werk wurde entwickelt von der Komponist für Ich und Earl und das Mädchen (Film)?", "Welches Werk wurde entwickelt von die Komponisten für Ich und Earl und das Mädchen (Film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Me_and_Earl_and_the_Dying_Girl_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Blue (1993)?", "Was wird entwickelt von die Komponisten für Blue (1993)?", "Was wurde entwickelt von der Komponist für Blue (1993)?", "Was wurde entwickelt von die Komponisten für Blue (1993)?", "Welche Werks werden entwickelt von der Komponist für Blue (1993)?", "Welche Werks werden entwickelt von die Komponisten für Blue (1993)?", "Welche Werks wurden entwickelt von der Komponist für Blue (1993)?", "Welche Werks wurden entwickelt von die Komponisten für Blue (1993)?", "Welches Werk wird entwickelt von der Komponist für Blue (1993)?", "Welches Werk wird entwickelt von die Komponisten für Blue (1993)?", "Welches Werk wurde entwickelt von der Komponist für Blue (1993)?", "Welches Werk wurde entwickelt von die Komponisten für Blue (1993)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Blue_(1993_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Boarding_Gate?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Boarding_Gate?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Boarding_Gate?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Boarding_Gate?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Boarding_Gate?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Boarding_Gate?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Boarding_Gate?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Boarding_Gate?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Boarding_Gate?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Boarding_Gate?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Boarding_Gate?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Boarding_Gate?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Boarding_Gate> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Linear_(film)?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Linear_(film)?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Linear_(film)?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Linear_(film)?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Linear_(film)?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Linear_(film)?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Linear_(film)?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Linear_(film)?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Linear_(film)?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Linear_(film)?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Linear_(film)?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Linear_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Linear_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Jubilee_(1978_film)?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Jubilee_(1978_film)?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Jubilee_(1978_film)?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Jubilee_(1978_film)?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Jubilee_(1978_film)?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Jubilee_(1978_film)?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Jubilee_(1978_film)?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Jubilee_(1978_film)?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Jubilee_(1978_film)?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Jubilee_(1978_film)?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Jubilee_(1978_film)?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Jubilee_(1978_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jubilee_(1978_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/For_All_Mankind?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/For_All_Mankind?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/For_All_Mankind?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/For_All_Mankind?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/For_All_Mankind?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/For_All_Mankind?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/For_All_Mankind?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/For_All_Mankind?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/For_All_Mankind?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/For_All_Mankind?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/For_All_Mankind?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/For_All_Mankind?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/For_All_Mankind> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Rams_(2018_film)?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Rams_(2018_film)?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Rams_(2018_film)?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Rams_(2018_film)?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Rams_(2018_film)?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Rams_(2018_film)?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Rams_(2018_film)?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Rams_(2018_film)?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Rams_(2018_film)?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Rams_(2018_film)?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Rams_(2018_film)?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Rams_(2018_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rams_(2018_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Ride,_Rise,_Roar?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Ride,_Rise,_Roar?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Ride,_Rise,_Roar?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Ride,_Rise,_Roar?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Ride,_Rise,_Roar?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Ride,_Rise,_Roar?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Ride,_Rise,_Roar?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Ride,_Rise,_Roar?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Ride,_Rise,_Roar?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Ride,_Rise,_Roar?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Ride,_Rise,_Roar?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Ride,_Rise,_Roar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ride,_Rise,_Roar> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/The_Pervert's_Guide_to_Ideology?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/The_Pervert's_Guide_to_Ideology?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/The_Pervert's_Guide_to_Ideology?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/The_Pervert's_Guide_to_Ideology?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/The_Pervert's_Guide_to_Ideology?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/The_Pervert's_Guide_to_Ideology?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/The_Pervert's_Guide_to_Ideology?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/The_Pervert's_Guide_to_Ideology?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/The_Pervert's_Guide_to_Ideology?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/The_Pervert's_Guide_to_Ideology?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/The_Pervert's_Guide_to_Ideology?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/The_Pervert's_Guide_to_Ideology?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Pervert's_Guide_to_Ideology> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Buddy_Boy?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Buddy_Boy?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Buddy_Boy?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Buddy_Boy?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Buddy_Boy?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Buddy_Boy?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Buddy_Boy?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Buddy_Boy?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Buddy_Boy?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Buddy_Boy?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Buddy_Boy?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Buddy_Boy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Buddy_Boy> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Land_of_the_Minotaur?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Land_of_the_Minotaur?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Land_of_the_Minotaur?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Land_of_the_Minotaur?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Land_of_the_Minotaur?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Land_of_the_Minotaur?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Land_of_the_Minotaur?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Land_of_the_Minotaur?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Land_of_the_Minotaur?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Land_of_the_Minotaur?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Land_of_the_Minotaur?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Land_of_the_Minotaur?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Land_of_the_Minotaur> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Fear_X?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Fear_X?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Fear_X?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Fear_X?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Fear_X?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Fear_X?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Fear_X?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Fear_X?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Fear_X?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Fear_X?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Fear_X?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Fear_X?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Fear_X> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/We_Are_Many_(film)?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/We_Are_Many_(film)?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/We_Are_Many_(film)?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/We_Are_Many_(film)?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/We_Are_Many_(film)?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/We_Are_Many_(film)?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/We_Are_Many_(film)?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/We_Are_Many_(film)?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/We_Are_Many_(film)?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/We_Are_Many_(film)?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/We_Are_Many_(film)?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/We_Are_Many_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/We_Are_Many_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Eno_(film)?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Eno_(film)?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Eno_(film)?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Eno_(film)?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Eno_(film)?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Eno_(film)?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Eno_(film)?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Eno_(film)?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Eno_(film)?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Eno_(film)?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Eno_(film)?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Eno_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Eno_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Egon_Schiele_–_Exzess_und_Bestrafung?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Egon_Schiele_–_Exzess_und_Bestrafung?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Egon_Schiele_–_Exzess_und_Bestrafung?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Egon_Schiele_–_Exzess_und_Bestrafung?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Egon_Schiele_–_Exzess_und_Bestrafung?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Egon_Schiele_–_Exzess_und_Bestrafung?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Egon_Schiele_–_Exzess_und_Bestrafung?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Egon_Schiele_–_Exzess_und_Bestrafung?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Egon_Schiele_–_Exzess_und_Bestrafung?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Egon_Schiele_–_Exzess_und_Bestrafung?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Egon_Schiele_–_Exzess_und_Bestrafung?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Egon_Schiele_–_Exzess_und_Bestrafung?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Egon_Schiele_–_Exzess_und_Bestrafung> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Immigrants_(2008_film)?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Immigrants_(2008_film)?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Immigrants_(2008_film)?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Immigrants_(2008_film)?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Immigrants_(2008_film)?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Immigrants_(2008_film)?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Immigrants_(2008_film)?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Immigrants_(2008_film)?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Immigrants_(2008_film)?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Immigrants_(2008_film)?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Immigrants_(2008_film)?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Immigrants_(2008_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Immigrants_(2008_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Grindhouse (Film)?", "Was wird entwickelt von die Komponisten für Grindhouse (Film)?", "Was wurde entwickelt von der Komponist für Grindhouse (Film)?", "Was wurde entwickelt von die Komponisten für Grindhouse (Film)?", "Welche Werks werden entwickelt von der Komponist für Grindhouse (Film)?", "Welche Werks werden entwickelt von die Komponisten für Grindhouse (Film)?", "Welche Werks wurden entwickelt von der Komponist für Grindhouse (Film)?", "Welche Werks wurden entwickelt von die Komponisten für Grindhouse (Film)?", "Welches Werk wird entwickelt von der Komponist für Grindhouse (Film)?", "Welches Werk wird entwickelt von die Komponisten für Grindhouse (Film)?", "Welches Werk wurde entwickelt von der Komponist für Grindhouse (Film)?", "Welches Werk wurde entwickelt von die Komponisten für Grindhouse (Film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Grindhouse_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Kill Bill – Volume 2?", "Was wird entwickelt von die Komponisten für Kill Bill – Volume 2?", "Was wurde entwickelt von der Komponist für Kill Bill – Volume 2?", "Was wurde entwickelt von die Komponisten für Kill Bill – Volume 2?", "Welche Werks werden entwickelt von der Komponist für Kill Bill – Volume 2?", "Welche Werks werden entwickelt von die Komponisten für Kill Bill – Volume 2?", "Welche Werks wurden entwickelt von der Komponist für Kill Bill – Volume 2?", "Welche Werks wurden entwickelt von die Komponisten für Kill Bill – Volume 2?", "Welches Werk wird entwickelt von der Komponist für Kill Bill – Volume 2?", "Welches Werk wird entwickelt von die Komponisten für Kill Bill – Volume 2?", "Welches Werk wurde entwickelt von der Komponist für Kill Bill – Volume 2?", "Welches Werk wurde entwickelt von die Komponisten für Kill Bill – Volume 2?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kill_Bill:_Volume_2> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Bedhead?", "Was wird entwickelt von die Komponisten für Bedhead?", "Was wurde entwickelt von der Komponist für Bedhead?", "Was wurde entwickelt von die Komponisten für Bedhead?", "Welche Werks werden entwickelt von der Komponist für Bedhead?", "Welche Werks werden entwickelt von die Komponisten für Bedhead?", "Welche Werks wurden entwickelt von der Komponist für Bedhead?", "Welche Werks wurden entwickelt von die Komponisten für Bedhead?", "Welches Werk wird entwickelt von der Komponist für Bedhead?", "Welches Werk wird entwickelt von die Komponisten für Bedhead?", "Welches Werk wurde entwickelt von der Komponist für Bedhead?", "Welches Werk wurde entwickelt von die Komponisten für Bedhead?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bedhead_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Spy Kids – Alle Zeit der Welt?", "Was wird entwickelt von die Komponisten für Spy Kids – Alle Zeit der Welt?", "Was wurde entwickelt von der Komponist für Spy Kids – Alle Zeit der Welt?", "Was wurde entwickelt von die Komponisten für Spy Kids – Alle Zeit der Welt?", "Welche Werks werden entwickelt von der Komponist für Spy Kids – Alle Zeit der Welt?", "Welche Werks werden entwickelt von die Komponisten für Spy Kids – Alle Zeit der Welt?", "Welche Werks wurden entwickelt von der Komponist für Spy Kids – Alle Zeit der Welt?", "Welche Werks wurden entwickelt von die Komponisten für Spy Kids – Alle Zeit der Welt?", "Welches Werk wird entwickelt von der Komponist für Spy Kids – Alle Zeit der Welt?", "Welches Werk wird entwickelt von die Komponisten für Spy Kids – Alle Zeit der Welt?", "Welches Werk wurde entwickelt von der Komponist für Spy Kids – Alle Zeit der Welt?", "Welches Werk wurde entwickelt von die Komponisten für Spy Kids – Alle Zeit der Welt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Spy_Kids:_All_the_Time_in_the_World> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Spy Kids 2 – Die Rückkehr der Superspione?", "Was wird entwickelt von die Komponisten für Spy Kids 2 – Die Rückkehr der Superspione?", "Was wurde entwickelt von der Komponist für Spy Kids 2 – Die Rückkehr der Superspione?", "Was wurde entwickelt von die Komponisten für Spy Kids 2 – Die Rückkehr der Superspione?", "Welche Werks werden entwickelt von der Komponist für Spy Kids 2 – Die Rückkehr der Superspione?", "Welche Werks werden entwickelt von die Komponisten für Spy Kids 2 – Die Rückkehr der Superspione?", "Welche Werks wurden entwickelt von der Komponist für Spy Kids 2 – Die Rückkehr der Superspione?", "Welche Werks wurden entwickelt von die Komponisten für Spy Kids 2 – Die Rückkehr der Superspione?", "Welches Werk wird entwickelt von der Komponist für Spy Kids 2 – Die Rückkehr der Superspione?", "Welches Werk wird entwickelt von die Komponisten für Spy Kids 2 – Die Rückkehr der Superspione?", "Welches Werk wurde entwickelt von der Komponist für Spy Kids 2 – Die Rückkehr der Superspione?", "Welches Werk wurde entwickelt von die Komponisten für Spy Kids 2 – Die Rückkehr der Superspione?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Spy_Kids_2:_The_Island_of_Lost_Dreams> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Mission 3D?", "Was wird entwickelt von die Komponisten für Mission 3D?", "Was wurde entwickelt von der Komponist für Mission 3D?", "Was wurde entwickelt von die Komponisten für Mission 3D?", "Welche Werks werden entwickelt von der Komponist für Mission 3D?", "Welche Werks werden entwickelt von die Komponisten für Mission 3D?", "Welche Werks wurden entwickelt von der Komponist für Mission 3D?", "Welche Werks wurden entwickelt von die Komponisten für Mission 3D?", "Welches Werk wird entwickelt von der Komponist für Mission 3D?", "Welches Werk wird entwickelt von die Komponisten für Mission 3D?", "Welches Werk wurde entwickelt von der Komponist für Mission 3D?", "Welches Werk wurde entwickelt von die Komponisten für Mission 3D?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Spy_Kids_3-D:_Game_Over> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Irgendwann in Mexico?", "Was wird entwickelt von die Komponisten für Irgendwann in Mexico?", "Was wurde entwickelt von der Komponist für Irgendwann in Mexico?", "Was wurde entwickelt von die Komponisten für Irgendwann in Mexico?", "Welche Werks werden entwickelt von der Komponist für Irgendwann in Mexico?", "Welche Werks werden entwickelt von die Komponisten für Irgendwann in Mexico?", "Welche Werks wurden entwickelt von der Komponist für Irgendwann in Mexico?", "Welche Werks wurden entwickelt von die Komponisten für Irgendwann in Mexico?", "Welches Werk wird entwickelt von der Komponist für Irgendwann in Mexico?", "Welches Werk wird entwickelt von die Komponisten für Irgendwann in Mexico?", "Welches Werk wurde entwickelt von der Komponist für Irgendwann in Mexico?", "Welches Werk wurde entwickelt von die Komponisten für Irgendwann in Mexico?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Once_Upon_a_Time_in_Mexico> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Die Abenteuer von Sharkboy und Lavagirl in 3-D?", "Was wird entwickelt von die Komponisten für Die Abenteuer von Sharkboy und Lavagirl in 3-D?", "Was wurde entwickelt von der Komponist für Die Abenteuer von Sharkboy und Lavagirl in 3-D?", "Was wurde entwickelt von die Komponisten für Die Abenteuer von Sharkboy und Lavagirl in 3-D?", "Welche Werks werden entwickelt von der Komponist für Die Abenteuer von Sharkboy und Lavagirl in 3-D?", "Welche Werks werden entwickelt von die Komponisten für Die Abenteuer von Sharkboy und Lavagirl in 3-D?", "Welche Werks wurden entwickelt von der Komponist für Die Abenteuer von Sharkboy und Lavagirl in 3-D?", "Welche Werks wurden entwickelt von die Komponisten für Die Abenteuer von Sharkboy und Lavagirl in 3-D?", "Welches Werk wird entwickelt von der Komponist für Die Abenteuer von Sharkboy und Lavagirl in 3-D?", "Welches Werk wird entwickelt von die Komponisten für Die Abenteuer von Sharkboy und Lavagirl in 3-D?", "Welches Werk wurde entwickelt von der Komponist für Die Abenteuer von Sharkboy und Lavagirl in 3-D?", "Welches Werk wurde entwickelt von die Komponisten für Die Abenteuer von Sharkboy und Lavagirl in 3-D?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Adventures_of_Sharkboy_and_Lavagirl_in_3-D> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Das Geheimnis des Regenbogensteins?", "Was wird entwickelt von die Komponisten für Das Geheimnis des Regenbogensteins?", "Was wurde entwickelt von der Komponist für Das Geheimnis des Regenbogensteins?", "Was wurde entwickelt von die Komponisten für Das Geheimnis des Regenbogensteins?", "Welche Werks werden entwickelt von der Komponist für Das Geheimnis des Regenbogensteins?", "Welche Werks werden entwickelt von die Komponisten für Das Geheimnis des Regenbogensteins?", "Welche Werks wurden entwickelt von der Komponist für Das Geheimnis des Regenbogensteins?", "Welche Werks wurden entwickelt von die Komponisten für Das Geheimnis des Regenbogensteins?", "Welches Werk wird entwickelt von der Komponist für Das Geheimnis des Regenbogensteins?", "Welches Werk wird entwickelt von die Komponisten für Das Geheimnis des Regenbogensteins?", "Welches Werk wurde entwickelt von der Komponist für Das Geheimnis des Regenbogensteins?", "Welches Werk wurde entwickelt von die Komponisten für Das Geheimnis des Regenbogensteins?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Shorts_(2009_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Sin City 2: A Dame to Kill For?", "Was wird entwickelt von die Komponisten für Sin City 2: A Dame to Kill For?", "Was wurde entwickelt von der Komponist für Sin City 2: A Dame to Kill For?", "Was wurde entwickelt von die Komponisten für Sin City 2: A Dame to Kill For?", "Welche Werks werden entwickelt von der Komponist für Sin City 2: A Dame to Kill For?", "Welche Werks werden entwickelt von die Komponisten für Sin City 2: A Dame to Kill For?", "Welche Werks wurden entwickelt von der Komponist für Sin City 2: A Dame to Kill For?", "Welche Werks wurden entwickelt von die Komponisten für Sin City 2: A Dame to Kill For?", "Welches Werk wird entwickelt von der Komponist für Sin City 2: A Dame to Kill For?", "Welches Werk wird entwickelt von die Komponisten für Sin City 2: A Dame to Kill For?", "Welches Werk wurde entwickelt von der Komponist für Sin City 2: A Dame to Kill For?", "Welches Werk wurde entwickelt von die Komponisten für Sin City 2: A Dame to Kill For?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sin_City:_A_Dame_to_Kill_For> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Sin City (Film)?", "Was wird entwickelt von die Komponisten für Sin City (Film)?", "Was wurde entwickelt von der Komponist für Sin City (Film)?", "Was wurde entwickelt von die Komponisten für Sin City (Film)?", "Welche Werks werden entwickelt von der Komponist für Sin City (Film)?", "Welche Werks werden entwickelt von die Komponisten für Sin City (Film)?", "Welche Werks wurden entwickelt von der Komponist für Sin City (Film)?", "Welche Werks wurden entwickelt von die Komponisten für Sin City (Film)?", "Welches Werk wird entwickelt von der Komponist für Sin City (Film)?", "Welches Werk wird entwickelt von die Komponisten für Sin City (Film)?", "Welches Werk wurde entwickelt von der Komponist für Sin City (Film)?", "Welches Werk wurde entwickelt von die Komponisten für Sin City (Film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sin_City_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Planet Terror?", "Was wird entwickelt von die Komponisten für Planet Terror?", "Was wurde entwickelt von der Komponist für Planet Terror?", "Was wurde entwickelt von die Komponisten für Planet Terror?", "Welche Werks werden entwickelt von der Komponist für Planet Terror?", "Welche Werks werden entwickelt von die Komponisten für Planet Terror?", "Welche Werks wurden entwickelt von der Komponist für Planet Terror?", "Welche Werks wurden entwickelt von die Komponisten für Planet Terror?", "Welches Werk wird entwickelt von der Komponist für Planet Terror?", "Welches Werk wird entwickelt von die Komponisten für Planet Terror?", "Welches Werk wurde entwickelt von der Komponist für Planet Terror?", "Welches Werk wurde entwickelt von die Komponisten für Planet Terror?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Planet_Terror> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Spy Kids?", "Was wird entwickelt von die Komponisten für Spy Kids?", "Was wurde entwickelt von der Komponist für Spy Kids?", "Was wurde entwickelt von die Komponisten für Spy Kids?", "Welche Werks werden entwickelt von der Komponist für Spy Kids?", "Welche Werks werden entwickelt von die Komponisten für Spy Kids?", "Welche Werks wurden entwickelt von der Komponist für Spy Kids?", "Welche Werks wurden entwickelt von die Komponisten für Spy Kids?", "Welches Werk wird entwickelt von der Komponist für Spy Kids?", "Welches Werk wird entwickelt von die Komponisten für Spy Kids?", "Welches Werk wurde entwickelt von der Komponist für Spy Kids?", "Welches Werk wurde entwickelt von die Komponisten für Spy Kids?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Spy_Kids> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/From_Bedrooms_to_Billions?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/From_Bedrooms_to_Billions?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/From_Bedrooms_to_Billions?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/From_Bedrooms_to_Billions?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/From_Bedrooms_to_Billions?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/From_Bedrooms_to_Billions?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/From_Bedrooms_to_Billions?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/From_Bedrooms_to_Billions?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/From_Bedrooms_to_Billions?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/From_Bedrooms_to_Billions?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/From_Bedrooms_to_Billions?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/From_Bedrooms_to_Billions?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/From_Bedrooms_to_Billions> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Mexico_Trilogy?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Mexico_Trilogy?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Mexico_Trilogy?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Mexico_Trilogy?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Mexico_Trilogy?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Mexico_Trilogy?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Mexico_Trilogy?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Mexico_Trilogy?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Mexico_Trilogy?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Mexico_Trilogy?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Mexico_Trilogy?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Mexico_Trilogy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mexico_Trilogy> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/The_Life_of_Larry_and_Larry_&_Steve?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/The_Life_of_Larry_and_Larry_&_Steve?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/The_Life_of_Larry_and_Larry_&_Steve?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/The_Life_of_Larry_and_Larry_&_Steve?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/The_Life_of_Larry_and_Larry_&_Steve?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/The_Life_of_Larry_and_Larry_&_Steve?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/The_Life_of_Larry_and_Larry_&_Steve?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/The_Life_of_Larry_and_Larry_&_Steve?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/The_Life_of_Larry_and_Larry_&_Steve?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/The_Life_of_Larry_and_Larry_&_Steve?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/The_Life_of_Larry_and_Larry_&_Steve?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/The_Life_of_Larry_and_Larry_&_Steve?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Life_of_Larry_and_Larry_&_Steve> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Remote_Control_(1992_film)?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Remote_Control_(1992_film)?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Remote_Control_(1992_film)?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Remote_Control_(1992_film)?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Remote_Control_(1992_film)?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Remote_Control_(1992_film)?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Remote_Control_(1992_film)?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Remote_Control_(1992_film)?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Remote_Control_(1992_film)?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Remote_Control_(1992_film)?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Remote_Control_(1992_film)?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Remote_Control_(1992_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Remote_Control_(1992_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Jonah:_A_VeggieTales_Movie?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Jonah:_A_VeggieTales_Movie?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Jonah:_A_VeggieTales_Movie?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Jonah:_A_VeggieTales_Movie?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Jonah:_A_VeggieTales_Movie?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Jonah:_A_VeggieTales_Movie?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Jonah:_A_VeggieTales_Movie?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Jonah:_A_VeggieTales_Movie?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Jonah:_A_VeggieTales_Movie?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Jonah:_A_VeggieTales_Movie?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Jonah:_A_VeggieTales_Movie?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Jonah:_A_VeggieTales_Movie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jonah:_A_VeggieTales_Movie> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Monthly_Girls'_Nozaki-kun__TV_series__1?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Monthly_Girls'_Nozaki-kun__TV_series__1?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Monthly_Girls'_Nozaki-kun__TV_series__1?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Monthly_Girls'_Nozaki-kun__TV_series__1?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Monthly_Girls'_Nozaki-kun__TV_series__1?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Monthly_Girls'_Nozaki-kun__TV_series__1?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Monthly_Girls'_Nozaki-kun__TV_series__1?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Monthly_Girls'_Nozaki-kun__TV_series__1?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Monthly_Girls'_Nozaki-kun__TV_series__1?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Monthly_Girls'_Nozaki-kun__TV_series__1?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Monthly_Girls'_Nozaki-kun__TV_series__1?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Monthly_Girls'_Nozaki-kun__TV_series__1?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Monthly_Girls'_Nozaki-kun__TV_series__1> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für Lebenslänglich (Film)?", "Was wird entwickelt von die Komponisten für Lebenslänglich (Film)?", "Was wurde entwickelt von der Komponist für Lebenslänglich (Film)?", "Was wurde entwickelt von die Komponisten für Lebenslänglich (Film)?", "Welche Werks werden entwickelt von der Komponist für Lebenslänglich (Film)?", "Welche Werks werden entwickelt von die Komponisten für Lebenslänglich (Film)?", "Welche Werks wurden entwickelt von der Komponist für Lebenslänglich (Film)?", "Welche Werks wurden entwickelt von die Komponisten für Lebenslänglich (Film)?", "Welches Werk wird entwickelt von der Komponist für Lebenslänglich (Film)?", "Welches Werk wird entwickelt von die Komponisten für Lebenslänglich (Film)?", "Welches Werk wurde entwickelt von der Komponist für Lebenslänglich (Film)?", "Welches Werk wurde entwickelt von die Komponisten für Lebenslänglich (Film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Life_(1999_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Love_Jones_(film)?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Love_Jones_(film)?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Love_Jones_(film)?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Love_Jones_(film)?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Love_Jones_(film)?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Love_Jones_(film)?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Love_Jones_(film)?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Love_Jones_(film)?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Love_Jones_(film)?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Love_Jones_(film)?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Love_Jones_(film)?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Love_Jones_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Love_Jones_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/Venus_and_Serena_(film)?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/Venus_and_Serena_(film)?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/Venus_and_Serena_(film)?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Venus_and_Serena_(film)?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/Venus_and_Serena_(film)?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/Venus_and_Serena_(film)?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/Venus_and_Serena_(film)?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/Venus_and_Serena_(film)?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/Venus_and_Serena_(film)?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/Venus_and_Serena_(film)?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/Venus_and_Serena_(film)?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/Venus_and_Serena_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Venus_and_Serena_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/The_Agronomist?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/The_Agronomist?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/The_Agronomist?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/The_Agronomist?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/The_Agronomist?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/The_Agronomist?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/The_Agronomist?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/The_Agronomist?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/The_Agronomist?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/The_Agronomist?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/The_Agronomist?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/The_Agronomist?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Agronomist> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "43",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von der Komponist für http://dbpedia.org/resource/A_Place_in_Time?", "Was wird entwickelt von die Komponisten für http://dbpedia.org/resource/A_Place_in_Time?", "Was wurde entwickelt von der Komponist für http://dbpedia.org/resource/A_Place_in_Time?", "Was wurde entwickelt von die Komponisten für http://dbpedia.org/resource/A_Place_in_Time?", "Welche Werks werden entwickelt von der Komponist für http://dbpedia.org/resource/A_Place_in_Time?", "Welche Werks werden entwickelt von die Komponisten für http://dbpedia.org/resource/A_Place_in_Time?", "Welche Werks wurden entwickelt von der Komponist für http://dbpedia.org/resource/A_Place_in_Time?", "Welche Werks wurden entwickelt von die Komponisten für http://dbpedia.org/resource/A_Place_in_Time?", "Welches Werk wird entwickelt von der Komponist für http://dbpedia.org/resource/A_Place_in_Time?", "Welches Werk wird entwickelt von die Komponisten für http://dbpedia.org/resource/A_Place_in_Time?", "Welches Werk wurde entwickelt von der Komponist für http://dbpedia.org/resource/A_Place_in_Time?", "Welches Werk wurde entwickelt von die Komponisten für http://dbpedia.org/resource/A_Place_in_Time?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A_Place_in_Time> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/PFFR?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/PFFR?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/PFFR?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/PFFR?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/PFFR?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/PFFR?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/PFFR?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/PFFR?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/PFFR?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/PFFR?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/PFFR?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/PFFR?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/PFFR> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von Run the Jewels?", "Was wird entwickelt von die Mitglieder von Run the Jewels?", "Was wurde entwickelt von das Mitglied von Run the Jewels?", "Was wurde entwickelt von die Mitglieder von Run the Jewels?", "Welche Werks werden entwickelt von das Mitglied von Run the Jewels?", "Welche Werks werden entwickelt von die Mitglieder von Run the Jewels?", "Welche Werks wurden entwickelt von das Mitglied von Run the Jewels?", "Welche Werks wurden entwickelt von die Mitglieder von Run the Jewels?", "Welches Werk wird entwickelt von das Mitglied von Run the Jewels?", "Welches Werk wird entwickelt von die Mitglieder von Run the Jewels?", "Welches Werk wurde entwickelt von das Mitglied von Run the Jewels?", "Welches Werk wurde entwickelt von die Mitglieder von Run the Jewels?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Run_the_Jewels> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von Major Lazer?", "Was wird entwickelt von die Mitglieder von Major Lazer?", "Was wurde entwickelt von das Mitglied von Major Lazer?", "Was wurde entwickelt von die Mitglieder von Major Lazer?", "Welche Werks werden entwickelt von das Mitglied von Major Lazer?", "Welche Werks werden entwickelt von die Mitglieder von Major Lazer?", "Welche Werks wurden entwickelt von das Mitglied von Major Lazer?", "Welche Werks wurden entwickelt von die Mitglieder von Major Lazer?", "Welches Werk wird entwickelt von das Mitglied von Major Lazer?", "Welches Werk wird entwickelt von die Mitglieder von Major Lazer?", "Welches Werk wurde entwickelt von das Mitglied von Major Lazer?", "Welches Werk wurde entwickelt von die Mitglieder von Major Lazer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Major_Lazer> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von Jack Ü?", "Was wird entwickelt von die Mitglieder von Jack Ü?", "Was wurde entwickelt von das Mitglied von Jack Ü?", "Was wurde entwickelt von die Mitglieder von Jack Ü?", "Welche Werks werden entwickelt von das Mitglied von Jack Ü?", "Welche Werks werden entwickelt von die Mitglieder von Jack Ü?", "Welche Werks wurden entwickelt von das Mitglied von Jack Ü?", "Welche Werks wurden entwickelt von die Mitglieder von Jack Ü?", "Welches Werk wird entwickelt von das Mitglied von Jack Ü?", "Welches Werk wird entwickelt von die Mitglieder von Jack Ü?", "Welches Werk wurde entwickelt von das Mitglied von Jack Ü?", "Welches Werk wurde entwickelt von die Mitglieder von Jack Ü?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jack_Ü> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von Dungeon Family?", "Was wird entwickelt von die Mitglieder von Dungeon Family?", "Was wurde entwickelt von das Mitglied von Dungeon Family?", "Was wurde entwickelt von die Mitglieder von Dungeon Family?", "Welche Werks werden entwickelt von das Mitglied von Dungeon Family?", "Welche Werks werden entwickelt von die Mitglieder von Dungeon Family?", "Welche Werks wurden entwickelt von das Mitglied von Dungeon Family?", "Welche Werks wurden entwickelt von die Mitglieder von Dungeon Family?", "Welches Werk wird entwickelt von das Mitglied von Dungeon Family?", "Welches Werk wird entwickelt von die Mitglieder von Dungeon Family?", "Welches Werk wurde entwickelt von das Mitglied von Dungeon Family?", "Welches Werk wurde entwickelt von die Mitglieder von Dungeon Family?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dungeon_Family> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von LSD (Musikgruppe)?", "Was wird entwickelt von die Mitglieder von LSD (Musikgruppe)?", "Was wurde entwickelt von das Mitglied von LSD (Musikgruppe)?", "Was wurde entwickelt von die Mitglieder von LSD (Musikgruppe)?", "Welche Werks werden entwickelt von das Mitglied von LSD (Musikgruppe)?", "Welche Werks werden entwickelt von die Mitglieder von LSD (Musikgruppe)?", "Welche Werks wurden entwickelt von das Mitglied von LSD (Musikgruppe)?", "Welche Werks wurden entwickelt von die Mitglieder von LSD (Musikgruppe)?", "Welches Werk wird entwickelt von das Mitglied von LSD (Musikgruppe)?", "Welches Werk wird entwickelt von die Mitglieder von LSD (Musikgruppe)?", "Welches Werk wurde entwickelt von das Mitglied von LSD (Musikgruppe)?", "Welches Werk wurde entwickelt von die Mitglieder von LSD (Musikgruppe)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/LSD_(group)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Silk_City_(duo)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Silk_City_(duo)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Silk_City_(duo)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Silk_City_(duo)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Silk_City_(duo)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Silk_City_(duo)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Silk_City_(duo)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Silk_City_(duo)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Silk_City_(duo)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Silk_City_(duo)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Silk_City_(duo)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Silk_City_(duo)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Silk_City_(duo)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Purple_Ribbon_All-Stars?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Purple_Ribbon_All-Stars?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Purple_Ribbon_All-Stars?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Purple_Ribbon_All-Stars?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Purple_Ribbon_All-Stars?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Purple_Ribbon_All-Stars?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Purple_Ribbon_All-Stars?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Purple_Ribbon_All-Stars?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Purple_Ribbon_All-Stars?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Purple_Ribbon_All-Stars?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Purple_Ribbon_All-Stars?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Purple_Ribbon_All-Stars?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Purple_Ribbon_All-Stars> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von Bakkushan?", "Was wird entwickelt von die Mitglieder von Bakkushan?", "Was wurde entwickelt von das Mitglied von Bakkushan?", "Was wurde entwickelt von die Mitglieder von Bakkushan?", "Welche Werks werden entwickelt von das Mitglied von Bakkushan?", "Welche Werks werden entwickelt von die Mitglieder von Bakkushan?", "Welche Werks wurden entwickelt von das Mitglied von Bakkushan?", "Welche Werks wurden entwickelt von die Mitglieder von Bakkushan?", "Welches Werk wird entwickelt von das Mitglied von Bakkushan?", "Welches Werk wird entwickelt von die Mitglieder von Bakkushan?", "Welches Werk wurde entwickelt von das Mitglied von Bakkushan?", "Welches Werk wurde entwickelt von die Mitglieder von Bakkushan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bakkushan> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von Culcha Candela?", "Was wird entwickelt von die Mitglieder von Culcha Candela?", "Was wurde entwickelt von das Mitglied von Culcha Candela?", "Was wurde entwickelt von die Mitglieder von Culcha Candela?", "Welche Werks werden entwickelt von das Mitglied von Culcha Candela?", "Welche Werks werden entwickelt von die Mitglieder von Culcha Candela?", "Welche Werks wurden entwickelt von das Mitglied von Culcha Candela?", "Welche Werks wurden entwickelt von die Mitglieder von Culcha Candela?", "Welches Werk wird entwickelt von das Mitglied von Culcha Candela?", "Welches Werk wird entwickelt von die Mitglieder von Culcha Candela?", "Welches Werk wurde entwickelt von das Mitglied von Culcha Candela?", "Welches Werk wurde entwickelt von die Mitglieder von Culcha Candela?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Culcha_Candela> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von The Monkees?", "Was wird entwickelt von die Mitglieder von The Monkees?", "Was wurde entwickelt von das Mitglied von The Monkees?", "Was wurde entwickelt von die Mitglieder von The Monkees?", "Welche Werks werden entwickelt von das Mitglied von The Monkees?", "Welche Werks werden entwickelt von die Mitglieder von The Monkees?", "Welche Werks wurden entwickelt von das Mitglied von The Monkees?", "Welche Werks wurden entwickelt von die Mitglieder von The Monkees?", "Welches Werk wird entwickelt von das Mitglied von The Monkees?", "Welches Werk wird entwickelt von die Mitglieder von The Monkees?", "Welches Werk wurde entwickelt von das Mitglied von The Monkees?", "Welches Werk wurde entwickelt von die Mitglieder von The Monkees?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Monkees> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von Powerman 5000?", "Was wird entwickelt von die Mitglieder von Powerman 5000?", "Was wurde entwickelt von das Mitglied von Powerman 5000?", "Was wurde entwickelt von die Mitglieder von Powerman 5000?", "Welche Werks werden entwickelt von das Mitglied von Powerman 5000?", "Welche Werks werden entwickelt von die Mitglieder von Powerman 5000?", "Welche Werks wurden entwickelt von das Mitglied von Powerman 5000?", "Welche Werks wurden entwickelt von die Mitglieder von Powerman 5000?", "Welches Werk wird entwickelt von das Mitglied von Powerman 5000?", "Welches Werk wird entwickelt von die Mitglieder von Powerman 5000?", "Welches Werk wurde entwickelt von das Mitglied von Powerman 5000?", "Welches Werk wurde entwickelt von die Mitglieder von Powerman 5000?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Powerman_5000> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/The_Timeout_Drawer?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/The_Timeout_Drawer?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/The_Timeout_Drawer?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/The_Timeout_Drawer?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/The_Timeout_Drawer?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/The_Timeout_Drawer?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/The_Timeout_Drawer?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/The_Timeout_Drawer?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/The_Timeout_Drawer?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/The_Timeout_Drawer?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/The_Timeout_Drawer?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/The_Timeout_Drawer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Timeout_Drawer> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von 801 (Band)?", "Was wird entwickelt von die Mitglieder von 801 (Band)?", "Was wurde entwickelt von das Mitglied von 801 (Band)?", "Was wurde entwickelt von die Mitglieder von 801 (Band)?", "Welche Werks werden entwickelt von das Mitglied von 801 (Band)?", "Welche Werks werden entwickelt von die Mitglieder von 801 (Band)?", "Welche Werks wurden entwickelt von das Mitglied von 801 (Band)?", "Welche Werks wurden entwickelt von die Mitglieder von 801 (Band)?", "Welches Werk wird entwickelt von das Mitglied von 801 (Band)?", "Welches Werk wird entwickelt von die Mitglieder von 801 (Band)?", "Welches Werk wurde entwickelt von das Mitglied von 801 (Band)?", "Welches Werk wurde entwickelt von die Mitglieder von 801 (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/801_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Fripp_&_Eno?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Fripp_&_Eno?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Fripp_&_Eno?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Fripp_&_Eno?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Fripp_&_Eno?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Fripp_&_Eno?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Fripp_&_Eno?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Fripp_&_Eno?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Fripp_&_Eno?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Fripp_&_Eno?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Fripp_&_Eno?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Fripp_&_Eno?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Fripp_&_Eno> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von Chingon?", "Was wird entwickelt von die Mitglieder von Chingon?", "Was wurde entwickelt von das Mitglied von Chingon?", "Was wurde entwickelt von die Mitglieder von Chingon?", "Welche Werks werden entwickelt von das Mitglied von Chingon?", "Welche Werks werden entwickelt von die Mitglieder von Chingon?", "Welche Werks wurden entwickelt von das Mitglied von Chingon?", "Welche Werks wurden entwickelt von die Mitglieder von Chingon?", "Welches Werk wird entwickelt von das Mitglied von Chingon?", "Welches Werk wird entwickelt von die Mitglieder von Chingon?", "Welches Werk wurde entwickelt von das Mitglied von Chingon?", "Welches Werk wurde entwickelt von die Mitglieder von Chingon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chingon_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/HAM_(band)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/HAM_(band)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/HAM_(band)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/HAM_(band)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/HAM_(band)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/HAM_(band)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/HAM_(band)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/HAM_(band)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/HAM_(band)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/HAM_(band)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/HAM_(band)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/HAM_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/HAM_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von Vocal Spectrum?", "Was wird entwickelt von die Mitglieder von Vocal Spectrum?", "Was wurde entwickelt von das Mitglied von Vocal Spectrum?", "Was wurde entwickelt von die Mitglieder von Vocal Spectrum?", "Welche Werks werden entwickelt von das Mitglied von Vocal Spectrum?", "Welche Werks werden entwickelt von die Mitglieder von Vocal Spectrum?", "Welche Werks wurden entwickelt von das Mitglied von Vocal Spectrum?", "Welche Werks wurden entwickelt von die Mitglieder von Vocal Spectrum?", "Welches Werk wird entwickelt von das Mitglied von Vocal Spectrum?", "Welches Werk wird entwickelt von die Mitglieder von Vocal Spectrum?", "Welches Werk wurde entwickelt von das Mitglied von Vocal Spectrum?", "Welches Werk wurde entwickelt von die Mitglieder von Vocal Spectrum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Vocal_Spectrum> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von Max Q (Band)?", "Was wird entwickelt von die Mitglieder von Max Q (Band)?", "Was wurde entwickelt von das Mitglied von Max Q (Band)?", "Was wurde entwickelt von die Mitglieder von Max Q (Band)?", "Welche Werks werden entwickelt von das Mitglied von Max Q (Band)?", "Welche Werks werden entwickelt von die Mitglieder von Max Q (Band)?", "Welche Werks wurden entwickelt von das Mitglied von Max Q (Band)?", "Welche Werks wurden entwickelt von die Mitglieder von Max Q (Band)?", "Welches Werk wird entwickelt von das Mitglied von Max Q (Band)?", "Welches Werk wird entwickelt von die Mitglieder von Max Q (Band)?", "Welches Werk wurde entwickelt von das Mitglied von Max Q (Band)?", "Welches Werk wurde entwickelt von die Mitglieder von Max Q (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Max_Q_(quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Masterpiece_(quartet)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Masterpiece_(quartet)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Masterpiece_(quartet)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Masterpiece_(quartet)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Masterpiece_(quartet)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Masterpiece_(quartet)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Masterpiece_(quartet)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Masterpiece_(quartet)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Masterpiece_(quartet)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Masterpiece_(quartet)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Masterpiece_(quartet)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Masterpiece_(quartet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Masterpiece_(quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/The_Rapscallions?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/The_Rapscallions?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/The_Rapscallions?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/The_Rapscallions?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/The_Rapscallions?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/The_Rapscallions?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/The_Rapscallions?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/The_Rapscallions?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/The_Rapscallions?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/The_Rapscallions?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/The_Rapscallions?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/The_Rapscallions?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Rapscallions> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Grandma's_Boys?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Grandma's_Boys?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Grandma's_Boys?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Grandma's_Boys?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Grandma's_Boys?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Grandma's_Boys?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Grandma's_Boys?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Grandma's_Boys?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Grandma's_Boys?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Grandma's_Boys?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Grandma's_Boys?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Grandma's_Boys?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Grandma's_Boys> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Second_Edition_(quartet)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Second_Edition_(quartet)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Second_Edition_(quartet)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Second_Edition_(quartet)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Second_Edition_(quartet)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Second_Edition_(quartet)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Second_Edition_(quartet)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Second_Edition_(quartet)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Second_Edition_(quartet)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Second_Edition_(quartet)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Second_Edition_(quartet)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Second_Edition_(quartet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Second_Edition_(quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Yesteryear_(quartet)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Yesteryear_(quartet)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Yesteryear_(quartet)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Yesteryear_(quartet)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Yesteryear_(quartet)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Yesteryear_(quartet)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Yesteryear_(quartet)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Yesteryear_(quartet)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Yesteryear_(quartet)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Yesteryear_(quartet)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Yesteryear_(quartet)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Yesteryear_(quartet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Yesteryear_(quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Side_Street_Ramblers?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Side_Street_Ramblers?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Side_Street_Ramblers?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Side_Street_Ramblers?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Side_Street_Ramblers?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Side_Street_Ramblers?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Side_Street_Ramblers?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Side_Street_Ramblers?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Side_Street_Ramblers?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Side_Street_Ramblers?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Side_Street_Ramblers?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Side_Street_Ramblers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Side_Street_Ramblers> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Platinum_(quartet)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Platinum_(quartet)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Platinum_(quartet)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Platinum_(quartet)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Platinum_(quartet)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Platinum_(quartet)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Platinum_(quartet)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Platinum_(quartet)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Platinum_(quartet)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Platinum_(quartet)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Platinum_(quartet)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Platinum_(quartet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Platinum_(quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Happiness_Emporium?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Happiness_Emporium?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Happiness_Emporium?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Happiness_Emporium?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Happiness_Emporium?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Happiness_Emporium?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Happiness_Emporium?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Happiness_Emporium?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Happiness_Emporium?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Happiness_Emporium?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Happiness_Emporium?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Happiness_Emporium?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Happiness_Emporium> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Four_Voices?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Four_Voices?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Four_Voices?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Four_Voices?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Four_Voices?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Four_Voices?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Four_Voices?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Four_Voices?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Four_Voices?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Four_Voices?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Four_Voices?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Four_Voices?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Four_Voices> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Forefront_(quartet)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Forefront_(quartet)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Forefront_(quartet)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Forefront_(quartet)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Forefront_(quartet)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Forefront_(quartet)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Forefront_(quartet)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Forefront_(quartet)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Forefront_(quartet)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Forefront_(quartet)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Forefront_(quartet)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Forefront_(quartet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Forefront_(quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Classic_Collection?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Classic_Collection?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Classic_Collection?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Classic_Collection?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Classic_Collection?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Classic_Collection?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Classic_Collection?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Classic_Collection?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Classic_Collection?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Classic_Collection?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Classic_Collection?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Classic_Collection?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Classic_Collection> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/MARK_IV_(Barbershop)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/MARK_IV_(Barbershop)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/MARK_IV_(Barbershop)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/MARK_IV_(Barbershop)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/MARK_IV_(Barbershop)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/MARK_IV_(Barbershop)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/MARK_IV_(Barbershop)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/MARK_IV_(Barbershop)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/MARK_IV_(Barbershop)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/MARK_IV_(Barbershop)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/MARK_IV_(Barbershop)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/MARK_IV_(Barbershop)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/MARK_IV_(Barbershop)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Storm_Front_(quartet)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Storm_Front_(quartet)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Storm_Front_(quartet)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Storm_Front_(quartet)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Storm_Front_(quartet)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Storm_Front_(quartet)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Storm_Front_(quartet)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Storm_Front_(quartet)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Storm_Front_(quartet)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Storm_Front_(quartet)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Storm_Front_(quartet)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Storm_Front_(quartet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Storm_Front_(quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Old_School_(quartet)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Old_School_(quartet)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Old_School_(quartet)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Old_School_(quartet)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Old_School_(quartet)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Old_School_(quartet)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Old_School_(quartet)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Old_School_(quartet)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Old_School_(quartet)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Old_School_(quartet)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Old_School_(quartet)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Old_School_(quartet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Old_School_(quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Musical_Island_Boys?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Musical_Island_Boys?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Musical_Island_Boys?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Musical_Island_Boys?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Musical_Island_Boys?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Musical_Island_Boys?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Musical_Island_Boys?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Musical_Island_Boys?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Musical_Island_Boys?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Musical_Island_Boys?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Musical_Island_Boys?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Musical_Island_Boys?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Musical_Island_Boys> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Revival_(quartet)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Revival_(quartet)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Revival_(quartet)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Revival_(quartet)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Revival_(quartet)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Revival_(quartet)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Revival_(quartet)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Revival_(quartet)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Revival_(quartet)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Revival_(quartet)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Revival_(quartet)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Revival_(quartet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Revival_(quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Crossroads_(quartet)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Crossroads_(quartet)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Crossroads_(quartet)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Crossroads_(quartet)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Crossroads_(quartet)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Crossroads_(quartet)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Crossroads_(quartet)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Crossroads_(quartet)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Crossroads_(quartet)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Crossroads_(quartet)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Crossroads_(quartet)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Crossroads_(quartet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Crossroads_(quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Marquis_(quartet)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Marquis_(quartet)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Marquis_(quartet)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Marquis_(quartet)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Marquis_(quartet)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Marquis_(quartet)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Marquis_(quartet)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Marquis_(quartet)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Marquis_(quartet)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Marquis_(quartet)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Marquis_(quartet)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Marquis_(quartet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Marquis_(quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Gotcha!_(quartet)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Gotcha!_(quartet)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Gotcha!_(quartet)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Gotcha!_(quartet)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Gotcha!_(quartet)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Gotcha!_(quartet)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Gotcha!_(quartet)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Gotcha!_(quartet)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Gotcha!_(quartet)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Gotcha!_(quartet)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Gotcha!_(quartet)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Gotcha!_(quartet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gotcha!_(quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Interstate_Rivals?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Interstate_Rivals?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Interstate_Rivals?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Interstate_Rivals?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Interstate_Rivals?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Interstate_Rivals?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Interstate_Rivals?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Interstate_Rivals?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Interstate_Rivals?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Interstate_Rivals?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Interstate_Rivals?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Interstate_Rivals?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Interstate_Rivals> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Joker's_Wild_(quartet)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Joker's_Wild_(quartet)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Joker's_Wild_(quartet)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Joker's_Wild_(quartet)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Joker's_Wild_(quartet)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Joker's_Wild_(quartet)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Joker's_Wild_(quartet)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Joker's_Wild_(quartet)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Joker's_Wild_(quartet)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Joker's_Wild_(quartet)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Joker's_Wild_(quartet)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Joker's_Wild_(quartet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joker's_Wild_(quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Oriole_Four?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Oriole_Four?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Oriole_Four?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Oriole_Four?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Oriole_Four?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Oriole_Four?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Oriole_Four?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Oriole_Four?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Oriole_Four?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Oriole_Four?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Oriole_Four?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Oriole_Four?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Oriole_Four> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Four_Bettys?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Four_Bettys?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Four_Bettys?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Four_Bettys?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Four_Bettys?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Four_Bettys?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Four_Bettys?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Four_Bettys?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Four_Bettys?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Four_Bettys?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Four_Bettys?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Four_Bettys?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Four_Bettys> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/SALT_(quartet)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/SALT_(quartet)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/SALT_(quartet)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/SALT_(quartet)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/SALT_(quartet)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/SALT_(quartet)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/SALT_(quartet)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/SALT_(quartet)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/SALT_(quartet)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/SALT_(quartet)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/SALT_(quartet)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/SALT_(quartet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/SALT_(quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Boston_Common_(quartet)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Boston_Common_(quartet)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Boston_Common_(quartet)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Boston_Common_(quartet)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Boston_Common_(quartet)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Boston_Common_(quartet)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Boston_Common_(quartet)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Boston_Common_(quartet)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Boston_Common_(quartet)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Boston_Common_(quartet)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Boston_Common_(quartet)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Boston_Common_(quartet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Boston_Common_(quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Nightlife_(quartet)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Nightlife_(quartet)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Nightlife_(quartet)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Nightlife_(quartet)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Nightlife_(quartet)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Nightlife_(quartet)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Nightlife_(quartet)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Nightlife_(quartet)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Nightlife_(quartet)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Nightlife_(quartet)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Nightlife_(quartet)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Nightlife_(quartet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nightlife_(quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/OC_Times?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/OC_Times?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/OC_Times?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/OC_Times?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/OC_Times?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/OC_Times?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/OC_Times?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/OC_Times?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/OC_Times?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/OC_Times?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/OC_Times?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/OC_Times?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/OC_Times> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Moxie_Ladies?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Moxie_Ladies?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Moxie_Ladies?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Moxie_Ladies?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Moxie_Ladies?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Moxie_Ladies?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Moxie_Ladies?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Moxie_Ladies?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Moxie_Ladies?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Moxie_Ladies?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Moxie_Ladies?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Moxie_Ladies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Moxie_Ladies> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Main_Street_(quartet)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Main_Street_(quartet)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Main_Street_(quartet)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Main_Street_(quartet)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Main_Street_(quartet)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Main_Street_(quartet)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Main_Street_(quartet)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Main_Street_(quartet)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Main_Street_(quartet)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Main_Street_(quartet)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Main_Street_(quartet)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Main_Street_(quartet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Main_Street_(quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Instant_Classic?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Instant_Classic?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Instant_Classic?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Instant_Classic?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Instant_Classic?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Instant_Classic?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Instant_Classic?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Instant_Classic?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Instant_Classic?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Instant_Classic?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Instant_Classic?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Instant_Classic?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Instant_Classic> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/The_Ritz_(quartet)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/The_Ritz_(quartet)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/The_Ritz_(quartet)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/The_Ritz_(quartet)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/The_Ritz_(quartet)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/The_Ritz_(quartet)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/The_Ritz_(quartet)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/The_Ritz_(quartet)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/The_Ritz_(quartet)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/The_Ritz_(quartet)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/The_Ritz_(quartet)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/The_Ritz_(quartet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Ritz_(quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Rural_Route_4?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Rural_Route_4?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Rural_Route_4?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Rural_Route_4?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Rural_Route_4?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Rural_Route_4?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Rural_Route_4?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Rural_Route_4?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Rural_Route_4?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Rural_Route_4?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Rural_Route_4?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Rural_Route_4?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rural_Route_4> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Zing_(quartet)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Zing_(quartet)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Zing_(quartet)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Zing_(quartet)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Zing_(quartet)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Zing_(quartet)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Zing_(quartet)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Zing_(quartet)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Zing_(quartet)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Zing_(quartet)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Zing_(quartet)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Zing_(quartet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Zing_(quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/MAXX_Factor?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/MAXX_Factor?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/MAXX_Factor?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/MAXX_Factor?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/MAXX_Factor?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/MAXX_Factor?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/MAXX_Factor?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/MAXX_Factor?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/MAXX_Factor?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/MAXX_Factor?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/MAXX_Factor?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/MAXX_Factor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/MAXX_Factor> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Power_Play_(quartet)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Power_Play_(quartet)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Power_Play_(quartet)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Power_Play_(quartet)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Power_Play_(quartet)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Power_Play_(quartet)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Power_Play_(quartet)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Power_Play_(quartet)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Power_Play_(quartet)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Power_Play_(quartet)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Power_Play_(quartet)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Power_Play_(quartet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Power_Play_(quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/The_New_Tradition?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/The_New_Tradition?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/The_New_Tradition?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/The_New_Tradition?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/The_New_Tradition?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/The_New_Tradition?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/The_New_Tradition?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/The_New_Tradition?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/The_New_Tradition?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/The_New_Tradition?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/The_New_Tradition?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/The_New_Tradition?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_New_Tradition> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Acoustix?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Acoustix?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Acoustix?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Acoustix?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Acoustix?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Acoustix?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Acoustix?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Acoustix?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Acoustix?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Acoustix?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Acoustix?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Acoustix?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Acoustix> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Ringmasters_(barbershop_quartet)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Ringmasters_(barbershop_quartet)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Ringmasters_(barbershop_quartet)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Ringmasters_(barbershop_quartet)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Ringmasters_(barbershop_quartet)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Ringmasters_(barbershop_quartet)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Ringmasters_(barbershop_quartet)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Ringmasters_(barbershop_quartet)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Ringmasters_(barbershop_quartet)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Ringmasters_(barbershop_quartet)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Ringmasters_(barbershop_quartet)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Ringmasters_(barbershop_quartet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ringmasters_(barbershop_quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/FRED_(quartet)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/FRED_(quartet)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/FRED_(quartet)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/FRED_(quartet)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/FRED_(quartet)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/FRED_(quartet)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/FRED_(quartet)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/FRED_(quartet)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/FRED_(quartet)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/FRED_(quartet)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/FRED_(quartet)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/FRED_(quartet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/FRED_(quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Martini_(quartet)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Martini_(quartet)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Martini_(quartet)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Martini_(quartet)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Martini_(quartet)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Martini_(quartet)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Martini_(quartet)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Martini_(quartet)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Martini_(quartet)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Martini_(quartet)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Martini_(quartet)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Martini_(quartet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Martini_(quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Finest_Hour_(quartet)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Finest_Hour_(quartet)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Finest_Hour_(quartet)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Finest_Hour_(quartet)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Finest_Hour_(quartet)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Finest_Hour_(quartet)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Finest_Hour_(quartet)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Finest_Hour_(quartet)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Finest_Hour_(quartet)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Finest_Hour_(quartet)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Finest_Hour_(quartet)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Finest_Hour_(quartet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Finest_Hour_(quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Four_Statesmen?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Four_Statesmen?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Four_Statesmen?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Four_Statesmen?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Four_Statesmen?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Four_Statesmen?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Four_Statesmen?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Four_Statesmen?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Four_Statesmen?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Four_Statesmen?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Four_Statesmen?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Four_Statesmen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Four_Statesmen> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Michigan_Jake?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Michigan_Jake?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Michigan_Jake?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Michigan_Jake?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Michigan_Jake?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Michigan_Jake?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Michigan_Jake?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Michigan_Jake?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Michigan_Jake?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Michigan_Jake?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Michigan_Jake?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Michigan_Jake?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Michigan_Jake> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Chiefs_of_Staff_(quartet)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Chiefs_of_Staff_(quartet)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Chiefs_of_Staff_(quartet)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Chiefs_of_Staff_(quartet)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Chiefs_of_Staff_(quartet)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Chiefs_of_Staff_(quartet)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Chiefs_of_Staff_(quartet)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Chiefs_of_Staff_(quartet)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Chiefs_of_Staff_(quartet)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Chiefs_of_Staff_(quartet)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Chiefs_of_Staff_(quartet)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Chiefs_of_Staff_(quartet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chiefs_of_Staff_(quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Realtime_(quartet)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Realtime_(quartet)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Realtime_(quartet)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Realtime_(quartet)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Realtime_(quartet)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Realtime_(quartet)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Realtime_(quartet)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Realtime_(quartet)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Realtime_(quartet)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Realtime_(quartet)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Realtime_(quartet)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Realtime_(quartet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Realtime_(quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Keepsake_(quartet)?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Keepsake_(quartet)?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Keepsake_(quartet)?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Keepsake_(quartet)?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Keepsake_(quartet)?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Keepsake_(quartet)?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Keepsake_(quartet)?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Keepsake_(quartet)?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Keepsake_(quartet)?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Keepsake_(quartet)?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Keepsake_(quartet)?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Keepsake_(quartet)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Keepsake_(quartet)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "44",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von das Mitglied von http://dbpedia.org/resource/Trondheim_Jazz_Orchestra?", "Was wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Trondheim_Jazz_Orchestra?", "Was wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Trondheim_Jazz_Orchestra?", "Was wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Trondheim_Jazz_Orchestra?", "Welche Werks werden entwickelt von das Mitglied von http://dbpedia.org/resource/Trondheim_Jazz_Orchestra?", "Welche Werks werden entwickelt von die Mitglieder von http://dbpedia.org/resource/Trondheim_Jazz_Orchestra?", "Welche Werks wurden entwickelt von das Mitglied von http://dbpedia.org/resource/Trondheim_Jazz_Orchestra?", "Welche Werks wurden entwickelt von die Mitglieder von http://dbpedia.org/resource/Trondheim_Jazz_Orchestra?", "Welches Werk wird entwickelt von das Mitglied von http://dbpedia.org/resource/Trondheim_Jazz_Orchestra?", "Welches Werk wird entwickelt von die Mitglieder von http://dbpedia.org/resource/Trondheim_Jazz_Orchestra?", "Welches Werk wurde entwickelt von das Mitglied von http://dbpedia.org/resource/Trondheim_Jazz_Orchestra?", "Welches Werk wurde entwickelt von die Mitglieder von http://dbpedia.org/resource/Trondheim_Jazz_Orchestra?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Trondheim_Jazz_Orchestra> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Letícia_Persiles?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Letícia_Persiles?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Letícia_Persiles?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Letícia_Persiles?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Letícia_Persiles?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Letícia_Persiles?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Letícia_Persiles> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Tereza_Seiblitz?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Tereza_Seiblitz?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Tereza_Seiblitz?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Tereza_Seiblitz?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Tereza_Seiblitz?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Tereza_Seiblitz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tereza_Seiblitz> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Patrick_Sean_Smith?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Patrick_Sean_Smith?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Patrick_Sean_Smith?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Patrick_Sean_Smith?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Patrick_Sean_Smith?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Patrick_Sean_Smith?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Patrick_Sean_Smith> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mabel_Cook_Cole?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mabel_Cook_Cole?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mabel_Cook_Cole?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mabel_Cook_Cole?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mabel_Cook_Cole?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mabel_Cook_Cole?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mabel_Cook_Cole> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Cynthia_Lamontagne?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Cynthia_Lamontagne?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Cynthia_Lamontagne?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Cynthia_Lamontagne?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Cynthia_Lamontagne?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Cynthia_Lamontagne?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cynthia_Lamontagne> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Kristen Cloke?", "Was wurde entwickelt von Persons verheiratet mit Kristen Cloke?", "Welche Werks werden entwickelt von Persons verheiratet mit Kristen Cloke?", "Welche Werks wurden entwickelt von Persons verheiratet mit Kristen Cloke?", "Welches Werk wird entwickelt von Persons verheiratet mit Kristen Cloke?", "Welches Werk wurde entwickelt von Persons verheiratet mit Kristen Cloke?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kristen_Cloke> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Jennifer Schwalbach Smith?", "Was wurde entwickelt von Persons verheiratet mit Jennifer Schwalbach Smith?", "Welche Werks werden entwickelt von Persons verheiratet mit Jennifer Schwalbach Smith?", "Welche Werks wurden entwickelt von Persons verheiratet mit Jennifer Schwalbach Smith?", "Welches Werk wird entwickelt von Persons verheiratet mit Jennifer Schwalbach Smith?", "Welches Werk wurde entwickelt von Persons verheiratet mit Jennifer Schwalbach Smith?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jennifer_Schwalbach_Smith> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Annie Potts?", "Was wurde entwickelt von Persons verheiratet mit Annie Potts?", "Welche Werks werden entwickelt von Persons verheiratet mit Annie Potts?", "Welche Werks wurden entwickelt von Persons verheiratet mit Annie Potts?", "Welches Werk wird entwickelt von Persons verheiratet mit Annie Potts?", "Welches Werk wurde entwickelt von Persons verheiratet mit Annie Potts?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Annie_Potts> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Rose Leslie?", "Was wurde entwickelt von Persons verheiratet mit Rose Leslie?", "Welche Werks werden entwickelt von Persons verheiratet mit Rose Leslie?", "Welche Werks wurden entwickelt von Persons verheiratet mit Rose Leslie?", "Welches Werk wird entwickelt von Persons verheiratet mit Rose Leslie?", "Welches Werk wurde entwickelt von Persons verheiratet mit Rose Leslie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rose_Leslie> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Jill_Latiano?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Jill_Latiano?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Jill_Latiano?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Jill_Latiano?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Jill_Latiano?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Jill_Latiano?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jill_Latiano> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Emily_Short?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Emily_Short?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Emily_Short?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Emily_Short?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Emily_Short?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Emily_Short?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Emily_Short> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Susanne_Daniels?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Susanne_Daniels?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Susanne_Daniels?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Susanne_Daniels?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Susanne_Daniels?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Susanne_Daniels?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Susanne_Daniels> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Julie_Wilson_Nimmo?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Julie_Wilson_Nimmo?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Julie_Wilson_Nimmo?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Julie_Wilson_Nimmo?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Julie_Wilson_Nimmo?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Julie_Wilson_Nimmo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Julie_Wilson_Nimmo> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Rachel_Ramras?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Rachel_Ramras?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Rachel_Ramras?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Rachel_Ramras?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Rachel_Ramras?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Rachel_Ramras?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rachel_Ramras> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Lita Grey?", "Was wurde entwickelt von Persons verheiratet mit Lita Grey?", "Welche Werks werden entwickelt von Persons verheiratet mit Lita Grey?", "Welche Werks wurden entwickelt von Persons verheiratet mit Lita Grey?", "Welches Werk wird entwickelt von Persons verheiratet mit Lita Grey?", "Welches Werk wurde entwickelt von Persons verheiratet mit Lita Grey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lita_Grey> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Oona O’Neill?", "Was wurde entwickelt von Persons verheiratet mit Oona O’Neill?", "Welche Werks werden entwickelt von Persons verheiratet mit Oona O’Neill?", "Welche Werks wurden entwickelt von Persons verheiratet mit Oona O’Neill?", "Welches Werk wird entwickelt von Persons verheiratet mit Oona O’Neill?", "Welches Werk wurde entwickelt von Persons verheiratet mit Oona O’Neill?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Oona_O'Neill> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Paulette Goddard?", "Was wurde entwickelt von Persons verheiratet mit Paulette Goddard?", "Welche Werks werden entwickelt von Persons verheiratet mit Paulette Goddard?", "Welche Werks wurden entwickelt von Persons verheiratet mit Paulette Goddard?", "Welches Werk wird entwickelt von Persons verheiratet mit Paulette Goddard?", "Welches Werk wurde entwickelt von Persons verheiratet mit Paulette Goddard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Paulette_Goddard> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Bonnie_MacBird?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Bonnie_MacBird?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Bonnie_MacBird?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Bonnie_MacBird?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Bonnie_MacBird?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Bonnie_MacBird?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bonnie_MacBird> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mildred_Harris?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mildred_Harris?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mildred_Harris?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mildred_Harris?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mildred_Harris?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mildred_Harris?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mildred_Harris> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Bonnie_Lythgoe?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Bonnie_Lythgoe?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Bonnie_Lythgoe?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Bonnie_Lythgoe?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Bonnie_Lythgoe?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Bonnie_Lythgoe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bonnie_Lythgoe> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Gowri_Pandit?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Gowri_Pandit?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Gowri_Pandit?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Gowri_Pandit?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Gowri_Pandit?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Gowri_Pandit?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gowri_Pandit> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Molly_Ostertag?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Molly_Ostertag?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Molly_Ostertag?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Molly_Ostertag?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Molly_Ostertag?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Molly_Ostertag?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Molly_Ostertag> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Frances_Lear?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Frances_Lear?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Frances_Lear?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Frances_Lear?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Frances_Lear?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Frances_Lear?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Frances_Lear> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Terry_Amburgey?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Terry_Amburgey?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Terry_Amburgey?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Terry_Amburgey?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Terry_Amburgey?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Terry_Amburgey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Terry_Amburgey> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Maurice_de_Rothschild?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Maurice_de_Rothschild?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Maurice_de_Rothschild?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Maurice_de_Rothschild?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Maurice_de_Rothschild?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Maurice_de_Rothschild?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maurice_de_Rothschild> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Valerie Curtin?", "Was wurde entwickelt von Persons verheiratet mit Valerie Curtin?", "Welche Werks werden entwickelt von Persons verheiratet mit Valerie Curtin?", "Welche Werks wurden entwickelt von Persons verheiratet mit Valerie Curtin?", "Welches Werk wird entwickelt von Persons verheiratet mit Valerie Curtin?", "Welches Werk wurde entwickelt von Persons verheiratet mit Valerie Curtin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Valerie_Curtin> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Lisa Howard?", "Was wurde entwickelt von Persons verheiratet mit Lisa Howard?", "Welche Werks werden entwickelt von Persons verheiratet mit Lisa Howard?", "Welche Werks wurden entwickelt von Persons verheiratet mit Lisa Howard?", "Welches Werk wird entwickelt von Persons verheiratet mit Lisa Howard?", "Welches Werk wurde entwickelt von Persons verheiratet mit Lisa Howard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lisa_Howard_(Canadian_actress)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Zumbi?", "Was wurde entwickelt von Persons verheiratet mit Zumbi?", "Welche Werks werden entwickelt von Persons verheiratet mit Zumbi?", "Welche Werks wurden entwickelt von Persons verheiratet mit Zumbi?", "Welches Werk wird entwickelt von Persons verheiratet mit Zumbi?", "Welches Werk wurde entwickelt von Persons verheiratet mit Zumbi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Zumbi> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Noura_Ghazi?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Noura_Ghazi?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Noura_Ghazi?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Noura_Ghazi?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Noura_Ghazi?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Noura_Ghazi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Noura_Ghazi> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Rosie_Shuster?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Rosie_Shuster?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Rosie_Shuster?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Rosie_Shuster?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Rosie_Shuster?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Rosie_Shuster?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rosie_Shuster> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Laura_Marks?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Laura_Marks?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Laura_Marks?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Laura_Marks?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Laura_Marks?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Laura_Marks?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Laura_Marks> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Carlene_Watkins?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Carlene_Watkins?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Carlene_Watkins?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Carlene_Watkins?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Carlene_Watkins?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Carlene_Watkins?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carlene_Watkins> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Kim_Myers?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Kim_Myers?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Kim_Myers?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Kim_Myers?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Kim_Myers?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Kim_Myers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kim_Myers> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Carlos_Lacámara?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Carlos_Lacámara?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Carlos_Lacámara?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Carlos_Lacámara?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Carlos_Lacámara?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Carlos_Lacámara?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carlos_Lacámara> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Karen_Witter?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Karen_Witter?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Karen_Witter?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Karen_Witter?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Karen_Witter?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Karen_Witter?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Karen_Witter> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Madeleine Astor?", "Was wurde entwickelt von Persons verheiratet mit Madeleine Astor?", "Welche Werks werden entwickelt von Persons verheiratet mit Madeleine Astor?", "Welche Werks wurden entwickelt von Persons verheiratet mit Madeleine Astor?", "Welches Werk wird entwickelt von Persons verheiratet mit Madeleine Astor?", "Welches Werk wurde entwickelt von Persons verheiratet mit Madeleine Astor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Madeleine_Astor> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Alison Snowden?", "Was wurde entwickelt von Persons verheiratet mit Alison Snowden?", "Welche Werks werden entwickelt von Persons verheiratet mit Alison Snowden?", "Welche Werks wurden entwickelt von Persons verheiratet mit Alison Snowden?", "Welches Werk wird entwickelt von Persons verheiratet mit Alison Snowden?", "Welches Werk wurde entwickelt von Persons verheiratet mit Alison Snowden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alison_Snowden> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Ava Willing Astor?", "Was wurde entwickelt von Persons verheiratet mit Ava Willing Astor?", "Welche Werks werden entwickelt von Persons verheiratet mit Ava Willing Astor?", "Welche Werks wurden entwickelt von Persons verheiratet mit Ava Willing Astor?", "Welches Werk wird entwickelt von Persons verheiratet mit Ava Willing Astor?", "Welches Werk wurde entwickelt von Persons verheiratet mit Ava Willing Astor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ava_Lowle_Willing> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Abby Aldrich Rockefeller?", "Was wurde entwickelt von Persons verheiratet mit Abby Aldrich Rockefeller?", "Welche Werks werden entwickelt von Persons verheiratet mit Abby Aldrich Rockefeller?", "Welche Werks wurden entwickelt von Persons verheiratet mit Abby Aldrich Rockefeller?", "Welches Werk wird entwickelt von Persons verheiratet mit Abby Aldrich Rockefeller?", "Welches Werk wurde entwickelt von Persons verheiratet mit Abby Aldrich Rockefeller?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Abby_Aldrich_Rockefeller> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Talia Balsam?", "Was wurde entwickelt von Persons verheiratet mit Talia Balsam?", "Welche Werks werden entwickelt von Persons verheiratet mit Talia Balsam?", "Welche Werks wurden entwickelt von Persons verheiratet mit Talia Balsam?", "Welches Werk wird entwickelt von Persons verheiratet mit Talia Balsam?", "Welches Werk wurde entwickelt von Persons verheiratet mit Talia Balsam?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Talia_Balsam> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Ellen Bry?", "Was wurde entwickelt von Persons verheiratet mit Ellen Bry?", "Welche Werks werden entwickelt von Persons verheiratet mit Ellen Bry?", "Welche Werks wurden entwickelt von Persons verheiratet mit Ellen Bry?", "Welches Werk wird entwickelt von Persons verheiratet mit Ellen Bry?", "Welches Werk wurde entwickelt von Persons verheiratet mit Ellen Bry?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ellen_Bry> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Joyce_Burditt?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Joyce_Burditt?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Joyce_Burditt?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Joyce_Burditt?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Joyce_Burditt?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Joyce_Burditt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joyce_Burditt> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Amal_Clooney?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Amal_Clooney?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Amal_Clooney?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Amal_Clooney?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Amal_Clooney?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Amal_Clooney?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Amal_Clooney> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mellody_Hobson?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mellody_Hobson?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mellody_Hobson?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mellody_Hobson?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mellody_Hobson?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mellody_Hobson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mellody_Hobson> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Marcia_Lucas?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Marcia_Lucas?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Marcia_Lucas?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Marcia_Lucas?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Marcia_Lucas?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Marcia_Lucas?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Marcia_Lucas> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Wishnutama?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Wishnutama?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Wishnutama?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Wishnutama?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Wishnutama?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Wishnutama?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Wishnutama> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Nancy_Juvonen?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Nancy_Juvonen?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Nancy_Juvonen?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Nancy_Juvonen?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Nancy_Juvonen?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Nancy_Juvonen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nancy_Juvonen> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Martha_Baird_Rockefeller?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Martha_Baird_Rockefeller?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Martha_Baird_Rockefeller?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Martha_Baird_Rockefeller?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Martha_Baird_Rockefeller?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Martha_Baird_Rockefeller?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Martha_Baird_Rockefeller> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Graham_Nelson?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Graham_Nelson?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Graham_Nelson?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Graham_Nelson?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Graham_Nelson?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Graham_Nelson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Graham_Nelson> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Elise_Doganieri?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Elise_Doganieri?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Elise_Doganieri?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Elise_Doganieri?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Elise_Doganieri?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Elise_Doganieri?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elise_Doganieri> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Christa Miller?", "Was wurde entwickelt von Persons verheiratet mit Christa Miller?", "Welche Werks werden entwickelt von Persons verheiratet mit Christa Miller?", "Welche Werks wurden entwickelt von Persons verheiratet mit Christa Miller?", "Welches Werk wird entwickelt von Persons verheiratet mit Christa Miller?", "Welches Werk wurde entwickelt von Persons verheiratet mit Christa Miller?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Christa_Miller> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Pippa Scott?", "Was wurde entwickelt von Persons verheiratet mit Pippa Scott?", "Welche Werks werden entwickelt von Persons verheiratet mit Pippa Scott?", "Welche Werks wurden entwickelt von Persons verheiratet mit Pippa Scott?", "Welches Werk wird entwickelt von Persons verheiratet mit Pippa Scott?", "Welches Werk wurde entwickelt von Persons verheiratet mit Pippa Scott?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Pippa_Scott> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Megyn Price?", "Was wurde entwickelt von Persons verheiratet mit Megyn Price?", "Welche Werks werden entwickelt von Persons verheiratet mit Megyn Price?", "Welche Werks wurden entwickelt von Persons verheiratet mit Megyn Price?", "Welches Werk wird entwickelt von Persons verheiratet mit Megyn Price?", "Welches Werk wurde entwickelt von Persons verheiratet mit Megyn Price?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Megyn_Price> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Melinda Gates?", "Was wurde entwickelt von Persons verheiratet mit Melinda Gates?", "Welche Werks werden entwickelt von Persons verheiratet mit Melinda Gates?", "Welche Werks wurden entwickelt von Persons verheiratet mit Melinda Gates?", "Welches Werk wird entwickelt von Persons verheiratet mit Melinda Gates?", "Welches Werk wurde entwickelt von Persons verheiratet mit Melinda Gates?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Melinda_Gates> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Meredith_L._Patterson?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Meredith_L._Patterson?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Meredith_L._Patterson?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Meredith_L._Patterson?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Meredith_L._Patterson?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Meredith_L._Patterson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Meredith_L._Patterson> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Vivien_Alcock?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Vivien_Alcock?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Vivien_Alcock?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Vivien_Alcock?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Vivien_Alcock?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Vivien_Alcock?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Vivien_Alcock> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Duke_Hayward?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Duke_Hayward?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Duke_Hayward?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Duke_Hayward?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Duke_Hayward?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Duke_Hayward?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Duke_Hayward> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Elizabeth_Whitmere?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Elizabeth_Whitmere?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Elizabeth_Whitmere?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Elizabeth_Whitmere?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Elizabeth_Whitmere?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Elizabeth_Whitmere?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elizabeth_Whitmere> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Jennifer Tilly?", "Was wurde entwickelt von Persons verheiratet mit Jennifer Tilly?", "Welche Werks werden entwickelt von Persons verheiratet mit Jennifer Tilly?", "Welche Werks wurden entwickelt von Persons verheiratet mit Jennifer Tilly?", "Welches Werk wird entwickelt von Persons verheiratet mit Jennifer Tilly?", "Welches Werk wurde entwickelt von Persons verheiratet mit Jennifer Tilly?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jennifer_Tilly> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Kate_Fleetwood?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Kate_Fleetwood?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Kate_Fleetwood?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Kate_Fleetwood?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Kate_Fleetwood?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Kate_Fleetwood?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kate_Fleetwood> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mara_Brock_Akil?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mara_Brock_Akil?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mara_Brock_Akil?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mara_Brock_Akil?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mara_Brock_Akil?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mara_Brock_Akil?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mara_Brock_Akil> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Julie_Dretzin?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Julie_Dretzin?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Julie_Dretzin?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Julie_Dretzin?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Julie_Dretzin?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Julie_Dretzin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Julie_Dretzin> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Sharon_Shore?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Sharon_Shore?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Sharon_Shore?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Sharon_Shore?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Sharon_Shore?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Sharon_Shore?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sharon_Shore> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Suzanne_Martin?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Suzanne_Martin?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Suzanne_Martin?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Suzanne_Martin?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Suzanne_Martin?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Suzanne_Martin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Suzanne_Martin> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Ivana Trump?", "Was wurde entwickelt von Persons verheiratet mit Ivana Trump?", "Welche Werks werden entwickelt von Persons verheiratet mit Ivana Trump?", "Welche Werks wurden entwickelt von Persons verheiratet mit Ivana Trump?", "Welches Werk wird entwickelt von Persons verheiratet mit Ivana Trump?", "Welches Werk wurde entwickelt von Persons verheiratet mit Ivana Trump?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ivana_Trump> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Pamela Hensley?", "Was wurde entwickelt von Persons verheiratet mit Pamela Hensley?", "Welche Werks werden entwickelt von Persons verheiratet mit Pamela Hensley?", "Welche Werks wurden entwickelt von Persons verheiratet mit Pamela Hensley?", "Welches Werk wird entwickelt von Persons verheiratet mit Pamela Hensley?", "Welches Werk wurde entwickelt von Persons verheiratet mit Pamela Hensley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Pamela_Hensley> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Melania Trump?", "Was wurde entwickelt von Persons verheiratet mit Melania Trump?", "Welche Werks werden entwickelt von Persons verheiratet mit Melania Trump?", "Welche Werks wurden entwickelt von Persons verheiratet mit Melania Trump?", "Welches Werk wird entwickelt von Persons verheiratet mit Melania Trump?", "Welches Werk wurde entwickelt von Persons verheiratet mit Melania Trump?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Melania_Trump> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Marla Maples?", "Was wurde entwickelt von Persons verheiratet mit Marla Maples?", "Welche Werks werden entwickelt von Persons verheiratet mit Marla Maples?", "Welche Werks wurden entwickelt von Persons verheiratet mit Marla Maples?", "Welches Werk wird entwickelt von Persons verheiratet mit Marla Maples?", "Welches Werk wurde entwickelt von Persons verheiratet mit Marla Maples?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Marla_Maples> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Eric_Zicklin?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Eric_Zicklin?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Eric_Zicklin?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Eric_Zicklin?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Eric_Zicklin?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Eric_Zicklin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Eric_Zicklin> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Leona Helmsley?", "Was wurde entwickelt von Persons verheiratet mit Leona Helmsley?", "Welche Werks werden entwickelt von Persons verheiratet mit Leona Helmsley?", "Welche Werks wurden entwickelt von Persons verheiratet mit Leona Helmsley?", "Welches Werk wird entwickelt von Persons verheiratet mit Leona Helmsley?", "Welches Werk wurde entwickelt von Persons verheiratet mit Leona Helmsley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Leona_Helmsley> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit James Cameron?", "Was wurde entwickelt von Persons verheiratet mit James Cameron?", "Welche Werks werden entwickelt von Persons verheiratet mit James Cameron?", "Welche Werks wurden entwickelt von Persons verheiratet mit James Cameron?", "Welches Werk wird entwickelt von Persons verheiratet mit James Cameron?", "Welches Werk wurde entwickelt von Persons verheiratet mit James Cameron?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/James_Cameron> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Elinor Donahue?", "Was wurde entwickelt von Persons verheiratet mit Elinor Donahue?", "Welche Werks werden entwickelt von Persons verheiratet mit Elinor Donahue?", "Welche Werks wurden entwickelt von Persons verheiratet mit Elinor Donahue?", "Welches Werk wird entwickelt von Persons verheiratet mit Elinor Donahue?", "Welches Werk wurde entwickelt von Persons verheiratet mit Elinor Donahue?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elinor_Donahue> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Jonathan Hensleigh?", "Was wurde entwickelt von Persons verheiratet mit Jonathan Hensleigh?", "Welche Werks werden entwickelt von Persons verheiratet mit Jonathan Hensleigh?", "Welche Werks wurden entwickelt von Persons verheiratet mit Jonathan Hensleigh?", "Welches Werk wird entwickelt von Persons verheiratet mit Jonathan Hensleigh?", "Welches Werk wurde entwickelt von Persons verheiratet mit Jonathan Hensleigh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jonathan_Hensleigh> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Mary Anne MacLeod Trump?", "Was wurde entwickelt von Persons verheiratet mit Mary Anne MacLeod Trump?", "Welche Werks werden entwickelt von Persons verheiratet mit Mary Anne MacLeod Trump?", "Welche Werks wurden entwickelt von Persons verheiratet mit Mary Anne MacLeod Trump?", "Welches Werk wird entwickelt von Persons verheiratet mit Mary Anne MacLeod Trump?", "Welches Werk wurde entwickelt von Persons verheiratet mit Mary Anne MacLeod Trump?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mary_Anne_MacLeod_Trump> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Arlene_Klasky?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Arlene_Klasky?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Arlene_Klasky?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Arlene_Klasky?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Arlene_Klasky?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Arlene_Klasky?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Arlene_Klasky> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Cheryl_Saban?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Cheryl_Saban?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Cheryl_Saban?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Cheryl_Saban?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Cheryl_Saban?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Cheryl_Saban?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cheryl_Saban> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Soleil Moon Frye?", "Was wurde entwickelt von Persons verheiratet mit Soleil Moon Frye?", "Welche Werks werden entwickelt von Persons verheiratet mit Soleil Moon Frye?", "Welche Werks wurden entwickelt von Persons verheiratet mit Soleil Moon Frye?", "Welches Werk wird entwickelt von Persons verheiratet mit Soleil Moon Frye?", "Welches Werk wurde entwickelt von Persons verheiratet mit Soleil Moon Frye?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Soleil_Moon_Frye> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Constance Dowling?", "Was wurde entwickelt von Persons verheiratet mit Constance Dowling?", "Welche Werks werden entwickelt von Persons verheiratet mit Constance Dowling?", "Welche Werks wurden entwickelt von Persons verheiratet mit Constance Dowling?", "Welches Werk wird entwickelt von Persons verheiratet mit Constance Dowling?", "Welches Werk wurde entwickelt von Persons verheiratet mit Constance Dowling?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Constance_Dowling> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Natasha_Halevi?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Natasha_Halevi?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Natasha_Halevi?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Natasha_Halevi?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Natasha_Halevi?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Natasha_Halevi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Natasha_Halevi> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Eden Riegel?", "Was wurde entwickelt von Persons verheiratet mit Eden Riegel?", "Welche Werks werden entwickelt von Persons verheiratet mit Eden Riegel?", "Welche Werks wurden entwickelt von Persons verheiratet mit Eden Riegel?", "Welches Werk wird entwickelt von Persons verheiratet mit Eden Riegel?", "Welches Werk wurde entwickelt von Persons verheiratet mit Eden Riegel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Eden_Riegel> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Scott Weinger?", "Was wurde entwickelt von Persons verheiratet mit Scott Weinger?", "Welche Werks werden entwickelt von Persons verheiratet mit Scott Weinger?", "Welche Werks wurden entwickelt von Persons verheiratet mit Scott Weinger?", "Welches Werk wird entwickelt von Persons verheiratet mit Scott Weinger?", "Welches Werk wurde entwickelt von Persons verheiratet mit Scott Weinger?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Scott_Weinger> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Katie_Ford_(CEO)?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Katie_Ford_(CEO)?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Katie_Ford_(CEO)?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Katie_Ford_(CEO)?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Katie_Ford_(CEO)?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Katie_Ford_(CEO)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Katie_Ford_(CEO)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Gábor Csupó?", "Was wurde entwickelt von Persons verheiratet mit Gábor Csupó?", "Welche Werks werden entwickelt von Persons verheiratet mit Gábor Csupó?", "Welche Werks wurden entwickelt von Persons verheiratet mit Gábor Csupó?", "Welches Werk wird entwickelt von Persons verheiratet mit Gábor Csupó?", "Welches Werk wurde entwickelt von Persons verheiratet mit Gábor Csupó?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gábor_Csupó> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Estelle_Lefébure?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Estelle_Lefébure?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Estelle_Lefébure?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Estelle_Lefébure?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Estelle_Lefébure?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Estelle_Lefébure?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Estelle_Lefébure> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Laetitia_Garriott_de_Cayeux?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Laetitia_Garriott_de_Cayeux?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Laetitia_Garriott_de_Cayeux?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Laetitia_Garriott_de_Cayeux?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Laetitia_Garriott_de_Cayeux?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Laetitia_Garriott_de_Cayeux?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Laetitia_Garriott_de_Cayeux> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Rosanna_Huffman?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Rosanna_Huffman?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Rosanna_Huffman?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Rosanna_Huffman?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Rosanna_Huffman?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Rosanna_Huffman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rosanna_Huffman> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Lorraine_Adams?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Lorraine_Adams?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Lorraine_Adams?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Lorraine_Adams?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Lorraine_Adams?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Lorraine_Adams?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lorraine_Adams> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Giannina_Facio?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Giannina_Facio?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Giannina_Facio?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Giannina_Facio?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Giannina_Facio?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Giannina_Facio?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Giannina_Facio> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Erik_Stocklin?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Erik_Stocklin?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Erik_Stocklin?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Erik_Stocklin?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Erik_Stocklin?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Erik_Stocklin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Erik_Stocklin> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Hanna_Azoulay_Hasfari?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Hanna_Azoulay_Hasfari?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Hanna_Azoulay_Hasfari?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Hanna_Azoulay_Hasfari?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Hanna_Azoulay_Hasfari?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Hanna_Azoulay_Hasfari?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hanna_Azoulay_Hasfari> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Emmanuelle Arsan?", "Was wurde entwickelt von Persons verheiratet mit Emmanuelle Arsan?", "Welche Werks werden entwickelt von Persons verheiratet mit Emmanuelle Arsan?", "Welche Werks wurden entwickelt von Persons verheiratet mit Emmanuelle Arsan?", "Welches Werk wird entwickelt von Persons verheiratet mit Emmanuelle Arsan?", "Welches Werk wurde entwickelt von Persons verheiratet mit Emmanuelle Arsan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Emmanuelle_Arsan> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Daniela_Simpson?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Daniela_Simpson?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Daniela_Simpson?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Daniela_Simpson?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Daniela_Simpson?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Daniela_Simpson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Daniela_Simpson> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Lindsay Price?", "Was wurde entwickelt von Persons verheiratet mit Lindsay Price?", "Welche Werks werden entwickelt von Persons verheiratet mit Lindsay Price?", "Welche Werks wurden entwickelt von Persons verheiratet mit Lindsay Price?", "Welches Werk wird entwickelt von Persons verheiratet mit Lindsay Price?", "Welches Werk wurde entwickelt von Persons verheiratet mit Lindsay Price?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lindsay_Price> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Cynthia_Sikes_Yorkin?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Cynthia_Sikes_Yorkin?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Cynthia_Sikes_Yorkin?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Cynthia_Sikes_Yorkin?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Cynthia_Sikes_Yorkin?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Cynthia_Sikes_Yorkin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cynthia_Sikes_Yorkin> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Peg_Yorkin?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Peg_Yorkin?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Peg_Yorkin?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Peg_Yorkin?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Peg_Yorkin?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Peg_Yorkin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Peg_Yorkin> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Zsa Zsa Gabor?", "Was wurde entwickelt von Persons verheiratet mit Zsa Zsa Gabor?", "Welche Werks werden entwickelt von Persons verheiratet mit Zsa Zsa Gabor?", "Welche Werks wurden entwickelt von Persons verheiratet mit Zsa Zsa Gabor?", "Welches Werk wird entwickelt von Persons verheiratet mit Zsa Zsa Gabor?", "Welches Werk wurde entwickelt von Persons verheiratet mit Zsa Zsa Gabor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Zsa_Zsa_Gabor> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Samira Wiley?", "Was wurde entwickelt von Persons verheiratet mit Samira Wiley?", "Welche Werks werden entwickelt von Persons verheiratet mit Samira Wiley?", "Welche Werks wurden entwickelt von Persons verheiratet mit Samira Wiley?", "Welches Werk wird entwickelt von Persons verheiratet mit Samira Wiley?", "Welches Werk wurde entwickelt von Persons verheiratet mit Samira Wiley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Samira_Wiley> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit Lauren Faust?", "Was wurde entwickelt von Persons verheiratet mit Lauren Faust?", "Welche Werks werden entwickelt von Persons verheiratet mit Lauren Faust?", "Welche Werks wurden entwickelt von Persons verheiratet mit Lauren Faust?", "Welches Werk wird entwickelt von Persons verheiratet mit Lauren Faust?", "Welches Werk wurde entwickelt von Persons verheiratet mit Lauren Faust?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lauren_Faust> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Patricia_Marshall?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Patricia_Marshall?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Patricia_Marshall?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Patricia_Marshall?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Patricia_Marshall?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Patricia_Marshall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Patricia_Marshall> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "45",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "WORK",
    "frameType" : "APP",
    "sentences" : [ "Was wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mary_French_Rockefeller?", "Was wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mary_French_Rockefeller?", "Welche Werks werden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mary_French_Rockefeller?", "Welche Werks wurden entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mary_French_Rockefeller?", "Welches Werk wird entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mary_French_Rockefeller?", "Welches Werk wurde entwickelt von Persons verheiratet mit http://dbpedia.org/resource/Mary_French_Rockefeller?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mary_French_Rockefeller> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Das goldene Zeitalter?", "Welche Person wird verheiratet mit die Komponisten für Das goldene Zeitalter?", "Welche Person wurde verheiratet mit der Komponist für Das goldene Zeitalter?", "Welche Person wurde verheiratet mit die Komponisten für Das goldene Zeitalter?", "Welche Persons werden verheiratet mit der Komponist für Das goldene Zeitalter?", "Welche Persons werden verheiratet mit die Komponisten für Das goldene Zeitalter?", "Welche Persons wurden verheiratet mit der Komponist für Das goldene Zeitalter?", "Welche Persons wurden verheiratet mit die Komponisten für Das goldene Zeitalter?", "Wer wird verheiratet mit der Komponist für Das goldene Zeitalter?", "Wer wird verheiratet mit die Komponisten für Das goldene Zeitalter?", "Wer wurde verheiratet mit der Komponist für Das goldene Zeitalter?", "Wer wurde verheiratet mit die Komponisten für Das goldene Zeitalter?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/L'Age_d'Or> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Sakada_(1976_film)?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Sakada_(1976_film)?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Sakada_(1976_film)?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Sakada_(1976_film)?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Sakada_(1976_film)?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Sakada_(1976_film)?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Sakada_(1976_film)?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Sakada_(1976_film)?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Sakada_(1976_film)?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Sakada_(1976_film)?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Sakada_(1976_film)?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Sakada_(1976_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sakada_(1976_film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Come_Back,_Africa?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Come_Back,_Africa?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Come_Back,_Africa?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Come_Back,_Africa?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Come_Back,_Africa?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Come_Back,_Africa?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Come_Back,_Africa?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Come_Back,_Africa?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Come_Back,_Africa?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Come_Back,_Africa?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Come_Back,_Africa?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Come_Back,_Africa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Come_Back,_Africa> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für In Bed with Madonna?", "Welche Person wird verheiratet mit die Komponisten für In Bed with Madonna?", "Welche Person wurde verheiratet mit der Komponist für In Bed with Madonna?", "Welche Person wurde verheiratet mit die Komponisten für In Bed with Madonna?", "Welche Persons werden verheiratet mit der Komponist für In Bed with Madonna?", "Welche Persons werden verheiratet mit die Komponisten für In Bed with Madonna?", "Welche Persons wurden verheiratet mit der Komponist für In Bed with Madonna?", "Welche Persons wurden verheiratet mit die Komponisten für In Bed with Madonna?", "Wer wird verheiratet mit der Komponist für In Bed with Madonna?", "Wer wird verheiratet mit die Komponisten für In Bed with Madonna?", "Wer wurde verheiratet mit der Komponist für In Bed with Madonna?", "Wer wurde verheiratet mit die Komponisten für In Bed with Madonna?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Madonna:_Truth_or_Dare> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Saat_Hindustani?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Saat_Hindustani?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Saat_Hindustani?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Saat_Hindustani?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Saat_Hindustani?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Saat_Hindustani?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Saat_Hindustani?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Saat_Hindustani?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Saat_Hindustani?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Saat_Hindustani?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Saat_Hindustani?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Saat_Hindustani?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Saat_Hindustani> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/On_Board_(film)?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/On_Board_(film)?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/On_Board_(film)?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/On_Board_(film)?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/On_Board_(film)?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/On_Board_(film)?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/On_Board_(film)?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/On_Board_(film)?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/On_Board_(film)?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/On_Board_(film)?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/On_Board_(film)?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/On_Board_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/On_Board_(film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/A_Madonna_in_Laleli?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/A_Madonna_in_Laleli?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/A_Madonna_in_Laleli?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/A_Madonna_in_Laleli?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/A_Madonna_in_Laleli?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/A_Madonna_in_Laleli?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/A_Madonna_in_Laleli?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/A_Madonna_in_Laleli?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/A_Madonna_in_Laleli?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/A_Madonna_in_Laleli?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/A_Madonna_in_Laleli?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/A_Madonna_in_Laleli?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A_Madonna_in_Laleli> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Manjina_Hani?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Manjina_Hani?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Manjina_Hani?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Manjina_Hani?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Manjina_Hani?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Manjina_Hani?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Manjina_Hani?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Manjina_Hani?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Manjina_Hani?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Manjina_Hani?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Manjina_Hani?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Manjina_Hani?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Manjina_Hani> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Kodanda_Rama?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Kodanda_Rama?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Kodanda_Rama?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Kodanda_Rama?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Kodanda_Rama?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Kodanda_Rama?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Kodanda_Rama?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Kodanda_Rama?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Kodanda_Rama?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Kodanda_Rama?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Kodanda_Rama?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Kodanda_Rama?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kodanda_Rama> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Naanu_Nanna_Hendthiru?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Naanu_Nanna_Hendthiru?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Naanu_Nanna_Hendthiru?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Naanu_Nanna_Hendthiru?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Naanu_Nanna_Hendthiru?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Naanu_Nanna_Hendthiru?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Naanu_Nanna_Hendthiru?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Naanu_Nanna_Hendthiru?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Naanu_Nanna_Hendthiru?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Naanu_Nanna_Hendthiru?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Naanu_Nanna_Hendthiru?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Naanu_Nanna_Hendthiru?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Naanu_Nanna_Hendthiru> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/O_Nanna_Nalle?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/O_Nanna_Nalle?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/O_Nanna_Nalle?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/O_Nanna_Nalle?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/O_Nanna_Nalle?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/O_Nanna_Nalle?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/O_Nanna_Nalle?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/O_Nanna_Nalle?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/O_Nanna_Nalle?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/O_Nanna_Nalle?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/O_Nanna_Nalle?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/O_Nanna_Nalle?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/O_Nanna_Nalle> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Ayya_(2005_Kannada_film)?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Ayya_(2005_Kannada_film)?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Ayya_(2005_Kannada_film)?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Ayya_(2005_Kannada_film)?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Ayya_(2005_Kannada_film)?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Ayya_(2005_Kannada_film)?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Ayya_(2005_Kannada_film)?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Ayya_(2005_Kannada_film)?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Ayya_(2005_Kannada_film)?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Ayya_(2005_Kannada_film)?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Ayya_(2005_Kannada_film)?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Ayya_(2005_Kannada_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ayya_(2005_Kannada_film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/O_Premave?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/O_Premave?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/O_Premave?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/O_Premave?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/O_Premave?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/O_Premave?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/O_Premave?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/O_Premave?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/O_Premave?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/O_Premave?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/O_Premave?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/O_Premave?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/O_Premave> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Chora_Chittha_Chora?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Chora_Chittha_Chora?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Chora_Chittha_Chora?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Chora_Chittha_Chora?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Chora_Chittha_Chora?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Chora_Chittha_Chora?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Chora_Chittha_Chora?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Chora_Chittha_Chora?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Chora_Chittha_Chora?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Chora_Chittha_Chora?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Chora_Chittha_Chora?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Chora_Chittha_Chora?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chora_Chittha_Chora> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Sneha_(film)?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Sneha_(film)?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Sneha_(film)?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Sneha_(film)?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Sneha_(film)?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Sneha_(film)?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Sneha_(film)?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Sneha_(film)?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Sneha_(film)?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Sneha_(film)?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Sneha_(film)?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Sneha_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sneha_(film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Hatavadi?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Hatavadi?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Hatavadi?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Hatavadi?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Hatavadi?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Hatavadi?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Hatavadi?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Hatavadi?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Hatavadi?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Hatavadi?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Hatavadi?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Hatavadi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hatavadi> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Apoorva_(2016_film)?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Apoorva_(2016_film)?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Apoorva_(2016_film)?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Apoorva_(2016_film)?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Apoorva_(2016_film)?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Apoorva_(2016_film)?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Apoorva_(2016_film)?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Apoorva_(2016_film)?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Apoorva_(2016_film)?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Apoorva_(2016_film)?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Apoorva_(2016_film)?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Apoorva_(2016_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Apoorva_(2016_film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Pandu_Ranga_Vittala?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Pandu_Ranga_Vittala?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Pandu_Ranga_Vittala?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Pandu_Ranga_Vittala?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Pandu_Ranga_Vittala?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Pandu_Ranga_Vittala?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Pandu_Ranga_Vittala?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Pandu_Ranga_Vittala?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Pandu_Ranga_Vittala?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Pandu_Ranga_Vittala?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Pandu_Ranga_Vittala?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Pandu_Ranga_Vittala?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Pandu_Ranga_Vittala> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Aham_Premasmi?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Aham_Premasmi?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Aham_Premasmi?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Aham_Premasmi?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Aham_Premasmi?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Aham_Premasmi?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Aham_Premasmi?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Aham_Premasmi?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Aham_Premasmi?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Aham_Premasmi?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Aham_Premasmi?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Aham_Premasmi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Aham_Premasmi> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Crazy_Star_(film)?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Crazy_Star_(film)?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Crazy_Star_(film)?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Crazy_Star_(film)?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Crazy_Star_(film)?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Crazy_Star_(film)?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Crazy_Star_(film)?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Crazy_Star_(film)?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Crazy_Star_(film)?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Crazy_Star_(film)?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Crazy_Star_(film)?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Crazy_Star_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Crazy_Star_(film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Neelakanta_(film)?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Neelakanta_(film)?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Neelakanta_(film)?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Neelakanta_(film)?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Neelakanta_(film)?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Neelakanta_(film)?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Neelakanta_(film)?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Neelakanta_(film)?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Neelakanta_(film)?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Neelakanta_(film)?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Neelakanta_(film)?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Neelakanta_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Neelakanta_(film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Preethsu_Thappenilla?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Preethsu_Thappenilla?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Preethsu_Thappenilla?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Preethsu_Thappenilla?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Preethsu_Thappenilla?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Preethsu_Thappenilla?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Preethsu_Thappenilla?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Preethsu_Thappenilla?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Preethsu_Thappenilla?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Preethsu_Thappenilla?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Preethsu_Thappenilla?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Preethsu_Thappenilla?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Preethsu_Thappenilla> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Ekangi?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Ekangi?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Ekangi?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Ekangi?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Ekangi?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Ekangi?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Ekangi?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Ekangi?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Ekangi?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Ekangi?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Ekangi?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Ekangi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ekangi> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Naariya_Seere_Kadda?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Naariya_Seere_Kadda?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Naariya_Seere_Kadda?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Naariya_Seere_Kadda?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Naariya_Seere_Kadda?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Naariya_Seere_Kadda?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Naariya_Seere_Kadda?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Naariya_Seere_Kadda?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Naariya_Seere_Kadda?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Naariya_Seere_Kadda?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Naariya_Seere_Kadda?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Naariya_Seere_Kadda?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Naariya_Seere_Kadda> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Malla_(film)?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Malla_(film)?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Malla_(film)?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Malla_(film)?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Malla_(film)?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Malla_(film)?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Malla_(film)?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Malla_(film)?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Malla_(film)?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Malla_(film)?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Malla_(film)?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Malla_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Malla_(film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/The_Fourth_Dimension_(film)?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/The_Fourth_Dimension_(film)?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/The_Fourth_Dimension_(film)?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/The_Fourth_Dimension_(film)?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/The_Fourth_Dimension_(film)?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/The_Fourth_Dimension_(film)?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/The_Fourth_Dimension_(film)?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/The_Fourth_Dimension_(film)?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/The_Fourth_Dimension_(film)?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/The_Fourth_Dimension_(film)?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/The_Fourth_Dimension_(film)?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/The_Fourth_Dimension_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Fourth_Dimension_(film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Der Jazzkönig?", "Welche Person wird verheiratet mit die Komponisten für Der Jazzkönig?", "Welche Person wurde verheiratet mit der Komponist für Der Jazzkönig?", "Welche Person wurde verheiratet mit die Komponisten für Der Jazzkönig?", "Welche Persons werden verheiratet mit der Komponist für Der Jazzkönig?", "Welche Persons werden verheiratet mit die Komponisten für Der Jazzkönig?", "Welche Persons wurden verheiratet mit der Komponist für Der Jazzkönig?", "Welche Persons wurden verheiratet mit die Komponisten für Der Jazzkönig?", "Wer wird verheiratet mit der Komponist für Der Jazzkönig?", "Wer wird verheiratet mit die Komponisten für Der Jazzkönig?", "Wer wurde verheiratet mit der Komponist für Der Jazzkönig?", "Wer wurde verheiratet mit die Komponisten für Der Jazzkönig?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/King_of_Jazz> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Jenseits der Wolken?", "Welche Person wird verheiratet mit die Komponisten für Jenseits der Wolken?", "Welche Person wurde verheiratet mit der Komponist für Jenseits der Wolken?", "Welche Person wurde verheiratet mit die Komponisten für Jenseits der Wolken?", "Welche Persons werden verheiratet mit der Komponist für Jenseits der Wolken?", "Welche Persons werden verheiratet mit die Komponisten für Jenseits der Wolken?", "Welche Persons wurden verheiratet mit der Komponist für Jenseits der Wolken?", "Welche Persons wurden verheiratet mit die Komponisten für Jenseits der Wolken?", "Wer wird verheiratet mit der Komponist für Jenseits der Wolken?", "Wer wird verheiratet mit die Komponisten für Jenseits der Wolken?", "Wer wurde verheiratet mit der Komponist für Jenseits der Wolken?", "Wer wurde verheiratet mit die Komponisten für Jenseits der Wolken?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Beyond_the_Clouds_(1995_film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Dont Look Back?", "Welche Person wird verheiratet mit die Komponisten für Dont Look Back?", "Welche Person wurde verheiratet mit der Komponist für Dont Look Back?", "Welche Person wurde verheiratet mit die Komponisten für Dont Look Back?", "Welche Persons werden verheiratet mit der Komponist für Dont Look Back?", "Welche Persons werden verheiratet mit die Komponisten für Dont Look Back?", "Welche Persons wurden verheiratet mit der Komponist für Dont Look Back?", "Welche Persons wurden verheiratet mit die Komponisten für Dont Look Back?", "Wer wird verheiratet mit der Komponist für Dont Look Back?", "Wer wird verheiratet mit die Komponisten für Dont Look Back?", "Wer wurde verheiratet mit der Komponist für Dont Look Back?", "Wer wurde verheiratet mit die Komponisten für Dont Look Back?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dont_Look_Back> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Eat the Document?", "Welche Person wird verheiratet mit die Komponisten für Eat the Document?", "Welche Person wurde verheiratet mit der Komponist für Eat the Document?", "Welche Person wurde verheiratet mit die Komponisten für Eat the Document?", "Welche Persons werden verheiratet mit der Komponist für Eat the Document?", "Welche Persons werden verheiratet mit die Komponisten für Eat the Document?", "Welche Persons wurden verheiratet mit der Komponist für Eat the Document?", "Welche Persons wurden verheiratet mit die Komponisten für Eat the Document?", "Wer wird verheiratet mit der Komponist für Eat the Document?", "Wer wird verheiratet mit die Komponisten für Eat the Document?", "Wer wurde verheiratet mit der Komponist für Eat the Document?", "Wer wurde verheiratet mit die Komponisten für Eat the Document?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Eat_the_Document> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Schlagerpiraten?", "Welche Person wird verheiratet mit die Komponisten für Schlagerpiraten?", "Welche Person wurde verheiratet mit der Komponist für Schlagerpiraten?", "Welche Person wurde verheiratet mit die Komponisten für Schlagerpiraten?", "Welche Persons werden verheiratet mit der Komponist für Schlagerpiraten?", "Welche Persons werden verheiratet mit die Komponisten für Schlagerpiraten?", "Welche Persons wurden verheiratet mit der Komponist für Schlagerpiraten?", "Welche Persons wurden verheiratet mit die Komponisten für Schlagerpiraten?", "Wer wird verheiratet mit der Komponist für Schlagerpiraten?", "Wer wird verheiratet mit die Komponisten für Schlagerpiraten?", "Wer wurde verheiratet mit der Komponist für Schlagerpiraten?", "Wer wurde verheiratet mit die Komponisten für Schlagerpiraten?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Girl_Can't_Help_It> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für The Million Dollar Hotel?", "Welche Person wird verheiratet mit die Komponisten für The Million Dollar Hotel?", "Welche Person wurde verheiratet mit der Komponist für The Million Dollar Hotel?", "Welche Person wurde verheiratet mit die Komponisten für The Million Dollar Hotel?", "Welche Persons werden verheiratet mit der Komponist für The Million Dollar Hotel?", "Welche Persons werden verheiratet mit die Komponisten für The Million Dollar Hotel?", "Welche Persons wurden verheiratet mit der Komponist für The Million Dollar Hotel?", "Welche Persons wurden verheiratet mit die Komponisten für The Million Dollar Hotel?", "Wer wird verheiratet mit der Komponist für The Million Dollar Hotel?", "Wer wird verheiratet mit die Komponisten für The Million Dollar Hotel?", "Wer wurde verheiratet mit der Komponist für The Million Dollar Hotel?", "Wer wurde verheiratet mit die Komponisten für The Million Dollar Hotel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Million_Dollar_Hotel> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für ABBA – Der Film?", "Welche Person wird verheiratet mit die Komponisten für ABBA – Der Film?", "Welche Person wurde verheiratet mit der Komponist für ABBA – Der Film?", "Welche Person wurde verheiratet mit die Komponisten für ABBA – Der Film?", "Welche Persons werden verheiratet mit der Komponist für ABBA – Der Film?", "Welche Persons werden verheiratet mit die Komponisten für ABBA – Der Film?", "Welche Persons wurden verheiratet mit der Komponist für ABBA – Der Film?", "Welche Persons wurden verheiratet mit die Komponisten für ABBA – Der Film?", "Wer wird verheiratet mit der Komponist für ABBA – Der Film?", "Wer wird verheiratet mit die Komponisten für ABBA – Der Film?", "Wer wurde verheiratet mit der Komponist für ABBA – Der Film?", "Wer wurde verheiratet mit die Komponisten für ABBA – Der Film?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/ABBA:_The_Movie> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Pat Garrett jagt Billy the Kid?", "Welche Person wird verheiratet mit die Komponisten für Pat Garrett jagt Billy the Kid?", "Welche Person wurde verheiratet mit der Komponist für Pat Garrett jagt Billy the Kid?", "Welche Person wurde verheiratet mit die Komponisten für Pat Garrett jagt Billy the Kid?", "Welche Persons werden verheiratet mit der Komponist für Pat Garrett jagt Billy the Kid?", "Welche Persons werden verheiratet mit die Komponisten für Pat Garrett jagt Billy the Kid?", "Welche Persons wurden verheiratet mit der Komponist für Pat Garrett jagt Billy the Kid?", "Welche Persons wurden verheiratet mit die Komponisten für Pat Garrett jagt Billy the Kid?", "Wer wird verheiratet mit der Komponist für Pat Garrett jagt Billy the Kid?", "Wer wird verheiratet mit die Komponisten für Pat Garrett jagt Billy the Kid?", "Wer wurde verheiratet mit der Komponist für Pat Garrett jagt Billy the Kid?", "Wer wurde verheiratet mit die Komponisten für Pat Garrett jagt Billy the Kid?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Pat_Garrett_and_Billy_the_Kid> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Vill så gärna tro?", "Welche Person wird verheiratet mit die Komponisten für Vill så gärna tro?", "Welche Person wurde verheiratet mit der Komponist für Vill så gärna tro?", "Welche Person wurde verheiratet mit die Komponisten für Vill så gärna tro?", "Welche Persons werden verheiratet mit der Komponist für Vill så gärna tro?", "Welche Persons werden verheiratet mit die Komponisten für Vill så gärna tro?", "Welche Persons wurden verheiratet mit der Komponist für Vill så gärna tro?", "Welche Persons wurden verheiratet mit die Komponisten für Vill så gärna tro?", "Wer wird verheiratet mit der Komponist für Vill så gärna tro?", "Wer wird verheiratet mit die Komponisten für Vill så gärna tro?", "Wer wurde verheiratet mit der Komponist für Vill så gärna tro?", "Wer wurde verheiratet mit die Komponisten für Vill så gärna tro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Want_So_Much_To_Believe> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Runaway Girl?", "Welche Person wird verheiratet mit die Komponisten für Runaway Girl?", "Welche Person wurde verheiratet mit der Komponist für Runaway Girl?", "Welche Person wurde verheiratet mit die Komponisten für Runaway Girl?", "Welche Persons werden verheiratet mit der Komponist für Runaway Girl?", "Welche Persons werden verheiratet mit die Komponisten für Runaway Girl?", "Welche Persons wurden verheiratet mit der Komponist für Runaway Girl?", "Welche Persons wurden verheiratet mit die Komponisten für Runaway Girl?", "Wer wird verheiratet mit der Komponist für Runaway Girl?", "Wer wird verheiratet mit die Komponisten für Runaway Girl?", "Wer wurde verheiratet mit der Komponist für Runaway Girl?", "Wer wurde verheiratet mit die Komponisten für Runaway Girl?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hick_(film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Masked and Anonymous?", "Welche Person wird verheiratet mit die Komponisten für Masked and Anonymous?", "Welche Person wurde verheiratet mit der Komponist für Masked and Anonymous?", "Welche Person wurde verheiratet mit die Komponisten für Masked and Anonymous?", "Welche Persons werden verheiratet mit der Komponist für Masked and Anonymous?", "Welche Persons werden verheiratet mit die Komponisten für Masked and Anonymous?", "Welche Persons wurden verheiratet mit der Komponist für Masked and Anonymous?", "Welche Persons wurden verheiratet mit die Komponisten für Masked and Anonymous?", "Wer wird verheiratet mit der Komponist für Masked and Anonymous?", "Wer wird verheiratet mit die Komponisten für Masked and Anonymous?", "Wer wurde verheiratet mit der Komponist für Masked and Anonymous?", "Wer wurde verheiratet mit die Komponisten für Masked and Anonymous?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Masked_and_Anonymous> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Pinocchio_(1976_TV_program)?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Pinocchio_(1976_TV_program)?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Pinocchio_(1976_TV_program)?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Pinocchio_(1976_TV_program)?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Pinocchio_(1976_TV_program)?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Pinocchio_(1976_TV_program)?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Pinocchio_(1976_TV_program)?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Pinocchio_(1976_TV_program)?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Pinocchio_(1976_TV_program)?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Pinocchio_(1976_TV_program)?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Pinocchio_(1976_TV_program)?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Pinocchio_(1976_TV_program)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Pinocchio_(1976_TV_program)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Be_Yourself!?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Be_Yourself!?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Be_Yourself!?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Be_Yourself!?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Be_Yourself!?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Be_Yourself!?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Be_Yourself!?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Be_Yourself!?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Be_Yourself!?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Be_Yourself!?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Be_Yourself!?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Be_Yourself!?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Be_Yourself!> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Hit_the_Deck_(1955_film)?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Hit_the_Deck_(1955_film)?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Hit_the_Deck_(1955_film)?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Hit_the_Deck_(1955_film)?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Hit_the_Deck_(1955_film)?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Hit_the_Deck_(1955_film)?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Hit_the_Deck_(1955_film)?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Hit_the_Deck_(1955_film)?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Hit_the_Deck_(1955_film)?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Hit_the_Deck_(1955_film)?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Hit_the_Deck_(1955_film)?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Hit_the_Deck_(1955_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hit_the_Deck_(1955_film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Say_It_with_Songs?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Say_It_with_Songs?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Say_It_with_Songs?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Say_It_with_Songs?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Say_It_with_Songs?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Say_It_with_Songs?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Say_It_with_Songs?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Say_It_with_Songs?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Say_It_with_Songs?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Say_It_with_Songs?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Say_It_with_Songs?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Say_It_with_Songs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Say_It_with_Songs> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Chess_Moves?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Chess_Moves?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Chess_Moves?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Chess_Moves?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Chess_Moves?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Chess_Moves?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Chess_Moves?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Chess_Moves?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Chess_Moves?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Chess_Moves?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Chess_Moves?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Chess_Moves?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chess_Moves> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/A_Piece_of_My_Heart_(film)?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/A_Piece_of_My_Heart_(film)?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/A_Piece_of_My_Heart_(film)?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/A_Piece_of_My_Heart_(film)?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/A_Piece_of_My_Heart_(film)?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/A_Piece_of_My_Heart_(film)?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/A_Piece_of_My_Heart_(film)?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/A_Piece_of_My_Heart_(film)?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/A_Piece_of_My_Heart_(film)?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/A_Piece_of_My_Heart_(film)?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/A_Piece_of_My_Heart_(film)?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/A_Piece_of_My_Heart_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A_Piece_of_My_Heart_(film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Bombay_Beach_(film)?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Bombay_Beach_(film)?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Bombay_Beach_(film)?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Bombay_Beach_(film)?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Bombay_Beach_(film)?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Bombay_Beach_(film)?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Bombay_Beach_(film)?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Bombay_Beach_(film)?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Bombay_Beach_(film)?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Bombay_Beach_(film)?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Bombay_Beach_(film)?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Bombay_Beach_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bombay_Beach_(film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/65_Revisited?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/65_Revisited?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/65_Revisited?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/65_Revisited?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/65_Revisited?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/65_Revisited?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/65_Revisited?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/65_Revisited?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/65_Revisited?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/65_Revisited?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/65_Revisited?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/65_Revisited?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/65_Revisited> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/One_Bright_Shining_Moment:_The_Forgotten_Summer_of_George_McGovern?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/One_Bright_Shining_Moment:_The_Forgotten_Summer_of_George_McGovern?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/One_Bright_Shining_Moment:_The_Forgotten_Summer_of_George_McGovern?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/One_Bright_Shining_Moment:_The_Forgotten_Summer_of_George_McGovern?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/One_Bright_Shining_Moment:_The_Forgotten_Summer_of_George_McGovern?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/One_Bright_Shining_Moment:_The_Forgotten_Summer_of_George_McGovern?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/One_Bright_Shining_Moment:_The_Forgotten_Summer_of_George_McGovern?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/One_Bright_Shining_Moment:_The_Forgotten_Summer_of_George_McGovern?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/One_Bright_Shining_Moment:_The_Forgotten_Summer_of_George_McGovern?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/One_Bright_Shining_Moment:_The_Forgotten_Summer_of_George_McGovern?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/One_Bright_Shining_Moment:_The_Forgotten_Summer_of_George_McGovern?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/One_Bright_Shining_Moment:_The_Forgotten_Summer_of_George_McGovern?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/One_Bright_Shining_Moment:_The_Forgotten_Summer_of_George_McGovern> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Mavis!?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Mavis!?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Mavis!?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Mavis!?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Mavis!?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Mavis!?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Mavis!?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Mavis!?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Mavis!?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Mavis!?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Mavis!?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Mavis!?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mavis!> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/Revenge_of_the_Stolen_Stars?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Revenge_of_the_Stolen_Stars?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Revenge_of_the_Stolen_Stars?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Revenge_of_the_Stolen_Stars?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/Revenge_of_the_Stolen_Stars?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/Revenge_of_the_Stolen_Stars?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/Revenge_of_the_Stolen_Stars?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/Revenge_of_the_Stolen_Stars?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/Revenge_of_the_Stolen_Stars?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/Revenge_of_the_Stolen_Stars?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/Revenge_of_the_Stolen_Stars?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/Revenge_of_the_Stolen_Stars?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Revenge_of_the_Stolen_Stars> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für http://dbpedia.org/resource/The_Night_the_Lights_Went_Out_in_Georgia_(film)?", "Welche Person wird verheiratet mit die Komponisten für http://dbpedia.org/resource/The_Night_the_Lights_Went_Out_in_Georgia_(film)?", "Welche Person wurde verheiratet mit der Komponist für http://dbpedia.org/resource/The_Night_the_Lights_Went_Out_in_Georgia_(film)?", "Welche Person wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/The_Night_the_Lights_Went_Out_in_Georgia_(film)?", "Welche Persons werden verheiratet mit der Komponist für http://dbpedia.org/resource/The_Night_the_Lights_Went_Out_in_Georgia_(film)?", "Welche Persons werden verheiratet mit die Komponisten für http://dbpedia.org/resource/The_Night_the_Lights_Went_Out_in_Georgia_(film)?", "Welche Persons wurden verheiratet mit der Komponist für http://dbpedia.org/resource/The_Night_the_Lights_Went_Out_in_Georgia_(film)?", "Welche Persons wurden verheiratet mit die Komponisten für http://dbpedia.org/resource/The_Night_the_Lights_Went_Out_in_Georgia_(film)?", "Wer wird verheiratet mit der Komponist für http://dbpedia.org/resource/The_Night_the_Lights_Went_Out_in_Georgia_(film)?", "Wer wird verheiratet mit die Komponisten für http://dbpedia.org/resource/The_Night_the_Lights_Went_Out_in_Georgia_(film)?", "Wer wurde verheiratet mit der Komponist für http://dbpedia.org/resource/The_Night_the_Lights_Went_Out_in_Georgia_(film)?", "Wer wurde verheiratet mit die Komponisten für http://dbpedia.org/resource/The_Night_the_Lights_Went_Out_in_Georgia_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Night_the_Lights_Went_Out_in_Georgia_(film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Glückspilze (1940)?", "Welche Person wird verheiratet mit die Komponisten für Glückspilze (1940)?", "Welche Person wurde verheiratet mit der Komponist für Glückspilze (1940)?", "Welche Person wurde verheiratet mit die Komponisten für Glückspilze (1940)?", "Welche Persons werden verheiratet mit der Komponist für Glückspilze (1940)?", "Welche Persons werden verheiratet mit die Komponisten für Glückspilze (1940)?", "Welche Persons wurden verheiratet mit der Komponist für Glückspilze (1940)?", "Welche Persons wurden verheiratet mit die Komponisten für Glückspilze (1940)?", "Wer wird verheiratet mit der Komponist für Glückspilze (1940)?", "Wer wird verheiratet mit die Komponisten für Glückspilze (1940)?", "Wer wurde verheiratet mit der Komponist für Glückspilze (1940)?", "Wer wurde verheiratet mit die Komponisten für Glückspilze (1940)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucky_Partners> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Mad Love (1935)?", "Welche Person wird verheiratet mit die Komponisten für Mad Love (1935)?", "Welche Person wurde verheiratet mit der Komponist für Mad Love (1935)?", "Welche Person wurde verheiratet mit die Komponisten für Mad Love (1935)?", "Welche Persons werden verheiratet mit der Komponist für Mad Love (1935)?", "Welche Persons werden verheiratet mit die Komponisten für Mad Love (1935)?", "Welche Persons wurden verheiratet mit der Komponist für Mad Love (1935)?", "Welche Persons wurden verheiratet mit die Komponisten für Mad Love (1935)?", "Wer wird verheiratet mit der Komponist für Mad Love (1935)?", "Wer wird verheiratet mit die Komponisten für Mad Love (1935)?", "Wer wurde verheiratet mit der Komponist für Mad Love (1935)?", "Wer wurde verheiratet mit die Komponisten für Mad Love (1935)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mad_Love_(1935_film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Dieter – Der Film?", "Welche Person wird verheiratet mit die Komponisten für Dieter – Der Film?", "Welche Person wurde verheiratet mit der Komponist für Dieter – Der Film?", "Welche Person wurde verheiratet mit die Komponisten für Dieter – Der Film?", "Welche Persons werden verheiratet mit der Komponist für Dieter – Der Film?", "Welche Persons werden verheiratet mit die Komponisten für Dieter – Der Film?", "Welche Persons wurden verheiratet mit der Komponist für Dieter – Der Film?", "Welche Persons wurden verheiratet mit die Komponisten für Dieter – Der Film?", "Wer wird verheiratet mit der Komponist für Dieter – Der Film?", "Wer wird verheiratet mit die Komponisten für Dieter – Der Film?", "Wer wurde verheiratet mit der Komponist für Dieter – Der Film?", "Wer wurde verheiratet mit die Komponisten für Dieter – Der Film?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dieter:_Der_Film> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Jagd auf Dillinger (1945)?", "Welche Person wird verheiratet mit die Komponisten für Jagd auf Dillinger (1945)?", "Welche Person wurde verheiratet mit der Komponist für Jagd auf Dillinger (1945)?", "Welche Person wurde verheiratet mit die Komponisten für Jagd auf Dillinger (1945)?", "Welche Persons werden verheiratet mit der Komponist für Jagd auf Dillinger (1945)?", "Welche Persons werden verheiratet mit die Komponisten für Jagd auf Dillinger (1945)?", "Welche Persons wurden verheiratet mit der Komponist für Jagd auf Dillinger (1945)?", "Welche Persons wurden verheiratet mit die Komponisten für Jagd auf Dillinger (1945)?", "Wer wird verheiratet mit der Komponist für Jagd auf Dillinger (1945)?", "Wer wird verheiratet mit die Komponisten für Jagd auf Dillinger (1945)?", "Wer wurde verheiratet mit der Komponist für Jagd auf Dillinger (1945)?", "Wer wurde verheiratet mit die Komponisten für Jagd auf Dillinger (1945)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dillinger_(1945_film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Zwei rechnen ab?", "Welche Person wird verheiratet mit die Komponisten für Zwei rechnen ab?", "Welche Person wurde verheiratet mit der Komponist für Zwei rechnen ab?", "Welche Person wurde verheiratet mit die Komponisten für Zwei rechnen ab?", "Welche Persons werden verheiratet mit der Komponist für Zwei rechnen ab?", "Welche Persons werden verheiratet mit die Komponisten für Zwei rechnen ab?", "Welche Persons wurden verheiratet mit der Komponist für Zwei rechnen ab?", "Welche Persons wurden verheiratet mit die Komponisten für Zwei rechnen ab?", "Wer wird verheiratet mit der Komponist für Zwei rechnen ab?", "Wer wird verheiratet mit die Komponisten für Zwei rechnen ab?", "Wer wurde verheiratet mit der Komponist für Zwei rechnen ab?", "Wer wurde verheiratet mit die Komponisten für Zwei rechnen ab?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gunfight_at_the_O.K._Corral_(film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Alice im Wunderland (1933)?", "Welche Person wird verheiratet mit die Komponisten für Alice im Wunderland (1933)?", "Welche Person wurde verheiratet mit der Komponist für Alice im Wunderland (1933)?", "Welche Person wurde verheiratet mit die Komponisten für Alice im Wunderland (1933)?", "Welche Persons werden verheiratet mit der Komponist für Alice im Wunderland (1933)?", "Welche Persons werden verheiratet mit die Komponisten für Alice im Wunderland (1933)?", "Welche Persons wurden verheiratet mit der Komponist für Alice im Wunderland (1933)?", "Welche Persons wurden verheiratet mit die Komponisten für Alice im Wunderland (1933)?", "Wer wird verheiratet mit der Komponist für Alice im Wunderland (1933)?", "Wer wird verheiratet mit die Komponisten für Alice im Wunderland (1933)?", "Wer wurde verheiratet mit der Komponist für Alice im Wunderland (1933)?", "Wer wurde verheiratet mit die Komponisten für Alice im Wunderland (1933)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alice_in_Wonderland_(1933_film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Zwischen Frauen und Seilen?", "Welche Person wird verheiratet mit die Komponisten für Zwischen Frauen und Seilen?", "Welche Person wurde verheiratet mit der Komponist für Zwischen Frauen und Seilen?", "Welche Person wurde verheiratet mit die Komponisten für Zwischen Frauen und Seilen?", "Welche Persons werden verheiratet mit der Komponist für Zwischen Frauen und Seilen?", "Welche Persons werden verheiratet mit die Komponisten für Zwischen Frauen und Seilen?", "Welche Persons wurden verheiratet mit der Komponist für Zwischen Frauen und Seilen?", "Welche Persons wurden verheiratet mit die Komponisten für Zwischen Frauen und Seilen?", "Wer wird verheiratet mit der Komponist für Zwischen Frauen und Seilen?", "Wer wird verheiratet mit die Komponisten für Zwischen Frauen und Seilen?", "Wer wurde verheiratet mit der Komponist für Zwischen Frauen und Seilen?", "Wer wurde verheiratet mit die Komponisten für Zwischen Frauen und Seilen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Champion_(1949_film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Die Uhr ist abgelaufen?", "Welche Person wird verheiratet mit die Komponisten für Die Uhr ist abgelaufen?", "Welche Person wurde verheiratet mit der Komponist für Die Uhr ist abgelaufen?", "Welche Person wurde verheiratet mit die Komponisten für Die Uhr ist abgelaufen?", "Welche Persons werden verheiratet mit der Komponist für Die Uhr ist abgelaufen?", "Welche Persons werden verheiratet mit die Komponisten für Die Uhr ist abgelaufen?", "Welche Persons wurden verheiratet mit der Komponist für Die Uhr ist abgelaufen?", "Welche Persons wurden verheiratet mit die Komponisten für Die Uhr ist abgelaufen?", "Wer wird verheiratet mit der Komponist für Die Uhr ist abgelaufen?", "Wer wird verheiratet mit die Komponisten für Die Uhr ist abgelaufen?", "Wer wurde verheiratet mit der Komponist für Die Uhr ist abgelaufen?", "Wer wurde verheiratet mit die Komponisten für Die Uhr ist abgelaufen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Night_Passage_(film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für In den Fesseln von Shangri-La?", "Welche Person wird verheiratet mit die Komponisten für In den Fesseln von Shangri-La?", "Welche Person wurde verheiratet mit der Komponist für In den Fesseln von Shangri-La?", "Welche Person wurde verheiratet mit die Komponisten für In den Fesseln von Shangri-La?", "Welche Persons werden verheiratet mit der Komponist für In den Fesseln von Shangri-La?", "Welche Persons werden verheiratet mit die Komponisten für In den Fesseln von Shangri-La?", "Welche Persons wurden verheiratet mit der Komponist für In den Fesseln von Shangri-La?", "Welche Persons wurden verheiratet mit die Komponisten für In den Fesseln von Shangri-La?", "Wer wird verheiratet mit der Komponist für In den Fesseln von Shangri-La?", "Wer wird verheiratet mit die Komponisten für In den Fesseln von Shangri-La?", "Wer wurde verheiratet mit der Komponist für In den Fesseln von Shangri-La?", "Wer wurde verheiratet mit die Komponisten für In den Fesseln von Shangri-La?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lost_Horizon_(1937_film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Circus-Welt?", "Welche Person wird verheiratet mit die Komponisten für Circus-Welt?", "Welche Person wurde verheiratet mit der Komponist für Circus-Welt?", "Welche Person wurde verheiratet mit die Komponisten für Circus-Welt?", "Welche Persons werden verheiratet mit der Komponist für Circus-Welt?", "Welche Persons werden verheiratet mit die Komponisten für Circus-Welt?", "Welche Persons wurden verheiratet mit der Komponist für Circus-Welt?", "Welche Persons wurden verheiratet mit die Komponisten für Circus-Welt?", "Wer wird verheiratet mit der Komponist für Circus-Welt?", "Wer wird verheiratet mit die Komponisten für Circus-Welt?", "Wer wurde verheiratet mit der Komponist für Circus-Welt?", "Wer wurde verheiratet mit die Komponisten für Circus-Welt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Circus_World_(film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Giganten?", "Welche Person wird verheiratet mit die Komponisten für Giganten?", "Welche Person wurde verheiratet mit der Komponist für Giganten?", "Welche Person wurde verheiratet mit die Komponisten für Giganten?", "Welche Persons werden verheiratet mit der Komponist für Giganten?", "Welche Persons werden verheiratet mit die Komponisten für Giganten?", "Welche Persons wurden verheiratet mit der Komponist für Giganten?", "Welche Persons wurden verheiratet mit die Komponisten für Giganten?", "Wer wird verheiratet mit der Komponist für Giganten?", "Wer wird verheiratet mit die Komponisten für Giganten?", "Wer wurde verheiratet mit der Komponist für Giganten?", "Wer wurde verheiratet mit die Komponisten für Giganten?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Giant_(1956_film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für 36 Stunden?", "Welche Person wird verheiratet mit die Komponisten für 36 Stunden?", "Welche Person wurde verheiratet mit der Komponist für 36 Stunden?", "Welche Person wurde verheiratet mit die Komponisten für 36 Stunden?", "Welche Persons werden verheiratet mit der Komponist für 36 Stunden?", "Welche Persons werden verheiratet mit die Komponisten für 36 Stunden?", "Welche Persons wurden verheiratet mit der Komponist für 36 Stunden?", "Welche Persons wurden verheiratet mit die Komponisten für 36 Stunden?", "Wer wird verheiratet mit der Komponist für 36 Stunden?", "Wer wird verheiratet mit die Komponisten für 36 Stunden?", "Wer wurde verheiratet mit der Komponist für 36 Stunden?", "Wer wurde verheiratet mit die Komponisten für 36 Stunden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/36_Hours_(1965_film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Piraten in Alaska?", "Welche Person wird verheiratet mit die Komponisten für Piraten in Alaska?", "Welche Person wurde verheiratet mit der Komponist für Piraten in Alaska?", "Welche Person wurde verheiratet mit die Komponisten für Piraten in Alaska?", "Welche Persons werden verheiratet mit der Komponist für Piraten in Alaska?", "Welche Persons werden verheiratet mit die Komponisten für Piraten in Alaska?", "Welche Persons wurden verheiratet mit der Komponist für Piraten in Alaska?", "Welche Persons wurden verheiratet mit die Komponisten für Piraten in Alaska?", "Wer wird verheiratet mit der Komponist für Piraten in Alaska?", "Wer wird verheiratet mit die Komponisten für Piraten in Alaska?", "Wer wurde verheiratet mit der Komponist für Piraten in Alaska?", "Wer wurde verheiratet mit die Komponisten für Piraten in Alaska?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Spawn_of_the_North> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Duell in der Sonne?", "Welche Person wird verheiratet mit die Komponisten für Duell in der Sonne?", "Welche Person wurde verheiratet mit der Komponist für Duell in der Sonne?", "Welche Person wurde verheiratet mit die Komponisten für Duell in der Sonne?", "Welche Persons werden verheiratet mit der Komponist für Duell in der Sonne?", "Welche Persons werden verheiratet mit die Komponisten für Duell in der Sonne?", "Welche Persons wurden verheiratet mit der Komponist für Duell in der Sonne?", "Welche Persons wurden verheiratet mit die Komponisten für Duell in der Sonne?", "Wer wird verheiratet mit der Komponist für Duell in der Sonne?", "Wer wird verheiratet mit die Komponisten für Duell in der Sonne?", "Wer wurde verheiratet mit der Komponist für Duell in der Sonne?", "Wer wurde verheiratet mit die Komponisten für Duell in der Sonne?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Duel_in_the_Sun_(film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Lockende Versuchung?", "Welche Person wird verheiratet mit die Komponisten für Lockende Versuchung?", "Welche Person wurde verheiratet mit der Komponist für Lockende Versuchung?", "Welche Person wurde verheiratet mit die Komponisten für Lockende Versuchung?", "Welche Persons werden verheiratet mit der Komponist für Lockende Versuchung?", "Welche Persons werden verheiratet mit die Komponisten für Lockende Versuchung?", "Welche Persons wurden verheiratet mit der Komponist für Lockende Versuchung?", "Welche Persons wurden verheiratet mit die Komponisten für Lockende Versuchung?", "Wer wird verheiratet mit der Komponist für Lockende Versuchung?", "Wer wird verheiratet mit die Komponisten für Lockende Versuchung?", "Wer wurde verheiratet mit der Komponist für Lockende Versuchung?", "Wer wurde verheiratet mit die Komponisten für Lockende Versuchung?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Friendly_Persuasion_(1956_film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Wo die Liebe hinfällt (1935)?", "Welche Person wird verheiratet mit die Komponisten für Wo die Liebe hinfällt (1935)?", "Welche Person wurde verheiratet mit der Komponist für Wo die Liebe hinfällt (1935)?", "Welche Person wurde verheiratet mit die Komponisten für Wo die Liebe hinfällt (1935)?", "Welche Persons werden verheiratet mit der Komponist für Wo die Liebe hinfällt (1935)?", "Welche Persons werden verheiratet mit die Komponisten für Wo die Liebe hinfällt (1935)?", "Welche Persons wurden verheiratet mit der Komponist für Wo die Liebe hinfällt (1935)?", "Welche Persons wurden verheiratet mit die Komponisten für Wo die Liebe hinfällt (1935)?", "Wer wird verheiratet mit der Komponist für Wo die Liebe hinfällt (1935)?", "Wer wird verheiratet mit die Komponisten für Wo die Liebe hinfällt (1935)?", "Wer wurde verheiratet mit der Komponist für Wo die Liebe hinfällt (1935)?", "Wer wurde verheiratet mit die Komponisten für Wo die Liebe hinfällt (1935)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/I_Live_My_Life> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Ist das Leben nicht schön??", "Welche Person wird verheiratet mit die Komponisten für Ist das Leben nicht schön??", "Welche Person wurde verheiratet mit der Komponist für Ist das Leben nicht schön??", "Welche Person wurde verheiratet mit die Komponisten für Ist das Leben nicht schön??", "Welche Persons werden verheiratet mit der Komponist für Ist das Leben nicht schön??", "Welche Persons werden verheiratet mit die Komponisten für Ist das Leben nicht schön??", "Welche Persons wurden verheiratet mit der Komponist für Ist das Leben nicht schön??", "Welche Persons wurden verheiratet mit die Komponisten für Ist das Leben nicht schön??", "Wer wird verheiratet mit der Komponist für Ist das Leben nicht schön??", "Wer wird verheiratet mit die Komponisten für Ist das Leben nicht schön??", "Wer wurde verheiratet mit der Komponist für Ist das Leben nicht schön??", "Wer wurde verheiratet mit die Komponisten für Ist das Leben nicht schön??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/It's_a_Wonderful_Life> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Engelsgesicht?", "Welche Person wird verheiratet mit die Komponisten für Engelsgesicht?", "Welche Person wurde verheiratet mit der Komponist für Engelsgesicht?", "Welche Person wurde verheiratet mit die Komponisten für Engelsgesicht?", "Welche Persons werden verheiratet mit der Komponist für Engelsgesicht?", "Welche Persons werden verheiratet mit die Komponisten für Engelsgesicht?", "Welche Persons wurden verheiratet mit der Komponist für Engelsgesicht?", "Welche Persons wurden verheiratet mit die Komponisten für Engelsgesicht?", "Wer wird verheiratet mit der Komponist für Engelsgesicht?", "Wer wird verheiratet mit die Komponisten für Engelsgesicht?", "Wer wurde verheiratet mit der Komponist für Engelsgesicht?", "Wer wurde verheiratet mit die Komponisten für Engelsgesicht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Angel_Face_(1953_film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für S.O.S. Feuer an Bord?", "Welche Person wird verheiratet mit die Komponisten für S.O.S. Feuer an Bord?", "Welche Person wurde verheiratet mit der Komponist für S.O.S. Feuer an Bord?", "Welche Person wurde verheiratet mit die Komponisten für S.O.S. Feuer an Bord?", "Welche Persons werden verheiratet mit der Komponist für S.O.S. Feuer an Bord?", "Welche Persons werden verheiratet mit die Komponisten für S.O.S. Feuer an Bord?", "Welche Persons wurden verheiratet mit der Komponist für S.O.S. Feuer an Bord?", "Welche Persons wurden verheiratet mit die Komponisten für S.O.S. Feuer an Bord?", "Wer wird verheiratet mit der Komponist für S.O.S. Feuer an Bord?", "Wer wird verheiratet mit die Komponisten für S.O.S. Feuer an Bord?", "Wer wurde verheiratet mit der Komponist für S.O.S. Feuer an Bord?", "Wer wurde verheiratet mit die Komponisten für S.O.S. Feuer an Bord?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Only_Angels_Have_Wings> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Red River (1948)?", "Welche Person wird verheiratet mit die Komponisten für Red River (1948)?", "Welche Person wurde verheiratet mit der Komponist für Red River (1948)?", "Welche Person wurde verheiratet mit die Komponisten für Red River (1948)?", "Welche Persons werden verheiratet mit der Komponist für Red River (1948)?", "Welche Persons werden verheiratet mit die Komponisten für Red River (1948)?", "Welche Persons wurden verheiratet mit der Komponist für Red River (1948)?", "Welche Persons wurden verheiratet mit die Komponisten für Red River (1948)?", "Wer wird verheiratet mit der Komponist für Red River (1948)?", "Wer wird verheiratet mit die Komponisten für Red River (1948)?", "Wer wurde verheiratet mit der Komponist für Red River (1948)?", "Wer wurde verheiratet mit die Komponisten für Red River (1948)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Red_River_(1948_film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Report from the Aleutians?", "Welche Person wird verheiratet mit die Komponisten für Report from the Aleutians?", "Welche Person wurde verheiratet mit der Komponist für Report from the Aleutians?", "Welche Person wurde verheiratet mit die Komponisten für Report from the Aleutians?", "Welche Persons werden verheiratet mit der Komponist für Report from the Aleutians?", "Welche Persons werden verheiratet mit die Komponisten für Report from the Aleutians?", "Welche Persons wurden verheiratet mit der Komponist für Report from the Aleutians?", "Welche Persons wurden verheiratet mit die Komponisten für Report from the Aleutians?", "Wer wird verheiratet mit der Komponist für Report from the Aleutians?", "Wer wird verheiratet mit die Komponisten für Report from the Aleutians?", "Wer wurde verheiratet mit der Komponist für Report from the Aleutians?", "Wer wurde verheiratet mit die Komponisten für Report from the Aleutians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Report_from_the_Aleutians> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Rückkehr ins Paradies?", "Welche Person wird verheiratet mit die Komponisten für Rückkehr ins Paradies?", "Welche Person wurde verheiratet mit der Komponist für Rückkehr ins Paradies?", "Welche Person wurde verheiratet mit die Komponisten für Rückkehr ins Paradies?", "Welche Persons werden verheiratet mit der Komponist für Rückkehr ins Paradies?", "Welche Persons werden verheiratet mit die Komponisten für Rückkehr ins Paradies?", "Welche Persons wurden verheiratet mit der Komponist für Rückkehr ins Paradies?", "Welche Persons wurden verheiratet mit die Komponisten für Rückkehr ins Paradies?", "Wer wird verheiratet mit der Komponist für Rückkehr ins Paradies?", "Wer wird verheiratet mit die Komponisten für Rückkehr ins Paradies?", "Wer wurde verheiratet mit der Komponist für Rückkehr ins Paradies?", "Wer wurde verheiratet mit die Komponisten für Rückkehr ins Paradies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Return_to_Paradise_(1953_film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Alamo (1960)?", "Welche Person wird verheiratet mit die Komponisten für Alamo (1960)?", "Welche Person wurde verheiratet mit der Komponist für Alamo (1960)?", "Welche Person wurde verheiratet mit die Komponisten für Alamo (1960)?", "Welche Persons werden verheiratet mit der Komponist für Alamo (1960)?", "Welche Persons werden verheiratet mit die Komponisten für Alamo (1960)?", "Welche Persons wurden verheiratet mit der Komponist für Alamo (1960)?", "Welche Persons wurden verheiratet mit die Komponisten für Alamo (1960)?", "Wer wird verheiratet mit der Komponist für Alamo (1960)?", "Wer wird verheiratet mit die Komponisten für Alamo (1960)?", "Wer wurde verheiratet mit der Komponist für Alamo (1960)?", "Wer wurde verheiratet mit die Komponisten für Alamo (1960)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Alamo_(1960_film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für The Battle of Russia?", "Welche Person wird verheiratet mit die Komponisten für The Battle of Russia?", "Welche Person wurde verheiratet mit der Komponist für The Battle of Russia?", "Welche Person wurde verheiratet mit die Komponisten für The Battle of Russia?", "Welche Persons werden verheiratet mit der Komponist für The Battle of Russia?", "Welche Persons werden verheiratet mit die Komponisten für The Battle of Russia?", "Welche Persons wurden verheiratet mit der Komponist für The Battle of Russia?", "Welche Persons wurden verheiratet mit die Komponisten für The Battle of Russia?", "Wer wird verheiratet mit der Komponist für The Battle of Russia?", "Wer wird verheiratet mit die Komponisten für The Battle of Russia?", "Wer wurde verheiratet mit der Komponist für The Battle of Russia?", "Wer wurde verheiratet mit die Komponisten für The Battle of Russia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Battle_of_Russia> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für The Big Sky – Der weite Himmel?", "Welche Person wird verheiratet mit die Komponisten für The Big Sky – Der weite Himmel?", "Welche Person wurde verheiratet mit der Komponist für The Big Sky – Der weite Himmel?", "Welche Person wurde verheiratet mit die Komponisten für The Big Sky – Der weite Himmel?", "Welche Persons werden verheiratet mit der Komponist für The Big Sky – Der weite Himmel?", "Welche Persons werden verheiratet mit die Komponisten für The Big Sky – Der weite Himmel?", "Welche Persons wurden verheiratet mit der Komponist für The Big Sky – Der weite Himmel?", "Welche Persons wurden verheiratet mit die Komponisten für The Big Sky – Der weite Himmel?", "Wer wird verheiratet mit der Komponist für The Big Sky – Der weite Himmel?", "Wer wird verheiratet mit die Komponisten für The Big Sky – Der weite Himmel?", "Wer wurde verheiratet mit der Komponist für The Big Sky – Der weite Himmel?", "Wer wurde verheiratet mit die Komponisten für The Big Sky – Der weite Himmel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Big_Sky_(film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für The Bridge of San Luis Rey (1944)?", "Welche Person wird verheiratet mit die Komponisten für The Bridge of San Luis Rey (1944)?", "Welche Person wurde verheiratet mit der Komponist für The Bridge of San Luis Rey (1944)?", "Welche Person wurde verheiratet mit die Komponisten für The Bridge of San Luis Rey (1944)?", "Welche Persons werden verheiratet mit der Komponist für The Bridge of San Luis Rey (1944)?", "Welche Persons werden verheiratet mit die Komponisten für The Bridge of San Luis Rey (1944)?", "Welche Persons wurden verheiratet mit der Komponist für The Bridge of San Luis Rey (1944)?", "Welche Persons wurden verheiratet mit die Komponisten für The Bridge of San Luis Rey (1944)?", "Wer wird verheiratet mit der Komponist für The Bridge of San Luis Rey (1944)?", "Wer wird verheiratet mit die Komponisten für The Bridge of San Luis Rey (1944)?", "Wer wurde verheiratet mit der Komponist für The Bridge of San Luis Rey (1944)?", "Wer wurde verheiratet mit die Komponisten für The Bridge of San Luis Rey (1944)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Bridge_of_San_Luis_Rey_(1944_film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Die siebente Nacht?", "Welche Person wird verheiratet mit die Komponisten für Die siebente Nacht?", "Welche Person wurde verheiratet mit der Komponist für Die siebente Nacht?", "Welche Person wurde verheiratet mit die Komponisten für Die siebente Nacht?", "Welche Persons werden verheiratet mit der Komponist für Die siebente Nacht?", "Welche Persons werden verheiratet mit die Komponisten für Die siebente Nacht?", "Welche Persons wurden verheiratet mit der Komponist für Die siebente Nacht?", "Welche Persons wurden verheiratet mit die Komponisten für Die siebente Nacht?", "Wer wird verheiratet mit der Komponist für Die siebente Nacht?", "Wer wird verheiratet mit die Komponisten für Die siebente Nacht?", "Wer wurde verheiratet mit der Komponist für Die siebente Nacht?", "Wer wurde verheiratet mit die Komponisten für Die siebente Nacht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Command_(1954_film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Blutrache (1941)?", "Welche Person wird verheiratet mit die Komponisten für Blutrache (1941)?", "Welche Person wurde verheiratet mit der Komponist für Blutrache (1941)?", "Welche Person wurde verheiratet mit die Komponisten für Blutrache (1941)?", "Welche Persons werden verheiratet mit der Komponist für Blutrache (1941)?", "Welche Persons werden verheiratet mit die Komponisten für Blutrache (1941)?", "Welche Persons wurden verheiratet mit der Komponist für Blutrache (1941)?", "Welche Persons wurden verheiratet mit die Komponisten für Blutrache (1941)?", "Wer wird verheiratet mit der Komponist für Blutrache (1941)?", "Wer wird verheiratet mit die Komponisten für Blutrache (1941)?", "Wer wurde verheiratet mit der Komponist für Blutrache (1941)?", "Wer wurde verheiratet mit die Komponisten für Blutrache (1941)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Corsican_Brothers_(1941_film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Verdammt zum Schweigen?", "Welche Person wird verheiratet mit die Komponisten für Verdammt zum Schweigen?", "Welche Person wurde verheiratet mit der Komponist für Verdammt zum Schweigen?", "Welche Person wurde verheiratet mit die Komponisten für Verdammt zum Schweigen?", "Welche Persons werden verheiratet mit der Komponist für Verdammt zum Schweigen?", "Welche Persons werden verheiratet mit die Komponisten für Verdammt zum Schweigen?", "Welche Persons wurden verheiratet mit der Komponist für Verdammt zum Schweigen?", "Welche Persons wurden verheiratet mit die Komponisten für Verdammt zum Schweigen?", "Wer wird verheiratet mit der Komponist für Verdammt zum Schweigen?", "Wer wird verheiratet mit die Komponisten für Verdammt zum Schweigen?", "Wer wurde verheiratet mit der Komponist für Verdammt zum Schweigen?", "Wer wurde verheiratet mit die Komponisten für Verdammt zum Schweigen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Court-Martial_of_Billy_Mitchell> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Der Untergang des Römischen Reiches?", "Welche Person wird verheiratet mit die Komponisten für Der Untergang des Römischen Reiches?", "Welche Person wurde verheiratet mit der Komponist für Der Untergang des Römischen Reiches?", "Welche Person wurde verheiratet mit die Komponisten für Der Untergang des Römischen Reiches?", "Welche Persons werden verheiratet mit der Komponist für Der Untergang des Römischen Reiches?", "Welche Persons werden verheiratet mit die Komponisten für Der Untergang des Römischen Reiches?", "Welche Persons wurden verheiratet mit der Komponist für Der Untergang des Römischen Reiches?", "Welche Persons wurden verheiratet mit die Komponisten für Der Untergang des Römischen Reiches?", "Wer wird verheiratet mit der Komponist für Der Untergang des Römischen Reiches?", "Wer wird verheiratet mit die Komponisten für Der Untergang des Römischen Reiches?", "Wer wurde verheiratet mit der Komponist für Der Untergang des Römischen Reiches?", "Wer wurde verheiratet mit die Komponisten für Der Untergang des Römischen Reiches?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Fall_of_the_Roman_Empire_(film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Der große Walzer (1938)?", "Welche Person wird verheiratet mit die Komponisten für Der große Walzer (1938)?", "Welche Person wurde verheiratet mit der Komponist für Der große Walzer (1938)?", "Welche Person wurde verheiratet mit die Komponisten für Der große Walzer (1938)?", "Welche Persons werden verheiratet mit der Komponist für Der große Walzer (1938)?", "Welche Persons werden verheiratet mit die Komponisten für Der große Walzer (1938)?", "Welche Persons wurden verheiratet mit der Komponist für Der große Walzer (1938)?", "Welche Persons wurden verheiratet mit die Komponisten für Der große Walzer (1938)?", "Wer wird verheiratet mit der Komponist für Der große Walzer (1938)?", "Wer wird verheiratet mit die Komponisten für Der große Walzer (1938)?", "Wer wurde verheiratet mit der Komponist für Der große Walzer (1938)?", "Wer wurde verheiratet mit die Komponisten für Der große Walzer (1938)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Great_Waltz_(1938_film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Die Kanonen von Navarone?", "Welche Person wird verheiratet mit die Komponisten für Die Kanonen von Navarone?", "Welche Person wurde verheiratet mit der Komponist für Die Kanonen von Navarone?", "Welche Person wurde verheiratet mit die Komponisten für Die Kanonen von Navarone?", "Welche Persons werden verheiratet mit der Komponist für Die Kanonen von Navarone?", "Welche Persons werden verheiratet mit die Komponisten für Die Kanonen von Navarone?", "Welche Persons wurden verheiratet mit der Komponist für Die Kanonen von Navarone?", "Welche Persons wurden verheiratet mit die Komponisten für Die Kanonen von Navarone?", "Wer wird verheiratet mit der Komponist für Die Kanonen von Navarone?", "Wer wird verheiratet mit die Komponisten für Die Kanonen von Navarone?", "Wer wurde verheiratet mit der Komponist für Die Kanonen von Navarone?", "Wer wurde verheiratet mit die Komponisten für Die Kanonen von Navarone?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Guns_of_Navarone_(film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Es wird immer wieder Tag?", "Welche Person wird verheiratet mit die Komponisten für Es wird immer wieder Tag?", "Welche Person wurde verheiratet mit der Komponist für Es wird immer wieder Tag?", "Welche Person wurde verheiratet mit die Komponisten für Es wird immer wieder Tag?", "Welche Persons werden verheiratet mit der Komponist für Es wird immer wieder Tag?", "Welche Persons werden verheiratet mit die Komponisten für Es wird immer wieder Tag?", "Welche Persons wurden verheiratet mit der Komponist für Es wird immer wieder Tag?", "Welche Persons wurden verheiratet mit die Komponisten für Es wird immer wieder Tag?", "Wer wird verheiratet mit der Komponist für Es wird immer wieder Tag?", "Wer wird verheiratet mit die Komponisten für Es wird immer wieder Tag?", "Wer wurde verheiratet mit der Komponist für Es wird immer wieder Tag?", "Wer wurde verheiratet mit die Komponisten für Es wird immer wieder Tag?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_High_and_the_Mighty_(film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Die Männer?", "Welche Person wird verheiratet mit die Komponisten für Die Männer?", "Welche Person wurde verheiratet mit der Komponist für Die Männer?", "Welche Person wurde verheiratet mit die Komponisten für Die Männer?", "Welche Persons werden verheiratet mit der Komponist für Die Männer?", "Welche Persons werden verheiratet mit die Komponisten für Die Männer?", "Welche Persons wurden verheiratet mit der Komponist für Die Männer?", "Welche Persons wurden verheiratet mit die Komponisten für Die Männer?", "Wer wird verheiratet mit der Komponist für Die Männer?", "Wer wird verheiratet mit die Komponisten für Die Männer?", "Wer wurde verheiratet mit der Komponist für Die Männer?", "Wer wurde verheiratet mit die Komponisten für Die Männer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Men_(film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Der Besessene von Tahiti?", "Welche Person wird verheiratet mit die Komponisten für Der Besessene von Tahiti?", "Welche Person wurde verheiratet mit der Komponist für Der Besessene von Tahiti?", "Welche Person wurde verheiratet mit die Komponisten für Der Besessene von Tahiti?", "Welche Persons werden verheiratet mit der Komponist für Der Besessene von Tahiti?", "Welche Persons werden verheiratet mit die Komponisten für Der Besessene von Tahiti?", "Welche Persons wurden verheiratet mit der Komponist für Der Besessene von Tahiti?", "Welche Persons wurden verheiratet mit die Komponisten für Der Besessene von Tahiti?", "Wer wird verheiratet mit der Komponist für Der Besessene von Tahiti?", "Wer wird verheiratet mit die Komponisten für Der Besessene von Tahiti?", "Wer wurde verheiratet mit der Komponist für Der Besessene von Tahiti?", "Wer wurde verheiratet mit die Komponisten für Der Besessene von Tahiti?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Moon_and_Sixpence_(film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Der alte Mann und das Meer (1958)?", "Welche Person wird verheiratet mit die Komponisten für Der alte Mann und das Meer (1958)?", "Welche Person wurde verheiratet mit der Komponist für Der alte Mann und das Meer (1958)?", "Welche Person wurde verheiratet mit die Komponisten für Der alte Mann und das Meer (1958)?", "Welche Persons werden verheiratet mit der Komponist für Der alte Mann und das Meer (1958)?", "Welche Persons werden verheiratet mit die Komponisten für Der alte Mann und das Meer (1958)?", "Welche Persons wurden verheiratet mit der Komponist für Der alte Mann und das Meer (1958)?", "Welche Persons wurden verheiratet mit die Komponisten für Der alte Mann und das Meer (1958)?", "Wer wird verheiratet mit der Komponist für Der alte Mann und das Meer (1958)?", "Wer wird verheiratet mit die Komponisten für Der alte Mann und das Meer (1958)?", "Wer wurde verheiratet mit der Komponist für Der alte Mann und das Meer (1958)?", "Wer wurde verheiratet mit die Komponisten für Der alte Mann und das Meer (1958)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Old_Man_and_the_Sea_(1958_film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Banditenlied?", "Welche Person wird verheiratet mit die Komponisten für Banditenlied?", "Welche Person wurde verheiratet mit der Komponist für Banditenlied?", "Welche Person wurde verheiratet mit die Komponisten für Banditenlied?", "Welche Persons werden verheiratet mit der Komponist für Banditenlied?", "Welche Persons werden verheiratet mit die Komponisten für Banditenlied?", "Welche Persons wurden verheiratet mit der Komponist für Banditenlied?", "Welche Persons wurden verheiratet mit die Komponisten für Banditenlied?", "Wer wird verheiratet mit der Komponist für Banditenlied?", "Wer wird verheiratet mit die Komponisten für Banditenlied?", "Wer wurde verheiratet mit der Komponist für Banditenlied?", "Wer wurde verheiratet mit die Komponisten für Banditenlied?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Rogue_Song> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Der endlose Horizont?", "Welche Person wird verheiratet mit die Komponisten für Der endlose Horizont?", "Welche Person wurde verheiratet mit der Komponist für Der endlose Horizont?", "Welche Person wurde verheiratet mit die Komponisten für Der endlose Horizont?", "Welche Persons werden verheiratet mit der Komponist für Der endlose Horizont?", "Welche Persons werden verheiratet mit die Komponisten für Der endlose Horizont?", "Welche Persons wurden verheiratet mit der Komponist für Der endlose Horizont?", "Welche Persons wurden verheiratet mit die Komponisten für Der endlose Horizont?", "Wer wird verheiratet mit der Komponist für Der endlose Horizont?", "Wer wird verheiratet mit die Komponisten für Der endlose Horizont?", "Wer wurde verheiratet mit der Komponist für Der endlose Horizont?", "Wer wurde verheiratet mit die Komponisten für Der endlose Horizont?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Sundowners_(1960_film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Das Ding aus einer anderen Welt (1951)?", "Welche Person wird verheiratet mit die Komponisten für Das Ding aus einer anderen Welt (1951)?", "Welche Person wurde verheiratet mit der Komponist für Das Ding aus einer anderen Welt (1951)?", "Welche Person wurde verheiratet mit die Komponisten für Das Ding aus einer anderen Welt (1951)?", "Welche Persons werden verheiratet mit der Komponist für Das Ding aus einer anderen Welt (1951)?", "Welche Persons werden verheiratet mit die Komponisten für Das Ding aus einer anderen Welt (1951)?", "Welche Persons wurden verheiratet mit der Komponist für Das Ding aus einer anderen Welt (1951)?", "Welche Persons wurden verheiratet mit die Komponisten für Das Ding aus einer anderen Welt (1951)?", "Wer wird verheiratet mit der Komponist für Das Ding aus einer anderen Welt (1951)?", "Wer wird verheiratet mit die Komponisten für Das Ding aus einer anderen Welt (1951)?", "Wer wurde verheiratet mit der Komponist für Das Ding aus einer anderen Welt (1951)?", "Wer wurde verheiratet mit die Komponisten für Das Ding aus einer anderen Welt (1951)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Thing_from_Another_World> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Das Ding aus einer anderen Welt (1982)?", "Welche Person wird verheiratet mit die Komponisten für Das Ding aus einer anderen Welt (1982)?", "Welche Person wurde verheiratet mit der Komponist für Das Ding aus einer anderen Welt (1982)?", "Welche Person wurde verheiratet mit die Komponisten für Das Ding aus einer anderen Welt (1982)?", "Welche Persons werden verheiratet mit der Komponist für Das Ding aus einer anderen Welt (1982)?", "Welche Persons werden verheiratet mit die Komponisten für Das Ding aus einer anderen Welt (1982)?", "Welche Persons wurden verheiratet mit der Komponist für Das Ding aus einer anderen Welt (1982)?", "Welche Persons wurden verheiratet mit die Komponisten für Das Ding aus einer anderen Welt (1982)?", "Wer wird verheiratet mit der Komponist für Das Ding aus einer anderen Welt (1982)?", "Wer wird verheiratet mit die Komponisten für Das Ding aus einer anderen Welt (1982)?", "Wer wurde verheiratet mit der Komponist für Das Ding aus einer anderen Welt (1982)?", "Wer wurde verheiratet mit die Komponisten für Das Ding aus einer anderen Welt (1982)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Thing_from_Another_World> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Denen man nicht vergibt?", "Welche Person wird verheiratet mit die Komponisten für Denen man nicht vergibt?", "Welche Person wurde verheiratet mit der Komponist für Denen man nicht vergibt?", "Welche Person wurde verheiratet mit die Komponisten für Denen man nicht vergibt?", "Welche Persons werden verheiratet mit der Komponist für Denen man nicht vergibt?", "Welche Persons werden verheiratet mit die Komponisten für Denen man nicht vergibt?", "Welche Persons wurden verheiratet mit der Komponist für Denen man nicht vergibt?", "Welche Persons wurden verheiratet mit die Komponisten für Denen man nicht vergibt?", "Wer wird verheiratet mit der Komponist für Denen man nicht vergibt?", "Wer wird verheiratet mit die Komponisten für Denen man nicht vergibt?", "Wer wurde verheiratet mit der Komponist für Denen man nicht vergibt?", "Wer wurde verheiratet mit die Komponisten für Denen man nicht vergibt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Unforgiven_(1960_film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Die Gewaltigen?", "Welche Person wird verheiratet mit die Komponisten für Die Gewaltigen?", "Welche Person wurde verheiratet mit der Komponist für Die Gewaltigen?", "Welche Person wurde verheiratet mit die Komponisten für Die Gewaltigen?", "Welche Persons werden verheiratet mit der Komponist für Die Gewaltigen?", "Welche Persons werden verheiratet mit die Komponisten für Die Gewaltigen?", "Welche Persons wurden verheiratet mit der Komponist für Die Gewaltigen?", "Welche Persons wurden verheiratet mit die Komponisten für Die Gewaltigen?", "Wer wird verheiratet mit der Komponist für Die Gewaltigen?", "Wer wird verheiratet mit die Komponisten für Die Gewaltigen?", "Wer wurde verheiratet mit der Komponist für Die Gewaltigen?", "Wer wurde verheiratet mit die Komponisten für Die Gewaltigen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_War_Wagon> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für 55 Tage in Peking?", "Welche Person wird verheiratet mit die Komponisten für 55 Tage in Peking?", "Welche Person wurde verheiratet mit der Komponist für 55 Tage in Peking?", "Welche Person wurde verheiratet mit die Komponisten für 55 Tage in Peking?", "Welche Persons werden verheiratet mit der Komponist für 55 Tage in Peking?", "Welche Persons werden verheiratet mit die Komponisten für 55 Tage in Peking?", "Welche Persons wurden verheiratet mit der Komponist für 55 Tage in Peking?", "Welche Persons wurden verheiratet mit die Komponisten für 55 Tage in Peking?", "Wer wird verheiratet mit der Komponist für 55 Tage in Peking?", "Wer wird verheiratet mit die Komponisten für 55 Tage in Peking?", "Wer wurde verheiratet mit der Komponist für 55 Tage in Peking?", "Wer wurde verheiratet mit die Komponisten für 55 Tage in Peking?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/55_Days_at_Peking> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Stadt ohne Mitleid?", "Welche Person wird verheiratet mit die Komponisten für Stadt ohne Mitleid?", "Welche Person wurde verheiratet mit der Komponist für Stadt ohne Mitleid?", "Welche Person wurde verheiratet mit die Komponisten für Stadt ohne Mitleid?", "Welche Persons werden verheiratet mit der Komponist für Stadt ohne Mitleid?", "Welche Persons werden verheiratet mit die Komponisten für Stadt ohne Mitleid?", "Welche Persons wurden verheiratet mit der Komponist für Stadt ohne Mitleid?", "Welche Persons wurden verheiratet mit die Komponisten für Stadt ohne Mitleid?", "Wer wird verheiratet mit der Komponist für Stadt ohne Mitleid?", "Wer wird verheiratet mit die Komponisten für Stadt ohne Mitleid?", "Wer wurde verheiratet mit der Komponist für Stadt ohne Mitleid?", "Wer wurde verheiratet mit die Komponisten für Stadt ohne Mitleid?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Town_Without_Pity> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Der letzte Musketier?", "Welche Person wird verheiratet mit die Komponisten für Der letzte Musketier?", "Welche Person wurde verheiratet mit der Komponist für Der letzte Musketier?", "Welche Person wurde verheiratet mit die Komponisten für Der letzte Musketier?", "Welche Persons werden verheiratet mit der Komponist für Der letzte Musketier?", "Welche Persons werden verheiratet mit die Komponisten für Der letzte Musketier?", "Welche Persons wurden verheiratet mit der Komponist für Der letzte Musketier?", "Welche Persons wurden verheiratet mit die Komponisten für Der letzte Musketier?", "Wer wird verheiratet mit der Komponist für Der letzte Musketier?", "Wer wird verheiratet mit die Komponisten für Der letzte Musketier?", "Wer wurde verheiratet mit der Komponist für Der letzte Musketier?", "Wer wurde verheiratet mit die Komponisten für Der letzte Musketier?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cyrano_de_Bergerac_(1950_film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Land der Pharaonen?", "Welche Person wird verheiratet mit die Komponisten für Land der Pharaonen?", "Welche Person wurde verheiratet mit der Komponist für Land der Pharaonen?", "Welche Person wurde verheiratet mit die Komponisten für Land der Pharaonen?", "Welche Persons werden verheiratet mit der Komponist für Land der Pharaonen?", "Welche Persons werden verheiratet mit die Komponisten für Land der Pharaonen?", "Welche Persons wurden verheiratet mit der Komponist für Land der Pharaonen?", "Welche Persons wurden verheiratet mit die Komponisten für Land der Pharaonen?", "Wer wird verheiratet mit der Komponist für Land der Pharaonen?", "Wer wird verheiratet mit die Komponisten für Land der Pharaonen?", "Wer wurde verheiratet mit der Komponist für Land der Pharaonen?", "Wer wurde verheiratet mit die Komponisten für Land der Pharaonen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Land_of_the_Pharaohs> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Der letzte Zug von Gun Hill?", "Welche Person wird verheiratet mit die Komponisten für Der letzte Zug von Gun Hill?", "Welche Person wurde verheiratet mit der Komponist für Der letzte Zug von Gun Hill?", "Welche Person wurde verheiratet mit die Komponisten für Der letzte Zug von Gun Hill?", "Welche Persons werden verheiratet mit der Komponist für Der letzte Zug von Gun Hill?", "Welche Persons werden verheiratet mit die Komponisten für Der letzte Zug von Gun Hill?", "Welche Persons wurden verheiratet mit der Komponist für Der letzte Zug von Gun Hill?", "Welche Persons wurden verheiratet mit die Komponisten für Der letzte Zug von Gun Hill?", "Wer wird verheiratet mit der Komponist für Der letzte Zug von Gun Hill?", "Wer wird verheiratet mit die Komponisten für Der letzte Zug von Gun Hill?", "Wer wurde verheiratet mit der Komponist für Der letzte Zug von Gun Hill?", "Wer wurde verheiratet mit die Komponisten für Der letzte Zug von Gun Hill?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Last_Train_from_Gun_Hill> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Rio Bravo?", "Welche Person wird verheiratet mit die Komponisten für Rio Bravo?", "Welche Person wurde verheiratet mit der Komponist für Rio Bravo?", "Welche Person wurde verheiratet mit die Komponisten für Rio Bravo?", "Welche Persons werden verheiratet mit der Komponist für Rio Bravo?", "Welche Persons werden verheiratet mit die Komponisten für Rio Bravo?", "Welche Persons wurden verheiratet mit der Komponist für Rio Bravo?", "Welche Persons wurden verheiratet mit die Komponisten für Rio Bravo?", "Wer wird verheiratet mit der Komponist für Rio Bravo?", "Wer wird verheiratet mit die Komponisten für Rio Bravo?", "Wer wurde verheiratet mit der Komponist für Rio Bravo?", "Wer wurde verheiratet mit die Komponisten für Rio Bravo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rio_Bravo_(film)> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Im Schatten des Zweifels?", "Welche Person wird verheiratet mit die Komponisten für Im Schatten des Zweifels?", "Welche Person wurde verheiratet mit der Komponist für Im Schatten des Zweifels?", "Welche Person wurde verheiratet mit die Komponisten für Im Schatten des Zweifels?", "Welche Persons werden verheiratet mit der Komponist für Im Schatten des Zweifels?", "Welche Persons werden verheiratet mit die Komponisten für Im Schatten des Zweifels?", "Welche Persons wurden verheiratet mit der Komponist für Im Schatten des Zweifels?", "Welche Persons wurden verheiratet mit die Komponisten für Im Schatten des Zweifels?", "Wer wird verheiratet mit der Komponist für Im Schatten des Zweifels?", "Wer wird verheiratet mit die Komponisten für Im Schatten des Zweifels?", "Wer wurde verheiratet mit der Komponist für Im Schatten des Zweifels?", "Wer wurde verheiratet mit die Komponisten für Im Schatten des Zweifels?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Shadow_of_a_Doubt> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Sprung auf, marsch, marsch!?", "Welche Person wird verheiratet mit die Komponisten für Sprung auf, marsch, marsch!?", "Welche Person wurde verheiratet mit der Komponist für Sprung auf, marsch, marsch!?", "Welche Person wurde verheiratet mit die Komponisten für Sprung auf, marsch, marsch!?", "Welche Persons werden verheiratet mit der Komponist für Sprung auf, marsch, marsch!?", "Welche Persons werden verheiratet mit die Komponisten für Sprung auf, marsch, marsch!?", "Welche Persons wurden verheiratet mit der Komponist für Sprung auf, marsch, marsch!?", "Welche Persons wurden verheiratet mit die Komponisten für Sprung auf, marsch, marsch!?", "Wer wird verheiratet mit der Komponist für Sprung auf, marsch, marsch!?", "Wer wird verheiratet mit die Komponisten für Sprung auf, marsch, marsch!?", "Wer wurde verheiratet mit der Komponist für Sprung auf, marsch, marsch!?", "Wer wurde verheiratet mit die Komponisten für Sprung auf, marsch, marsch!?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Take_the_High_Ground!> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "47",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit der Komponist für Tarzan in Gefahr?", "Welche Person wird verheiratet mit die Komponisten für Tarzan in Gefahr?", "Welche Person wurde verheiratet mit der Komponist für Tarzan in Gefahr?", "Welche Person wurde verheiratet mit die Komponisten für Tarzan in Gefahr?", "Welche Persons werden verheiratet mit der Komponist für Tarzan in Gefahr?", "Welche Persons werden verheiratet mit die Komponisten für Tarzan in Gefahr?", "Welche Persons wurden verheiratet mit der Komponist für Tarzan in Gefahr?", "Welche Persons wurden verheiratet mit die Komponisten für Tarzan in Gefahr?", "Wer wird verheiratet mit der Komponist für Tarzan in Gefahr?", "Wer wird verheiratet mit die Komponisten für Tarzan in Gefahr?", "Wer wurde verheiratet mit der Komponist für Tarzan in Gefahr?", "Wer wurde verheiratet mit die Komponisten für Tarzan in Gefahr?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tarzan_and_the_Mermaids> <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von New Edition?", "Welche Person wird verheiratet mit die Mitglieder von New Edition?", "Welche Person wurde verheiratet mit das Mitglied von New Edition?", "Welche Person wurde verheiratet mit die Mitglieder von New Edition?", "Welche Persons werden verheiratet mit das Mitglied von New Edition?", "Welche Persons werden verheiratet mit die Mitglieder von New Edition?", "Welche Persons wurden verheiratet mit das Mitglied von New Edition?", "Welche Persons wurden verheiratet mit die Mitglieder von New Edition?", "Wer wird verheiratet mit das Mitglied von New Edition?", "Wer wird verheiratet mit die Mitglieder von New Edition?", "Wer wurde verheiratet mit das Mitglied von New Edition?", "Wer wurde verheiratet mit die Mitglieder von New Edition?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/New_Edition> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Band From TV?", "Welche Person wird verheiratet mit die Mitglieder von Band From TV?", "Welche Person wurde verheiratet mit das Mitglied von Band From TV?", "Welche Person wurde verheiratet mit die Mitglieder von Band From TV?", "Welche Persons werden verheiratet mit das Mitglied von Band From TV?", "Welche Persons werden verheiratet mit die Mitglieder von Band From TV?", "Welche Persons wurden verheiratet mit das Mitglied von Band From TV?", "Welche Persons wurden verheiratet mit die Mitglieder von Band From TV?", "Wer wird verheiratet mit das Mitglied von Band From TV?", "Wer wird verheiratet mit die Mitglieder von Band From TV?", "Wer wurde verheiratet mit das Mitglied von Band From TV?", "Wer wurde verheiratet mit die Mitglieder von Band From TV?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Band_from_TV> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von ABBA?", "Welche Person wird verheiratet mit die Mitglieder von ABBA?", "Welche Person wurde verheiratet mit das Mitglied von ABBA?", "Welche Person wurde verheiratet mit die Mitglieder von ABBA?", "Welche Persons werden verheiratet mit das Mitglied von ABBA?", "Welche Persons werden verheiratet mit die Mitglieder von ABBA?", "Welche Persons wurden verheiratet mit das Mitglied von ABBA?", "Welche Persons wurden verheiratet mit die Mitglieder von ABBA?", "Wer wird verheiratet mit das Mitglied von ABBA?", "Wer wird verheiratet mit die Mitglieder von ABBA?", "Wer wurde verheiratet mit das Mitglied von ABBA?", "Wer wurde verheiratet mit die Mitglieder von ABBA?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/ABBA> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von U2 (Band)?", "Welche Person wird verheiratet mit die Mitglieder von U2 (Band)?", "Welche Person wurde verheiratet mit das Mitglied von U2 (Band)?", "Welche Person wurde verheiratet mit die Mitglieder von U2 (Band)?", "Welche Persons werden verheiratet mit das Mitglied von U2 (Band)?", "Welche Persons werden verheiratet mit die Mitglieder von U2 (Band)?", "Welche Persons wurden verheiratet mit das Mitglied von U2 (Band)?", "Welche Persons wurden verheiratet mit die Mitglieder von U2 (Band)?", "Wer wird verheiratet mit das Mitglied von U2 (Band)?", "Wer wird verheiratet mit die Mitglieder von U2 (Band)?", "Wer wurde verheiratet mit das Mitglied von U2 (Band)?", "Wer wurde verheiratet mit die Mitglieder von U2 (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/U2> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Tight Fit?", "Welche Person wird verheiratet mit die Mitglieder von Tight Fit?", "Welche Person wurde verheiratet mit das Mitglied von Tight Fit?", "Welche Person wurde verheiratet mit die Mitglieder von Tight Fit?", "Welche Persons werden verheiratet mit das Mitglied von Tight Fit?", "Welche Persons werden verheiratet mit die Mitglieder von Tight Fit?", "Welche Persons wurden verheiratet mit das Mitglied von Tight Fit?", "Welche Persons wurden verheiratet mit die Mitglieder von Tight Fit?", "Wer wird verheiratet mit das Mitglied von Tight Fit?", "Wer wird verheiratet mit die Mitglieder von Tight Fit?", "Wer wurde verheiratet mit das Mitglied von Tight Fit?", "Wer wurde verheiratet mit die Mitglieder von Tight Fit?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tight_Fit> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Ocean's_7?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Ocean's_7?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Ocean's_7?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Ocean's_7?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Ocean's_7?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Ocean's_7?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Ocean's_7?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Ocean's_7?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Ocean's_7?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Ocean's_7?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Ocean's_7?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Ocean's_7?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ocean's_7> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Boxmasters?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Boxmasters?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Boxmasters?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Boxmasters?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Boxmasters?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Boxmasters?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Boxmasters?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Boxmasters?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Boxmasters?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Boxmasters?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Boxmasters?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Boxmasters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Boxmasters> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Brother_Clyde?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Brother_Clyde?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Brother_Clyde?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Brother_Clyde?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Brother_Clyde?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Brother_Clyde?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Brother_Clyde?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Brother_Clyde?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Brother_Clyde?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Brother_Clyde?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Brother_Clyde?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Brother_Clyde?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Brother_Clyde> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Rhythm_Boys?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Rhythm_Boys?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Rhythm_Boys?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Rhythm_Boys?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Rhythm_Boys?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Rhythm_Boys?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Rhythm_Boys?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Rhythm_Boys?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Rhythm_Boys?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Rhythm_Boys?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Rhythm_Boys?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Rhythm_Boys?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Rhythm_Boys> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Bombaj_Štampa?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Bombaj_Štampa?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Bombaj_Štampa?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Bombaj_Štampa?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Bombaj_Štampa?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Bombaj_Štampa?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Bombaj_Štampa?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Bombaj_Štampa?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Bombaj_Štampa?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Bombaj_Štampa?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Bombaj_Štampa?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Bombaj_Štampa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bombaj_Štampa> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Virgin (Band)?", "Welche Person wird verheiratet mit die Mitglieder von Virgin (Band)?", "Welche Person wurde verheiratet mit das Mitglied von Virgin (Band)?", "Welche Person wurde verheiratet mit die Mitglieder von Virgin (Band)?", "Welche Persons werden verheiratet mit das Mitglied von Virgin (Band)?", "Welche Persons werden verheiratet mit die Mitglieder von Virgin (Band)?", "Welche Persons wurden verheiratet mit das Mitglied von Virgin (Band)?", "Welche Persons wurden verheiratet mit die Mitglieder von Virgin (Band)?", "Wer wird verheiratet mit das Mitglied von Virgin (Band)?", "Wer wird verheiratet mit die Mitglieder von Virgin (Band)?", "Wer wurde verheiratet mit das Mitglied von Virgin (Band)?", "Wer wurde verheiratet mit die Mitglieder von Virgin (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Virgin_(band)> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Sum 41?", "Welche Person wird verheiratet mit die Mitglieder von Sum 41?", "Welche Person wurde verheiratet mit das Mitglied von Sum 41?", "Welche Person wurde verheiratet mit die Mitglieder von Sum 41?", "Welche Persons werden verheiratet mit das Mitglied von Sum 41?", "Welche Persons werden verheiratet mit die Mitglieder von Sum 41?", "Welche Persons wurden verheiratet mit das Mitglied von Sum 41?", "Welche Persons wurden verheiratet mit die Mitglieder von Sum 41?", "Wer wird verheiratet mit das Mitglied von Sum 41?", "Wer wird verheiratet mit die Mitglieder von Sum 41?", "Wer wurde verheiratet mit das Mitglied von Sum 41?", "Wer wurde verheiratet mit die Mitglieder von Sum 41?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sum_41> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Jonas Brothers?", "Welche Person wird verheiratet mit die Mitglieder von Jonas Brothers?", "Welche Person wurde verheiratet mit das Mitglied von Jonas Brothers?", "Welche Person wurde verheiratet mit die Mitglieder von Jonas Brothers?", "Welche Persons werden verheiratet mit das Mitglied von Jonas Brothers?", "Welche Persons werden verheiratet mit die Mitglieder von Jonas Brothers?", "Welche Persons wurden verheiratet mit das Mitglied von Jonas Brothers?", "Welche Persons wurden verheiratet mit die Mitglieder von Jonas Brothers?", "Wer wird verheiratet mit das Mitglied von Jonas Brothers?", "Wer wird verheiratet mit die Mitglieder von Jonas Brothers?", "Wer wurde verheiratet mit das Mitglied von Jonas Brothers?", "Wer wurde verheiratet mit die Mitglieder von Jonas Brothers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jonas_Brothers> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Prayers?", "Welche Person wird verheiratet mit die Mitglieder von Prayers?", "Welche Person wurde verheiratet mit das Mitglied von Prayers?", "Welche Person wurde verheiratet mit die Mitglieder von Prayers?", "Welche Persons werden verheiratet mit das Mitglied von Prayers?", "Welche Persons werden verheiratet mit die Mitglieder von Prayers?", "Welche Persons wurden verheiratet mit das Mitglied von Prayers?", "Welche Persons wurden verheiratet mit die Mitglieder von Prayers?", "Wer wird verheiratet mit das Mitglied von Prayers?", "Wer wird verheiratet mit die Mitglieder von Prayers?", "Wer wurde verheiratet mit das Mitglied von Prayers?", "Wer wurde verheiratet mit die Mitglieder von Prayers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Prayers_(duo)> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Weep_(band)?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Weep_(band)?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Weep_(band)?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Weep_(band)?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Weep_(band)?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Weep_(band)?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Weep_(band)?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Weep_(band)?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Weep_(band)?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Weep_(band)?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Weep_(band)?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Weep_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Weep_(band)> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Bacon_Brothers?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Bacon_Brothers?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Bacon_Brothers?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Bacon_Brothers?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Bacon_Brothers?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Bacon_Brothers?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Bacon_Brothers?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Bacon_Brothers?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Bacon_Brothers?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Bacon_Brothers?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Bacon_Brothers?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Bacon_Brothers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Bacon_Brothers> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Body/Head?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Body/Head?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Body/Head?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Body/Head?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Body/Head?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Body/Head?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Body/Head?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Body/Head?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Body/Head?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Body/Head?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Body/Head?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Body/Head?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Body/Head> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Glitterbust?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Glitterbust?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Glitterbust?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Glitterbust?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Glitterbust?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Glitterbust?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Glitterbust?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Glitterbust?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Glitterbust?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Glitterbust?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Glitterbust?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Glitterbust?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Glitterbust> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Free_Kitten?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Free_Kitten?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Free_Kitten?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Free_Kitten?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Free_Kitten?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Free_Kitten?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Free_Kitten?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Free_Kitten?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Free_Kitten?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Free_Kitten?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Free_Kitten?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Free_Kitten?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Free_Kitten> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/London_Philharmonic_Choir?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/London_Philharmonic_Choir?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/London_Philharmonic_Choir?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/London_Philharmonic_Choir?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/London_Philharmonic_Choir?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/London_Philharmonic_Choir?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/London_Philharmonic_Choir?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/London_Philharmonic_Choir?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/London_Philharmonic_Choir?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/London_Philharmonic_Choir?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/London_Philharmonic_Choir?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/London_Philharmonic_Choir?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/London_Philharmonic_Choir> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Migos?", "Welche Person wird verheiratet mit die Mitglieder von Migos?", "Welche Person wurde verheiratet mit das Mitglied von Migos?", "Welche Person wurde verheiratet mit die Mitglieder von Migos?", "Welche Persons werden verheiratet mit das Mitglied von Migos?", "Welche Persons werden verheiratet mit die Mitglieder von Migos?", "Welche Persons wurden verheiratet mit das Mitglied von Migos?", "Welche Persons wurden verheiratet mit die Mitglieder von Migos?", "Wer wird verheiratet mit das Mitglied von Migos?", "Wer wird verheiratet mit die Mitglieder von Migos?", "Wer wurde verheiratet mit das Mitglied von Migos?", "Wer wurde verheiratet mit die Mitglieder von Migos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Migos> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von The Lonely Island?", "Welche Person wird verheiratet mit die Mitglieder von The Lonely Island?", "Welche Person wurde verheiratet mit das Mitglied von The Lonely Island?", "Welche Person wurde verheiratet mit die Mitglieder von The Lonely Island?", "Welche Persons werden verheiratet mit das Mitglied von The Lonely Island?", "Welche Persons werden verheiratet mit die Mitglieder von The Lonely Island?", "Welche Persons wurden verheiratet mit das Mitglied von The Lonely Island?", "Welche Persons wurden verheiratet mit die Mitglieder von The Lonely Island?", "Wer wird verheiratet mit das Mitglied von The Lonely Island?", "Wer wird verheiratet mit die Mitglieder von The Lonely Island?", "Wer wurde verheiratet mit das Mitglied von The Lonely Island?", "Wer wurde verheiratet mit die Mitglieder von The Lonely Island?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Lonely_Island> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Twins (Band)?", "Welche Person wird verheiratet mit die Mitglieder von Twins (Band)?", "Welche Person wurde verheiratet mit das Mitglied von Twins (Band)?", "Welche Person wurde verheiratet mit die Mitglieder von Twins (Band)?", "Welche Persons werden verheiratet mit das Mitglied von Twins (Band)?", "Welche Persons werden verheiratet mit die Mitglieder von Twins (Band)?", "Welche Persons wurden verheiratet mit das Mitglied von Twins (Band)?", "Welche Persons wurden verheiratet mit die Mitglieder von Twins (Band)?", "Wer wird verheiratet mit das Mitglied von Twins (Band)?", "Wer wird verheiratet mit die Mitglieder von Twins (Band)?", "Wer wurde verheiratet mit das Mitglied von Twins (Band)?", "Wer wurde verheiratet mit die Mitglieder von Twins (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Twins_(group)> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Deadsy?", "Welche Person wird verheiratet mit die Mitglieder von Deadsy?", "Welche Person wurde verheiratet mit das Mitglied von Deadsy?", "Welche Person wurde verheiratet mit die Mitglieder von Deadsy?", "Welche Persons werden verheiratet mit das Mitglied von Deadsy?", "Welche Persons werden verheiratet mit die Mitglieder von Deadsy?", "Welche Persons wurden verheiratet mit das Mitglied von Deadsy?", "Welche Persons wurden verheiratet mit die Mitglieder von Deadsy?", "Wer wird verheiratet mit das Mitglied von Deadsy?", "Wer wird verheiratet mit die Mitglieder von Deadsy?", "Wer wurde verheiratet mit das Mitglied von Deadsy?", "Wer wurde verheiratet mit die Mitglieder von Deadsy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Deadsy> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Rouge (brasilianische Band)?", "Welche Person wird verheiratet mit die Mitglieder von Rouge (brasilianische Band)?", "Welche Person wurde verheiratet mit das Mitglied von Rouge (brasilianische Band)?", "Welche Person wurde verheiratet mit die Mitglieder von Rouge (brasilianische Band)?", "Welche Persons werden verheiratet mit das Mitglied von Rouge (brasilianische Band)?", "Welche Persons werden verheiratet mit die Mitglieder von Rouge (brasilianische Band)?", "Welche Persons wurden verheiratet mit das Mitglied von Rouge (brasilianische Band)?", "Welche Persons wurden verheiratet mit die Mitglieder von Rouge (brasilianische Band)?", "Wer wird verheiratet mit das Mitglied von Rouge (brasilianische Band)?", "Wer wird verheiratet mit die Mitglieder von Rouge (brasilianische Band)?", "Wer wurde verheiratet mit das Mitglied von Rouge (brasilianische Band)?", "Wer wurde verheiratet mit die Mitglieder von Rouge (brasilianische Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rouge_(group)> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Exile (japanische Band)?", "Welche Person wird verheiratet mit die Mitglieder von Exile (japanische Band)?", "Welche Person wurde verheiratet mit das Mitglied von Exile (japanische Band)?", "Welche Person wurde verheiratet mit die Mitglieder von Exile (japanische Band)?", "Welche Persons werden verheiratet mit das Mitglied von Exile (japanische Band)?", "Welche Persons werden verheiratet mit die Mitglieder von Exile (japanische Band)?", "Welche Persons wurden verheiratet mit das Mitglied von Exile (japanische Band)?", "Welche Persons wurden verheiratet mit die Mitglieder von Exile (japanische Band)?", "Wer wird verheiratet mit das Mitglied von Exile (japanische Band)?", "Wer wird verheiratet mit die Mitglieder von Exile (japanische Band)?", "Wer wurde verheiratet mit das Mitglied von Exile (japanische Band)?", "Wer wurde verheiratet mit die Mitglieder von Exile (japanische Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Exile_(Japanese_band)> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Exile (US-amerikanische Band)?", "Welche Person wird verheiratet mit die Mitglieder von Exile (US-amerikanische Band)?", "Welche Person wurde verheiratet mit das Mitglied von Exile (US-amerikanische Band)?", "Welche Person wurde verheiratet mit die Mitglieder von Exile (US-amerikanische Band)?", "Welche Persons werden verheiratet mit das Mitglied von Exile (US-amerikanische Band)?", "Welche Persons werden verheiratet mit die Mitglieder von Exile (US-amerikanische Band)?", "Welche Persons wurden verheiratet mit das Mitglied von Exile (US-amerikanische Band)?", "Welche Persons wurden verheiratet mit die Mitglieder von Exile (US-amerikanische Band)?", "Wer wird verheiratet mit das Mitglied von Exile (US-amerikanische Band)?", "Wer wird verheiratet mit die Mitglieder von Exile (US-amerikanische Band)?", "Wer wurde verheiratet mit das Mitglied von Exile (US-amerikanische Band)?", "Wer wurde verheiratet mit die Mitglieder von Exile (US-amerikanische Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Exile_(Japanese_band)> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Fangoria (Band)?", "Welche Person wird verheiratet mit die Mitglieder von Fangoria (Band)?", "Welche Person wurde verheiratet mit das Mitglied von Fangoria (Band)?", "Welche Person wurde verheiratet mit die Mitglieder von Fangoria (Band)?", "Welche Persons werden verheiratet mit das Mitglied von Fangoria (Band)?", "Welche Persons werden verheiratet mit die Mitglieder von Fangoria (Band)?", "Welche Persons wurden verheiratet mit das Mitglied von Fangoria (Band)?", "Welche Persons wurden verheiratet mit die Mitglieder von Fangoria (Band)?", "Wer wird verheiratet mit das Mitglied von Fangoria (Band)?", "Wer wird verheiratet mit die Mitglieder von Fangoria (Band)?", "Wer wurde verheiratet mit das Mitglied von Fangoria (Band)?", "Wer wurde verheiratet mit die Mitglieder von Fangoria (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Fangoria_(band)> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von New Found Glory?", "Welche Person wird verheiratet mit die Mitglieder von New Found Glory?", "Welche Person wurde verheiratet mit das Mitglied von New Found Glory?", "Welche Person wurde verheiratet mit die Mitglieder von New Found Glory?", "Welche Persons werden verheiratet mit das Mitglied von New Found Glory?", "Welche Persons werden verheiratet mit die Mitglieder von New Found Glory?", "Welche Persons wurden verheiratet mit das Mitglied von New Found Glory?", "Welche Persons wurden verheiratet mit die Mitglieder von New Found Glory?", "Wer wird verheiratet mit das Mitglied von New Found Glory?", "Wer wird verheiratet mit die Mitglieder von New Found Glory?", "Wer wurde verheiratet mit das Mitglied von New Found Glory?", "Wer wurde verheiratet mit die Mitglieder von New Found Glory?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/New_Found_Glory> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/The_White_Mandingos?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_White_Mandingos?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/The_White_Mandingos?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_White_Mandingos?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/The_White_Mandingos?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_White_Mandingos?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/The_White_Mandingos?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_White_Mandingos?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/The_White_Mandingos?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_White_Mandingos?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/The_White_Mandingos?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_White_Mandingos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_White_Mandingos> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Exile_The_Second?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Exile_The_Second?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Exile_The_Second?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Exile_The_Second?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Exile_The_Second?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Exile_The_Second?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Exile_The_Second?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Exile_The_Second?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Exile_The_Second?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Exile_The_Second?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Exile_The_Second?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Exile_The_Second?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Exile_The_Second> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Waiting_Room_(band)?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Waiting_Room_(band)?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Waiting_Room_(band)?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Waiting_Room_(band)?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Waiting_Room_(band)?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Waiting_Room_(band)?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Waiting_Room_(band)?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Waiting_Room_(band)?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Waiting_Room_(band)?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Waiting_Room_(band)?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Waiting_Room_(band)?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Waiting_Room_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Waiting_Room_(band)> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Sentidos_Opuestos?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Sentidos_Opuestos?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Sentidos_Opuestos?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Sentidos_Opuestos?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Sentidos_Opuestos?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Sentidos_Opuestos?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Sentidos_Opuestos?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Sentidos_Opuestos?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Sentidos_Opuestos?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Sentidos_Opuestos?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Sentidos_Opuestos?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Sentidos_Opuestos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sentidos_Opuestos> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Leyla_The_Band?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Leyla_The_Band?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Leyla_The_Band?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Leyla_The_Band?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Leyla_The_Band?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Leyla_The_Band?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Leyla_The_Band?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Leyla_The_Band?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Leyla_The_Band?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Leyla_The_Band?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Leyla_The_Band?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Leyla_The_Band?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Leyla_The_Band> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Roseaux_(band)?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Roseaux_(band)?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Roseaux_(band)?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Roseaux_(band)?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Roseaux_(band)?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Roseaux_(band)?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Roseaux_(band)?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Roseaux_(band)?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Roseaux_(band)?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Roseaux_(band)?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Roseaux_(band)?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Roseaux_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Roseaux_(band)> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Emanon?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Emanon?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Emanon?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Emanon?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Emanon?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Emanon?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Emanon?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Emanon?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Emanon?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Emanon?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Emanon?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Emanon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Emanon> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Grievous_Angels?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Grievous_Angels?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Grievous_Angels?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Grievous_Angels?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Grievous_Angels?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Grievous_Angels?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Grievous_Angels?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Grievous_Angels?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Grievous_Angels?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Grievous_Angels?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Grievous_Angels?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Grievous_Angels?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Grievous_Angels> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/CRX_(band)?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/CRX_(band)?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/CRX_(band)?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/CRX_(band)?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/CRX_(band)?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/CRX_(band)?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/CRX_(band)?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/CRX_(band)?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/CRX_(band)?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/CRX_(band)?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/CRX_(band)?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/CRX_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/CRX_(band)> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Hujan?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Hujan?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Hujan?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Hujan?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Hujan?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Hujan?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Hujan?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Hujan?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Hujan?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Hujan?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Hujan?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Hujan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hujan> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Shonentai?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Shonentai?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Shonentai?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Shonentai?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Shonentai?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Shonentai?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Shonentai?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Shonentai?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Shonentai?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Shonentai?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Shonentai?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Shonentai?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Shonentai> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Z-1_(band)?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Z-1_(band)?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Z-1_(band)?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Z-1_(band)?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Z-1_(band)?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Z-1_(band)?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Z-1_(band)?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Z-1_(band)?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Z-1_(band)?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Z-1_(band)?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Z-1_(band)?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Z-1_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Z-1_(band)> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Gnarkill?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Gnarkill?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Gnarkill?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Gnarkill?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Gnarkill?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Gnarkill?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Gnarkill?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Gnarkill?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Gnarkill?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Gnarkill?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Gnarkill?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Gnarkill?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gnarkill> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Fleetwood Mac?", "Welche Person wird verheiratet mit die Mitglieder von Fleetwood Mac?", "Welche Person wurde verheiratet mit das Mitglied von Fleetwood Mac?", "Welche Person wurde verheiratet mit die Mitglieder von Fleetwood Mac?", "Welche Persons werden verheiratet mit das Mitglied von Fleetwood Mac?", "Welche Persons werden verheiratet mit die Mitglieder von Fleetwood Mac?", "Welche Persons wurden verheiratet mit das Mitglied von Fleetwood Mac?", "Welche Persons wurden verheiratet mit die Mitglieder von Fleetwood Mac?", "Wer wird verheiratet mit das Mitglied von Fleetwood Mac?", "Wer wird verheiratet mit die Mitglieder von Fleetwood Mac?", "Wer wurde verheiratet mit das Mitglied von Fleetwood Mac?", "Wer wurde verheiratet mit die Mitglieder von Fleetwood Mac?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Fleetwood_Mac> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Coldplay?", "Welche Person wird verheiratet mit die Mitglieder von Coldplay?", "Welche Person wurde verheiratet mit das Mitglied von Coldplay?", "Welche Person wurde verheiratet mit die Mitglieder von Coldplay?", "Welche Persons werden verheiratet mit das Mitglied von Coldplay?", "Welche Persons werden verheiratet mit die Mitglieder von Coldplay?", "Welche Persons wurden verheiratet mit das Mitglied von Coldplay?", "Welche Persons wurden verheiratet mit die Mitglieder von Coldplay?", "Wer wird verheiratet mit das Mitglied von Coldplay?", "Wer wird verheiratet mit die Mitglieder von Coldplay?", "Wer wurde verheiratet mit das Mitglied von Coldplay?", "Wer wurde verheiratet mit die Mitglieder von Coldplay?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Coldplay> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von The Prize Fighter Inferno?", "Welche Person wird verheiratet mit die Mitglieder von The Prize Fighter Inferno?", "Welche Person wurde verheiratet mit das Mitglied von The Prize Fighter Inferno?", "Welche Person wurde verheiratet mit die Mitglieder von The Prize Fighter Inferno?", "Welche Persons werden verheiratet mit das Mitglied von The Prize Fighter Inferno?", "Welche Persons werden verheiratet mit die Mitglieder von The Prize Fighter Inferno?", "Welche Persons wurden verheiratet mit das Mitglied von The Prize Fighter Inferno?", "Welche Persons wurden verheiratet mit die Mitglieder von The Prize Fighter Inferno?", "Wer wird verheiratet mit das Mitglied von The Prize Fighter Inferno?", "Wer wird verheiratet mit die Mitglieder von The Prize Fighter Inferno?", "Wer wurde verheiratet mit das Mitglied von The Prize Fighter Inferno?", "Wer wurde verheiratet mit die Mitglieder von The Prize Fighter Inferno?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Prize_Fighter_Inferno> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Spice Girls?", "Welche Person wird verheiratet mit die Mitglieder von Spice Girls?", "Welche Person wurde verheiratet mit das Mitglied von Spice Girls?", "Welche Person wurde verheiratet mit die Mitglieder von Spice Girls?", "Welche Persons werden verheiratet mit das Mitglied von Spice Girls?", "Welche Persons werden verheiratet mit die Mitglieder von Spice Girls?", "Welche Persons wurden verheiratet mit das Mitglied von Spice Girls?", "Welche Persons wurden verheiratet mit die Mitglieder von Spice Girls?", "Wer wird verheiratet mit das Mitglied von Spice Girls?", "Wer wird verheiratet mit die Mitglieder von Spice Girls?", "Wer wurde verheiratet mit das Mitglied von Spice Girls?", "Wer wurde verheiratet mit die Mitglieder von Spice Girls?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Spice_Girls> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Coheed and Cambria?", "Welche Person wird verheiratet mit die Mitglieder von Coheed and Cambria?", "Welche Person wurde verheiratet mit das Mitglied von Coheed and Cambria?", "Welche Person wurde verheiratet mit die Mitglieder von Coheed and Cambria?", "Welche Persons werden verheiratet mit das Mitglied von Coheed and Cambria?", "Welche Persons werden verheiratet mit die Mitglieder von Coheed and Cambria?", "Welche Persons wurden verheiratet mit das Mitglied von Coheed and Cambria?", "Welche Persons wurden verheiratet mit die Mitglieder von Coheed and Cambria?", "Wer wird verheiratet mit das Mitglied von Coheed and Cambria?", "Wer wird verheiratet mit die Mitglieder von Coheed and Cambria?", "Wer wurde verheiratet mit das Mitglied von Coheed and Cambria?", "Wer wurde verheiratet mit die Mitglieder von Coheed and Cambria?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Coheed_and_Cambria> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Bush (Band)?", "Welche Person wird verheiratet mit die Mitglieder von Bush (Band)?", "Welche Person wurde verheiratet mit das Mitglied von Bush (Band)?", "Welche Person wurde verheiratet mit die Mitglieder von Bush (Band)?", "Welche Persons werden verheiratet mit das Mitglied von Bush (Band)?", "Welche Persons werden verheiratet mit die Mitglieder von Bush (Band)?", "Welche Persons wurden verheiratet mit das Mitglied von Bush (Band)?", "Welche Persons wurden verheiratet mit die Mitglieder von Bush (Band)?", "Wer wird verheiratet mit das Mitglied von Bush (Band)?", "Wer wird verheiratet mit die Mitglieder von Bush (Band)?", "Wer wurde verheiratet mit das Mitglied von Bush (Band)?", "Wer wurde verheiratet mit die Mitglieder von Bush (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bush_(British_band)> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Wilson Phillips?", "Welche Person wird verheiratet mit die Mitglieder von Wilson Phillips?", "Welche Person wurde verheiratet mit das Mitglied von Wilson Phillips?", "Welche Person wurde verheiratet mit die Mitglieder von Wilson Phillips?", "Welche Persons werden verheiratet mit das Mitglied von Wilson Phillips?", "Welche Persons werden verheiratet mit die Mitglieder von Wilson Phillips?", "Welche Persons wurden verheiratet mit das Mitglied von Wilson Phillips?", "Welche Persons wurden verheiratet mit die Mitglieder von Wilson Phillips?", "Wer wird verheiratet mit das Mitglied von Wilson Phillips?", "Wer wird verheiratet mit die Mitglieder von Wilson Phillips?", "Wer wurde verheiratet mit das Mitglied von Wilson Phillips?", "Wer wurde verheiratet mit die Mitglieder von Wilson Phillips?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Wilson_Phillips> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Sweet Dreams (Band)?", "Welche Person wird verheiratet mit die Mitglieder von Sweet Dreams (Band)?", "Welche Person wurde verheiratet mit das Mitglied von Sweet Dreams (Band)?", "Welche Person wurde verheiratet mit die Mitglieder von Sweet Dreams (Band)?", "Welche Persons werden verheiratet mit das Mitglied von Sweet Dreams (Band)?", "Welche Persons werden verheiratet mit die Mitglieder von Sweet Dreams (Band)?", "Welche Persons wurden verheiratet mit das Mitglied von Sweet Dreams (Band)?", "Welche Persons wurden verheiratet mit die Mitglieder von Sweet Dreams (Band)?", "Wer wird verheiratet mit das Mitglied von Sweet Dreams (Band)?", "Wer wird verheiratet mit die Mitglieder von Sweet Dreams (Band)?", "Wer wurde verheiratet mit das Mitglied von Sweet Dreams (Band)?", "Wer wurde verheiratet mit die Mitglieder von Sweet Dreams (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sweet_Dreams_(band)> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von The Flesh Eaters?", "Welche Person wird verheiratet mit die Mitglieder von The Flesh Eaters?", "Welche Person wurde verheiratet mit das Mitglied von The Flesh Eaters?", "Welche Person wurde verheiratet mit die Mitglieder von The Flesh Eaters?", "Welche Persons werden verheiratet mit das Mitglied von The Flesh Eaters?", "Welche Persons werden verheiratet mit die Mitglieder von The Flesh Eaters?", "Welche Persons wurden verheiratet mit das Mitglied von The Flesh Eaters?", "Welche Persons wurden verheiratet mit die Mitglieder von The Flesh Eaters?", "Wer wird verheiratet mit das Mitglied von The Flesh Eaters?", "Wer wird verheiratet mit die Mitglieder von The Flesh Eaters?", "Wer wurde verheiratet mit das Mitglied von The Flesh Eaters?", "Wer wurde verheiratet mit die Mitglieder von The Flesh Eaters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Flesh_Eaters> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Simon_Sisters?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Simon_Sisters?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Simon_Sisters?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Simon_Sisters?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Simon_Sisters?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Simon_Sisters?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Simon_Sisters?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Simon_Sisters?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Simon_Sisters?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Simon_Sisters?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Simon_Sisters?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Simon_Sisters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Simon_Sisters> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Parokya_ni_Edgar?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Parokya_ni_Edgar?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Parokya_ni_Edgar?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Parokya_ni_Edgar?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Parokya_ni_Edgar?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Parokya_ni_Edgar?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Parokya_ni_Edgar?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Parokya_ni_Edgar?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Parokya_ni_Edgar?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Parokya_ni_Edgar?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Parokya_ni_Edgar?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Parokya_ni_Edgar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Parokya_ni_Edgar> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Beyman_Bros?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Beyman_Bros?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Beyman_Bros?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Beyman_Bros?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Beyman_Bros?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Beyman_Bros?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Beyman_Bros?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Beyman_Bros?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Beyman_Bros?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Beyman_Bros?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Beyman_Bros?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Beyman_Bros?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Beyman_Bros> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Team_Unicorn?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Team_Unicorn?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Team_Unicorn?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Team_Unicorn?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Team_Unicorn?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Team_Unicorn?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Team_Unicorn?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Team_Unicorn?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Team_Unicorn?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Team_Unicorn?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Team_Unicorn?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Team_Unicorn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Team_Unicorn> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Lt._Dan_Band?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Lt._Dan_Band?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Lt._Dan_Band?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Lt._Dan_Band?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Lt._Dan_Band?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Lt._Dan_Band?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Lt._Dan_Band?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Lt._Dan_Band?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Lt._Dan_Band?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Lt._Dan_Band?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Lt._Dan_Band?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Lt._Dan_Band?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lt._Dan_Band> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Southland_(band)?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Southland_(band)?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Southland_(band)?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Southland_(band)?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Southland_(band)?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Southland_(band)?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Southland_(band)?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Southland_(band)?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Southland_(band)?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Southland_(band)?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Southland_(band)?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Southland_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Southland_(band)> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von The Blues Brothers?", "Welche Person wird verheiratet mit die Mitglieder von The Blues Brothers?", "Welche Person wurde verheiratet mit das Mitglied von The Blues Brothers?", "Welche Person wurde verheiratet mit die Mitglieder von The Blues Brothers?", "Welche Persons werden verheiratet mit das Mitglied von The Blues Brothers?", "Welche Persons werden verheiratet mit die Mitglieder von The Blues Brothers?", "Welche Persons wurden verheiratet mit das Mitglied von The Blues Brothers?", "Welche Persons wurden verheiratet mit die Mitglieder von The Blues Brothers?", "Wer wird verheiratet mit das Mitglied von The Blues Brothers?", "Wer wird verheiratet mit die Mitglieder von The Blues Brothers?", "Wer wurde verheiratet mit das Mitglied von The Blues Brothers?", "Wer wurde verheiratet mit die Mitglieder von The Blues Brothers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Blues_Brothers> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Flight of the Conchords?", "Welche Person wird verheiratet mit die Mitglieder von Flight of the Conchords?", "Welche Person wurde verheiratet mit das Mitglied von Flight of the Conchords?", "Welche Person wurde verheiratet mit die Mitglieder von Flight of the Conchords?", "Welche Persons werden verheiratet mit das Mitglied von Flight of the Conchords?", "Welche Persons werden verheiratet mit die Mitglieder von Flight of the Conchords?", "Welche Persons wurden verheiratet mit das Mitglied von Flight of the Conchords?", "Welche Persons wurden verheiratet mit die Mitglieder von Flight of the Conchords?", "Wer wird verheiratet mit das Mitglied von Flight of the Conchords?", "Wer wird verheiratet mit die Mitglieder von Flight of the Conchords?", "Wer wurde verheiratet mit das Mitglied von Flight of the Conchords?", "Wer wurde verheiratet mit die Mitglieder von Flight of the Conchords?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Flight_of_the_Conchords> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von For King & Country?", "Welche Person wird verheiratet mit die Mitglieder von For King & Country?", "Welche Person wurde verheiratet mit das Mitglied von For King & Country?", "Welche Person wurde verheiratet mit die Mitglieder von For King & Country?", "Welche Persons werden verheiratet mit das Mitglied von For King & Country?", "Welche Persons werden verheiratet mit die Mitglieder von For King & Country?", "Welche Persons wurden verheiratet mit das Mitglied von For King & Country?", "Welche Persons wurden verheiratet mit die Mitglieder von For King & Country?", "Wer wird verheiratet mit das Mitglied von For King & Country?", "Wer wird verheiratet mit die Mitglieder von For King & Country?", "Wer wurde verheiratet mit das Mitglied von For King & Country?", "Wer wurde verheiratet mit die Mitglieder von For King & Country?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/For_King_&_Country_(band)> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Seven_Princesses_of_Mediacorp?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Seven_Princesses_of_Mediacorp?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Seven_Princesses_of_Mediacorp?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Seven_Princesses_of_Mediacorp?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Seven_Princesses_of_Mediacorp?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Seven_Princesses_of_Mediacorp?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Seven_Princesses_of_Mediacorp?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Seven_Princesses_of_Mediacorp?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Seven_Princesses_of_Mediacorp?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Seven_Princesses_of_Mediacorp?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Seven_Princesses_of_Mediacorp?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Seven_Princesses_of_Mediacorp?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Seven_Princesses_of_Mediacorp> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Lands_(band)?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Lands_(band)?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Lands_(band)?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Lands_(band)?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Lands_(band)?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Lands_(band)?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Lands_(band)?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Lands_(band)?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Lands_(band)?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Lands_(band)?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Lands_(band)?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Lands_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lands_(band)> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Pleased?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Pleased?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Pleased?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Pleased?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Pleased?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Pleased?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Pleased?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Pleased?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Pleased?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Pleased?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Pleased?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Pleased?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Pleased> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Hot Boys?", "Welche Person wird verheiratet mit die Mitglieder von Hot Boys?", "Welche Person wurde verheiratet mit das Mitglied von Hot Boys?", "Welche Person wurde verheiratet mit die Mitglieder von Hot Boys?", "Welche Persons werden verheiratet mit das Mitglied von Hot Boys?", "Welche Persons werden verheiratet mit die Mitglieder von Hot Boys?", "Welche Persons wurden verheiratet mit das Mitglied von Hot Boys?", "Welche Persons wurden verheiratet mit die Mitglieder von Hot Boys?", "Wer wird verheiratet mit das Mitglied von Hot Boys?", "Wer wird verheiratet mit die Mitglieder von Hot Boys?", "Wer wurde verheiratet mit das Mitglied von Hot Boys?", "Wer wurde verheiratet mit die Mitglieder von Hot Boys?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hot_Boys> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von B*Witched?", "Welche Person wird verheiratet mit die Mitglieder von B*Witched?", "Welche Person wurde verheiratet mit das Mitglied von B*Witched?", "Welche Person wurde verheiratet mit die Mitglieder von B*Witched?", "Welche Persons werden verheiratet mit das Mitglied von B*Witched?", "Welche Persons werden verheiratet mit die Mitglieder von B*Witched?", "Welche Persons wurden verheiratet mit das Mitglied von B*Witched?", "Welche Persons wurden verheiratet mit die Mitglieder von B*Witched?", "Wer wird verheiratet mit das Mitglied von B*Witched?", "Wer wird verheiratet mit die Mitglieder von B*Witched?", "Wer wurde verheiratet mit das Mitglied von B*Witched?", "Wer wurde verheiratet mit die Mitglieder von B*Witched?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/B*Witched> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Garfunkel and Oates?", "Welche Person wird verheiratet mit die Mitglieder von Garfunkel and Oates?", "Welche Person wurde verheiratet mit das Mitglied von Garfunkel and Oates?", "Welche Person wurde verheiratet mit die Mitglieder von Garfunkel and Oates?", "Welche Persons werden verheiratet mit das Mitglied von Garfunkel and Oates?", "Welche Persons werden verheiratet mit die Mitglieder von Garfunkel and Oates?", "Welche Persons wurden verheiratet mit das Mitglied von Garfunkel and Oates?", "Welche Persons wurden verheiratet mit die Mitglieder von Garfunkel and Oates?", "Wer wird verheiratet mit das Mitglied von Garfunkel and Oates?", "Wer wird verheiratet mit die Mitglieder von Garfunkel and Oates?", "Wer wurde verheiratet mit das Mitglied von Garfunkel and Oates?", "Wer wurde verheiratet mit die Mitglieder von Garfunkel and Oates?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Garfunkel_and_Oates> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Bikini Kill?", "Welche Person wird verheiratet mit die Mitglieder von Bikini Kill?", "Welche Person wurde verheiratet mit das Mitglied von Bikini Kill?", "Welche Person wurde verheiratet mit die Mitglieder von Bikini Kill?", "Welche Persons werden verheiratet mit das Mitglied von Bikini Kill?", "Welche Persons werden verheiratet mit die Mitglieder von Bikini Kill?", "Welche Persons wurden verheiratet mit das Mitglied von Bikini Kill?", "Welche Persons wurden verheiratet mit die Mitglieder von Bikini Kill?", "Wer wird verheiratet mit das Mitglied von Bikini Kill?", "Wer wird verheiratet mit die Mitglieder von Bikini Kill?", "Wer wurde verheiratet mit das Mitglied von Bikini Kill?", "Wer wurde verheiratet mit die Mitglieder von Bikini Kill?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bikini_Kill> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von The Carters?", "Welche Person wird verheiratet mit die Mitglieder von The Carters?", "Welche Person wurde verheiratet mit das Mitglied von The Carters?", "Welche Person wurde verheiratet mit die Mitglieder von The Carters?", "Welche Persons werden verheiratet mit das Mitglied von The Carters?", "Welche Persons werden verheiratet mit die Mitglieder von The Carters?", "Welche Persons wurden verheiratet mit das Mitglied von The Carters?", "Welche Persons wurden verheiratet mit die Mitglieder von The Carters?", "Wer wird verheiratet mit das Mitglied von The Carters?", "Wer wird verheiratet mit die Mitglieder von The Carters?", "Wer wurde verheiratet mit das Mitglied von The Carters?", "Wer wurde verheiratet mit die Mitglieder von The Carters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Carters> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von The Grace?", "Welche Person wird verheiratet mit die Mitglieder von The Grace?", "Welche Person wurde verheiratet mit das Mitglied von The Grace?", "Welche Person wurde verheiratet mit die Mitglieder von The Grace?", "Welche Persons werden verheiratet mit das Mitglied von The Grace?", "Welche Persons werden verheiratet mit die Mitglieder von The Grace?", "Welche Persons wurden verheiratet mit das Mitglied von The Grace?", "Welche Persons wurden verheiratet mit die Mitglieder von The Grace?", "Wer wird verheiratet mit das Mitglied von The Grace?", "Wer wird verheiratet mit die Mitglieder von The Grace?", "Wer wurde verheiratet mit das Mitglied von The Grace?", "Wer wurde verheiratet mit die Mitglieder von The Grace?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Grace_(group)> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von The Rolling Stones?", "Welche Person wird verheiratet mit die Mitglieder von The Rolling Stones?", "Welche Person wurde verheiratet mit das Mitglied von The Rolling Stones?", "Welche Person wurde verheiratet mit die Mitglieder von The Rolling Stones?", "Welche Persons werden verheiratet mit das Mitglied von The Rolling Stones?", "Welche Persons werden verheiratet mit die Mitglieder von The Rolling Stones?", "Welche Persons wurden verheiratet mit das Mitglied von The Rolling Stones?", "Welche Persons wurden verheiratet mit die Mitglieder von The Rolling Stones?", "Wer wird verheiratet mit das Mitglied von The Rolling Stones?", "Wer wird verheiratet mit die Mitglieder von The Rolling Stones?", "Wer wurde verheiratet mit das Mitglied von The Rolling Stones?", "Wer wurde verheiratet mit die Mitglieder von The Rolling Stones?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Rolling_Stones> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Death Cab for Cutie?", "Welche Person wird verheiratet mit die Mitglieder von Death Cab for Cutie?", "Welche Person wurde verheiratet mit das Mitglied von Death Cab for Cutie?", "Welche Person wurde verheiratet mit die Mitglieder von Death Cab for Cutie?", "Welche Persons werden verheiratet mit das Mitglied von Death Cab for Cutie?", "Welche Persons werden verheiratet mit die Mitglieder von Death Cab for Cutie?", "Welche Persons wurden verheiratet mit das Mitglied von Death Cab for Cutie?", "Welche Persons wurden verheiratet mit die Mitglieder von Death Cab for Cutie?", "Wer wird verheiratet mit das Mitglied von Death Cab for Cutie?", "Wer wird verheiratet mit die Mitglieder von Death Cab for Cutie?", "Wer wurde verheiratet mit das Mitglied von Death Cab for Cutie?", "Wer wurde verheiratet mit die Mitglieder von Death Cab for Cutie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Death_Cab_for_Cutie> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von W-inds.?", "Welche Person wird verheiratet mit die Mitglieder von W-inds.?", "Welche Person wurde verheiratet mit das Mitglied von W-inds.?", "Welche Person wurde verheiratet mit die Mitglieder von W-inds.?", "Welche Persons werden verheiratet mit das Mitglied von W-inds.?", "Welche Persons werden verheiratet mit die Mitglieder von W-inds.?", "Welche Persons wurden verheiratet mit das Mitglied von W-inds.?", "Welche Persons wurden verheiratet mit die Mitglieder von W-inds.?", "Wer wird verheiratet mit das Mitglied von W-inds.?", "Wer wird verheiratet mit die Mitglieder von W-inds.?", "Wer wurde verheiratet mit das Mitglied von W-inds.?", "Wer wurde verheiratet mit die Mitglieder von W-inds.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/W-inds> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Sunday Service Choir?", "Welche Person wird verheiratet mit die Mitglieder von Sunday Service Choir?", "Welche Person wurde verheiratet mit das Mitglied von Sunday Service Choir?", "Welche Person wurde verheiratet mit die Mitglieder von Sunday Service Choir?", "Welche Persons werden verheiratet mit das Mitglied von Sunday Service Choir?", "Welche Persons werden verheiratet mit die Mitglieder von Sunday Service Choir?", "Welche Persons wurden verheiratet mit das Mitglied von Sunday Service Choir?", "Welche Persons wurden verheiratet mit die Mitglieder von Sunday Service Choir?", "Wer wird verheiratet mit das Mitglied von Sunday Service Choir?", "Wer wird verheiratet mit die Mitglieder von Sunday Service Choir?", "Wer wurde verheiratet mit das Mitglied von Sunday Service Choir?", "Wer wurde verheiratet mit die Mitglieder von Sunday Service Choir?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sunday_Service_Choir> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Bad_Boy_Records__The_Hitmen__1?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Bad_Boy_Records__The_Hitmen__1?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Bad_Boy_Records__The_Hitmen__1?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Bad_Boy_Records__The_Hitmen__1?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Bad_Boy_Records__The_Hitmen__1?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Bad_Boy_Records__The_Hitmen__1?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Bad_Boy_Records__The_Hitmen__1?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Bad_Boy_Records__The_Hitmen__1?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Bad_Boy_Records__The_Hitmen__1?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Bad_Boy_Records__The_Hitmen__1?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Bad_Boy_Records__The_Hitmen__1?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Bad_Boy_Records__The_Hitmen__1?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bad_Boy_Records__The_Hitmen__1> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Fovea_Hex?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Fovea_Hex?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Fovea_Hex?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Fovea_Hex?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Fovea_Hex?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Fovea_Hex?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Fovea_Hex?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Fovea_Hex?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Fovea_Hex?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Fovea_Hex?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Fovea_Hex?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Fovea_Hex?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Fovea_Hex> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Julie_Ruin?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Julie_Ruin?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Julie_Ruin?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Julie_Ruin?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Julie_Ruin?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Julie_Ruin?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Julie_Ruin?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Julie_Ruin?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Julie_Ruin?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Julie_Ruin?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Julie_Ruin?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Julie_Ruin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Julie_Ruin> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Keith_&_Kristyn_Getty?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Keith_&_Kristyn_Getty?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Keith_&_Kristyn_Getty?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Keith_&_Kristyn_Getty?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Keith_&_Kristyn_Getty?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Keith_&_Kristyn_Getty?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Keith_&_Kristyn_Getty?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Keith_&_Kristyn_Getty?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Keith_&_Kristyn_Getty?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Keith_&_Kristyn_Getty?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Keith_&_Kristyn_Getty?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Keith_&_Kristyn_Getty?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Keith_&_Kristyn_Getty> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Pyg?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Pyg?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Pyg?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Pyg?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Pyg?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Pyg?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Pyg?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Pyg?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Pyg?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Pyg?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Pyg?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Pyg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Pyg> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Sqad_Up?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Sqad_Up?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Sqad_Up?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Sqad_Up?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Sqad_Up?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Sqad_Up?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Sqad_Up?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Sqad_Up?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Sqad_Up?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Sqad_Up?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Sqad_Up?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Sqad_Up?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sqad_Up> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Deep_Dark_Robot?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Deep_Dark_Robot?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Deep_Dark_Robot?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Deep_Dark_Robot?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Deep_Dark_Robot?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Deep_Dark_Robot?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Deep_Dark_Robot?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Deep_Dark_Robot?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Deep_Dark_Robot?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Deep_Dark_Robot?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Deep_Dark_Robot?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Deep_Dark_Robot?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Deep_Dark_Robot> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/No_Plan_(owarai)?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/No_Plan_(owarai)?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/No_Plan_(owarai)?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/No_Plan_(owarai)?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/No_Plan_(owarai)?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/No_Plan_(owarai)?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/No_Plan_(owarai)?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/No_Plan_(owarai)?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/No_Plan_(owarai)?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/No_Plan_(owarai)?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/No_Plan_(owarai)?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/No_Plan_(owarai)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/No_Plan_(owarai)> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von The Left Banke?", "Welche Person wird verheiratet mit die Mitglieder von The Left Banke?", "Welche Person wurde verheiratet mit das Mitglied von The Left Banke?", "Welche Person wurde verheiratet mit die Mitglieder von The Left Banke?", "Welche Persons werden verheiratet mit das Mitglied von The Left Banke?", "Welche Persons werden verheiratet mit die Mitglieder von The Left Banke?", "Welche Persons wurden verheiratet mit das Mitglied von The Left Banke?", "Welche Persons wurden verheiratet mit die Mitglieder von The Left Banke?", "Wer wird verheiratet mit das Mitglied von The Left Banke?", "Wer wird verheiratet mit die Mitglieder von The Left Banke?", "Wer wurde verheiratet mit das Mitglied von The Left Banke?", "Wer wurde verheiratet mit die Mitglieder von The Left Banke?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Left_Banke> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Two-Mix?", "Welche Person wird verheiratet mit die Mitglieder von Two-Mix?", "Welche Person wurde verheiratet mit das Mitglied von Two-Mix?", "Welche Person wurde verheiratet mit die Mitglieder von Two-Mix?", "Welche Persons werden verheiratet mit das Mitglied von Two-Mix?", "Welche Persons werden verheiratet mit die Mitglieder von Two-Mix?", "Welche Persons wurden verheiratet mit das Mitglied von Two-Mix?", "Welche Persons wurden verheiratet mit die Mitglieder von Two-Mix?", "Wer wird verheiratet mit das Mitglied von Two-Mix?", "Wer wird verheiratet mit die Mitglieder von Two-Mix?", "Wer wurde verheiratet mit das Mitglied von Two-Mix?", "Wer wurde verheiratet mit die Mitglieder von Two-Mix?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Two-Mix> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von She & Him?", "Welche Person wird verheiratet mit die Mitglieder von She & Him?", "Welche Person wurde verheiratet mit das Mitglied von She & Him?", "Welche Person wurde verheiratet mit die Mitglieder von She & Him?", "Welche Persons werden verheiratet mit das Mitglied von She & Him?", "Welche Persons werden verheiratet mit die Mitglieder von She & Him?", "Welche Persons wurden verheiratet mit das Mitglied von She & Him?", "Welche Persons wurden verheiratet mit die Mitglieder von She & Him?", "Wer wird verheiratet mit das Mitglied von She & Him?", "Wer wird verheiratet mit die Mitglieder von She & Him?", "Wer wurde verheiratet mit das Mitglied von She & Him?", "Wer wurde verheiratet mit die Mitglieder von She & Him?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/She_&_Him> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von SuperHeavy?", "Welche Person wird verheiratet mit die Mitglieder von SuperHeavy?", "Welche Person wurde verheiratet mit das Mitglied von SuperHeavy?", "Welche Person wurde verheiratet mit die Mitglieder von SuperHeavy?", "Welche Persons werden verheiratet mit das Mitglied von SuperHeavy?", "Welche Persons werden verheiratet mit die Mitglieder von SuperHeavy?", "Welche Persons wurden verheiratet mit das Mitglied von SuperHeavy?", "Welche Persons wurden verheiratet mit die Mitglieder von SuperHeavy?", "Wer wird verheiratet mit das Mitglied von SuperHeavy?", "Wer wird verheiratet mit die Mitglieder von SuperHeavy?", "Wer wurde verheiratet mit das Mitglied von SuperHeavy?", "Wer wurde verheiratet mit die Mitglieder von SuperHeavy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/SuperHeavy> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Five_Tiger_Generals_of_TVB?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Five_Tiger_Generals_of_TVB?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Five_Tiger_Generals_of_TVB?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Five_Tiger_Generals_of_TVB?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Five_Tiger_Generals_of_TVB?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Five_Tiger_Generals_of_TVB?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Five_Tiger_Generals_of_TVB?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Five_Tiger_Generals_of_TVB?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Five_Tiger_Generals_of_TVB?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Five_Tiger_Generals_of_TVB?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Five_Tiger_Generals_of_TVB?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Five_Tiger_Generals_of_TVB?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Five_Tiger_Generals_of_TVB> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Operator_Generator?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Operator_Generator?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Operator_Generator?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Operator_Generator?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Operator_Generator?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Operator_Generator?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Operator_Generator?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Operator_Generator?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Operator_Generator?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Operator_Generator?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Operator_Generator?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Operator_Generator?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Operator_Generator> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Corporal_(band)?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Corporal_(band)?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Corporal_(band)?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Corporal_(band)?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Corporal_(band)?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Corporal_(band)?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Corporal_(band)?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Corporal_(band)?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Corporal_(band)?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Corporal_(band)?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Corporal_(band)?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Corporal_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Corporal_(band)> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Ich_Troje?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Ich_Troje?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Ich_Troje?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Ich_Troje?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Ich_Troje?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Ich_Troje?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Ich_Troje?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Ich_Troje?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Ich_Troje?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Ich_Troje?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Ich_Troje?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Ich_Troje?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ich_Troje> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Capitol_Offense_(band)?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Capitol_Offense_(band)?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Capitol_Offense_(band)?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Capitol_Offense_(band)?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Capitol_Offense_(band)?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Capitol_Offense_(band)?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Capitol_Offense_(band)?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Capitol_Offense_(band)?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Capitol_Offense_(band)?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Capitol_Offense_(band)?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Capitol_Offense_(band)?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Capitol_Offense_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Capitol_Offense_(band)> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/ROM-4?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/ROM-4?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/ROM-4?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/ROM-4?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/ROM-4?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/ROM-4?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/ROM-4?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/ROM-4?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/ROM-4?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/ROM-4?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/ROM-4?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/ROM-4?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/ROM-4> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Blue_(musical_duo)?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Blue_(musical_duo)?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Blue_(musical_duo)?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Blue_(musical_duo)?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Blue_(musical_duo)?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Blue_(musical_duo)?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Blue_(musical_duo)?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Blue_(musical_duo)?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Blue_(musical_duo)?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Blue_(musical_duo)?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/The_Blue_(musical_duo)?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/The_Blue_(musical_duo)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Blue_(musical_duo)> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von No Doubt?", "Welche Person wird verheiratet mit die Mitglieder von No Doubt?", "Welche Person wurde verheiratet mit das Mitglied von No Doubt?", "Welche Person wurde verheiratet mit die Mitglieder von No Doubt?", "Welche Persons werden verheiratet mit das Mitglied von No Doubt?", "Welche Persons werden verheiratet mit die Mitglieder von No Doubt?", "Welche Persons wurden verheiratet mit das Mitglied von No Doubt?", "Welche Persons wurden verheiratet mit die Mitglieder von No Doubt?", "Wer wird verheiratet mit das Mitglied von No Doubt?", "Wer wird verheiratet mit die Mitglieder von No Doubt?", "Wer wurde verheiratet mit das Mitglied von No Doubt?", "Wer wurde verheiratet mit die Mitglieder von No Doubt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/No_Doubt> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von The Saturdays?", "Welche Person wird verheiratet mit die Mitglieder von The Saturdays?", "Welche Person wurde verheiratet mit das Mitglied von The Saturdays?", "Welche Person wurde verheiratet mit die Mitglieder von The Saturdays?", "Welche Persons werden verheiratet mit das Mitglied von The Saturdays?", "Welche Persons werden verheiratet mit die Mitglieder von The Saturdays?", "Welche Persons wurden verheiratet mit das Mitglied von The Saturdays?", "Welche Persons wurden verheiratet mit die Mitglieder von The Saturdays?", "Wer wird verheiratet mit das Mitglied von The Saturdays?", "Wer wird verheiratet mit die Mitglieder von The Saturdays?", "Wer wurde verheiratet mit das Mitglied von The Saturdays?", "Wer wurde verheiratet mit die Mitglieder von The Saturdays?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Saturdays> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von Pearl Jam?", "Welche Person wird verheiratet mit die Mitglieder von Pearl Jam?", "Welche Person wurde verheiratet mit das Mitglied von Pearl Jam?", "Welche Person wurde verheiratet mit die Mitglieder von Pearl Jam?", "Welche Persons werden verheiratet mit das Mitglied von Pearl Jam?", "Welche Persons werden verheiratet mit die Mitglieder von Pearl Jam?", "Welche Persons wurden verheiratet mit das Mitglied von Pearl Jam?", "Welche Persons wurden verheiratet mit die Mitglieder von Pearl Jam?", "Wer wird verheiratet mit das Mitglied von Pearl Jam?", "Wer wird verheiratet mit die Mitglieder von Pearl Jam?", "Wer wurde verheiratet mit das Mitglied von Pearl Jam?", "Wer wurde verheiratet mit die Mitglieder von Pearl Jam?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Pearl_Jam> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von New Kids on the Block?", "Welche Person wird verheiratet mit die Mitglieder von New Kids on the Block?", "Welche Person wurde verheiratet mit das Mitglied von New Kids on the Block?", "Welche Person wurde verheiratet mit die Mitglieder von New Kids on the Block?", "Welche Persons werden verheiratet mit das Mitglied von New Kids on the Block?", "Welche Persons werden verheiratet mit die Mitglieder von New Kids on the Block?", "Welche Persons wurden verheiratet mit das Mitglied von New Kids on the Block?", "Welche Persons wurden verheiratet mit die Mitglieder von New Kids on the Block?", "Wer wird verheiratet mit das Mitglied von New Kids on the Block?", "Wer wird verheiratet mit die Mitglieder von New Kids on the Block?", "Wer wurde verheiratet mit das Mitglied von New Kids on the Block?", "Wer wurde verheiratet mit die Mitglieder von New Kids on the Block?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/New_Kids_on_the_Block> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/3Deep?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/3Deep?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/3Deep?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/3Deep?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/3Deep?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/3Deep?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/3Deep?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/3Deep?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/3Deep?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/3Deep?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/3Deep?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/3Deep?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/3Deep> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/RGP_(duo)?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/RGP_(duo)?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/RGP_(duo)?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/RGP_(duo)?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/RGP_(duo)?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/RGP_(duo)?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/RGP_(duo)?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/RGP_(duo)?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/RGP_(duo)?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/RGP_(duo)?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/RGP_(duo)?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/RGP_(duo)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/RGP_(duo)> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Running_Man_Brothers?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Running_Man_Brothers?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Running_Man_Brothers?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Running_Man_Brothers?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Running_Man_Brothers?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Running_Man_Brothers?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Running_Man_Brothers?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Running_Man_Brothers?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Running_Man_Brothers?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Running_Man_Brothers?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Running_Man_Brothers?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Running_Man_Brothers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Running_Man_Brothers> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "48",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Coolboys_and_the_Frontman?", "Welche Person wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Coolboys_and_the_Frontman?", "Welche Person wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Coolboys_and_the_Frontman?", "Welche Person wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Coolboys_and_the_Frontman?", "Welche Persons werden verheiratet mit das Mitglied von http://dbpedia.org/resource/Coolboys_and_the_Frontman?", "Welche Persons werden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Coolboys_and_the_Frontman?", "Welche Persons wurden verheiratet mit das Mitglied von http://dbpedia.org/resource/Coolboys_and_the_Frontman?", "Welche Persons wurden verheiratet mit die Mitglieder von http://dbpedia.org/resource/Coolboys_and_the_Frontman?", "Wer wird verheiratet mit das Mitglied von http://dbpedia.org/resource/Coolboys_and_the_Frontman?", "Wer wird verheiratet mit die Mitglieder von http://dbpedia.org/resource/Coolboys_and_the_Frontman?", "Wer wurde verheiratet mit das Mitglied von http://dbpedia.org/resource/Coolboys_and_the_Frontman?", "Wer wurde verheiratet mit die Mitglieder von http://dbpedia.org/resource/Coolboys_and_the_Frontman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Coolboys_and_the_Frontman> <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Lucia Moholy?", "Welche Person wurde verheiratet mit Persons verheiratet mit Lucia Moholy?", "Welche Persons werden verheiratet mit Persons verheiratet mit Lucia Moholy?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Lucia Moholy?", "Wer wird verheiratet mit Persons verheiratet mit Lucia Moholy?", "Wer wurde verheiratet mit Persons verheiratet mit Lucia Moholy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucia_Moholy> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Lucilla?", "Welche Person wurde verheiratet mit Persons verheiratet mit Lucilla?", "Welche Persons werden verheiratet mit Persons verheiratet mit Lucilla?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Lucilla?", "Wer wird verheiratet mit Persons verheiratet mit Lucilla?", "Wer wurde verheiratet mit Persons verheiratet mit Lucilla?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucilla> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Lucius Verus?", "Welche Person wurde verheiratet mit Persons verheiratet mit Lucius Verus?", "Welche Persons werden verheiratet mit Persons verheiratet mit Lucius Verus?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Lucius Verus?", "Wer wird verheiratet mit Persons verheiratet mit Lucius Verus?", "Wer wurde verheiratet mit Persons verheiratet mit Lucius Verus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucius_Verus> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Luis Fortuño?", "Welche Person wurde verheiratet mit Persons verheiratet mit Luis Fortuño?", "Welche Persons werden verheiratet mit Persons verheiratet mit Luis Fortuño?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Luis Fortuño?", "Wer wird verheiratet mit Persons verheiratet mit Luis Fortuño?", "Wer wurde verheiratet mit Persons verheiratet mit Luis Fortuño?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luis_Fortuño> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Lynn Whitfield?", "Welche Person wurde verheiratet mit Persons verheiratet mit Lynn Whitfield?", "Welche Persons werden verheiratet mit Persons verheiratet mit Lynn Whitfield?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Lynn Whitfield?", "Wer wird verheiratet mit Persons verheiratet mit Lynn Whitfield?", "Wer wurde verheiratet mit Persons verheiratet mit Lynn Whitfield?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lynn_Whitfield> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Lysette Anthony?", "Welche Person wurde verheiratet mit Persons verheiratet mit Lysette Anthony?", "Welche Persons werden verheiratet mit Persons verheiratet mit Lysette Anthony?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Lysette Anthony?", "Wer wird verheiratet mit Persons verheiratet mit Lysette Anthony?", "Wer wurde verheiratet mit Persons verheiratet mit Lysette Anthony?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lysette_Anthony> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit László Moholy-Nagy?", "Welche Person wurde verheiratet mit Persons verheiratet mit László Moholy-Nagy?", "Welche Persons werden verheiratet mit Persons verheiratet mit László Moholy-Nagy?", "Welche Persons wurden verheiratet mit Persons verheiratet mit László Moholy-Nagy?", "Wer wird verheiratet mit Persons verheiratet mit László Moholy-Nagy?", "Wer wurde verheiratet mit Persons verheiratet mit László Moholy-Nagy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/László_Moholy-Nagy> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit M. G. Ramachandran?", "Welche Person wurde verheiratet mit Persons verheiratet mit M. G. Ramachandran?", "Welche Persons werden verheiratet mit Persons verheiratet mit M. G. Ramachandran?", "Welche Persons wurden verheiratet mit Persons verheiratet mit M. G. Ramachandran?", "Wer wird verheiratet mit Persons verheiratet mit M. G. Ramachandran?", "Wer wurde verheiratet mit Persons verheiratet mit M. G. Ramachandran?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/M._G._Ramachandran> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Malcolm Turnbull?", "Welche Person wurde verheiratet mit Persons verheiratet mit Malcolm Turnbull?", "Welche Persons werden verheiratet mit Persons verheiratet mit Malcolm Turnbull?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Malcolm Turnbull?", "Wer wird verheiratet mit Persons verheiratet mit Malcolm Turnbull?", "Wer wurde verheiratet mit Persons verheiratet mit Malcolm Turnbull?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Malcolm_Turnbull> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Vera Tschechowa?", "Welche Person wurde verheiratet mit Persons verheiratet mit Vera Tschechowa?", "Welche Persons werden verheiratet mit Persons verheiratet mit Vera Tschechowa?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Vera Tschechowa?", "Wer wird verheiratet mit Persons verheiratet mit Vera Tschechowa?", "Wer wurde verheiratet mit Persons verheiratet mit Vera Tschechowa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Vera_Tschechowa> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Suriyothai?", "Welche Person wurde verheiratet mit Persons verheiratet mit Suriyothai?", "Welche Persons werden verheiratet mit Persons verheiratet mit Suriyothai?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Suriyothai?", "Wer wird verheiratet mit Persons verheiratet mit Suriyothai?", "Wer wurde verheiratet mit Persons verheiratet mit Suriyothai?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Suriyothai> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Manuel Sadosky?", "Welche Person wurde verheiratet mit Persons verheiratet mit Manuel Sadosky?", "Welche Persons werden verheiratet mit Persons verheiratet mit Manuel Sadosky?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Manuel Sadosky?", "Wer wird verheiratet mit Persons verheiratet mit Manuel Sadosky?", "Wer wurde verheiratet mit Persons verheiratet mit Manuel Sadosky?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Manuel_Sadosky> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Blanche von Namur?", "Welche Person wurde verheiratet mit Persons verheiratet mit Blanche von Namur?", "Welche Persons werden verheiratet mit Persons verheiratet mit Blanche von Namur?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Blanche von Namur?", "Wer wird verheiratet mit Persons verheiratet mit Blanche von Namur?", "Wer wurde verheiratet mit Persons verheiratet mit Blanche von Namur?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Blanche_of_Namur> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Derya Alabora?", "Welche Person wurde verheiratet mit Persons verheiratet mit Derya Alabora?", "Welche Persons werden verheiratet mit Persons verheiratet mit Derya Alabora?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Derya Alabora?", "Wer wird verheiratet mit Persons verheiratet mit Derya Alabora?", "Wer wurde verheiratet mit Persons verheiratet mit Derya Alabora?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Derya_Alabora> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Desmond FitzGerald?", "Welche Person wurde verheiratet mit Persons verheiratet mit Desmond FitzGerald?", "Welche Persons werden verheiratet mit Persons verheiratet mit Desmond FitzGerald?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Desmond FitzGerald?", "Wer wird verheiratet mit Persons verheiratet mit Desmond FitzGerald?", "Wer wurde verheiratet mit Persons verheiratet mit Desmond FitzGerald?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Dick Cheney?", "Welche Person wurde verheiratet mit Persons verheiratet mit Dick Cheney?", "Welche Persons werden verheiratet mit Persons verheiratet mit Dick Cheney?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Dick Cheney?", "Wer wird verheiratet mit Persons verheiratet mit Dick Cheney?", "Wer wurde verheiratet mit Persons verheiratet mit Dick Cheney?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dick_Cheney> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Gladys Moore Vanderbilt?", "Welche Person wurde verheiratet mit Persons verheiratet mit Gladys Moore Vanderbilt?", "Welche Persons werden verheiratet mit Persons verheiratet mit Gladys Moore Vanderbilt?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Gladys Moore Vanderbilt?", "Wer wird verheiratet mit Persons verheiratet mit Gladys Moore Vanderbilt?", "Wer wurde verheiratet mit Persons verheiratet mit Gladys Moore Vanderbilt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gladys_Vanderbilt_Széchenyi> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Grigori Wassiljewitsch Alexandrow?", "Welche Person wurde verheiratet mit Persons verheiratet mit Grigori Wassiljewitsch Alexandrow?", "Welche Persons werden verheiratet mit Persons verheiratet mit Grigori Wassiljewitsch Alexandrow?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Grigori Wassiljewitsch Alexandrow?", "Wer wird verheiratet mit Persons verheiratet mit Grigori Wassiljewitsch Alexandrow?", "Wer wurde verheiratet mit Persons verheiratet mit Grigori Wassiljewitsch Alexandrow?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Grigori_Aleksandrov> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Kishore Kumar?", "Welche Person wurde verheiratet mit Persons verheiratet mit Kishore Kumar?", "Welche Persons werden verheiratet mit Persons verheiratet mit Kishore Kumar?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Kishore Kumar?", "Wer wird verheiratet mit Persons verheiratet mit Kishore Kumar?", "Wer wurde verheiratet mit Persons verheiratet mit Kishore Kumar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kishore_Kumar> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Franz Xaver von Bourbon-Parma?", "Welche Person wurde verheiratet mit Persons verheiratet mit Franz Xaver von Bourbon-Parma?", "Welche Persons werden verheiratet mit Persons verheiratet mit Franz Xaver von Bourbon-Parma?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Franz Xaver von Bourbon-Parma?", "Wer wird verheiratet mit Persons verheiratet mit Franz Xaver von Bourbon-Parma?", "Wer wurde verheiratet mit Persons verheiratet mit Franz Xaver von Bourbon-Parma?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Prince_Xavier_of_Bourbon-Parma> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Ratna von Nepal?", "Welche Person wurde verheiratet mit Persons verheiratet mit Ratna von Nepal?", "Welche Persons werden verheiratet mit Persons verheiratet mit Ratna von Nepal?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Ratna von Nepal?", "Wer wird verheiratet mit Persons verheiratet mit Ratna von Nepal?", "Wer wurde verheiratet mit Persons verheiratet mit Ratna von Nepal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Queen_Ratna_of_Nepal> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Quinn Martin?", "Welche Person wurde verheiratet mit Persons verheiratet mit Quinn Martin?", "Welche Persons werden verheiratet mit Persons verheiratet mit Quinn Martin?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Quinn Martin?", "Wer wird verheiratet mit Persons verheiratet mit Quinn Martin?", "Wer wurde verheiratet mit Persons verheiratet mit Quinn Martin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Quinn_Martin> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Rachel Miner?", "Welche Person wurde verheiratet mit Persons verheiratet mit Rachel Miner?", "Welche Persons werden verheiratet mit Persons verheiratet mit Rachel Miner?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Rachel Miner?", "Wer wird verheiratet mit Persons verheiratet mit Rachel Miner?", "Wer wurde verheiratet mit Persons verheiratet mit Rachel Miner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rachel_Miner> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Rachel Portman?", "Welche Person wurde verheiratet mit Persons verheiratet mit Rachel Portman?", "Welche Persons werden verheiratet mit Persons verheiratet mit Rachel Portman?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Rachel Portman?", "Wer wird verheiratet mit Persons verheiratet mit Rachel Portman?", "Wer wurde verheiratet mit Persons verheiratet mit Rachel Portman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rachel_Portman> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Jakob II. (Zypern)?", "Welche Person wurde verheiratet mit Persons verheiratet mit Jakob II. (Zypern)?", "Welche Persons werden verheiratet mit Persons verheiratet mit Jakob II. (Zypern)?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Jakob II. (Zypern)?", "Wer wird verheiratet mit Persons verheiratet mit Jakob II. (Zypern)?", "Wer wurde verheiratet mit Persons verheiratet mit Jakob II. (Zypern)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/James_II_of_Cyprus> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Alan Halsall?", "Welche Person wurde verheiratet mit Persons verheiratet mit Alan Halsall?", "Welche Persons werden verheiratet mit Persons verheiratet mit Alan Halsall?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Alan Halsall?", "Wer wird verheiratet mit Persons verheiratet mit Alan Halsall?", "Wer wurde verheiratet mit Persons verheiratet mit Alan Halsall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alan_Halsall> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Albert S. Ruddy?", "Welche Person wurde verheiratet mit Persons verheiratet mit Albert S. Ruddy?", "Welche Persons werden verheiratet mit Persons verheiratet mit Albert S. Ruddy?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Albert S. Ruddy?", "Wer wird verheiratet mit Persons verheiratet mit Albert S. Ruddy?", "Wer wurde verheiratet mit Persons verheiratet mit Albert S. Ruddy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Albert_S._Ruddy> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Alex O’Loughlin?", "Welche Person wurde verheiratet mit Persons verheiratet mit Alex O’Loughlin?", "Welche Persons werden verheiratet mit Persons verheiratet mit Alex O’Loughlin?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Alex O’Loughlin?", "Wer wird verheiratet mit Persons verheiratet mit Alex O’Loughlin?", "Wer wurde verheiratet mit Persons verheiratet mit Alex O’Loughlin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alex_O'Loughlin> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Alexander Borissowitsch Godunow?", "Welche Person wurde verheiratet mit Persons verheiratet mit Alexander Borissowitsch Godunow?", "Welche Persons werden verheiratet mit Persons verheiratet mit Alexander Borissowitsch Godunow?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Alexander Borissowitsch Godunow?", "Wer wird verheiratet mit Persons verheiratet mit Alexander Borissowitsch Godunow?", "Wer wurde verheiratet mit Persons verheiratet mit Alexander Borissowitsch Godunow?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alexander_Godunov> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Alfonso I. d’Este?", "Welche Person wurde verheiratet mit Persons verheiratet mit Alfonso I. d’Este?", "Welche Persons werden verheiratet mit Persons verheiratet mit Alfonso I. d’Este?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Alfonso I. d’Este?", "Wer wird verheiratet mit Persons verheiratet mit Alfonso I. d’Este?", "Wer wurde verheiratet mit Persons verheiratet mit Alfonso I. d’Este?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alfonso_I_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Alfred Lunt?", "Welche Person wurde verheiratet mit Persons verheiratet mit Alfred Lunt?", "Welche Persons werden verheiratet mit Persons verheiratet mit Alfred Lunt?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Alfred Lunt?", "Wer wird verheiratet mit Persons verheiratet mit Alfred Lunt?", "Wer wurde verheiratet mit Persons verheiratet mit Alfred Lunt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alfred_Lunt> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit ʿAlī ibn Abī Tālib?", "Welche Person wurde verheiratet mit Persons verheiratet mit ʿAlī ibn Abī Tālib?", "Welche Persons werden verheiratet mit Persons verheiratet mit ʿAlī ibn Abī Tālib?", "Welche Persons wurden verheiratet mit Persons verheiratet mit ʿAlī ibn Abī Tālib?", "Wer wird verheiratet mit Persons verheiratet mit ʿAlī ibn Abī Tālib?", "Wer wurde verheiratet mit Persons verheiratet mit ʿAlī ibn Abī Tālib?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ali> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Alistair Petrie?", "Welche Person wurde verheiratet mit Persons verheiratet mit Alistair Petrie?", "Welche Persons werden verheiratet mit Persons verheiratet mit Alistair Petrie?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Alistair Petrie?", "Wer wird verheiratet mit Persons verheiratet mit Alistair Petrie?", "Wer wurde verheiratet mit Persons verheiratet mit Alistair Petrie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alistair_Petrie> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Alma Adamkienė?", "Welche Person wurde verheiratet mit Persons verheiratet mit Alma Adamkienė?", "Welche Persons werden verheiratet mit Persons verheiratet mit Alma Adamkienė?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Alma Adamkienė?", "Wer wird verheiratet mit Persons verheiratet mit Alma Adamkienė?", "Wer wurde verheiratet mit Persons verheiratet mit Alma Adamkienė?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alma_Adamkienė> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Karl I. (Valois)?", "Welche Person wurde verheiratet mit Persons verheiratet mit Karl I. (Valois)?", "Welche Persons werden verheiratet mit Persons verheiratet mit Karl I. (Valois)?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Karl I. (Valois)?", "Wer wird verheiratet mit Persons verheiratet mit Karl I. (Valois)?", "Wer wurde verheiratet mit Persons verheiratet mit Karl I. (Valois)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charles,_Count_of_Valois> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Karl III. Philipp (Pfalz)?", "Welche Person wurde verheiratet mit Persons verheiratet mit Karl III. Philipp (Pfalz)?", "Welche Persons werden verheiratet mit Persons verheiratet mit Karl III. Philipp (Pfalz)?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Karl III. Philipp (Pfalz)?", "Wer wird verheiratet mit Persons verheiratet mit Karl III. Philipp (Pfalz)?", "Wer wurde verheiratet mit Persons verheiratet mit Karl III. Philipp (Pfalz)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charles_III_Philip,_Elector_Palatine> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Karl III. Wilhelm (Baden-Durlach)?", "Welche Person wurde verheiratet mit Persons verheiratet mit Karl III. Wilhelm (Baden-Durlach)?", "Welche Persons werden verheiratet mit Persons verheiratet mit Karl III. Wilhelm (Baden-Durlach)?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Karl III. Wilhelm (Baden-Durlach)?", "Wer wird verheiratet mit Persons verheiratet mit Karl III. Wilhelm (Baden-Durlach)?", "Wer wurde verheiratet mit Persons verheiratet mit Karl III. Wilhelm (Baden-Durlach)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charles_III_William,_Margrave_of_Baden-Durlach> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Karl XI. (Schweden)?", "Welche Person wurde verheiratet mit Persons verheiratet mit Karl XI. (Schweden)?", "Welche Persons werden verheiratet mit Persons verheiratet mit Karl XI. (Schweden)?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Karl XI. (Schweden)?", "Wer wird verheiratet mit Persons verheiratet mit Karl XI. (Schweden)?", "Wer wurde verheiratet mit Persons verheiratet mit Karl XI. (Schweden)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charles_XI_of_Sweden> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Charlton Heston?", "Welche Person wurde verheiratet mit Persons verheiratet mit Charlton Heston?", "Welche Persons werden verheiratet mit Persons verheiratet mit Charlton Heston?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Charlton Heston?", "Wer wird verheiratet mit Persons verheiratet mit Charlton Heston?", "Wer wurde verheiratet mit Persons verheiratet mit Charlton Heston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Charlton_Heston> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Chetan Anand (Regisseur)?", "Welche Person wurde verheiratet mit Persons verheiratet mit Chetan Anand (Regisseur)?", "Welche Persons werden verheiratet mit Persons verheiratet mit Chetan Anand (Regisseur)?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Chetan Anand (Regisseur)?", "Wer wird verheiratet mit Persons verheiratet mit Chetan Anand (Regisseur)?", "Wer wurde verheiratet mit Persons verheiratet mit Chetan Anand (Regisseur)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chetan_Anand_(director)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Nieves Navarro?", "Welche Person wurde verheiratet mit Persons verheiratet mit Nieves Navarro?", "Welche Persons werden verheiratet mit Persons verheiratet mit Nieves Navarro?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Nieves Navarro?", "Wer wird verheiratet mit Persons verheiratet mit Nieves Navarro?", "Wer wurde verheiratet mit Persons verheiratet mit Nieves Navarro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nieves_Navarro> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Nnamdi Azikiwe?", "Welche Person wurde verheiratet mit Persons verheiratet mit Nnamdi Azikiwe?", "Welche Persons werden verheiratet mit Persons verheiratet mit Nnamdi Azikiwe?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Nnamdi Azikiwe?", "Wer wird verheiratet mit Persons verheiratet mit Nnamdi Azikiwe?", "Wer wurde verheiratet mit Persons verheiratet mit Nnamdi Azikiwe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nnamdi_Azikiwe> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Noah Bean?", "Welche Person wurde verheiratet mit Persons verheiratet mit Noah Bean?", "Welche Persons werden verheiratet mit Persons verheiratet mit Noah Bean?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Noah Bean?", "Wer wird verheiratet mit Persons verheiratet mit Noah Bean?", "Wer wurde verheiratet mit Persons verheiratet mit Noah Bean?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Noah_Bean> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Georg I. (Hessen-Darmstadt)?", "Welche Person wurde verheiratet mit Persons verheiratet mit Georg I. (Hessen-Darmstadt)?", "Welche Persons werden verheiratet mit Persons verheiratet mit Georg I. (Hessen-Darmstadt)?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Georg I. (Hessen-Darmstadt)?", "Wer wird verheiratet mit Persons verheiratet mit Georg I. (Hessen-Darmstadt)?", "Wer wurde verheiratet mit Persons verheiratet mit Georg I. (Hessen-Darmstadt)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/George_I,_Landgrave_of_Hesse-Darmstadt> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Barbara Stühlmeyer?", "Welche Person wurde verheiratet mit Persons verheiratet mit Barbara Stühlmeyer?", "Welche Persons werden verheiratet mit Persons verheiratet mit Barbara Stühlmeyer?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Barbara Stühlmeyer?", "Wer wird verheiratet mit Persons verheiratet mit Barbara Stühlmeyer?", "Wer wurde verheiratet mit Persons verheiratet mit Barbara Stühlmeyer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Barbara_Stühlmeyer> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Barbara von Brandenburg (1422–1481)?", "Welche Person wurde verheiratet mit Persons verheiratet mit Barbara von Brandenburg (1422–1481)?", "Welche Persons werden verheiratet mit Persons verheiratet mit Barbara von Brandenburg (1422–1481)?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Barbara von Brandenburg (1422–1481)?", "Wer wird verheiratet mit Persons verheiratet mit Barbara von Brandenburg (1422–1481)?", "Wer wurde verheiratet mit Persons verheiratet mit Barbara von Brandenburg (1422–1481)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Barbara_of_Brandenburg,_Marquise_of_Mantua> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Barry Levinson?", "Welche Person wurde verheiratet mit Persons verheiratet mit Barry Levinson?", "Welche Persons werden verheiratet mit Persons verheiratet mit Barry Levinson?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Barry Levinson?", "Wer wird verheiratet mit Persons verheiratet mit Barry Levinson?", "Wer wurde verheiratet mit Persons verheiratet mit Barry Levinson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Barry_Levinson> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Frederick Cavendish?", "Welche Person wurde verheiratet mit Persons verheiratet mit Frederick Cavendish?", "Welche Persons werden verheiratet mit Persons verheiratet mit Frederick Cavendish?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Frederick Cavendish?", "Wer wird verheiratet mit Persons verheiratet mit Frederick Cavendish?", "Wer wurde verheiratet mit Persons verheiratet mit Frederick Cavendish?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lord_Frederick_Cavendish> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Lorenzo di Piero de’ Medici?", "Welche Person wurde verheiratet mit Persons verheiratet mit Lorenzo di Piero de’ Medici?", "Welche Persons werden verheiratet mit Persons verheiratet mit Lorenzo di Piero de’ Medici?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Lorenzo di Piero de’ Medici?", "Wer wird verheiratet mit Persons verheiratet mit Lorenzo di Piero de’ Medici?", "Wer wurde verheiratet mit Persons verheiratet mit Lorenzo di Piero de’ Medici?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lorenzo_de'_Medici,_Duke_of_Urbino> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Louis-Ferdinand Céline?", "Welche Person wurde verheiratet mit Persons verheiratet mit Louis-Ferdinand Céline?", "Welche Persons werden verheiratet mit Persons verheiratet mit Louis-Ferdinand Céline?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Louis-Ferdinand Céline?", "Wer wird verheiratet mit Persons verheiratet mit Louis-Ferdinand Céline?", "Wer wurde verheiratet mit Persons verheiratet mit Louis-Ferdinand Céline?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Louis-Ferdinand_Céline> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Ludwig Friedrich II. (Schwarzburg-Rudolstadt)?", "Welche Person wurde verheiratet mit Persons verheiratet mit Ludwig Friedrich II. (Schwarzburg-Rudolstadt)?", "Welche Persons werden verheiratet mit Persons verheiratet mit Ludwig Friedrich II. (Schwarzburg-Rudolstadt)?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Ludwig Friedrich II. (Schwarzburg-Rudolstadt)?", "Wer wird verheiratet mit Persons verheiratet mit Ludwig Friedrich II. (Schwarzburg-Rudolstadt)?", "Wer wurde verheiratet mit Persons verheiratet mit Ludwig Friedrich II. (Schwarzburg-Rudolstadt)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Louis_Frederick_II,_Prince_of_Schwarzburg-Rudolstadt> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Ludwig der Kelheimer?", "Welche Person wurde verheiratet mit Persons verheiratet mit Ludwig der Kelheimer?", "Welche Persons werden verheiratet mit Persons verheiratet mit Ludwig der Kelheimer?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Ludwig der Kelheimer?", "Wer wird verheiratet mit Persons verheiratet mit Ludwig der Kelheimer?", "Wer wurde verheiratet mit Persons verheiratet mit Ludwig der Kelheimer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Louis_I,_Duke_of_Bavaria> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Tullia die Jüngere?", "Welche Person wurde verheiratet mit Persons verheiratet mit Tullia die Jüngere?", "Welche Persons werden verheiratet mit Persons verheiratet mit Tullia die Jüngere?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Tullia die Jüngere?", "Wer wird verheiratet mit Persons verheiratet mit Tullia die Jüngere?", "Wer wurde verheiratet mit Persons verheiratet mit Tullia die Jüngere?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tullia_Minor> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Caitlin Stasey?", "Welche Person wurde verheiratet mit Persons verheiratet mit Caitlin Stasey?", "Welche Persons werden verheiratet mit Persons verheiratet mit Caitlin Stasey?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Caitlin Stasey?", "Wer wird verheiratet mit Persons verheiratet mit Caitlin Stasey?", "Wer wurde verheiratet mit Persons verheiratet mit Caitlin Stasey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Caitlin_Stasey> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Carl Sagan?", "Welche Person wurde verheiratet mit Persons verheiratet mit Carl Sagan?", "Welche Persons werden verheiratet mit Persons verheiratet mit Carl Sagan?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Carl Sagan?", "Wer wird verheiratet mit Persons verheiratet mit Carl Sagan?", "Wer wurde verheiratet mit Persons verheiratet mit Carl Sagan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carl_Sagan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Ilich Ramírez Sánchez?", "Welche Person wurde verheiratet mit Persons verheiratet mit Ilich Ramírez Sánchez?", "Welche Persons werden verheiratet mit Persons verheiratet mit Ilich Ramírez Sánchez?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Ilich Ramírez Sánchez?", "Wer wird verheiratet mit Persons verheiratet mit Ilich Ramírez Sánchez?", "Wer wurde verheiratet mit Persons verheiratet mit Ilich Ramírez Sánchez?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carlos_the_Jackal> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Carmine Giovinazzo?", "Welche Person wurde verheiratet mit Persons verheiratet mit Carmine Giovinazzo?", "Welche Persons werden verheiratet mit Persons verheiratet mit Carmine Giovinazzo?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Carmine Giovinazzo?", "Wer wird verheiratet mit Persons verheiratet mit Carmine Giovinazzo?", "Wer wurde verheiratet mit Persons verheiratet mit Carmine Giovinazzo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carmine_Giovinazzo> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Karl II. (Rumänien)?", "Welche Person wurde verheiratet mit Persons verheiratet mit Karl II. (Rumänien)?", "Welche Persons werden verheiratet mit Persons verheiratet mit Karl II. (Rumänien)?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Karl II. (Rumänien)?", "Wer wird verheiratet mit Persons verheiratet mit Karl II. (Rumänien)?", "Wer wurde verheiratet mit Persons verheiratet mit Karl II. (Rumänien)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carol_II_of_Romania> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Chien-Shiung Wu?", "Welche Person wurde verheiratet mit Persons verheiratet mit Chien-Shiung Wu?", "Welche Persons werden verheiratet mit Persons verheiratet mit Chien-Shiung Wu?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Chien-Shiung Wu?", "Wer wird verheiratet mit Persons verheiratet mit Chien-Shiung Wu?", "Wer wurde verheiratet mit Persons verheiratet mit Chien-Shiung Wu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chien-Shiung_Wu> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Chris Hardwick?", "Welche Person wurde verheiratet mit Persons verheiratet mit Chris Hardwick?", "Welche Persons werden verheiratet mit Persons verheiratet mit Chris Hardwick?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Chris Hardwick?", "Wer wird verheiratet mit Persons verheiratet mit Chris Hardwick?", "Wer wurde verheiratet mit Persons verheiratet mit Chris Hardwick?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chris_Hardwick> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Christian von Dänemark?", "Welche Person wurde verheiratet mit Persons verheiratet mit Christian von Dänemark?", "Welche Persons werden verheiratet mit Persons verheiratet mit Christian von Dänemark?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Christian von Dänemark?", "Wer wird verheiratet mit Persons verheiratet mit Christian von Dänemark?", "Wer wurde verheiratet mit Persons verheiratet mit Christian von Dänemark?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Christian,_Prince-Elect_of_Denmark> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Christine Boyer?", "Welche Person wurde verheiratet mit Persons verheiratet mit Christine Boyer?", "Welche Persons werden verheiratet mit Persons verheiratet mit Christine Boyer?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Christine Boyer?", "Wer wird verheiratet mit Persons verheiratet mit Christine Boyer?", "Wer wurde verheiratet mit Persons verheiratet mit Christine Boyer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Christine_Boyer> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Christopher George?", "Welche Person wurde verheiratet mit Persons verheiratet mit Christopher George?", "Welche Persons werden verheiratet mit Persons verheiratet mit Christopher George?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Christopher George?", "Wer wird verheiratet mit Persons verheiratet mit Christopher George?", "Wer wurde verheiratet mit Persons verheiratet mit Christopher George?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Christopher_George> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Chuck Robb?", "Welche Person wurde verheiratet mit Persons verheiratet mit Chuck Robb?", "Welche Persons werden verheiratet mit Persons verheiratet mit Chuck Robb?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Chuck Robb?", "Wer wird verheiratet mit Persons verheiratet mit Chuck Robb?", "Wer wurde verheiratet mit Persons verheiratet mit Chuck Robb?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chuck_Robb> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Cindy Pickett?", "Welche Person wurde verheiratet mit Persons verheiratet mit Cindy Pickett?", "Welche Persons werden verheiratet mit Persons verheiratet mit Cindy Pickett?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Cindy Pickett?", "Wer wird verheiratet mit Persons verheiratet mit Cindy Pickett?", "Wer wurde verheiratet mit Persons verheiratet mit Cindy Pickett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cindy_Pickett> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Clifford Odets?", "Welche Person wurde verheiratet mit Persons verheiratet mit Clifford Odets?", "Welche Persons werden verheiratet mit Persons verheiratet mit Clifford Odets?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Clifford Odets?", "Wer wird verheiratet mit Persons verheiratet mit Clifford Odets?", "Wer wurde verheiratet mit Persons verheiratet mit Clifford Odets?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Clifford_Odets> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Albia Domnica?", "Welche Person wurde verheiratet mit Persons verheiratet mit Albia Domnica?", "Welche Persons werden verheiratet mit Persons verheiratet mit Albia Domnica?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Albia Domnica?", "Wer wird verheiratet mit Persons verheiratet mit Albia Domnica?", "Wer wurde verheiratet mit Persons verheiratet mit Albia Domnica?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Albia_Dominica> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Gamze Özçelik?", "Welche Person wurde verheiratet mit Persons verheiratet mit Gamze Özçelik?", "Welche Persons werden verheiratet mit Persons verheiratet mit Gamze Özçelik?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Gamze Özçelik?", "Wer wird verheiratet mit Persons verheiratet mit Gamze Özçelik?", "Wer wurde verheiratet mit Persons verheiratet mit Gamze Özçelik?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gamze_Özçelik> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit García IV. (Navarra)?", "Welche Person wurde verheiratet mit Persons verheiratet mit García IV. (Navarra)?", "Welche Persons werden verheiratet mit Persons verheiratet mit García IV. (Navarra)?", "Welche Persons wurden verheiratet mit Persons verheiratet mit García IV. (Navarra)?", "Wer wird verheiratet mit Persons verheiratet mit García IV. (Navarra)?", "Wer wurde verheiratet mit Persons verheiratet mit García IV. (Navarra)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/García_Ramírez_of_Navarre> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Gary Oldman?", "Welche Person wurde verheiratet mit Persons verheiratet mit Gary Oldman?", "Welche Persons werden verheiratet mit Persons verheiratet mit Gary Oldman?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Gary Oldman?", "Wer wird verheiratet mit Persons verheiratet mit Gary Oldman?", "Wer wurde verheiratet mit Persons verheiratet mit Gary Oldman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gary_Oldman> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Gaspar Noé?", "Welche Person wurde verheiratet mit Persons verheiratet mit Gaspar Noé?", "Welche Persons werden verheiratet mit Persons verheiratet mit Gaspar Noé?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Gaspar Noé?", "Wer wird verheiratet mit Persons verheiratet mit Gaspar Noé?", "Wer wurde verheiratet mit Persons verheiratet mit Gaspar Noé?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gaspar_Noé> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Gaston de Foix (Viana)?", "Welche Person wurde verheiratet mit Persons verheiratet mit Gaston de Foix (Viana)?", "Welche Persons werden verheiratet mit Persons verheiratet mit Gaston de Foix (Viana)?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Gaston de Foix (Viana)?", "Wer wird verheiratet mit Persons verheiratet mit Gaston de Foix (Viana)?", "Wer wurde verheiratet mit Persons verheiratet mit Gaston de Foix (Viana)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gaston,_Prince_of_Viana> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit George Montagu, 8. Duke of Manchester?", "Welche Person wurde verheiratet mit Persons verheiratet mit George Montagu, 8. Duke of Manchester?", "Welche Persons werden verheiratet mit Persons verheiratet mit George Montagu, 8. Duke of Manchester?", "Welche Persons wurden verheiratet mit Persons verheiratet mit George Montagu, 8. Duke of Manchester?", "Wer wird verheiratet mit Persons verheiratet mit George Montagu, 8. Duke of Manchester?", "Wer wurde verheiratet mit Persons verheiratet mit George Montagu, 8. Duke of Manchester?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/George_Montagu,_8th_Duke_of_Manchester> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit George Sanders (Schauspieler)?", "Welche Person wurde verheiratet mit Persons verheiratet mit George Sanders (Schauspieler)?", "Welche Persons werden verheiratet mit Persons verheiratet mit George Sanders (Schauspieler)?", "Welche Persons wurden verheiratet mit Persons verheiratet mit George Sanders (Schauspieler)?", "Wer wird verheiratet mit Persons verheiratet mit George Sanders (Schauspieler)?", "Wer wurde verheiratet mit Persons verheiratet mit George Sanders (Schauspieler)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/George_Sanders> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit George Wallace?", "Welche Person wurde verheiratet mit Persons verheiratet mit George Wallace?", "Welche Persons werden verheiratet mit Persons verheiratet mit George Wallace?", "Welche Persons wurden verheiratet mit Persons verheiratet mit George Wallace?", "Wer wird verheiratet mit Persons verheiratet mit George Wallace?", "Wer wurde verheiratet mit Persons verheiratet mit George Wallace?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/George_Wallace> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Georges Rivière (Schauspieler)?", "Welche Person wurde verheiratet mit Persons verheiratet mit Georges Rivière (Schauspieler)?", "Welche Persons werden verheiratet mit Persons verheiratet mit Georges Rivière (Schauspieler)?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Georges Rivière (Schauspieler)?", "Wer wird verheiratet mit Persons verheiratet mit Georges Rivière (Schauspieler)?", "Wer wurde verheiratet mit Persons verheiratet mit Georges Rivière (Schauspieler)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Georges_Rivière> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Gia Long?", "Welche Person wurde verheiratet mit Persons verheiratet mit Gia Long?", "Welche Persons werden verheiratet mit Persons verheiratet mit Gia Long?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Gia Long?", "Wer wird verheiratet mit Persons verheiratet mit Gia Long?", "Wer wurde verheiratet mit Persons verheiratet mit Gia Long?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gia_Long> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Giorgi Margwelaschwili?", "Welche Person wurde verheiratet mit Persons verheiratet mit Giorgi Margwelaschwili?", "Welche Persons werden verheiratet mit Persons verheiratet mit Giorgi Margwelaschwili?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Giorgi Margwelaschwili?", "Wer wird verheiratet mit Persons verheiratet mit Giorgi Margwelaschwili?", "Wer wurde verheiratet mit Persons verheiratet mit Giorgi Margwelaschwili?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Giorgi_Margvelashvili> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Giovanni di Pierfrancesco de’ Medici?", "Welche Person wurde verheiratet mit Persons verheiratet mit Giovanni di Pierfrancesco de’ Medici?", "Welche Persons werden verheiratet mit Persons verheiratet mit Giovanni di Pierfrancesco de’ Medici?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Giovanni di Pierfrancesco de’ Medici?", "Wer wird verheiratet mit Persons verheiratet mit Giovanni di Pierfrancesco de’ Medici?", "Wer wurde verheiratet mit Persons verheiratet mit Giovanni di Pierfrancesco de’ Medici?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Giovanni_il_Popolano> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Girish Kasaravalli?", "Welche Person wurde verheiratet mit Persons verheiratet mit Girish Kasaravalli?", "Welche Persons werden verheiratet mit Persons verheiratet mit Girish Kasaravalli?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Girish Kasaravalli?", "Wer wird verheiratet mit Persons verheiratet mit Girish Kasaravalli?", "Wer wurde verheiratet mit Persons verheiratet mit Girish Kasaravalli?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Girish_Kasaravalli> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Girolamo Riario?", "Welche Person wurde verheiratet mit Persons verheiratet mit Girolamo Riario?", "Welche Persons werden verheiratet mit Persons verheiratet mit Girolamo Riario?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Girolamo Riario?", "Wer wird verheiratet mit Persons verheiratet mit Girolamo Riario?", "Wer wurde verheiratet mit Persons verheiratet mit Girolamo Riario?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Girolamo_Riario> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Jean-Louis Barrault?", "Welche Person wurde verheiratet mit Persons verheiratet mit Jean-Louis Barrault?", "Welche Persons werden verheiratet mit Persons verheiratet mit Jean-Louis Barrault?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Jean-Louis Barrault?", "Wer wird verheiratet mit Persons verheiratet mit Jean-Louis Barrault?", "Wer wurde verheiratet mit Persons verheiratet mit Jean-Louis Barrault?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jean-Louis_Barrault> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Jean-Marie Roland de La Platière?", "Welche Person wurde verheiratet mit Persons verheiratet mit Jean-Marie Roland de La Platière?", "Welche Persons werden verheiratet mit Persons verheiratet mit Jean-Marie Roland de La Platière?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Jean-Marie Roland de La Platière?", "Wer wird verheiratet mit Persons verheiratet mit Jean-Marie Roland de La Platière?", "Wer wurde verheiratet mit Persons verheiratet mit Jean-Marie Roland de La Platière?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jean-Marie_Roland_de_la_Platière> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Jeff Bezos?", "Welche Person wurde verheiratet mit Persons verheiratet mit Jeff Bezos?", "Welche Persons werden verheiratet mit Persons verheiratet mit Jeff Bezos?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Jeff Bezos?", "Wer wird verheiratet mit Persons verheiratet mit Jeff Bezos?", "Wer wurde verheiratet mit Persons verheiratet mit Jeff Bezos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jeff_Bezos> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Jefferson Davis?", "Welche Person wurde verheiratet mit Persons verheiratet mit Jefferson Davis?", "Welche Persons werden verheiratet mit Persons verheiratet mit Jefferson Davis?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Jefferson Davis?", "Wer wird verheiratet mit Persons verheiratet mit Jefferson Davis?", "Wer wurde verheiratet mit Persons verheiratet mit Jefferson Davis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jefferson_Davis> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Jenny Gröllmann?", "Welche Person wurde verheiratet mit Persons verheiratet mit Jenny Gröllmann?", "Welche Persons werden verheiratet mit Persons verheiratet mit Jenny Gröllmann?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Jenny Gröllmann?", "Wer wird verheiratet mit Persons verheiratet mit Jenny Gröllmann?", "Wer wurde verheiratet mit Persons verheiratet mit Jenny Gröllmann?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jenny_Gröllmann> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Joachim II. (Brandenburg)?", "Welche Person wurde verheiratet mit Persons verheiratet mit Joachim II. (Brandenburg)?", "Welche Persons werden verheiratet mit Persons verheiratet mit Joachim II. (Brandenburg)?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Joachim II. (Brandenburg)?", "Wer wird verheiratet mit Persons verheiratet mit Joachim II. (Brandenburg)?", "Wer wurde verheiratet mit Persons verheiratet mit Joachim II. (Brandenburg)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joachim_II_Hector,_Elector_of_Brandenburg> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Joanne Whalley?", "Welche Person wurde verheiratet mit Persons verheiratet mit Joanne Whalley?", "Welche Persons werden verheiratet mit Persons verheiratet mit Joanne Whalley?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Joanne Whalley?", "Wer wird verheiratet mit Persons verheiratet mit Joanne Whalley?", "Wer wurde verheiratet mit Persons verheiratet mit Joanne Whalley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joanne_Whalley> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Johann Georg I. (Sachsen)?", "Welche Person wurde verheiratet mit Persons verheiratet mit Johann Georg I. (Sachsen)?", "Welche Persons werden verheiratet mit Persons verheiratet mit Johann Georg I. (Sachsen)?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Johann Georg I. (Sachsen)?", "Wer wird verheiratet mit Persons verheiratet mit Johann Georg I. (Sachsen)?", "Wer wurde verheiratet mit Persons verheiratet mit Johann Georg I. (Sachsen)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_George_I,_Elector_of_Saxony> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Johann I. (Pfalz-Zweibrücken)?", "Welche Person wurde verheiratet mit Persons verheiratet mit Johann I. (Pfalz-Zweibrücken)?", "Welche Persons werden verheiratet mit Persons verheiratet mit Johann I. (Pfalz-Zweibrücken)?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Johann I. (Pfalz-Zweibrücken)?", "Wer wird verheiratet mit Persons verheiratet mit Johann I. (Pfalz-Zweibrücken)?", "Wer wurde verheiratet mit Persons verheiratet mit Johann I. (Pfalz-Zweibrücken)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_I,_Count_Palatine_of_Zweibrücken> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Johann IV. (Portugal)?", "Welche Person wurde verheiratet mit Persons verheiratet mit Johann IV. (Portugal)?", "Welche Persons werden verheiratet mit Persons verheiratet mit Johann IV. (Portugal)?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Johann IV. (Portugal)?", "Wer wird verheiratet mit Persons verheiratet mit Johann IV. (Portugal)?", "Wer wurde verheiratet mit Persons verheiratet mit Johann IV. (Portugal)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_IV_of_Portugal> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit John Jacob Astor IV?", "Welche Person wurde verheiratet mit Persons verheiratet mit John Jacob Astor IV?", "Welche Persons werden verheiratet mit Persons verheiratet mit John Jacob Astor IV?", "Welche Persons wurden verheiratet mit Persons verheiratet mit John Jacob Astor IV?", "Wer wird verheiratet mit Persons verheiratet mit John Jacob Astor IV?", "Wer wurde verheiratet mit Persons verheiratet mit John Jacob Astor IV?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_Jacob_Astor_IV> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit John James Audubon?", "Welche Person wurde verheiratet mit Persons verheiratet mit John James Audubon?", "Welche Persons werden verheiratet mit Persons verheiratet mit John James Audubon?", "Welche Persons wurden verheiratet mit Persons verheiratet mit John James Audubon?", "Wer wird verheiratet mit Persons verheiratet mit John James Audubon?", "Wer wurde verheiratet mit Persons verheiratet mit John James Audubon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_James_Audubon> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit John Katzenbach?", "Welche Person wurde verheiratet mit Persons verheiratet mit John Katzenbach?", "Welche Persons werden verheiratet mit Persons verheiratet mit John Katzenbach?", "Welche Persons wurden verheiratet mit Persons verheiratet mit John Katzenbach?", "Wer wird verheiratet mit Persons verheiratet mit John Katzenbach?", "Wer wurde verheiratet mit Persons verheiratet mit John Katzenbach?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_Katzenbach> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit John Maynard Keynes?", "Welche Person wurde verheiratet mit Persons verheiratet mit John Maynard Keynes?", "Welche Persons werden verheiratet mit Persons verheiratet mit John Maynard Keynes?", "Welche Persons wurden verheiratet mit Persons verheiratet mit John Maynard Keynes?", "Wer wird verheiratet mit Persons verheiratet mit John Maynard Keynes?", "Wer wurde verheiratet mit Persons verheiratet mit John Maynard Keynes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_Maynard_Keynes> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Beatrice d’Este (Sforza)?", "Welche Person wurde verheiratet mit Persons verheiratet mit Beatrice d’Este (Sforza)?", "Welche Persons werden verheiratet mit Persons verheiratet mit Beatrice d’Este (Sforza)?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Beatrice d’Este (Sforza)?", "Wer wird verheiratet mit Persons verheiratet mit Beatrice d’Este (Sforza)?", "Wer wurde verheiratet mit Persons verheiratet mit Beatrice d’Este (Sforza)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Beatrice_d'Este> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Bernard Herrmann?", "Welche Person wurde verheiratet mit Persons verheiratet mit Bernard Herrmann?", "Welche Persons werden verheiratet mit Persons verheiratet mit Bernard Herrmann?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Bernard Herrmann?", "Wer wird verheiratet mit Persons verheiratet mit Bernard Herrmann?", "Wer wurde verheiratet mit Persons verheiratet mit Bernard Herrmann?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bernard_Herrmann> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Betty Shabazz?", "Welche Person wurde verheiratet mit Persons verheiratet mit Betty Shabazz?", "Welche Persons werden verheiratet mit Persons verheiratet mit Betty Shabazz?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Betty Shabazz?", "Wer wird verheiratet mit Persons verheiratet mit Betty Shabazz?", "Wer wurde verheiratet mit Persons verheiratet mit Betty Shabazz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Betty_Shabazz> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Bidhya Devi Bhandari?", "Welche Person wurde verheiratet mit Persons verheiratet mit Bidhya Devi Bhandari?", "Welche Persons werden verheiratet mit Persons verheiratet mit Bidhya Devi Bhandari?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Bidhya Devi Bhandari?", "Wer wird verheiratet mit Persons verheiratet mit Bidhya Devi Bhandari?", "Wer wurde verheiratet mit Persons verheiratet mit Bidhya Devi Bhandari?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bidhya_Devi_Bhandari> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "49",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit Persons verheiratet mit Bill Baxley?", "Welche Person wurde verheiratet mit Persons verheiratet mit Bill Baxley?", "Welche Persons werden verheiratet mit Persons verheiratet mit Bill Baxley?", "Welche Persons wurden verheiratet mit Persons verheiratet mit Bill Baxley?", "Wer wird verheiratet mit Persons verheiratet mit Bill Baxley?", "Wer wurde verheiratet mit Persons verheiratet mit Bill Baxley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bill_Baxley> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Luke Macfarlane?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Luke Macfarlane?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Luke Macfarlane?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Luke Macfarlane?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Luke Macfarlane?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Luke Macfarlane?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Luke_Macfarlane>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Lysette Anthony?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Lysette Anthony?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Lysette Anthony?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Lysette Anthony?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Lysette Anthony?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Lysette Anthony?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lysette_Anthony>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Maleficent – Die dunkle Fee?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Maleficent – Die dunkle Fee?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Maleficent – Die dunkle Fee?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Maleficent – Die dunkle Fee?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Maleficent – Die dunkle Fee?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Maleficent – Die dunkle Fee?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Maleficent_(film)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Lana Hutton Bowen-Judd?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Lana Hutton Bowen-Judd?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Lana Hutton Bowen-Judd?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Lana Hutton Bowen-Judd?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Lana Hutton Bowen-Judd?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Lana Hutton Bowen-Judd?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sara_Woods>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Billie Lourd?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Billie Lourd?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Billie Lourd?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Billie Lourd?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Billie Lourd?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Billie Lourd?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Billie_Lourd>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Dennis Franz?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Dennis Franz?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Dennis Franz?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Dennis Franz?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Dennis Franz?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Dennis Franz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Dennis_Franz>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Descendants – Die Nachkommen?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Descendants – Die Nachkommen?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Descendants – Die Nachkommen?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Descendants – Die Nachkommen?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Descendants – Die Nachkommen?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Descendants – Die Nachkommen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Descendants_(2015_film)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Diahann Carroll?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Diahann Carroll?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Diahann Carroll?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Diahann Carroll?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Diahann Carroll?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Diahann Carroll?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Diahann_Carroll>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Goran Višnjić?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Goran Višnjić?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Goran Višnjić?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Goran Višnjić?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Goran Višnjić?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Goran Višnjić?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Goran_Višnjić>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Grant Show?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Grant Show?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Grant Show?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Grant Show?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Grant Show?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Grant Show?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Grant_Show>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Greg Vaughan?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Greg Vaughan?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Greg Vaughan?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Greg Vaughan?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Greg Vaughan?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Greg Vaughan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Greg_Vaughan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Khary Payton?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Khary Payton?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Khary Payton?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Khary Payton?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Khary Payton?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Khary Payton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Khary_Payton>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Krista Allen?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Krista Allen?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Krista Allen?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Krista Allen?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Krista Allen?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Krista Allen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Krista_Allen>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Krista Tesreau?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Krista Tesreau?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Krista Tesreau?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Krista Tesreau?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Krista Tesreau?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Krista Tesreau?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Krista_Tesreau>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Kristin Chenoweth?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Kristin Chenoweth?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Kristin Chenoweth?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Kristin Chenoweth?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Kristin Chenoweth?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Kristin Chenoweth?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kristin_Chenoweth>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Prunella Scales?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Prunella Scales?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Prunella Scales?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Prunella Scales?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Prunella Scales?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Prunella Scales?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Prunella_Scales>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Alexander Beyer?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Alexander Beyer?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Alexander Beyer?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Alexander Beyer?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Alexander Beyer?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Alexander Beyer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Alexander_Beyer>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Catherine O’Hara?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Catherine O’Hara?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Catherine O’Hara?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Catherine O’Hara?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Catherine O’Hara?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Catherine O’Hara?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Catherine_O'Hara>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Catherine Zeta-Jones?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Catherine Zeta-Jones?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Catherine Zeta-Jones?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Catherine Zeta-Jones?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Catherine Zeta-Jones?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Catherine Zeta-Jones?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Catherine_Zeta-Jones>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Chad Michael Murray?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Chad Michael Murray?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Chad Michael Murray?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Chad Michael Murray?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Chad Michael Murray?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Chad Michael Murray?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Chad_Michael_Murray>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Charlton Heston?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Charlton Heston?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Charlton Heston?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Charlton Heston?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Charlton Heston?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Charlton Heston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Charlton_Heston>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Noah Ringer?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Noah Ringer?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Noah Ringer?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Noah Ringer?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Noah Ringer?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Noah Ringer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Noah_Ringer>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Mitch Pileggi?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Mitch Pileggi?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Mitch Pileggi?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Mitch Pileggi?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Mitch Pileggi?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Mitch Pileggi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mitch_Pileggi>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Nathalie Kelley?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Nathalie Kelley?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Nathalie Kelley?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Nathalie Kelley?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Nathalie Kelley?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Nathalie Kelley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Nathalie_Kelley>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Barbara Crampton?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Barbara Crampton?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Barbara Crampton?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Barbara Crampton?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Barbara Crampton?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Barbara Crampton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Barbara_Crampton>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Barbara Hershey?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Barbara Hershey?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Barbara Hershey?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Barbara Hershey?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Barbara Hershey?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Barbara Hershey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Barbara_Hershey>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Carrie Fisher?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Carrie Fisher?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Carrie Fisher?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Carrie Fisher?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Carrie Fisher?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Carrie Fisher?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Carrie_Fisher>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Chris Pratt?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Chris Pratt?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Chris Pratt?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Chris Pratt?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Chris Pratt?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Chris Pratt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Chris_Pratt>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Christian Serratos?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Christian Serratos?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Christian Serratos?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Christian Serratos?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Christian Serratos?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Christian Serratos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Christian_Serratos>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Claude Jade?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Claude Jade?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Claude Jade?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Claude Jade?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Claude Jade?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Claude Jade?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Claude_Jade>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Giancarlo Giannini?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Giancarlo Giannini?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Giancarlo Giannini?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Giancarlo Giannini?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Giancarlo Giannini?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Giancarlo Giannini?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Giancarlo_Giannini>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Jeanine Mason?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Jeanine Mason?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Jeanine Mason?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Jeanine Mason?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Jeanine Mason?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Jeanine Mason?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jeanine_Mason>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Jennifer Garner?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Jennifer Garner?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Jennifer Garner?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Jennifer Garner?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Jennifer Garner?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Jennifer Garner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jennifer_Garner>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Jimmy Smits?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Jimmy Smits?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Jimmy Smits?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Jimmy Smits?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Jimmy Smits?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Jimmy Smits?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jimmy_Smits>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Joey Luthman?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Joey Luthman?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Joey Luthman?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Joey Luthman?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Joey Luthman?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Joey Luthman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Joey_Luthman>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von John Goodman?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von John Goodman?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von John Goodman?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von John Goodman?", "Wer wird verheiratet mit fiktiver Charakters gespielt von John Goodman?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von John Goodman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/John_Goodman>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Bebe Neuwirth?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Bebe Neuwirth?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Bebe Neuwirth?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Bebe Neuwirth?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Bebe Neuwirth?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Bebe Neuwirth?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Bebe_Neuwirth>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Betty White?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Betty White?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Betty White?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Betty White?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Betty White?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Betty White?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Betty_White>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Beverly Archer?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Beverly Archer?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Beverly Archer?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Beverly Archer?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Beverly Archer?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Beverly Archer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Beverly_Archer>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Kassie DePaiva?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Kassie DePaiva?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Kassie DePaiva?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Kassie DePaiva?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Kassie DePaiva?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Kassie DePaiva?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kassie_DePaiva>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Kathy Bates?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Kathy Bates?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Kathy Bates?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Kathy Bates?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Kathy Bates?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Kathy Bates?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kathy_Bates>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Ken Berry (Schauspieler)?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Ken Berry (Schauspieler)?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Ken Berry (Schauspieler)?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Ken Berry (Schauspieler)?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Ken Berry (Schauspieler)?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Ken Berry (Schauspieler)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ken_Berry>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Lexi Ainsworth?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Lexi Ainsworth?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Lexi Ainsworth?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Lexi Ainsworth?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Lexi Ainsworth?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Lexi Ainsworth?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lexi_Ainsworth>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Linda Evans?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Linda Evans?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Linda Evans?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Linda Evans?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Linda Evans?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Linda Evans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Linda_Evans>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Lindsay Wagner?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Lindsay Wagner?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Lindsay Wagner?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Lindsay Wagner?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Lindsay Wagner?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Lindsay Wagner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lindsay_Wagner>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Lindsey Morgan?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Lindsey Morgan?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Lindsey Morgan?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Lindsey Morgan?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Lindsey Morgan?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Lindsey Morgan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lindsey_Morgan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Lisa Rinna?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Lisa Rinna?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Lisa Rinna?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Lisa Rinna?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Lisa Rinna?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Lisa Rinna?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Lisa_Rinna>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Teri Hatcher?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Teri Hatcher?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Teri Hatcher?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Teri Hatcher?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Teri Hatcher?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Teri Hatcher?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Teri_Hatcher>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Yvonne Strahovski?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Yvonne Strahovski?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Yvonne Strahovski?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Yvonne Strahovski?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Yvonne Strahovski?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Yvonne Strahovski?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Yvonne_Strahovski>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Kimberley Simms?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Kimberley Simms?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Kimberley Simms?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Kimberley Simms?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Kimberley Simms?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Kimberley Simms?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kimberley_Simms>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Michael Jackson?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Michael Jackson?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Michael Jackson?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Michael Jackson?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Michael Jackson?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Michael Jackson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Michael_Jackson>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Michael Michele?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Michael Michele?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Michael Michele?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Michael Michele?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Michael Michele?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Michael Michele?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Michael_Michele>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Michael Nader?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Michael Nader?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Michael Nader?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Michael Nader?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Michael Nader?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Michael Nader?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Michael_Nader>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Michaela Conlin?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Michaela Conlin?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Michaela Conlin?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Michaela Conlin?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Michaela Conlin?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Michaela Conlin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Michaela_Conlin>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Michelle Clunie?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Michelle Clunie?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Michelle Clunie?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Michelle Clunie?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Michelle Clunie?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Michelle Clunie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Michelle_Clunie>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Mili Avital?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Mili Avital?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Mili Avital?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Mili Avital?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Mili Avital?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Mili Avital?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mili_Avital>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Rue McClanahan?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Rue McClanahan?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Rue McClanahan?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Rue McClanahan?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Rue McClanahan?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Rue McClanahan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Rue_McClanahan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Makyla Smith?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Makyla Smith?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Makyla Smith?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Makyla Smith?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Makyla Smith?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Makyla Smith?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Makyla_Smith>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Die Hexen von Oz?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Die Hexen von Oz?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Die Hexen von Oz?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Die Hexen von Oz?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Die Hexen von Oz?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Die Hexen von Oz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Dorothy_and_the_Witches_of_Oz>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Dragonball Evolution?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Dragonball Evolution?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Dragonball Evolution?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Dragonball Evolution?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Dragonball Evolution?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Dragonball Evolution?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Dragonball_Evolution>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Drea de Matteo?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Drea de Matteo?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Drea de Matteo?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Drea de Matteo?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Drea de Matteo?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Drea de Matteo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Drea_de_Matteo>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Children of Dune?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Children of Dune?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Children of Dune?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Children of Dune?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Children of Dune?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Children of Dune?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Frank_Herbert's_Children_of_Dune>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Hal Sparks?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Hal Sparks?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Hal Sparks?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Hal Sparks?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Hal Sparks?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Hal Sparks?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Hal_Sparks>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Ian Carmichael (Schauspieler)?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Ian Carmichael (Schauspieler)?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Ian Carmichael (Schauspieler)?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Ian Carmichael (Schauspieler)?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Ian Carmichael (Schauspieler)?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Ian Carmichael (Schauspieler)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ian_Carmichael>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Ian Somerhalder?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Ian Somerhalder?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Ian Somerhalder?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Ian Somerhalder?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Ian Somerhalder?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Ian Somerhalder?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ian_Somerhalder>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Ingvild Deila?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Ingvild Deila?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Ingvild Deila?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Ingvild Deila?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Ingvild Deila?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Ingvild Deila?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ingvild_Deila>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Jack Huston?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Jack Huston?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Jack Huston?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Jack Huston?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Jack Huston?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Jack Huston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jack_Huston>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Jack Wetherall?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Jack Wetherall?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Jack Wetherall?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Jack Wetherall?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Jack Wetherall?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Jack Wetherall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jack_Wetherall>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Jackson Browne?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Jackson Browne?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Jackson Browne?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Jackson Browne?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Jackson Browne?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Jackson Browne?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jackson_Browne>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von James Patrick Stuart?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von James Patrick Stuart?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von James Patrick Stuart?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von James Patrick Stuart?", "Wer wird verheiratet mit fiktiver Charakters gespielt von James Patrick Stuart?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von James Patrick Stuart?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/James_Patrick_Stuart>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Jason Behr?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Jason Behr?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Jason Behr?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Jason Behr?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Jason Behr?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Jason Behr?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jason_Behr>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Jayne Atkinson?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Jayne Atkinson?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Jayne Atkinson?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Jayne Atkinson?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Jayne Atkinson?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Jayne Atkinson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jayne_Atkinson>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Sarah Jessica Parker?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Sarah Jessica Parker?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Sarah Jessica Parker?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Sarah Jessica Parker?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Sarah Jessica Parker?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Sarah Jessica Parker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sarah_Jessica_Parker>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Sergei Fjodorowitsch Bondartschuk?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Sergei Fjodorowitsch Bondartschuk?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Sergei Fjodorowitsch Bondartschuk?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Sergei Fjodorowitsch Bondartschuk?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Sergei Fjodorowitsch Bondartschuk?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Sergei Fjodorowitsch Bondartschuk?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sergei_Bondarchuk>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Amy Brenneman?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Amy Brenneman?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Amy Brenneman?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Amy Brenneman?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Amy Brenneman?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Amy Brenneman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Amy_Brenneman>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Andy Griffith?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Andy Griffith?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Andy Griffith?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Andy Griffith?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Andy Griffith?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Andy Griffith?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Andy_Griffith>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Angela Kinsey?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Angela Kinsey?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Angela Kinsey?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Angela Kinsey?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Angela Kinsey?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Angela Kinsey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Angela_Kinsey>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Angelina Jolie?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Angelina Jolie?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Angelina Jolie?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Angelina Jolie?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Angelina Jolie?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Angelina Jolie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Angelina_Jolie>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Anjelica Huston?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Anjelica Huston?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Anjelica Huston?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Anjelica Huston?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Anjelica Huston?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Anjelica Huston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Anjelica_Huston>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von AnnaSophia Robb?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von AnnaSophia Robb?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von AnnaSophia Robb?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von AnnaSophia Robb?", "Wer wird verheiratet mit fiktiver Charakters gespielt von AnnaSophia Robb?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von AnnaSophia Robb?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/AnnaSophia_Robb>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Anna Karina?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Anna Karina?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Anna Karina?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Anna Karina?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Anna Karina?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Anna Karina?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Anna_Karina>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Annette Haven?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Annette Haven?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Annette Haven?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Annette Haven?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Annette Haven?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Annette Haven?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Annette_Haven>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Anthony Geary?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Anthony Geary?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Anthony Geary?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Anthony Geary?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Anthony Geary?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Anthony Geary?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Anthony_Geary>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Anthony Hopkins?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Anthony Hopkins?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Anthony Hopkins?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Anthony Hopkins?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Anthony Hopkins?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Anthony Hopkins?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Anthony_Hopkins>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Arthur Darvill?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Arthur Darvill?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Arthur Darvill?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Arthur Darvill?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Arthur Darvill?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Arthur Darvill?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Arthur_Darvill>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Ashley Benson?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Ashley Benson?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Ashley Benson?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Ashley Benson?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Ashley Benson?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Ashley Benson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ashley_Benson>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Ashley Peldon?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Ashley Peldon?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Ashley Peldon?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Ashley Peldon?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Ashley Peldon?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Ashley Peldon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ashley_Peldon>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Oliver Jackson-Cohen?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Oliver Jackson-Cohen?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Oliver Jackson-Cohen?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Oliver Jackson-Cohen?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Oliver Jackson-Cohen?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Oliver Jackson-Cohen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Oliver_Jackson-Cohen>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Ramón Novarro?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Ramón Novarro?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Ramón Novarro?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Ramón Novarro?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Ramón Novarro?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Ramón Novarro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ramon_Novarro>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Ray Bolger?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Ray Bolger?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Ray Bolger?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Ray Bolger?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Ray Bolger?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Ray Bolger?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ray_Bolger>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Oz – Eine fantastische Welt?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Oz – Eine fantastische Welt?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Oz – Eine fantastische Welt?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Oz – Eine fantastische Welt?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Oz – Eine fantastische Welt?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Oz – Eine fantastische Welt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Return_to_Oz>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Rhea Seehorn?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Rhea Seehorn?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Rhea Seehorn?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Rhea Seehorn?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Rhea Seehorn?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Rhea Seehorn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Rhea_Seehorn>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Richard Burgi?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Richard Burgi?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Richard Burgi?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Richard Burgi?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Richard Burgi?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Richard Burgi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Richard_Burgi>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Tessa Allen?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Tessa Allen?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Tessa Allen?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Tessa Allen?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Tessa Allen?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Tessa Allen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Tessa_Allen>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von The Carrie Diaries (Fernsehserie)?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von The Carrie Diaries (Fernsehserie)?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von The Carrie Diaries (Fernsehserie)?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von The Carrie Diaries (Fernsehserie)?", "Wer wird verheiratet mit fiktiver Charakters gespielt von The Carrie Diaries (Fernsehserie)?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von The Carrie Diaries (Fernsehserie)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/The_Carrie_Diaries_(TV_series)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Theresa Underberg?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Theresa Underberg?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Theresa Underberg?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Theresa Underberg?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Theresa Underberg?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Theresa Underberg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Theresa_Underberg>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Simon Woods?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Simon Woods?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Simon Woods?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Simon Woods?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Simon Woods?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Simon Woods?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Simon_Woods>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Brooke Shields?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Brooke Shields?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Brooke Shields?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Brooke Shields?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Brooke Shields?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Brooke Shields?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Brooke_Shields>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Larry Semon?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Larry Semon?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Larry Semon?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Larry Semon?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Larry Semon?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Larry Semon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Larry_Semon>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "50",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche Person wird verheiratet mit fiktiver Charakters gespielt von Laura Allen?", "Welche Person wurde verheiratet mit fiktiver Charakters gespielt von Laura Allen?", "Welche Persons werden verheiratet mit fiktiver Charakters gespielt von Laura Allen?", "Welche Persons wurden verheiratet mit fiktiver Charakters gespielt von Laura Allen?", "Wer wird verheiratet mit fiktiver Charakters gespielt von Laura Allen?", "Wer wurde verheiratet mit fiktiver Charakters gespielt von Laura Allen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Laura_Allen>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Come_Back,_Africa?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Come_Back,_Africa?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Come_Back,_Africa?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Come_Back,_Africa?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Come_Back,_Africa?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Come_Back,_Africa?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Come_Back,_Africa?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Come_Back,_Africa?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Come_Back,_Africa?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Come_Back,_Africa?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Come_Back,_Africa?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Come_Back,_Africa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Come_Back,_Africa> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/The_Fourth_Dimension_(film)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/The_Fourth_Dimension_(film)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/The_Fourth_Dimension_(film)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/The_Fourth_Dimension_(film)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/The_Fourth_Dimension_(film)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/The_Fourth_Dimension_(film)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/The_Fourth_Dimension_(film)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/The_Fourth_Dimension_(film)?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/The_Fourth_Dimension_(film)?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/The_Fourth_Dimension_(film)?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/The_Fourth_Dimension_(film)?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/The_Fourth_Dimension_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Fourth_Dimension_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Clapping_for_the_Wrong_Reasons?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Clapping_for_the_Wrong_Reasons?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Clapping_for_the_Wrong_Reasons?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Clapping_for_the_Wrong_Reasons?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Clapping_for_the_Wrong_Reasons?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Clapping_for_the_Wrong_Reasons?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Clapping_for_the_Wrong_Reasons?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Clapping_for_the_Wrong_Reasons?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Clapping_for_the_Wrong_Reasons?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Clapping_for_the_Wrong_Reasons?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Clapping_for_the_Wrong_Reasons?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Clapping_for_the_Wrong_Reasons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Clapping_for_the_Wrong_Reasons> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Mystery_Team?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Mystery_Team?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Mystery_Team?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Mystery_Team?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Mystery_Team?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Mystery_Team?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Mystery_Team?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Mystery_Team?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Mystery_Team?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Mystery_Team?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Mystery_Team?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Mystery_Team?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mystery_Team> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Sons_of_Provo?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Sons_of_Provo?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Sons_of_Provo?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Sons_of_Provo?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Sons_of_Provo?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Sons_of_Provo?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Sons_of_Provo?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Sons_of_Provo?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Sons_of_Provo?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Sons_of_Provo?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Sons_of_Provo?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Sons_of_Provo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sons_of_Provo> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/The_Magic_7?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/The_Magic_7?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/The_Magic_7?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/The_Magic_7?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/The_Magic_7?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/The_Magic_7?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/The_Magic_7?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/The_Magic_7?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/The_Magic_7?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/The_Magic_7?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/The_Magic_7?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/The_Magic_7?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Magic_7> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Moderne Zeiten?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Moderne Zeiten?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Moderne Zeiten?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Moderne Zeiten?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Moderne Zeiten?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Moderne Zeiten?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Moderne Zeiten?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Moderne Zeiten?", "Wer wird gespielt von der Komponist für Moderne Zeiten?", "Wer wird gespielt von die Komponisten für Moderne Zeiten?", "Wer wurde gespielt von der Komponist für Moderne Zeiten?", "Wer wurde gespielt von die Komponisten für Moderne Zeiten?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Modern_Times_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Lichter der Großstadt?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Lichter der Großstadt?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Lichter der Großstadt?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Lichter der Großstadt?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Lichter der Großstadt?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Lichter der Großstadt?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Lichter der Großstadt?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Lichter der Großstadt?", "Wer wird gespielt von der Komponist für Lichter der Großstadt?", "Wer wird gespielt von die Komponisten für Lichter der Großstadt?", "Wer wurde gespielt von der Komponist für Lichter der Großstadt?", "Wer wurde gespielt von die Komponisten für Lichter der Großstadt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/City_Lights> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Rampenlicht (Film)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Rampenlicht (Film)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Rampenlicht (Film)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Rampenlicht (Film)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Rampenlicht (Film)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Rampenlicht (Film)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Rampenlicht (Film)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Rampenlicht (Film)?", "Wer wird gespielt von der Komponist für Rampenlicht (Film)?", "Wer wird gespielt von die Komponisten für Rampenlicht (Film)?", "Wer wurde gespielt von der Komponist für Rampenlicht (Film)?", "Wer wurde gespielt von die Komponisten für Rampenlicht (Film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Limelight_(1952_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Goldrausch (Chaplin)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Goldrausch (Chaplin)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Goldrausch (Chaplin)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Goldrausch (Chaplin)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Goldrausch (Chaplin)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Goldrausch (Chaplin)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Goldrausch (Chaplin)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Goldrausch (Chaplin)?", "Wer wird gespielt von der Komponist für Goldrausch (Chaplin)?", "Wer wird gespielt von die Komponisten für Goldrausch (Chaplin)?", "Wer wurde gespielt von der Komponist für Goldrausch (Chaplin)?", "Wer wurde gespielt von die Komponisten für Goldrausch (Chaplin)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Gold_Rush> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Der große Diktator?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Der große Diktator?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Der große Diktator?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Der große Diktator?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Der große Diktator?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Der große Diktator?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Der große Diktator?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Der große Diktator?", "Wer wird gespielt von der Komponist für Der große Diktator?", "Wer wird gespielt von die Komponisten für Der große Diktator?", "Wer wurde gespielt von der Komponist für Der große Diktator?", "Wer wurde gespielt von die Komponisten für Der große Diktator?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Great_Dictator> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Die Gräfin von Hongkong?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Die Gräfin von Hongkong?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Die Gräfin von Hongkong?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Die Gräfin von Hongkong?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Die Gräfin von Hongkong?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Die Gräfin von Hongkong?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Die Gräfin von Hongkong?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Die Gräfin von Hongkong?", "Wer wird gespielt von der Komponist für Die Gräfin von Hongkong?", "Wer wird gespielt von die Komponisten für Die Gräfin von Hongkong?", "Wer wurde gespielt von der Komponist für Die Gräfin von Hongkong?", "Wer wurde gespielt von die Komponisten für Die Gräfin von Hongkong?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A_Countess_from_Hong_Kong> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Ein König in New York?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Ein König in New York?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Ein König in New York?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Ein König in New York?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Ein König in New York?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Ein König in New York?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Ein König in New York?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Ein König in New York?", "Wer wird gespielt von der Komponist für Ein König in New York?", "Wer wird gespielt von die Komponisten für Ein König in New York?", "Wer wurde gespielt von der Komponist für Ein König in New York?", "Wer wurde gespielt von die Komponisten für Ein König in New York?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A_King_in_New_York> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Monsieur Verdoux – Der Frauenmörder von Paris?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Monsieur Verdoux – Der Frauenmörder von Paris?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Monsieur Verdoux – Der Frauenmörder von Paris?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Monsieur Verdoux – Der Frauenmörder von Paris?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Monsieur Verdoux – Der Frauenmörder von Paris?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Monsieur Verdoux – Der Frauenmörder von Paris?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Monsieur Verdoux – Der Frauenmörder von Paris?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Monsieur Verdoux – Der Frauenmörder von Paris?", "Wer wird gespielt von der Komponist für Monsieur Verdoux – Der Frauenmörder von Paris?", "Wer wird gespielt von die Komponisten für Monsieur Verdoux – Der Frauenmörder von Paris?", "Wer wurde gespielt von der Komponist für Monsieur Verdoux – Der Frauenmörder von Paris?", "Wer wurde gespielt von die Komponisten für Monsieur Verdoux – Der Frauenmörder von Paris?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Monsieur_Verdoux> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/The_Circus_(1928_film)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/The_Circus_(1928_film)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/The_Circus_(1928_film)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/The_Circus_(1928_film)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/The_Circus_(1928_film)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/The_Circus_(1928_film)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/The_Circus_(1928_film)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/The_Circus_(1928_film)?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/The_Circus_(1928_film)?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/The_Circus_(1928_film)?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/The_Circus_(1928_film)?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/The_Circus_(1928_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Circus_(1928_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Stalin's_Funeral?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Stalin's_Funeral?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Stalin's_Funeral?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Stalin's_Funeral?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Stalin's_Funeral?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Stalin's_Funeral?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Stalin's_Funeral?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Stalin's_Funeral?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Stalin's_Funeral?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Stalin's_Funeral?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Stalin's_Funeral?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Stalin's_Funeral?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Stalin's_Funeral> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Paper_Heart_(film)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Paper_Heart_(film)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Paper_Heart_(film)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Paper_Heart_(film)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Paper_Heart_(film)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Paper_Heart_(film)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Paper_Heart_(film)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Paper_Heart_(film)?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Paper_Heart_(film)?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Paper_Heart_(film)?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Paper_Heart_(film)?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Paper_Heart_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Paper_Heart_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Die Zeit ohne Grace?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Die Zeit ohne Grace?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Die Zeit ohne Grace?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Die Zeit ohne Grace?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Die Zeit ohne Grace?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Die Zeit ohne Grace?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Die Zeit ohne Grace?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Die Zeit ohne Grace?", "Wer wird gespielt von der Komponist für Die Zeit ohne Grace?", "Wer wird gespielt von die Komponisten für Die Zeit ohne Grace?", "Wer wurde gespielt von der Komponist für Die Zeit ohne Grace?", "Wer wurde gespielt von die Komponisten für Die Zeit ohne Grace?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Grace_Is_Gone> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Der fremde Sohn?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Der fremde Sohn?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Der fremde Sohn?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Der fremde Sohn?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Der fremde Sohn?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Der fremde Sohn?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Der fremde Sohn?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Der fremde Sohn?", "Wer wird gespielt von der Komponist für Der fremde Sohn?", "Wer wird gespielt von die Komponisten für Der fremde Sohn?", "Wer wurde gespielt von der Komponist für Der fremde Sohn?", "Wer wurde gespielt von die Komponisten für Der fremde Sohn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Changeling_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Flags of Our Fathers?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Flags of Our Fathers?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Flags of Our Fathers?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Flags of Our Fathers?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Flags of Our Fathers?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Flags of Our Fathers?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Flags of Our Fathers?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Flags of Our Fathers?", "Wer wird gespielt von der Komponist für Flags of Our Fathers?", "Wer wird gespielt von die Komponisten für Flags of Our Fathers?", "Wer wurde gespielt von der Komponist für Flags of Our Fathers?", "Wer wurde gespielt von die Komponisten für Flags of Our Fathers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Flags_of_Our_Fathers_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Million Dollar Baby?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Million Dollar Baby?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Million Dollar Baby?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Million Dollar Baby?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Million Dollar Baby?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Million Dollar Baby?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Million Dollar Baby?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Million Dollar Baby?", "Wer wird gespielt von der Komponist für Million Dollar Baby?", "Wer wird gespielt von die Komponisten für Million Dollar Baby?", "Wer wurde gespielt von der Komponist für Million Dollar Baby?", "Wer wurde gespielt von die Komponisten für Million Dollar Baby?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Million_Dollar_Baby> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für J. Edgar?", "Welche fiktiver Charakters werden gespielt von die Komponisten für J. Edgar?", "Welche fiktiver Charakters wurden gespielt von der Komponist für J. Edgar?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für J. Edgar?", "Welcher fiktiver Charakter wird gespielt von der Komponist für J. Edgar?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für J. Edgar?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für J. Edgar?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für J. Edgar?", "Wer wird gespielt von der Komponist für J. Edgar?", "Wer wird gespielt von die Komponisten für J. Edgar?", "Wer wurde gespielt von der Komponist für J. Edgar?", "Wer wurde gespielt von die Komponisten für J. Edgar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/J._Edgar> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Swan Song?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Swan Song?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Swan Song?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Swan Song?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Swan Song?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Swan Song?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Swan Song?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Swan Song?", "Wer wird gespielt von der Komponist für Swan Song?", "Wer wird gespielt von die Komponisten für Swan Song?", "Wer wurde gespielt von der Komponist für Swan Song?", "Wer wurde gespielt von die Komponisten für Swan Song?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Swan_Song_(1992_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Hereafter – Das Leben danach?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Hereafter – Das Leben danach?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Hereafter – Das Leben danach?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Hereafter – Das Leben danach?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Hereafter – Das Leben danach?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Hereafter – Das Leben danach?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Hereafter – Das Leben danach?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Hereafter – Das Leben danach?", "Wer wird gespielt von der Komponist für Hereafter – Das Leben danach?", "Wer wird gespielt von die Komponisten für Hereafter – Das Leben danach?", "Wer wurde gespielt von der Komponist für Hereafter – Das Leben danach?", "Wer wurde gespielt von die Komponisten für Hereafter – Das Leben danach?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hereafter_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Mystic River (Film)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Mystic River (Film)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Mystic River (Film)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Mystic River (Film)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Mystic River (Film)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Mystic River (Film)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Mystic River (Film)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Mystic River (Film)?", "Wer wird gespielt von der Komponist für Mystic River (Film)?", "Wer wird gespielt von die Komponisten für Mystic River (Film)?", "Wer wurde gespielt von der Komponist für Mystic River (Film)?", "Wer wurde gespielt von die Komponisten für Mystic River (Film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mystic_River_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Second_Time_Lucky?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Second_Time_Lucky?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Second_Time_Lucky?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Second_Time_Lucky?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Second_Time_Lucky?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Second_Time_Lucky?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Second_Time_Lucky?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Second_Time_Lucky?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Second_Time_Lucky?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Second_Time_Lucky?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Second_Time_Lucky?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Second_Time_Lucky?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Second_Time_Lucky> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Scene_of_the_Crime_(1996_film)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Scene_of_the_Crime_(1996_film)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Scene_of_the_Crime_(1996_film)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Scene_of_the_Crime_(1996_film)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Scene_of_the_Crime_(1996_film)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Scene_of_the_Crime_(1996_film)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Scene_of_the_Crime_(1996_film)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Scene_of_the_Crime_(1996_film)?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Scene_of_the_Crime_(1996_film)?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Scene_of_the_Crime_(1996_film)?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Scene_of_the_Crime_(1996_film)?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Scene_of_the_Crime_(1996_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Scene_of_the_Crime_(1996_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/In_the_Bleak_Midwinter_(film)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/In_the_Bleak_Midwinter_(film)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/In_the_Bleak_Midwinter_(film)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/In_the_Bleak_Midwinter_(film)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/In_the_Bleak_Midwinter_(film)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/In_the_Bleak_Midwinter_(film)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/In_the_Bleak_Midwinter_(film)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/In_the_Bleak_Midwinter_(film)?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/In_the_Bleak_Midwinter_(film)?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/In_the_Bleak_Midwinter_(film)?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/In_the_Bleak_Midwinter_(film)?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/In_the_Bleak_Midwinter_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/In_the_Bleak_Midwinter_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für All Over Me?", "Welche fiktiver Charakters werden gespielt von die Komponisten für All Over Me?", "Welche fiktiver Charakters wurden gespielt von der Komponist für All Over Me?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für All Over Me?", "Welcher fiktiver Charakter wird gespielt von der Komponist für All Over Me?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für All Over Me?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für All Over Me?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für All Over Me?", "Wer wird gespielt von der Komponist für All Over Me?", "Wer wird gespielt von die Komponisten für All Over Me?", "Wer wurde gespielt von der Komponist für All Over Me?", "Wer wurde gespielt von die Komponisten für All Over Me?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/All_Over_Me_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Monty Pythons wunderbare Welt der Schwerkraft?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Monty Pythons wunderbare Welt der Schwerkraft?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Monty Pythons wunderbare Welt der Schwerkraft?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Monty Pythons wunderbare Welt der Schwerkraft?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Monty Pythons wunderbare Welt der Schwerkraft?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Monty Pythons wunderbare Welt der Schwerkraft?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Monty Pythons wunderbare Welt der Schwerkraft?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Monty Pythons wunderbare Welt der Schwerkraft?", "Wer wird gespielt von der Komponist für Monty Pythons wunderbare Welt der Schwerkraft?", "Wer wird gespielt von die Komponisten für Monty Pythons wunderbare Welt der Schwerkraft?", "Wer wurde gespielt von der Komponist für Monty Pythons wunderbare Welt der Schwerkraft?", "Wer wurde gespielt von die Komponisten für Monty Pythons wunderbare Welt der Schwerkraft?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/And_Now_for_Something_Completely_Different> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Monty Python Live at the Hollywood Bowl?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Monty Python Live at the Hollywood Bowl?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Monty Python Live at the Hollywood Bowl?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Monty Python Live at the Hollywood Bowl?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Monty Python Live at the Hollywood Bowl?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Monty Python Live at the Hollywood Bowl?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Monty Python Live at the Hollywood Bowl?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Monty Python Live at the Hollywood Bowl?", "Wer wird gespielt von der Komponist für Monty Python Live at the Hollywood Bowl?", "Wer wird gespielt von die Komponisten für Monty Python Live at the Hollywood Bowl?", "Wer wurde gespielt von der Komponist für Monty Python Live at the Hollywood Bowl?", "Wer wurde gespielt von die Komponisten für Monty Python Live at the Hollywood Bowl?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Monty_Python_Live_at_the_Hollywood_Bowl> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Balekempa?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Balekempa?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Balekempa?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Balekempa?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Balekempa?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Balekempa?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Balekempa?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Balekempa?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Balekempa?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Balekempa?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Balekempa?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Balekempa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Balekempa> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Bill_Cosby:_Himself?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Bill_Cosby:_Himself?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Bill_Cosby:_Himself?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Bill_Cosby:_Himself?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Bill_Cosby:_Himself?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Bill_Cosby:_Himself?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Bill_Cosby:_Himself?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Bill_Cosby:_Himself?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Bill_Cosby:_Himself?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Bill_Cosby:_Himself?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Bill_Cosby:_Himself?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Bill_Cosby:_Himself?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bill_Cosby:_Himself> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/The_Mini-Affair?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/The_Mini-Affair?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/The_Mini-Affair?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/The_Mini-Affair?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/The_Mini-Affair?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/The_Mini-Affair?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/The_Mini-Affair?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/The_Mini-Affair?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/The_Mini-Affair?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/The_Mini-Affair?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/The_Mini-Affair?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/The_Mini-Affair?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Mini-Affair> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/What's_Good_for_the_Goose?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/What's_Good_for_the_Goose?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/What's_Good_for_the_Goose?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/What's_Good_for_the_Goose?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/What's_Good_for_the_Goose?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/What's_Good_for_the_Goose?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/What's_Good_for_the_Goose?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/What's_Good_for_the_Goose?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/What's_Good_for_the_Goose?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/What's_Good_for_the_Goose?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/What's_Good_for_the_Goose?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/What's_Good_for_the_Goose?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/What's_Good_for_the_Goose> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Thriller (Musikvideo)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Thriller (Musikvideo)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Thriller (Musikvideo)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Thriller (Musikvideo)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Thriller (Musikvideo)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Thriller (Musikvideo)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Thriller (Musikvideo)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Thriller (Musikvideo)?", "Wer wird gespielt von der Komponist für Thriller (Musikvideo)?", "Wer wird gespielt von die Komponisten für Thriller (Musikvideo)?", "Wer wurde gespielt von der Komponist für Thriller (Musikvideo)?", "Wer wurde gespielt von die Komponisten für Thriller (Musikvideo)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Michael_Jackson's_Thriller_(music_video)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Hannah Montana & Miley Cyrus: Best of Both Worlds Concert?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Hannah Montana & Miley Cyrus: Best of Both Worlds Concert?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Hannah Montana & Miley Cyrus: Best of Both Worlds Concert?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Hannah Montana & Miley Cyrus: Best of Both Worlds Concert?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Hannah Montana & Miley Cyrus: Best of Both Worlds Concert?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Hannah Montana & Miley Cyrus: Best of Both Worlds Concert?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Hannah Montana & Miley Cyrus: Best of Both Worlds Concert?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Hannah Montana & Miley Cyrus: Best of Both Worlds Concert?", "Wer wird gespielt von der Komponist für Hannah Montana & Miley Cyrus: Best of Both Worlds Concert?", "Wer wird gespielt von die Komponisten für Hannah Montana & Miley Cyrus: Best of Both Worlds Concert?", "Wer wurde gespielt von der Komponist für Hannah Montana & Miley Cyrus: Best of Both Worlds Concert?", "Wer wurde gespielt von die Komponisten für Hannah Montana & Miley Cyrus: Best of Both Worlds Concert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hannah_Montana_and_Miley_Cyrus:_Best_of_Both_Worlds_Concert> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Ein Fetzen Leben?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Ein Fetzen Leben?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Ein Fetzen Leben?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Ein Fetzen Leben?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Ein Fetzen Leben?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Ein Fetzen Leben?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Ein Fetzen Leben?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Ein Fetzen Leben?", "Wer wird gespielt von der Komponist für Ein Fetzen Leben?", "Wer wird gespielt von die Komponisten für Ein Fetzen Leben?", "Wer wurde gespielt von der Komponist für Ein Fetzen Leben?", "Wer wurde gespielt von die Komponisten für Ein Fetzen Leben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Bold_and_the_Brave> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Last Days (2005)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Last Days (2005)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Last Days (2005)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Last Days (2005)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Last Days (2005)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Last Days (2005)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Last Days (2005)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Last Days (2005)?", "Wer wird gespielt von der Komponist für Last Days (2005)?", "Wer wird gespielt von die Komponisten für Last Days (2005)?", "Wer wurde gespielt von der Komponist für Last Days (2005)?", "Wer wurde gespielt von die Komponisten für Last Days (2005)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Last_Days_(2005_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Demon_Hunter_(film)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Demon_Hunter_(film)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Demon_Hunter_(film)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Demon_Hunter_(film)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Demon_Hunter_(film)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Demon_Hunter_(film)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Demon_Hunter_(film)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Demon_Hunter_(film)?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Demon_Hunter_(film)?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Demon_Hunter_(film)?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Demon_Hunter_(film)?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Demon_Hunter_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Demon_Hunter_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Game_of_Life_(film)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Game_of_Life_(film)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Game_of_Life_(film)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Game_of_Life_(film)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Game_of_Life_(film)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Game_of_Life_(film)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Game_of_Life_(film)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Game_of_Life_(film)?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Game_of_Life_(film)?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Game_of_Life_(film)?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Game_of_Life_(film)?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Game_of_Life_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Game_of_Life_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Angel_Wars?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Angel_Wars?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Angel_Wars?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Angel_Wars?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Angel_Wars?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Angel_Wars?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Angel_Wars?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Angel_Wars?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Angel_Wars?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Angel_Wars?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Angel_Wars?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Angel_Wars?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Angel_Wars> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Waiting_for_Guffman?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Waiting_for_Guffman?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Waiting_for_Guffman?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Waiting_for_Guffman?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Waiting_for_Guffman?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Waiting_for_Guffman?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Waiting_for_Guffman?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Waiting_for_Guffman?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Waiting_for_Guffman?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Waiting_for_Guffman?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Waiting_for_Guffman?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Waiting_for_Guffman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Waiting_for_Guffman> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/This_Is_Spinal_Tap?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/This_Is_Spinal_Tap?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/This_Is_Spinal_Tap?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/This_Is_Spinal_Tap?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/This_Is_Spinal_Tap?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/This_Is_Spinal_Tap?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/This_Is_Spinal_Tap?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/This_Is_Spinal_Tap?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/This_Is_Spinal_Tap?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/This_Is_Spinal_Tap?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/This_Is_Spinal_Tap?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/This_Is_Spinal_Tap?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/This_Is_Spinal_Tap> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/The_Honky_Problem?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/The_Honky_Problem?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/The_Honky_Problem?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/The_Honky_Problem?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/The_Honky_Problem?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/The_Honky_Problem?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/The_Honky_Problem?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/The_Honky_Problem?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/The_Honky_Problem?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/The_Honky_Problem?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/The_Honky_Problem?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/The_Honky_Problem?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Honky_Problem> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Oresama?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Oresama?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Oresama?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Oresama?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Oresama?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Oresama?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Oresama?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Oresama?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Oresama?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Oresama?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Oresama?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Oresama?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Oresama> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Secret?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Secret?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Secret?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Secret?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Secret?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Secret?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Secret?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Secret?", "Wer wird gespielt von der Komponist für Secret?", "Wer wird gespielt von die Komponisten für Secret?", "Wer wurde gespielt von der Komponist für Secret?", "Wer wurde gespielt von die Komponisten für Secret?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Secret_(2007_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für SherryBaby?", "Welche fiktiver Charakters werden gespielt von die Komponisten für SherryBaby?", "Welche fiktiver Charakters wurden gespielt von der Komponist für SherryBaby?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für SherryBaby?", "Welcher fiktiver Charakter wird gespielt von der Komponist für SherryBaby?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für SherryBaby?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für SherryBaby?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für SherryBaby?", "Wer wird gespielt von der Komponist für SherryBaby?", "Wer wird gespielt von die Komponisten für SherryBaby?", "Wer wurde gespielt von der Komponist für SherryBaby?", "Wer wurde gespielt von die Komponisten für SherryBaby?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sherrybaby> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Thunderbolt (1995)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Thunderbolt (1995)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Thunderbolt (1995)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Thunderbolt (1995)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Thunderbolt (1995)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Thunderbolt (1995)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Thunderbolt (1995)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Thunderbolt (1995)?", "Wer wird gespielt von der Komponist für Thunderbolt (1995)?", "Wer wird gespielt von die Komponisten für Thunderbolt (1995)?", "Wer wurde gespielt von der Komponist für Thunderbolt (1995)?", "Wer wurde gespielt von die Komponisten für Thunderbolt (1995)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Thunderbolt_(1995_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Yaarana_(2015_film)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Yaarana_(2015_film)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Yaarana_(2015_film)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Yaarana_(2015_film)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Yaarana_(2015_film)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Yaarana_(2015_film)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Yaarana_(2015_film)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Yaarana_(2015_film)?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Yaarana_(2015_film)?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Yaarana_(2015_film)?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Yaarana_(2015_film)?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Yaarana_(2015_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Yaarana_(2015_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Corrupt_(1999_film)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Corrupt_(1999_film)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Corrupt_(1999_film)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Corrupt_(1999_film)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Corrupt_(1999_film)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Corrupt_(1999_film)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Corrupt_(1999_film)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Corrupt_(1999_film)?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Corrupt_(1999_film)?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Corrupt_(1999_film)?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Corrupt_(1999_film)?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Corrupt_(1999_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Corrupt_(1999_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/CZ12?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/CZ12?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/CZ12?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/CZ12?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/CZ12?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/CZ12?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/CZ12?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/CZ12?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/CZ12?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/CZ12?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/CZ12?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/CZ12?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/CZ12> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/In_the_King_of_Prussia?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/In_the_King_of_Prussia?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/In_the_King_of_Prussia?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/In_the_King_of_Prussia?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/In_the_King_of_Prussia?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/In_the_King_of_Prussia?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/In_the_King_of_Prussia?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/In_the_King_of_Prussia?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/In_the_King_of_Prussia?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/In_the_King_of_Prussia?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/In_the_King_of_Prussia?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/In_the_King_of_Prussia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/In_the_King_of_Prussia> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Girlfriend_(2010_film)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Girlfriend_(2010_film)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Girlfriend_(2010_film)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Girlfriend_(2010_film)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Girlfriend_(2010_film)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Girlfriend_(2010_film)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Girlfriend_(2010_film)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Girlfriend_(2010_film)?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Girlfriend_(2010_film)?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Girlfriend_(2010_film)?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Girlfriend_(2010_film)?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Girlfriend_(2010_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Girlfriend_(2010_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Horseshoe_Theory?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Horseshoe_Theory?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Horseshoe_Theory?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Horseshoe_Theory?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Horseshoe_Theory?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Horseshoe_Theory?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Horseshoe_Theory?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Horseshoe_Theory?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Horseshoe_Theory?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Horseshoe_Theory?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Horseshoe_Theory?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Horseshoe_Theory?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Horseshoe_Theory> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/My_Own_Private_River?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/My_Own_Private_River?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/My_Own_Private_River?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/My_Own_Private_River?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/My_Own_Private_River?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/My_Own_Private_River?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/My_Own_Private_River?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/My_Own_Private_River?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/My_Own_Private_River?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/My_Own_Private_River?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/My_Own_Private_River?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/My_Own_Private_River?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/My_Own_Private_River> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/The_Rooftop_(film)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/The_Rooftop_(film)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/The_Rooftop_(film)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/The_Rooftop_(film)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/The_Rooftop_(film)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/The_Rooftop_(film)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/The_Rooftop_(film)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/The_Rooftop_(film)?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/The_Rooftop_(film)?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/The_Rooftop_(film)?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/The_Rooftop_(film)?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/The_Rooftop_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Rooftop_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Kung_Fu_Dunk?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Kung_Fu_Dunk?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Kung_Fu_Dunk?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Kung_Fu_Dunk?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Kung_Fu_Dunk?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Kung_Fu_Dunk?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Kung_Fu_Dunk?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Kung_Fu_Dunk?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Kung_Fu_Dunk?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Kung_Fu_Dunk?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Kung_Fu_Dunk?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Kung_Fu_Dunk?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kung_Fu_Dunk> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Sarah_Silverman:_Jesus_Is_Magic?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Sarah_Silverman:_Jesus_Is_Magic?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Sarah_Silverman:_Jesus_Is_Magic?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Sarah_Silverman:_Jesus_Is_Magic?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Sarah_Silverman:_Jesus_Is_Magic?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Sarah_Silverman:_Jesus_Is_Magic?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Sarah_Silverman:_Jesus_Is_Magic?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Sarah_Silverman:_Jesus_Is_Magic?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Sarah_Silverman:_Jesus_Is_Magic?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Sarah_Silverman:_Jesus_Is_Magic?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Sarah_Silverman:_Jesus_Is_Magic?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Sarah_Silverman:_Jesus_Is_Magic?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sarah_Silverman:_Jesus_Is_Magic> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Private School – Die Superanmacher?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Private School – Die Superanmacher?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Private School – Die Superanmacher?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Private School – Die Superanmacher?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Private School – Die Superanmacher?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Private School – Die Superanmacher?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Private School – Die Superanmacher?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Private School – Die Superanmacher?", "Wer wird gespielt von der Komponist für Private School – Die Superanmacher?", "Wer wird gespielt von die Komponisten für Private School – Die Superanmacher?", "Wer wurde gespielt von der Komponist für Private School – Die Superanmacher?", "Wer wurde gespielt von die Komponisten für Private School – Die Superanmacher?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Private_School_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Slipstream (2007)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Slipstream (2007)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Slipstream (2007)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Slipstream (2007)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Slipstream (2007)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Slipstream (2007)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Slipstream (2007)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Slipstream (2007)?", "Wer wird gespielt von der Komponist für Slipstream (2007)?", "Wer wird gespielt von die Komponisten für Slipstream (2007)?", "Wer wurde gespielt von der Komponist für Slipstream (2007)?", "Wer wurde gespielt von die Komponisten für Slipstream (2007)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Slipstream_(2007_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Aretha Franklin: Amazing Grace?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Aretha Franklin: Amazing Grace?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Aretha Franklin: Amazing Grace?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Aretha Franklin: Amazing Grace?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Aretha Franklin: Amazing Grace?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Aretha Franklin: Amazing Grace?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Aretha Franklin: Amazing Grace?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Aretha Franklin: Amazing Grace?", "Wer wird gespielt von der Komponist für Aretha Franklin: Amazing Grace?", "Wer wird gespielt von die Komponisten für Aretha Franklin: Amazing Grace?", "Wer wurde gespielt von der Komponist für Aretha Franklin: Amazing Grace?", "Wer wurde gespielt von die Komponisten für Aretha Franklin: Amazing Grace?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Amazing_Grace_(2018_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Charlie und die Schokoladenfabrik (1971)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Charlie und die Schokoladenfabrik (1971)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Charlie und die Schokoladenfabrik (1971)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Charlie und die Schokoladenfabrik (1971)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Charlie und die Schokoladenfabrik (1971)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Charlie und die Schokoladenfabrik (1971)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Charlie und die Schokoladenfabrik (1971)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Charlie und die Schokoladenfabrik (1971)?", "Wer wird gespielt von der Komponist für Charlie und die Schokoladenfabrik (1971)?", "Wer wird gespielt von die Komponisten für Charlie und die Schokoladenfabrik (1971)?", "Wer wurde gespielt von der Komponist für Charlie und die Schokoladenfabrik (1971)?", "Wer wurde gespielt von die Komponisten für Charlie und die Schokoladenfabrik (1971)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Willy_Wonka_&_the_Chocolate_Factory> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Wild_League_(film)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Wild_League_(film)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Wild_League_(film)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Wild_League_(film)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Wild_League_(film)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Wild_League_(film)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Wild_League_(film)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Wild_League_(film)?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Wild_League_(film)?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Wild_League_(film)?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Wild_League_(film)?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Wild_League_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Wild_League_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/102_Not_Out?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/102_Not_Out?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/102_Not_Out?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/102_Not_Out?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/102_Not_Out?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/102_Not_Out?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/102_Not_Out?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/102_Not_Out?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/102_Not_Out?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/102_Not_Out?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/102_Not_Out?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/102_Not_Out?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/102_Not_Out> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/The_Lost_City_(2005_film)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/The_Lost_City_(2005_film)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/The_Lost_City_(2005_film)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/The_Lost_City_(2005_film)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/The_Lost_City_(2005_film)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/The_Lost_City_(2005_film)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/The_Lost_City_(2005_film)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/The_Lost_City_(2005_film)?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/The_Lost_City_(2005_film)?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/The_Lost_City_(2005_film)?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/The_Lost_City_(2005_film)?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/The_Lost_City_(2005_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Lost_City_(2005_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/August_(1996_film)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/August_(1996_film)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/August_(1996_film)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/August_(1996_film)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/August_(1996_film)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/August_(1996_film)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/August_(1996_film)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/August_(1996_film)?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/August_(1996_film)?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/August_(1996_film)?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/August_(1996_film)?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/August_(1996_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/August_(1996_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Stations_of_the_Elevated?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Stations_of_the_Elevated?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Stations_of_the_Elevated?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Stations_of_the_Elevated?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Stations_of_the_Elevated?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Stations_of_the_Elevated?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Stations_of_the_Elevated?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Stations_of_the_Elevated?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Stations_of_the_Elevated?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Stations_of_the_Elevated?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Stations_of_the_Elevated?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Stations_of_the_Elevated?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Stations_of_the_Elevated> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Black_Joy_(1977_film)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Black_Joy_(1977_film)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Black_Joy_(1977_film)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Black_Joy_(1977_film)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Black_Joy_(1977_film)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Black_Joy_(1977_film)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Black_Joy_(1977_film)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Black_Joy_(1977_film)?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Black_Joy_(1977_film)?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Black_Joy_(1977_film)?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Black_Joy_(1977_film)?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Black_Joy_(1977_film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Black_Joy_(1977_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Been_So_Long_(film)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Been_So_Long_(film)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Been_So_Long_(film)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Been_So_Long_(film)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Been_So_Long_(film)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Been_So_Long_(film)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Been_So_Long_(film)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Been_So_Long_(film)?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Been_So_Long_(film)?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Been_So_Long_(film)?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Been_So_Long_(film)?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Been_So_Long_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Been_So_Long_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Uncle_Was_a_Vampire?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Uncle_Was_a_Vampire?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Uncle_Was_a_Vampire?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Uncle_Was_a_Vampire?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Uncle_Was_a_Vampire?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Uncle_Was_a_Vampire?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Uncle_Was_a_Vampire?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Uncle_Was_a_Vampire?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Uncle_Was_a_Vampire?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Uncle_Was_a_Vampire?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Uncle_Was_a_Vampire?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Uncle_Was_a_Vampire?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Uncle_Was_a_Vampire> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Rascel-Fifì?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Rascel-Fifì?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Rascel-Fifì?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Rascel-Fifì?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Rascel-Fifì?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Rascel-Fifì?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Rascel-Fifì?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Rascel-Fifì?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Rascel-Fifì?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Rascel-Fifì?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Rascel-Fifì?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Rascel-Fifì?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rascel-Fifì> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Commissariato_di_notturna?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Commissariato_di_notturna?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Commissariato_di_notturna?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Commissariato_di_notturna?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Commissariato_di_notturna?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Commissariato_di_notturna?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Commissariato_di_notturna?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Commissariato_di_notturna?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Commissariato_di_notturna?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Commissariato_di_notturna?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Commissariato_di_notturna?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Commissariato_di_notturna?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Commissariato_di_notturna> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Substitute_Teacher_(film)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Substitute_Teacher_(film)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Substitute_Teacher_(film)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Substitute_Teacher_(film)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Substitute_Teacher_(film)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Substitute_Teacher_(film)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Substitute_Teacher_(film)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Substitute_Teacher_(film)?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Substitute_Teacher_(film)?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Substitute_Teacher_(film)?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Substitute_Teacher_(film)?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Substitute_Teacher_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Substitute_Teacher_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Dr. Detroit?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Dr. Detroit?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Dr. Detroit?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Dr. Detroit?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Dr. Detroit?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Dr. Detroit?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Dr. Detroit?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Dr. Detroit?", "Wer wird gespielt von der Komponist für Dr. Detroit?", "Wer wird gespielt von die Komponisten für Dr. Detroit?", "Wer wurde gespielt von der Komponist für Dr. Detroit?", "Wer wurde gespielt von die Komponisten für Dr. Detroit?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Doctor_Detroit> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/I_Love_Your_Work?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/I_Love_Your_Work?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/I_Love_Your_Work?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/I_Love_Your_Work?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/I_Love_Your_Work?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/I_Love_Your_Work?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/I_Love_Your_Work?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/I_Love_Your_Work?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/I_Love_Your_Work?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/I_Love_Your_Work?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/I_Love_Your_Work?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/I_Love_Your_Work?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/I_Love_Your_Work> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Beat_Girl?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Beat_Girl?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Beat_Girl?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Beat_Girl?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Beat_Girl?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Beat_Girl?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Beat_Girl?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Beat_Girl?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Beat_Girl?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Beat_Girl?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Beat_Girl?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Beat_Girl?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Beat_Girl> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Diary_of_a_Mad_Black_Woman?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Diary_of_a_Mad_Black_Woman?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Diary_of_a_Mad_Black_Woman?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Diary_of_a_Mad_Black_Woman?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Diary_of_a_Mad_Black_Woman?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Diary_of_a_Mad_Black_Woman?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Diary_of_a_Mad_Black_Woman?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Diary_of_a_Mad_Black_Woman?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Diary_of_a_Mad_Black_Woman?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Diary_of_a_Mad_Black_Woman?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Diary_of_a_Mad_Black_Woman?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Diary_of_a_Mad_Black_Woman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Diary_of_a_Mad_Black_Woman> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Dream_a_Little_Dream_2?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Dream_a_Little_Dream_2?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Dream_a_Little_Dream_2?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Dream_a_Little_Dream_2?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Dream_a_Little_Dream_2?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Dream_a_Little_Dream_2?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Dream_a_Little_Dream_2?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Dream_a_Little_Dream_2?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Dream_a_Little_Dream_2?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Dream_a_Little_Dream_2?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Dream_a_Little_Dream_2?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Dream_a_Little_Dream_2?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dream_a_Little_Dream_2> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Casper – Verzauberte Weihnachten?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Casper – Verzauberte Weihnachten?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Casper – Verzauberte Weihnachten?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Casper – Verzauberte Weihnachten?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Casper – Verzauberte Weihnachten?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Casper – Verzauberte Weihnachten?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Casper – Verzauberte Weihnachten?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Casper – Verzauberte Weihnachten?", "Wer wird gespielt von der Komponist für Casper – Verzauberte Weihnachten?", "Wer wird gespielt von die Komponisten für Casper – Verzauberte Weihnachten?", "Wer wurde gespielt von der Komponist für Casper – Verzauberte Weihnachten?", "Wer wurde gespielt von die Komponisten für Casper – Verzauberte Weihnachten?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Casper's_Haunted_Christmas> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Christiane F. – Wir Kinder vom Bahnhof Zoo?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Christiane F. – Wir Kinder vom Bahnhof Zoo?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Christiane F. – Wir Kinder vom Bahnhof Zoo?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Christiane F. – Wir Kinder vom Bahnhof Zoo?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Christiane F. – Wir Kinder vom Bahnhof Zoo?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Christiane F. – Wir Kinder vom Bahnhof Zoo?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Christiane F. – Wir Kinder vom Bahnhof Zoo?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Christiane F. – Wir Kinder vom Bahnhof Zoo?", "Wer wird gespielt von der Komponist für Christiane F. – Wir Kinder vom Bahnhof Zoo?", "Wer wird gespielt von die Komponisten für Christiane F. – Wir Kinder vom Bahnhof Zoo?", "Wer wurde gespielt von der Komponist für Christiane F. – Wir Kinder vom Bahnhof Zoo?", "Wer wurde gespielt von die Komponisten für Christiane F. – Wir Kinder vom Bahnhof Zoo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Christiane_F._(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Die Liebenden von Pont-Neuf?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Die Liebenden von Pont-Neuf?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Die Liebenden von Pont-Neuf?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Die Liebenden von Pont-Neuf?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Die Liebenden von Pont-Neuf?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Die Liebenden von Pont-Neuf?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Die Liebenden von Pont-Neuf?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Die Liebenden von Pont-Neuf?", "Wer wird gespielt von der Komponist für Die Liebenden von Pont-Neuf?", "Wer wird gespielt von die Komponisten für Die Liebenden von Pont-Neuf?", "Wer wurde gespielt von der Komponist für Die Liebenden von Pont-Neuf?", "Wer wurde gespielt von die Komponisten für Die Liebenden von Pont-Neuf?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Les_Amants_du_Pont-Neuf> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Ziggy Stardust and the Spiders from Mars (Film)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Ziggy Stardust and the Spiders from Mars (Film)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Ziggy Stardust and the Spiders from Mars (Film)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Ziggy Stardust and the Spiders from Mars (Film)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Ziggy Stardust and the Spiders from Mars (Film)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Ziggy Stardust and the Spiders from Mars (Film)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Ziggy Stardust and the Spiders from Mars (Film)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Ziggy Stardust and the Spiders from Mars (Film)?", "Wer wird gespielt von der Komponist für Ziggy Stardust and the Spiders from Mars (Film)?", "Wer wird gespielt von die Komponisten für Ziggy Stardust and the Spiders from Mars (Film)?", "Wer wurde gespielt von der Komponist für Ziggy Stardust and the Spiders from Mars (Film)?", "Wer wurde gespielt von die Komponisten für Ziggy Stardust and the Spiders from Mars (Film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ziggy_Stardust_and_the_Spiders_from_Mars_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Lautlos im Weltraum?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Lautlos im Weltraum?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Lautlos im Weltraum?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Lautlos im Weltraum?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Lautlos im Weltraum?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Lautlos im Weltraum?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Lautlos im Weltraum?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Lautlos im Weltraum?", "Wer wird gespielt von der Komponist für Lautlos im Weltraum?", "Wer wird gespielt von die Komponisten für Lautlos im Weltraum?", "Wer wurde gespielt von der Komponist für Lautlos im Weltraum?", "Wer wurde gespielt von die Komponisten für Lautlos im Weltraum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Silent_Running> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Imperium – Zwei Welten prallen aufeinander?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Imperium – Zwei Welten prallen aufeinander?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Imperium – Zwei Welten prallen aufeinander?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Imperium – Zwei Welten prallen aufeinander?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Imperium – Zwei Welten prallen aufeinander?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Imperium – Zwei Welten prallen aufeinander?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Imperium – Zwei Welten prallen aufeinander?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Imperium – Zwei Welten prallen aufeinander?", "Wer wird gespielt von der Komponist für Imperium – Zwei Welten prallen aufeinander?", "Wer wird gespielt von die Komponisten für Imperium – Zwei Welten prallen aufeinander?", "Wer wurde gespielt von der Komponist für Imperium – Zwei Welten prallen aufeinander?", "Wer wurde gespielt von die Komponisten für Imperium – Zwei Welten prallen aufeinander?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Empire_(2002_film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/David_Bowie:_Black_Tie_White_Noise_(film)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/David_Bowie:_Black_Tie_White_Noise_(film)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/David_Bowie:_Black_Tie_White_Noise_(film)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/David_Bowie:_Black_Tie_White_Noise_(film)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/David_Bowie:_Black_Tie_White_Noise_(film)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/David_Bowie:_Black_Tie_White_Noise_(film)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/David_Bowie:_Black_Tie_White_Noise_(film)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/David_Bowie:_Black_Tie_White_Noise_(film)?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/David_Bowie:_Black_Tie_White_Noise_(film)?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/David_Bowie:_Black_Tie_White_Noise_(film)?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/David_Bowie:_Black_Tie_White_Noise_(film)?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/David_Bowie:_Black_Tie_White_Noise_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/David_Bowie:_Black_Tie_White_Noise_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Jazzin'_for_Blue_Jean?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Jazzin'_for_Blue_Jean?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Jazzin'_for_Blue_Jean?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Jazzin'_for_Blue_Jean?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Jazzin'_for_Blue_Jean?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Jazzin'_for_Blue_Jean?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Jazzin'_for_Blue_Jean?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Jazzin'_for_Blue_Jean?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Jazzin'_for_Blue_Jean?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Jazzin'_for_Blue_Jean?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Jazzin'_for_Blue_Jean?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Jazzin'_for_Blue_Jean?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jazzin'_for_Blue_Jean> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Ricochet_(documentary)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Ricochet_(documentary)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Ricochet_(documentary)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Ricochet_(documentary)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Ricochet_(documentary)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Ricochet_(documentary)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Ricochet_(documentary)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Ricochet_(documentary)?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Ricochet_(documentary)?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Ricochet_(documentary)?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Ricochet_(documentary)?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Ricochet_(documentary)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ricochet_(documentary)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Cracked_Actor?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Cracked_Actor?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Cracked_Actor?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Cracked_Actor?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Cracked_Actor?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Cracked_Actor?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Cracked_Actor?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Cracked_Actor?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Cracked_Actor?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Cracked_Actor?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Cracked_Actor?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Cracked_Actor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cracked_Actor> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/David_Bowie:_Sound_and_Vision_(documentary)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/David_Bowie:_Sound_and_Vision_(documentary)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/David_Bowie:_Sound_and_Vision_(documentary)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/David_Bowie:_Sound_and_Vision_(documentary)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/David_Bowie:_Sound_and_Vision_(documentary)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/David_Bowie:_Sound_and_Vision_(documentary)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/David_Bowie:_Sound_and_Vision_(documentary)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/David_Bowie:_Sound_and_Vision_(documentary)?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/David_Bowie:_Sound_and_Vision_(documentary)?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/David_Bowie:_Sound_and_Vision_(documentary)?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/David_Bowie:_Sound_and_Vision_(documentary)?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/David_Bowie:_Sound_and_Vision_(documentary)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/David_Bowie:_Sound_and_Vision_(documentary)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Mauvais_Sang?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Mauvais_Sang?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Mauvais_Sang?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Mauvais_Sang?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Mauvais_Sang?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Mauvais_Sang?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Mauvais_Sang?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Mauvais_Sang?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Mauvais_Sang?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Mauvais_Sang?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Mauvais_Sang?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Mauvais_Sang?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mauvais_Sang> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/A_Glimpse_of_Tiger__A_Glimpse_of_Tiger__1?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/A_Glimpse_of_Tiger__A_Glimpse_of_Tiger__1?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/A_Glimpse_of_Tiger__A_Glimpse_of_Tiger__1?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/A_Glimpse_of_Tiger__A_Glimpse_of_Tiger__1?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/A_Glimpse_of_Tiger__A_Glimpse_of_Tiger__1?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/A_Glimpse_of_Tiger__A_Glimpse_of_Tiger__1?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/A_Glimpse_of_Tiger__A_Glimpse_of_Tiger__1?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/A_Glimpse_of_Tiger__A_Glimpse_of_Tiger__1?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/A_Glimpse_of_Tiger__A_Glimpse_of_Tiger__1?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/A_Glimpse_of_Tiger__A_Glimpse_of_Tiger__1?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/A_Glimpse_of_Tiger__A_Glimpse_of_Tiger__1?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/A_Glimpse_of_Tiger__A_Glimpse_of_Tiger__1?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/A_Glimpse_of_Tiger__A_Glimpse_of_Tiger__1> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Silver_Dream_Racer?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Silver_Dream_Racer?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Silver_Dream_Racer?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Silver_Dream_Racer?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Silver_Dream_Racer?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Silver_Dream_Racer?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Silver_Dream_Racer?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Silver_Dream_Racer?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Silver_Dream_Racer?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Silver_Dream_Racer?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Silver_Dream_Racer?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Silver_Dream_Racer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Silver_Dream_Racer> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/The_Adventure_of_Faustus_Bidgood?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/The_Adventure_of_Faustus_Bidgood?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/The_Adventure_of_Faustus_Bidgood?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/The_Adventure_of_Faustus_Bidgood?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/The_Adventure_of_Faustus_Bidgood?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/The_Adventure_of_Faustus_Bidgood?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/The_Adventure_of_Faustus_Bidgood?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/The_Adventure_of_Faustus_Bidgood?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/The_Adventure_of_Faustus_Bidgood?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/The_Adventure_of_Faustus_Bidgood?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/The_Adventure_of_Faustus_Bidgood?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/The_Adventure_of_Faustus_Bidgood?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Adventure_of_Faustus_Bidgood> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/McVicar_(film)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/McVicar_(film)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/McVicar_(film)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/McVicar_(film)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/McVicar_(film)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/McVicar_(film)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/McVicar_(film)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/McVicar_(film)?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/McVicar_(film)?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/McVicar_(film)?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/McVicar_(film)?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/McVicar_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/McVicar_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Q&A_(film)?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Q&A_(film)?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Q&A_(film)?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Q&A_(film)?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Q&A_(film)?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Q&A_(film)?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Q&A_(film)?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Q&A_(film)?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Q&A_(film)?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Q&A_(film)?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Q&A_(film)?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Q&A_(film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Q&A_(film)> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/Ruben_Blades_Is_Not_My_Name?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/Ruben_Blades_Is_Not_My_Name?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/Ruben_Blades_Is_Not_My_Name?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/Ruben_Blades_Is_Not_My_Name?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/Ruben_Blades_Is_Not_My_Name?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/Ruben_Blades_Is_Not_My_Name?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/Ruben_Blades_Is_Not_My_Name?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/Ruben_Blades_Is_Not_My_Name?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/Ruben_Blades_Is_Not_My_Name?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/Ruben_Blades_Is_Not_My_Name?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/Ruben_Blades_Is_Not_My_Name?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/Ruben_Blades_Is_Not_My_Name?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ruben_Blades_Is_Not_My_Name> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für http://dbpedia.org/resource/When_the_Mountains_Tremble?", "Welche fiktiver Charakters werden gespielt von die Komponisten für http://dbpedia.org/resource/When_the_Mountains_Tremble?", "Welche fiktiver Charakters wurden gespielt von der Komponist für http://dbpedia.org/resource/When_the_Mountains_Tremble?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für http://dbpedia.org/resource/When_the_Mountains_Tremble?", "Welcher fiktiver Charakter wird gespielt von der Komponist für http://dbpedia.org/resource/When_the_Mountains_Tremble?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für http://dbpedia.org/resource/When_the_Mountains_Tremble?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für http://dbpedia.org/resource/When_the_Mountains_Tremble?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für http://dbpedia.org/resource/When_the_Mountains_Tremble?", "Wer wird gespielt von der Komponist für http://dbpedia.org/resource/When_the_Mountains_Tremble?", "Wer wird gespielt von die Komponisten für http://dbpedia.org/resource/When_the_Mountains_Tremble?", "Wer wurde gespielt von der Komponist für http://dbpedia.org/resource/When_the_Mountains_Tremble?", "Wer wurde gespielt von die Komponisten für http://dbpedia.org/resource/When_the_Mountains_Tremble?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/When_the_Mountains_Tremble> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für The Naked Brothers Band: Der Film?", "Welche fiktiver Charakters werden gespielt von die Komponisten für The Naked Brothers Band: Der Film?", "Welche fiktiver Charakters wurden gespielt von der Komponist für The Naked Brothers Band: Der Film?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für The Naked Brothers Band: Der Film?", "Welcher fiktiver Charakter wird gespielt von der Komponist für The Naked Brothers Band: Der Film?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für The Naked Brothers Band: Der Film?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für The Naked Brothers Band: Der Film?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für The Naked Brothers Band: Der Film?", "Wer wird gespielt von der Komponist für The Naked Brothers Band: Der Film?", "Wer wird gespielt von die Komponisten für The Naked Brothers Band: Der Film?", "Wer wurde gespielt von der Komponist für The Naked Brothers Band: Der Film?", "Wer wurde gespielt von die Komponisten für The Naked Brothers Band: Der Film?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Naked_Brothers_Band:_The_Movie> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "51",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WORK",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von der Komponist für Multi-Facial?", "Welche fiktiver Charakters werden gespielt von die Komponisten für Multi-Facial?", "Welche fiktiver Charakters wurden gespielt von der Komponist für Multi-Facial?", "Welche fiktiver Charakters wurden gespielt von die Komponisten für Multi-Facial?", "Welcher fiktiver Charakter wird gespielt von der Komponist für Multi-Facial?", "Welcher fiktiver Charakter wird gespielt von die Komponisten für Multi-Facial?", "Welcher fiktiver Charakter wurde gespielt von der Komponist für Multi-Facial?", "Welcher fiktiver Charakter wurde gespielt von die Komponisten für Multi-Facial?", "Wer wird gespielt von der Komponist für Multi-Facial?", "Wer wird gespielt von die Komponisten für Multi-Facial?", "Wer wurde gespielt von der Komponist für Multi-Facial?", "Wer wurde gespielt von die Komponisten für Multi-Facial?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Multi-Facial> <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von MKTO?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von MKTO?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von MKTO?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von MKTO?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von MKTO?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von MKTO?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von MKTO?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von MKTO?", "Wer wird gespielt von das Mitglied von MKTO?", "Wer wird gespielt von die Mitglieder von MKTO?", "Wer wurde gespielt von das Mitglied von MKTO?", "Wer wurde gespielt von die Mitglieder von MKTO?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/MKTO> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von Native Tongues Posse?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von Native Tongues Posse?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von Native Tongues Posse?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von Native Tongues Posse?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von Native Tongues Posse?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von Native Tongues Posse?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von Native Tongues Posse?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von Native Tongues Posse?", "Wer wird gespielt von das Mitglied von Native Tongues Posse?", "Wer wird gespielt von die Mitglieder von Native Tongues Posse?", "Wer wurde gespielt von das Mitglied von Native Tongues Posse?", "Wer wurde gespielt von die Mitglieder von Native Tongues Posse?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Native_Tongues> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von Band From TV?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von Band From TV?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von Band From TV?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von Band From TV?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von Band From TV?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von Band From TV?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von Band From TV?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von Band From TV?", "Wer wird gespielt von das Mitglied von Band From TV?", "Wer wird gespielt von die Mitglieder von Band From TV?", "Wer wurde gespielt von das Mitglied von Band From TV?", "Wer wurde gespielt von die Mitglieder von Band From TV?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Band_from_TV> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von Kevin Costner & Modern West?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von Kevin Costner & Modern West?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von Kevin Costner & Modern West?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von Kevin Costner & Modern West?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von Kevin Costner & Modern West?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von Kevin Costner & Modern West?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von Kevin Costner & Modern West?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von Kevin Costner & Modern West?", "Wer wird gespielt von das Mitglied von Kevin Costner & Modern West?", "Wer wird gespielt von die Mitglieder von Kevin Costner & Modern West?", "Wer wurde gespielt von das Mitglied von Kevin Costner & Modern West?", "Wer wurde gespielt von die Mitglieder von Kevin Costner & Modern West?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kevin_Costner_&_Modern_West> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Linkup?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Linkup?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Linkup?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Linkup?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Linkup?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Linkup?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Linkup?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Linkup?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Linkup?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Linkup?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Linkup?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Linkup?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Linkup> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/The_Boxmasters?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/The_Boxmasters?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/The_Boxmasters?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/The_Boxmasters?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/The_Boxmasters?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/The_Boxmasters?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/The_Boxmasters?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/The_Boxmasters?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/The_Boxmasters?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/The_Boxmasters?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/The_Boxmasters?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/The_Boxmasters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Boxmasters> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Billy_Joel_Band?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Billy_Joel_Band?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Billy_Joel_Band?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Billy_Joel_Band?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Billy_Joel_Band?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Billy_Joel_Band?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Billy_Joel_Band?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Billy_Joel_Band?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Billy_Joel_Band?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Billy_Joel_Band?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Billy_Joel_Band?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Billy_Joel_Band?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Billy_Joel_Band> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Brother_Clyde?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Brother_Clyde?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Brother_Clyde?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Brother_Clyde?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Brother_Clyde?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Brother_Clyde?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Brother_Clyde?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Brother_Clyde?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Brother_Clyde?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Brother_Clyde?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Brother_Clyde?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Brother_Clyde?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Brother_Clyde> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/The_Dalton_Academy_Warblers?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/The_Dalton_Academy_Warblers?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/The_Dalton_Academy_Warblers?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/The_Dalton_Academy_Warblers?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/The_Dalton_Academy_Warblers?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/The_Dalton_Academy_Warblers?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/The_Dalton_Academy_Warblers?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/The_Dalton_Academy_Warblers?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/The_Dalton_Academy_Warblers?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/The_Dalton_Academy_Warblers?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/The_Dalton_Academy_Warblers?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/The_Dalton_Academy_Warblers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Dalton_Academy_Warblers> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Zip_Code_Rapists?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Zip_Code_Rapists?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Zip_Code_Rapists?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Zip_Code_Rapists?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Zip_Code_Rapists?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Zip_Code_Rapists?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Zip_Code_Rapists?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Zip_Code_Rapists?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Zip_Code_Rapists?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Zip_Code_Rapists?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Zip_Code_Rapists?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Zip_Code_Rapists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Zip_Code_Rapists> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Analog_Brothers?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Analog_Brothers?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Analog_Brothers?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Analog_Brothers?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Analog_Brothers?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Analog_Brothers?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Analog_Brothers?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Analog_Brothers?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Analog_Brothers?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Analog_Brothers?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Analog_Brothers?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Analog_Brothers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Analog_Brothers> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Ultramagnetic_MCs?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Ultramagnetic_MCs?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Ultramagnetic_MCs?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Ultramagnetic_MCs?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Ultramagnetic_MCs?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Ultramagnetic_MCs?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Ultramagnetic_MCs?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Ultramagnetic_MCs?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Ultramagnetic_MCs?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Ultramagnetic_MCs?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Ultramagnetic_MCs?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Ultramagnetic_MCs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ultramagnetic_MCs> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Thee_Undatakerz?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Thee_Undatakerz?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Thee_Undatakerz?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Thee_Undatakerz?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Thee_Undatakerz?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Thee_Undatakerz?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Thee_Undatakerz?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Thee_Undatakerz?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Thee_Undatakerz?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Thee_Undatakerz?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Thee_Undatakerz?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Thee_Undatakerz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Thee_Undatakerz> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von All Angels?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von All Angels?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von All Angels?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von All Angels?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von All Angels?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von All Angels?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von All Angels?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von All Angels?", "Wer wird gespielt von das Mitglied von All Angels?", "Wer wird gespielt von die Mitglieder von All Angels?", "Wer wurde gespielt von das Mitglied von All Angels?", "Wer wurde gespielt von die Mitglieder von All Angels?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/All_Angels> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von The Whip (Band)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von The Whip (Band)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von The Whip (Band)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von The Whip (Band)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von The Whip (Band)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von The Whip (Band)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von The Whip (Band)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von The Whip (Band)?", "Wer wird gespielt von das Mitglied von The Whip (Band)?", "Wer wird gespielt von die Mitglieder von The Whip (Band)?", "Wer wurde gespielt von das Mitglied von The Whip (Band)?", "Wer wurde gespielt von die Mitglieder von The Whip (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Whip_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/The_Oddities_(rap_group)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/The_Oddities_(rap_group)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/The_Oddities_(rap_group)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/The_Oddities_(rap_group)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/The_Oddities_(rap_group)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/The_Oddities_(rap_group)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/The_Oddities_(rap_group)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/The_Oddities_(rap_group)?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/The_Oddities_(rap_group)?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/The_Oddities_(rap_group)?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/The_Oddities_(rap_group)?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/The_Oddities_(rap_group)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Oddities_(rap_group)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Waiting_Room_(band)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Waiting_Room_(band)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Waiting_Room_(band)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Waiting_Room_(band)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Waiting_Room_(band)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Waiting_Room_(band)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Waiting_Room_(band)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Waiting_Room_(band)?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Waiting_Room_(band)?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Waiting_Room_(band)?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Waiting_Room_(band)?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Waiting_Room_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Waiting_Room_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Hepcat_(band)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Hepcat_(band)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Hepcat_(band)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Hepcat_(band)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Hepcat_(band)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Hepcat_(band)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Hepcat_(band)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Hepcat_(band)?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Hepcat_(band)?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Hepcat_(band)?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Hepcat_(band)?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Hepcat_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hepcat_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Chantoozies?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Chantoozies?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Chantoozies?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Chantoozies?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Chantoozies?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Chantoozies?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Chantoozies?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Chantoozies?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Chantoozies?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Chantoozies?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Chantoozies?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Chantoozies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chantoozies> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Imajin?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Imajin?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Imajin?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Imajin?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Imajin?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Imajin?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Imajin?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Imajin?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Imajin?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Imajin?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Imajin?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Imajin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Imajin> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Ringside_(band)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Ringside_(band)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Ringside_(band)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Ringside_(band)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Ringside_(band)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Ringside_(band)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Ringside_(band)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Ringside_(band)?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Ringside_(band)?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Ringside_(band)?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Ringside_(band)?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Ringside_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ringside_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/8_Flavahz?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/8_Flavahz?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/8_Flavahz?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/8_Flavahz?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/8_Flavahz?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/8_Flavahz?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/8_Flavahz?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/8_Flavahz?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/8_Flavahz?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/8_Flavahz?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/8_Flavahz?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/8_Flavahz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/8_Flavahz> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von The Aquabats?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von The Aquabats?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von The Aquabats?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von The Aquabats?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von The Aquabats?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von The Aquabats?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von The Aquabats?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von The Aquabats?", "Wer wird gespielt von das Mitglied von The Aquabats?", "Wer wird gespielt von die Mitglieder von The Aquabats?", "Wer wurde gespielt von das Mitglied von The Aquabats?", "Wer wurde gespielt von die Mitglieder von The Aquabats?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Aquabats> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/The_Long_Goodbye_(band)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/The_Long_Goodbye_(band)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/The_Long_Goodbye_(band)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/The_Long_Goodbye_(band)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/The_Long_Goodbye_(band)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/The_Long_Goodbye_(band)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/The_Long_Goodbye_(band)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/The_Long_Goodbye_(band)?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/The_Long_Goodbye_(band)?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/The_Long_Goodbye_(band)?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/The_Long_Goodbye_(band)?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/The_Long_Goodbye_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Long_Goodbye_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Teatro_(band)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Teatro_(band)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Teatro_(band)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Teatro_(band)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Teatro_(band)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Teatro_(band)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Teatro_(band)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Teatro_(band)?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Teatro_(band)?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Teatro_(band)?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Teatro_(band)?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Teatro_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Teatro_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Lt._Dan_Band?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Lt._Dan_Band?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Lt._Dan_Band?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Lt._Dan_Band?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Lt._Dan_Band?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Lt._Dan_Band?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Lt._Dan_Band?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Lt._Dan_Band?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Lt._Dan_Band?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Lt._Dan_Band?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Lt._Dan_Band?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Lt._Dan_Band?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lt._Dan_Band> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Make_Out_Monday?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Make_Out_Monday?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Make_Out_Monday?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Make_Out_Monday?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Make_Out_Monday?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Make_Out_Monday?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Make_Out_Monday?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Make_Out_Monday?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Make_Out_Monday?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Make_Out_Monday?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Make_Out_Monday?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Make_Out_Monday?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Make_Out_Monday> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/The_Dawn_(band)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/The_Dawn_(band)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/The_Dawn_(band)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/The_Dawn_(band)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/The_Dawn_(band)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/The_Dawn_(band)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/The_Dawn_(band)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/The_Dawn_(band)?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/The_Dawn_(band)?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/The_Dawn_(band)?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/The_Dawn_(band)?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/The_Dawn_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Dawn_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Pattern-Seeking_Animals?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Pattern-Seeking_Animals?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Pattern-Seeking_Animals?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Pattern-Seeking_Animals?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Pattern-Seeking_Animals?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Pattern-Seeking_Animals?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Pattern-Seeking_Animals?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Pattern-Seeking_Animals?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Pattern-Seeking_Animals?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Pattern-Seeking_Animals?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Pattern-Seeking_Animals?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Pattern-Seeking_Animals?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Pattern-Seeking_Animals> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von The Blues Brothers?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von The Blues Brothers?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von The Blues Brothers?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von The Blues Brothers?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von The Blues Brothers?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von The Blues Brothers?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von The Blues Brothers?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von The Blues Brothers?", "Wer wird gespielt von das Mitglied von The Blues Brothers?", "Wer wird gespielt von die Mitglieder von The Blues Brothers?", "Wer wurde gespielt von das Mitglied von The Blues Brothers?", "Wer wurde gespielt von die Mitglieder von The Blues Brothers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Blues_Brothers> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von Sweeney’s Men?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von Sweeney’s Men?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von Sweeney’s Men?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von Sweeney’s Men?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von Sweeney’s Men?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von Sweeney’s Men?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von Sweeney’s Men?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von Sweeney’s Men?", "Wer wird gespielt von das Mitglied von Sweeney’s Men?", "Wer wird gespielt von die Mitglieder von Sweeney’s Men?", "Wer wurde gespielt von das Mitglied von Sweeney’s Men?", "Wer wurde gespielt von die Mitglieder von Sweeney’s Men?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sweeney's_Men> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von Arashi?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von Arashi?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von Arashi?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von Arashi?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von Arashi?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von Arashi?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von Arashi?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von Arashi?", "Wer wird gespielt von das Mitglied von Arashi?", "Wer wird gespielt von die Mitglieder von Arashi?", "Wer wurde gespielt von das Mitglied von Arashi?", "Wer wurde gespielt von die Mitglieder von Arashi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Arashi> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von She & Him?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von She & Him?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von She & Him?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von She & Him?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von She & Him?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von She & Him?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von She & Him?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von She & Him?", "Wer wird gespielt von das Mitglied von She & Him?", "Wer wird gespielt von die Mitglieder von She & Him?", "Wer wurde gespielt von das Mitglied von She & Him?", "Wer wurde gespielt von die Mitglieder von She & Him?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/She_&_Him> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Panjo_5?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Panjo_5?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Panjo_5?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Panjo_5?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Panjo_5?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Panjo_5?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Panjo_5?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Panjo_5?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Panjo_5?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Panjo_5?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Panjo_5?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Panjo_5?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Panjo_5> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Blue_(English_band)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Blue_(English_band)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Blue_(English_band)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Blue_(English_band)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Blue_(English_band)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Blue_(English_band)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Blue_(English_band)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Blue_(English_band)?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Blue_(English_band)?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Blue_(English_band)?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Blue_(English_band)?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Blue_(English_band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Blue_(English_band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Uh_Huh_Her_(band)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Uh_Huh_Her_(band)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Uh_Huh_Her_(band)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Uh_Huh_Her_(band)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Uh_Huh_Her_(band)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Uh_Huh_Her_(band)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Uh_Huh_Her_(band)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Uh_Huh_Her_(band)?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Uh_Huh_Her_(band)?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Uh_Huh_Her_(band)?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Uh_Huh_Her_(band)?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Uh_Huh_Her_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Uh_Huh_Her_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/WaT?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/WaT?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/WaT?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/WaT?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/WaT?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/WaT?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/WaT?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/WaT?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/WaT?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/WaT?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/WaT?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/WaT?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/WaT> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/The_Woods_Band?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/The_Woods_Band?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/The_Woods_Band?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/The_Woods_Band?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/The_Woods_Band?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/The_Woods_Band?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/The_Woods_Band?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/The_Woods_Band?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/The_Woods_Band?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/The_Woods_Band?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/The_Woods_Band?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/The_Woods_Band?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Woods_Band> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von The Left Banke?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von The Left Banke?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von The Left Banke?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von The Left Banke?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von The Left Banke?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von The Left Banke?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von The Left Banke?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von The Left Banke?", "Wer wird gespielt von das Mitglied von The Left Banke?", "Wer wird gespielt von die Mitglieder von The Left Banke?", "Wer wurde gespielt von das Mitglied von The Left Banke?", "Wer wurde gespielt von die Mitglieder von The Left Banke?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Left_Banke> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von Pagoda?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von Pagoda?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von Pagoda?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von Pagoda?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von Pagoda?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von Pagoda?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von Pagoda?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von Pagoda?", "Wer wird gespielt von das Mitglied von Pagoda?", "Wer wird gespielt von die Mitglieder von Pagoda?", "Wer wurde gespielt von das Mitglied von Pagoda?", "Wer wurde gespielt von die Mitglieder von Pagoda?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Pagoda_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von Skin (japanische Band)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von Skin (japanische Band)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von Skin (japanische Band)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von Skin (japanische Band)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von Skin (japanische Band)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von Skin (japanische Band)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von Skin (japanische Band)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von Skin (japanische Band)?", "Wer wird gespielt von das Mitglied von Skin (japanische Band)?", "Wer wird gespielt von die Mitglieder von Skin (japanische Band)?", "Wer wurde gespielt von das Mitglied von Skin (japanische Band)?", "Wer wurde gespielt von die Mitglieder von Skin (japanische Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Skin_(Japanese_band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von Dead Man’s Bones?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von Dead Man’s Bones?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von Dead Man’s Bones?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von Dead Man’s Bones?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von Dead Man’s Bones?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von Dead Man’s Bones?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von Dead Man’s Bones?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von Dead Man’s Bones?", "Wer wird gespielt von das Mitglied von Dead Man’s Bones?", "Wer wird gespielt von die Mitglieder von Dead Man’s Bones?", "Wer wurde gespielt von das Mitglied von Dead Man’s Bones?", "Wer wurde gespielt von die Mitglieder von Dead Man’s Bones?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dead_Man's_Bones> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von New Kids on the Block?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von New Kids on the Block?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von New Kids on the Block?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von New Kids on the Block?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von New Kids on the Block?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von New Kids on the Block?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von New Kids on the Block?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von New Kids on the Block?", "Wer wird gespielt von das Mitglied von New Kids on the Block?", "Wer wird gespielt von die Mitglieder von New Kids on the Block?", "Wer wurde gespielt von das Mitglied von New Kids on the Block?", "Wer wurde gespielt von die Mitglieder von New Kids on the Block?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/New_Kids_on_the_Block> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von The Woolpackers?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von The Woolpackers?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von The Woolpackers?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von The Woolpackers?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von The Woolpackers?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von The Woolpackers?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von The Woolpackers?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von The Woolpackers?", "Wer wird gespielt von das Mitglied von The Woolpackers?", "Wer wird gespielt von die Mitglieder von The Woolpackers?", "Wer wurde gespielt von das Mitglied von The Woolpackers?", "Wer wurde gespielt von die Mitglieder von The Woolpackers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Woolpackers> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Lolawolf?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Lolawolf?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Lolawolf?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Lolawolf?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Lolawolf?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Lolawolf?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Lolawolf?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Lolawolf?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Lolawolf?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Lolawolf?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Lolawolf?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Lolawolf?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lolawolf> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Corporal_(band)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Corporal_(band)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Corporal_(band)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Corporal_(band)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Corporal_(band)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Corporal_(band)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Corporal_(band)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Corporal_(band)?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Corporal_(band)?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Corporal_(band)?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Corporal_(band)?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Corporal_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Corporal_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Hey!_Say!_JUMP?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Hey!_Say!_JUMP?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Hey!_Say!_JUMP?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Hey!_Say!_JUMP?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Hey!_Say!_JUMP?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Hey!_Say!_JUMP?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Hey!_Say!_JUMP?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Hey!_Say!_JUMP?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Hey!_Say!_JUMP?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Hey!_Say!_JUMP?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Hey!_Say!_JUMP?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Hey!_Say!_JUMP?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hey!_Say!_JUMP> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/NYC_(band)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/NYC_(band)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/NYC_(band)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/NYC_(band)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/NYC_(band)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/NYC_(band)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/NYC_(band)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/NYC_(band)?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/NYC_(band)?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/NYC_(band)?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/NYC_(band)?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/NYC_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/NYC_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Wallows?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Wallows?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Wallows?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Wallows?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Wallows?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Wallows?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Wallows?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Wallows?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Wallows?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Wallows?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Wallows?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Wallows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Wallows> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/3Deep?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/3Deep?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/3Deep?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/3Deep?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/3Deep?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/3Deep?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/3Deep?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/3Deep?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/3Deep?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/3Deep?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/3Deep?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/3Deep?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/3Deep> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von Body Count (Band)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von Body Count (Band)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von Body Count (Band)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von Body Count (Band)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von Body Count (Band)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von Body Count (Band)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von Body Count (Band)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von Body Count (Band)?", "Wer wird gespielt von das Mitglied von Body Count (Band)?", "Wer wird gespielt von die Mitglieder von Body Count (Band)?", "Wer wurde gespielt von das Mitglied von Body Count (Band)?", "Wer wurde gespielt von die Mitglieder von Body Count (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Body_Count_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von 100 Monkeys?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von 100 Monkeys?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von 100 Monkeys?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von 100 Monkeys?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von 100 Monkeys?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von 100 Monkeys?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von 100 Monkeys?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von 100 Monkeys?", "Wer wird gespielt von das Mitglied von 100 Monkeys?", "Wer wird gespielt von die Mitglieder von 100 Monkeys?", "Wer wurde gespielt von das Mitglied von 100 Monkeys?", "Wer wurde gespielt von die Mitglieder von 100 Monkeys?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/100_Monkeys> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von Ghost of the Robot?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von Ghost of the Robot?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von Ghost of the Robot?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von Ghost of the Robot?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von Ghost of the Robot?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von Ghost of the Robot?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von Ghost of the Robot?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von Ghost of the Robot?", "Wer wird gespielt von das Mitglied von Ghost of the Robot?", "Wer wird gespielt von die Mitglieder von Ghost of the Robot?", "Wer wurde gespielt von das Mitglied von Ghost of the Robot?", "Wer wurde gespielt von die Mitglieder von Ghost of the Robot?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ghost_of_the_Robot> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von Rixton?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von Rixton?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von Rixton?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von Rixton?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von Rixton?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von Rixton?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von Rixton?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von Rixton?", "Wer wird gespielt von das Mitglied von Rixton?", "Wer wird gespielt von die Mitglieder von Rixton?", "Wer wurde gespielt von das Mitglied von Rixton?", "Wer wurde gespielt von die Mitglieder von Rixton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Push_Baby> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Hugh_Dillon_Redemption_Choir?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Hugh_Dillon_Redemption_Choir?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Hugh_Dillon_Redemption_Choir?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Hugh_Dillon_Redemption_Choir?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Hugh_Dillon_Redemption_Choir?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Hugh_Dillon_Redemption_Choir?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Hugh_Dillon_Redemption_Choir?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Hugh_Dillon_Redemption_Choir?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Hugh_Dillon_Redemption_Choir?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Hugh_Dillon_Redemption_Choir?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Hugh_Dillon_Redemption_Choir?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Hugh_Dillon_Redemption_Choir?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hugh_Dillon_Redemption_Choir> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Headstones_(band)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Headstones_(band)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Headstones_(band)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Headstones_(band)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Headstones_(band)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Headstones_(band)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Headstones_(band)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Headstones_(band)?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Headstones_(band)?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Headstones_(band)?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Headstones_(band)?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Headstones_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Headstones_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Wicked_Wisdom?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Wicked_Wisdom?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Wicked_Wisdom?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Wicked_Wisdom?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Wicked_Wisdom?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Wicked_Wisdom?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Wicked_Wisdom?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Wicked_Wisdom?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Wicked_Wisdom?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Wicked_Wisdom?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Wicked_Wisdom?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Wicked_Wisdom?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Wicked_Wisdom> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Counterfeit_(band)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Counterfeit_(band)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Counterfeit_(band)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Counterfeit_(band)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Counterfeit_(band)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Counterfeit_(band)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Counterfeit_(band)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Counterfeit_(band)?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Counterfeit_(band)?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Counterfeit_(band)?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Counterfeit_(band)?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Counterfeit_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Counterfeit_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von 78violet?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von 78violet?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von 78violet?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von 78violet?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von 78violet?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von 78violet?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von 78violet?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von 78violet?", "Wer wird gespielt von das Mitglied von 78violet?", "Wer wird gespielt von die Mitglieder von 78violet?", "Wer wurde gespielt von das Mitglied von 78violet?", "Wer wurde gespielt von die Mitglieder von 78violet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Aly_&_AJ> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von The Lonely Island?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von The Lonely Island?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von The Lonely Island?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von The Lonely Island?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von The Lonely Island?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von The Lonely Island?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von The Lonely Island?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von The Lonely Island?", "Wer wird gespielt von das Mitglied von The Lonely Island?", "Wer wird gespielt von die Mitglieder von The Lonely Island?", "Wer wurde gespielt von das Mitglied von The Lonely Island?", "Wer wurde gespielt von die Mitglieder von The Lonely Island?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Lonely_Island> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Blue_County_(music_group)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Blue_County_(music_group)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Blue_County_(music_group)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Blue_County_(music_group)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Blue_County_(music_group)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Blue_County_(music_group)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Blue_County_(music_group)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Blue_County_(music_group)?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Blue_County_(music_group)?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Blue_County_(music_group)?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Blue_County_(music_group)?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Blue_County_(music_group)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Blue_County_(music_group)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Damnocracy?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Damnocracy?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Damnocracy?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Damnocracy?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Damnocracy?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Damnocracy?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Damnocracy?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Damnocracy?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Damnocracy?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Damnocracy?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Damnocracy?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Damnocracy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Damnocracy> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Leading_Ladies_(group)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Leading_Ladies_(group)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Leading_Ladies_(group)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Leading_Ladies_(group)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Leading_Ladies_(group)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Leading_Ladies_(group)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Leading_Ladies_(group)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Leading_Ladies_(group)?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Leading_Ladies_(group)?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Leading_Ladies_(group)?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Leading_Ladies_(group)?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Leading_Ladies_(group)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Leading_Ladies_(group)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Allstars_(band)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Allstars_(band)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Allstars_(band)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Allstars_(band)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Allstars_(band)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Allstars_(band)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Allstars_(band)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Allstars_(band)?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Allstars_(band)?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Allstars_(band)?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Allstars_(band)?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Allstars_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Allstars_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/The_Peth?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/The_Peth?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/The_Peth?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/The_Peth?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/The_Peth?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/The_Peth?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/The_Peth?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/The_Peth?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/The_Peth?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/The_Peth?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/The_Peth?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/The_Peth?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Peth> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/David_and_the_Giants?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/David_and_the_Giants?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/David_and_the_Giants?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/David_and_the_Giants?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/David_and_the_Giants?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/David_and_the_Giants?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/David_and_the_Giants?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/David_and_the_Giants?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/David_and_the_Giants?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/David_and_the_Giants?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/David_and_the_Giants?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/David_and_the_Giants?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/David_and_the_Giants> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von Garfunkel and Oates?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von Garfunkel and Oates?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von Garfunkel and Oates?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von Garfunkel and Oates?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von Garfunkel and Oates?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von Garfunkel and Oates?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von Garfunkel and Oates?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von Garfunkel and Oates?", "Wer wird gespielt von das Mitglied von Garfunkel and Oates?", "Wer wird gespielt von die Mitglieder von Garfunkel and Oates?", "Wer wurde gespielt von das Mitglied von Garfunkel and Oates?", "Wer wurde gespielt von die Mitglieder von Garfunkel and Oates?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Garfunkel_and_Oates> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von Big Japan?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von Big Japan?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von Big Japan?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von Big Japan?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von Big Japan?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von Big Japan?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von Big Japan?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von Big Japan?", "Wer wird gespielt von das Mitglied von Big Japan?", "Wer wird gespielt von die Mitglieder von Big Japan?", "Wer wurde gespielt von das Mitglied von Big Japan?", "Wer wurde gespielt von die Mitglieder von Big Japan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Big_Japan> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von Celtic Thunder?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von Celtic Thunder?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von Celtic Thunder?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von Celtic Thunder?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von Celtic Thunder?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von Celtic Thunder?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von Celtic Thunder?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von Celtic Thunder?", "Wer wird gespielt von das Mitglied von Celtic Thunder?", "Wer wird gespielt von die Mitglieder von Celtic Thunder?", "Wer wurde gespielt von das Mitglied von Celtic Thunder?", "Wer wurde gespielt von die Mitglieder von Celtic Thunder?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Celtic_Thunder> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Queen_+_Adam_Lambert?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Queen_+_Adam_Lambert?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Queen_+_Adam_Lambert?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Queen_+_Adam_Lambert?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Queen_+_Adam_Lambert?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Queen_+_Adam_Lambert?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Queen_+_Adam_Lambert?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Queen_+_Adam_Lambert?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Queen_+_Adam_Lambert?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Queen_+_Adam_Lambert?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Queen_+_Adam_Lambert?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Queen_+_Adam_Lambert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Queen_+_Adam_Lambert> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Winslow_(band)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Winslow_(band)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Winslow_(band)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Winslow_(band)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Winslow_(band)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Winslow_(band)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Winslow_(band)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Winslow_(band)?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Winslow_(band)?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Winslow_(band)?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Winslow_(band)?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Winslow_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Winslow_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Kylie_and_Garibay?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Kylie_and_Garibay?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Kylie_and_Garibay?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Kylie_and_Garibay?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Kylie_and_Garibay?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Kylie_and_Garibay?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Kylie_and_Garibay?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Kylie_and_Garibay?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Kylie_and_Garibay?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Kylie_and_Garibay?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Kylie_and_Garibay?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Kylie_and_Garibay?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kylie_and_Garibay> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von Fania All-Stars?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von Fania All-Stars?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von Fania All-Stars?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von Fania All-Stars?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von Fania All-Stars?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von Fania All-Stars?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von Fania All-Stars?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von Fania All-Stars?", "Wer wird gespielt von das Mitglied von Fania All-Stars?", "Wer wird gespielt von die Mitglieder von Fania All-Stars?", "Wer wurde gespielt von das Mitglied von Fania All-Stars?", "Wer wurde gespielt von die Mitglieder von Fania All-Stars?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Fania_All-Stars> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von The Who?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von The Who?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von The Who?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von The Who?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von The Who?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von The Who?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von The Who?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von The Who?", "Wer wird gespielt von das Mitglied von The Who?", "Wer wird gespielt von die Mitglieder von The Who?", "Wer wurde gespielt von das Mitglied von The Who?", "Wer wurde gespielt von die Mitglieder von The Who?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Who> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von Player (Band)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von Player (Band)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von Player (Band)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von Player (Band)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von Player (Band)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von Player (Band)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von Player (Band)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von Player (Band)?", "Wer wird gespielt von das Mitglied von Player (Band)?", "Wer wird gespielt von die Mitglieder von Player (Band)?", "Wer wurde gespielt von das Mitglied von Player (Band)?", "Wer wurde gespielt von die Mitglieder von Player (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Player_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/The_Naked_Trucker_and_T-Bones_Show?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/The_Naked_Trucker_and_T-Bones_Show?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/The_Naked_Trucker_and_T-Bones_Show?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/The_Naked_Trucker_and_T-Bones_Show?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/The_Naked_Trucker_and_T-Bones_Show?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/The_Naked_Trucker_and_T-Bones_Show?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/The_Naked_Trucker_and_T-Bones_Show?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/The_Naked_Trucker_and_T-Bones_Show?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/The_Naked_Trucker_and_T-Bones_Show?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/The_Naked_Trucker_and_T-Bones_Show?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/The_Naked_Trucker_and_T-Bones_Show?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/The_Naked_Trucker_and_T-Bones_Show?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Naked_Trucker_and_T-Bones_Show> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Swing_on_This?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Swing_on_This?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Swing_on_This?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Swing_on_This?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Swing_on_This?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Swing_on_This?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Swing_on_This?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Swing_on_This?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Swing_on_This?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Swing_on_This?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Swing_on_This?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Swing_on_This?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Swing_on_This> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/MOTHXR?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/MOTHXR?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/MOTHXR?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/MOTHXR?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/MOTHXR?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/MOTHXR?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/MOTHXR?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/MOTHXR?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/MOTHXR?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/MOTHXR?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/MOTHXR?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/MOTHXR?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/MOTHXR> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Girls@Play?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Girls@Play?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Girls@Play?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Girls@Play?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Girls@Play?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Girls@Play?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Girls@Play?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Girls@Play?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Girls@Play?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Girls@Play?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Girls@Play?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Girls@Play?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Girls@Play> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Swet_Shop_Boys?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Swet_Shop_Boys?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Swet_Shop_Boys?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Swet_Shop_Boys?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Swet_Shop_Boys?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Swet_Shop_Boys?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Swet_Shop_Boys?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Swet_Shop_Boys?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Swet_Shop_Boys?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Swet_Shop_Boys?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Swet_Shop_Boys?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Swet_Shop_Boys?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Swet_Shop_Boys> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/No_Plan_B_(band)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/No_Plan_B_(band)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/No_Plan_B_(band)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/No_Plan_B_(band)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/No_Plan_B_(band)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/No_Plan_B_(band)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/No_Plan_B_(band)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/No_Plan_B_(band)?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/No_Plan_B_(band)?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/No_Plan_B_(band)?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/No_Plan_B_(band)?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/No_Plan_B_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/No_Plan_B_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von Angelfish?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von Angelfish?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von Angelfish?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von Angelfish?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von Angelfish?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von Angelfish?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von Angelfish?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von Angelfish?", "Wer wird gespielt von das Mitglied von Angelfish?", "Wer wird gespielt von die Mitglieder von Angelfish?", "Wer wurde gespielt von das Mitglied von Angelfish?", "Wer wurde gespielt von die Mitglieder von Angelfish?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Angelfish_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von Garbage?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von Garbage?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von Garbage?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von Garbage?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von Garbage?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von Garbage?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von Garbage?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von Garbage?", "Wer wird gespielt von das Mitglied von Garbage?", "Wer wird gespielt von die Mitglieder von Garbage?", "Wer wurde gespielt von das Mitglied von Garbage?", "Wer wurde gespielt von die Mitglieder von Garbage?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Garbage_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von Genesis (Band)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von Genesis (Band)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von Genesis (Band)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von Genesis (Band)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von Genesis (Band)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von Genesis (Band)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von Genesis (Band)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von Genesis (Band)?", "Wer wird gespielt von das Mitglied von Genesis (Band)?", "Wer wird gespielt von die Mitglieder von Genesis (Band)?", "Wer wurde gespielt von das Mitglied von Genesis (Band)?", "Wer wurde gespielt von die Mitglieder von Genesis (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Genesis_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von Goodbye Mr. Mackenzie?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von Goodbye Mr. Mackenzie?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von Goodbye Mr. Mackenzie?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von Goodbye Mr. Mackenzie?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von Goodbye Mr. Mackenzie?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von Goodbye Mr. Mackenzie?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von Goodbye Mr. Mackenzie?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von Goodbye Mr. Mackenzie?", "Wer wird gespielt von das Mitglied von Goodbye Mr. Mackenzie?", "Wer wird gespielt von die Mitglieder von Goodbye Mr. Mackenzie?", "Wer wurde gespielt von das Mitglied von Goodbye Mr. Mackenzie?", "Wer wurde gespielt von die Mitglieder von Goodbye Mr. Mackenzie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Goodbye_Mr_Mackenzie> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von The Pretty Reckless?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von The Pretty Reckless?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von The Pretty Reckless?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von The Pretty Reckless?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von The Pretty Reckless?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von The Pretty Reckless?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von The Pretty Reckless?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von The Pretty Reckless?", "Wer wird gespielt von das Mitglied von The Pretty Reckless?", "Wer wird gespielt von die Mitglieder von The Pretty Reckless?", "Wer wurde gespielt von das Mitglied von The Pretty Reckless?", "Wer wurde gespielt von die Mitglieder von The Pretty Reckless?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/The_Pretty_Reckless> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von Rogue Traders?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von Rogue Traders?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von Rogue Traders?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von Rogue Traders?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von Rogue Traders?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von Rogue Traders?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von Rogue Traders?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von Rogue Traders?", "Wer wird gespielt von das Mitglied von Rogue Traders?", "Wer wird gespielt von die Mitglieder von Rogue Traders?", "Wer wurde gespielt von das Mitglied von Rogue Traders?", "Wer wurde gespielt von die Mitglieder von Rogue Traders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rogue_Traders> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von Jonas Brothers?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von Jonas Brothers?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von Jonas Brothers?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von Jonas Brothers?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von Jonas Brothers?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von Jonas Brothers?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von Jonas Brothers?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von Jonas Brothers?", "Wer wird gespielt von das Mitglied von Jonas Brothers?", "Wer wird gespielt von die Mitglieder von Jonas Brothers?", "Wer wurde gespielt von das Mitglied von Jonas Brothers?", "Wer wurde gespielt von die Mitglieder von Jonas Brothers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jonas_Brothers> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Black_Eyed_Peas?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Black_Eyed_Peas?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Black_Eyed_Peas?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Black_Eyed_Peas?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Black_Eyed_Peas?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Black_Eyed_Peas?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Black_Eyed_Peas?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Black_Eyed_Peas?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Black_Eyed_Peas?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Black_Eyed_Peas?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Black_Eyed_Peas?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Black_Eyed_Peas?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Black_Eyed_Peas> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Boomkat?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Boomkat?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Boomkat?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Boomkat?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Boomkat?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Boomkat?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Boomkat?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Boomkat?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Boomkat?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Boomkat?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Boomkat?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Boomkat?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Boomkat> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Nat_and_Alex_Wolff?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Nat_and_Alex_Wolff?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Nat_and_Alex_Wolff?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Nat_and_Alex_Wolff?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Nat_and_Alex_Wolff?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Nat_and_Alex_Wolff?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Nat_and_Alex_Wolff?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Nat_and_Alex_Wolff?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Nat_and_Alex_Wolff?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Nat_and_Alex_Wolff?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Nat_and_Alex_Wolff?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Nat_and_Alex_Wolff?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nat_and_Alex_Wolff> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von E Street Band?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von E Street Band?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von E Street Band?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von E Street Band?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von E Street Band?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von E Street Band?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von E Street Band?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von E Street Band?", "Wer wird gespielt von das Mitglied von E Street Band?", "Wer wird gespielt von die Mitglieder von E Street Band?", "Wer wurde gespielt von das Mitglied von E Street Band?", "Wer wurde gespielt von die Mitglieder von E Street Band?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/E_Street_Band> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von God (Band)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von God (Band)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von God (Band)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von God (Band)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von God (Band)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von God (Band)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von God (Band)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von God (Band)?", "Wer wird gespielt von das Mitglied von God (Band)?", "Wer wird gespielt von die Mitglieder von God (Band)?", "Wer wurde gespielt von das Mitglied von God (Band)?", "Wer wurde gespielt von die Mitglieder von God (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/G.o.d> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von Hollywood Vampires?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von Hollywood Vampires?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von Hollywood Vampires?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von Hollywood Vampires?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von Hollywood Vampires?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von Hollywood Vampires?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von Hollywood Vampires?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von Hollywood Vampires?", "Wer wird gespielt von das Mitglied von Hollywood Vampires?", "Wer wird gespielt von die Mitglieder von Hollywood Vampires?", "Wer wurde gespielt von das Mitglied von Hollywood Vampires?", "Wer wurde gespielt von die Mitglieder von Hollywood Vampires?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hollywood_Vampires_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von Black Star (Band)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von Black Star (Band)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von Black Star (Band)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von Black Star (Band)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von Black Star (Band)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von Black Star (Band)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von Black Star (Band)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von Black Star (Band)?", "Wer wird gespielt von das Mitglied von Black Star (Band)?", "Wer wird gespielt von die Mitglieder von Black Star (Band)?", "Wer wurde gespielt von das Mitglied von Black Star (Band)?", "Wer wurde gespielt von die Mitglieder von Black Star (Band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Black_Star_(rap_duo)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von Black Star (Bildagentur)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von Black Star (Bildagentur)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von Black Star (Bildagentur)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von Black Star (Bildagentur)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von Black Star (Bildagentur)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von Black Star (Bildagentur)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von Black Star (Bildagentur)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von Black Star (Bildagentur)?", "Wer wird gespielt von das Mitglied von Black Star (Bildagentur)?", "Wer wird gespielt von die Mitglieder von Black Star (Bildagentur)?", "Wer wurde gespielt von das Mitglied von Black Star (Bildagentur)?", "Wer wurde gespielt von die Mitglieder von Black Star (Bildagentur)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Black_Star_(rap_duo)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Gary_Ruley_and_Mule_Train?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Gary_Ruley_and_Mule_Train?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Gary_Ruley_and_Mule_Train?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Gary_Ruley_and_Mule_Train?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Gary_Ruley_and_Mule_Train?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Gary_Ruley_and_Mule_Train?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Gary_Ruley_and_Mule_Train?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Gary_Ruley_and_Mule_Train?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Gary_Ruley_and_Mule_Train?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Gary_Ruley_and_Mule_Train?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Gary_Ruley_and_Mule_Train?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Gary_Ruley_and_Mule_Train?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gary_Ruley_and_Mule_Train> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Fear_of_Pop?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Fear_of_Pop?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Fear_of_Pop?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Fear_of_Pop?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Fear_of_Pop?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Fear_of_Pop?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Fear_of_Pop?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Fear_of_Pop?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Fear_of_Pop?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Fear_of_Pop?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Fear_of_Pop?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Fear_of_Pop?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Fear_of_Pop> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/V6_(band)?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/V6_(band)?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/V6_(band)?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/V6_(band)?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/V6_(band)?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/V6_(band)?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/V6_(band)?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/V6_(band)?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/V6_(band)?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/V6_(band)?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/V6_(band)?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/V6_(band)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/V6_(band)> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "52",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BAND",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von das Mitglied von http://dbpedia.org/resource/Dec_99th?", "Welche fiktiver Charakters werden gespielt von die Mitglieder von http://dbpedia.org/resource/Dec_99th?", "Welche fiktiver Charakters wurden gespielt von das Mitglied von http://dbpedia.org/resource/Dec_99th?", "Welche fiktiver Charakters wurden gespielt von die Mitglieder von http://dbpedia.org/resource/Dec_99th?", "Welcher fiktiver Charakter wird gespielt von das Mitglied von http://dbpedia.org/resource/Dec_99th?", "Welcher fiktiver Charakter wird gespielt von die Mitglieder von http://dbpedia.org/resource/Dec_99th?", "Welcher fiktiver Charakter wurde gespielt von das Mitglied von http://dbpedia.org/resource/Dec_99th?", "Welcher fiktiver Charakter wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Dec_99th?", "Wer wird gespielt von das Mitglied von http://dbpedia.org/resource/Dec_99th?", "Wer wird gespielt von die Mitglieder von http://dbpedia.org/resource/Dec_99th?", "Wer wurde gespielt von das Mitglied von http://dbpedia.org/resource/Dec_99th?", "Wer wurde gespielt von die Mitglieder von http://dbpedia.org/resource/Dec_99th?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dec_99th> <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Lucille Ball?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Lucille Ball?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Lucille Ball?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Lucille Ball?", "Wer wird gespielt von Persons verheiratet mit Lucille Ball?", "Wer wurde gespielt von Persons verheiratet mit Lucille Ball?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucille_Ball> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Gordon Scott (Schauspieler)?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Gordon Scott (Schauspieler)?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Gordon Scott (Schauspieler)?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Gordon Scott (Schauspieler)?", "Wer wird gespielt von Persons verheiratet mit Gordon Scott (Schauspieler)?", "Wer wurde gespielt von Persons verheiratet mit Gordon Scott (Schauspieler)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gordon_Scott> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Rachel Rosenthal?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Rachel Rosenthal?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Rachel Rosenthal?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Rachel Rosenthal?", "Wer wird gespielt von Persons verheiratet mit Rachel Rosenthal?", "Wer wurde gespielt von Persons verheiratet mit Rachel Rosenthal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rachel_Rosenthal> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Alan Halsall?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Alan Halsall?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Alan Halsall?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Alan Halsall?", "Wer wird gespielt von Persons verheiratet mit Alan Halsall?", "Wer wurde gespielt von Persons verheiratet mit Alan Halsall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alan_Halsall> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Alan Thicke?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Alan Thicke?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Alan Thicke?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Alan Thicke?", "Wer wird gespielt von Persons verheiratet mit Alan Thicke?", "Wer wurde gespielt von Persons verheiratet mit Alan Thicke?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alan_Thicke> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Alec Baldwin?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Alec Baldwin?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Alec Baldwin?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Alec Baldwin?", "Wer wird gespielt von Persons verheiratet mit Alec Baldwin?", "Wer wurde gespielt von Persons verheiratet mit Alec Baldwin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alec_Baldwin> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Cecilia Nilsson (Schauspielerin)?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Cecilia Nilsson (Schauspielerin)?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Cecilia Nilsson (Schauspielerin)?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Cecilia Nilsson (Schauspielerin)?", "Wer wird gespielt von Persons verheiratet mit Cecilia Nilsson (Schauspielerin)?", "Wer wurde gespielt von Persons verheiratet mit Cecilia Nilsson (Schauspielerin)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cecilia_Nilsson_(actress)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Chelsea Noble?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Chelsea Noble?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Chelsea Noble?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Chelsea Noble?", "Wer wird gespielt von Persons verheiratet mit Chelsea Noble?", "Wer wurde gespielt von Persons verheiratet mit Chelsea Noble?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chelsea_Noble> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Florenz Ziegfeld junior?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Florenz Ziegfeld junior?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Florenz Ziegfeld junior?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Florenz Ziegfeld junior?", "Wer wird gespielt von Persons verheiratet mit Florenz Ziegfeld junior?", "Wer wurde gespielt von Persons verheiratet mit Florenz Ziegfeld junior?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Florenz_Ziegfeld_Jr.> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Noah Bean?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Noah Bean?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Noah Bean?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Noah Bean?", "Wer wird gespielt von Persons verheiratet mit Noah Bean?", "Wer wurde gespielt von Persons verheiratet mit Noah Bean?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Noah_Bean> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Noah Danby?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Noah Danby?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Noah Danby?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Noah Danby?", "Wer wird gespielt von Persons verheiratet mit Noah Danby?", "Wer wurde gespielt von Persons verheiratet mit Noah Danby?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Noah_Danby> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Touriya Haoud?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Touriya Haoud?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Touriya Haoud?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Touriya Haoud?", "Wer wird gespielt von Persons verheiratet mit Touriya Haoud?", "Wer wurde gespielt von Persons verheiratet mit Touriya Haoud?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Touriya_Haoud> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Camilla Dallerup?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Camilla Dallerup?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Camilla Dallerup?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Camilla Dallerup?", "Wer wird gespielt von Persons verheiratet mit Camilla Dallerup?", "Wer wurde gespielt von Persons verheiratet mit Camilla Dallerup?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Camilla_Sacre-Dallerup> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Carmine Giovinazzo?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Carmine Giovinazzo?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Carmine Giovinazzo?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Carmine Giovinazzo?", "Wer wird gespielt von Persons verheiratet mit Carmine Giovinazzo?", "Wer wurde gespielt von Persons verheiratet mit Carmine Giovinazzo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carmine_Giovinazzo> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Chris Evans (Moderator)?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Chris Evans (Moderator)?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Chris Evans (Moderator)?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Chris Evans (Moderator)?", "Wer wird gespielt von Persons verheiratet mit Chris Evans (Moderator)?", "Wer wurde gespielt von Persons verheiratet mit Chris Evans (Moderator)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chris_Evans_(presenter)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Christie Brinkley?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Christie Brinkley?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Christie Brinkley?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Christie Brinkley?", "Wer wird gespielt von Persons verheiratet mit Christie Brinkley?", "Wer wurde gespielt von Persons verheiratet mit Christie Brinkley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Christie_Brinkley> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Christopher Lambert?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Christopher Lambert?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Christopher Lambert?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Christopher Lambert?", "Wer wird gespielt von Persons verheiratet mit Christopher Lambert?", "Wer wurde gespielt von Persons verheiratet mit Christopher Lambert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Christopher_Lambert> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Clarence Williams III?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Clarence Williams III?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Clarence Williams III?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Clarence Williams III?", "Wer wird gespielt von Persons verheiratet mit Clarence Williams III?", "Wer wurde gespielt von Persons verheiratet mit Clarence Williams III?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Clarence_Williams_III> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Garfield Morgan?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Garfield Morgan?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Garfield Morgan?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Garfield Morgan?", "Wer wird gespielt von Persons verheiratet mit Garfield Morgan?", "Wer wurde gespielt von Persons verheiratet mit Garfield Morgan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Garfield_Morgan> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Gary Oldman?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Gary Oldman?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Gary Oldman?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Gary Oldman?", "Wer wird gespielt von Persons verheiratet mit Gary Oldman?", "Wer wurde gespielt von Persons verheiratet mit Gary Oldman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gary_Oldman> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit George Hearn?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit George Hearn?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit George Hearn?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit George Hearn?", "Wer wird gespielt von Persons verheiratet mit George Hearn?", "Wer wurde gespielt von Persons verheiratet mit George Hearn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/George_Hearn> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Jennifer Aniston?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Jennifer Aniston?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Jennifer Aniston?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Jennifer Aniston?", "Wer wird gespielt von Persons verheiratet mit Jennifer Aniston?", "Wer wurde gespielt von Persons verheiratet mit Jennifer Aniston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jennifer_Aniston> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Jennifer Esposito?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Jennifer Esposito?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Jennifer Esposito?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Jennifer Esposito?", "Wer wird gespielt von Persons verheiratet mit Jennifer Esposito?", "Wer wurde gespielt von Persons verheiratet mit Jennifer Esposito?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jennifer_Esposito> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Jennifer Schwalbach Smith?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Jennifer Schwalbach Smith?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Jennifer Schwalbach Smith?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Jennifer Schwalbach Smith?", "Wer wird gespielt von Persons verheiratet mit Jennifer Schwalbach Smith?", "Wer wurde gespielt von Persons verheiratet mit Jennifer Schwalbach Smith?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jennifer_Schwalbach_Smith> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Joan Blondell?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Joan Blondell?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Joan Blondell?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Joan Blondell?", "Wer wird gespielt von Persons verheiratet mit Joan Blondell?", "Wer wurde gespielt von Persons verheiratet mit Joan Blondell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joan_Blondell> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Joanne Whalley?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Joanne Whalley?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Joanne Whalley?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Joanne Whalley?", "Wer wird gespielt von Persons verheiratet mit Joanne Whalley?", "Wer wurde gespielt von Persons verheiratet mit Joanne Whalley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joanne_Whalley> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit John Billingsley?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit John Billingsley?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit John Billingsley?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit John Billingsley?", "Wer wird gespielt von Persons verheiratet mit John Billingsley?", "Wer wurde gespielt von Persons verheiratet mit John Billingsley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_Billingsley> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit John Malkovich?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit John Malkovich?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit John Malkovich?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit John Malkovich?", "Wer wird gespielt von Persons verheiratet mit John Malkovich?", "Wer wurde gespielt von Persons verheiratet mit John Malkovich?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_Malkovich> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Katherine LaNasa?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Katherine LaNasa?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Katherine LaNasa?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Katherine LaNasa?", "Wer wird gespielt von Persons verheiratet mit Katherine LaNasa?", "Wer wurde gespielt von Persons verheiratet mit Katherine LaNasa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Katherine_LaNasa> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Keith Larsen?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Keith Larsen?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Keith Larsen?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Keith Larsen?", "Wer wird gespielt von Persons verheiratet mit Keith Larsen?", "Wer wurde gespielt von Persons verheiratet mit Keith Larsen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Keith_Larsen> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Ken Campbell?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Ken Campbell?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Ken Campbell?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Ken Campbell?", "Wer wird gespielt von Persons verheiratet mit Ken Campbell?", "Wer wurde gespielt von Persons verheiratet mit Ken Campbell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ken_Campbell> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Zach Gilford?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Zach Gilford?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Zach Gilford?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Zach Gilford?", "Wer wird gespielt von Persons verheiratet mit Zach Gilford?", "Wer wurde gespielt von Persons verheiratet mit Zach Gilford?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Zach_Gilford> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Michelle Phillips?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Michelle Phillips?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Michelle Phillips?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Michelle Phillips?", "Wer wird gespielt von Persons verheiratet mit Michelle Phillips?", "Wer wurde gespielt von Persons verheiratet mit Michelle Phillips?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Michelle_Phillips> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Ryan Reynolds?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Ryan Reynolds?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Ryan Reynolds?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Ryan Reynolds?", "Wer wird gespielt von Persons verheiratet mit Ryan Reynolds?", "Wer wurde gespielt von Persons verheiratet mit Ryan Reynolds?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ryan_Reynolds> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Franco Nero?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Franco Nero?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Franco Nero?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Franco Nero?", "Wer wird gespielt von Persons verheiratet mit Franco Nero?", "Wer wurde gespielt von Persons verheiratet mit Franco Nero?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Franco_Nero> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Gustaw Holoubek?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Gustaw Holoubek?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Gustaw Holoubek?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Gustaw Holoubek?", "Wer wird gespielt von Persons verheiratet mit Gustaw Holoubek?", "Wer wurde gespielt von Persons verheiratet mit Gustaw Holoubek?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gustaw_Holoubek> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Hal Holbrook?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Hal Holbrook?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Hal Holbrook?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Hal Holbrook?", "Wer wird gespielt von Persons verheiratet mit Hal Holbrook?", "Wer wurde gespielt von Persons verheiratet mit Hal Holbrook?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hal_Holbrook> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Jack Wagner?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Jack Wagner?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Jack Wagner?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Jack Wagner?", "Wer wird gespielt von Persons verheiratet mit Jack Wagner?", "Wer wurde gespielt von Persons verheiratet mit Jack Wagner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jack_Wagner_(actor)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Jane Kaczmarek?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Jane Kaczmarek?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Jane Kaczmarek?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Jane Kaczmarek?", "Wer wird gespielt von Persons verheiratet mit Jane Kaczmarek?", "Wer wurde gespielt von Persons verheiratet mit Jane Kaczmarek?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jane_Kaczmarek> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Jane Powell?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Jane Powell?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Jane Powell?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Jane Powell?", "Wer wird gespielt von Persons verheiratet mit Jane Powell?", "Wer wurde gespielt von Persons verheiratet mit Jane Powell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jane_Powell> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Sebastian Roché?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Sebastian Roché?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Sebastian Roché?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Sebastian Roché?", "Wer wird gespielt von Persons verheiratet mit Sebastian Roché?", "Wer wurde gespielt von Persons verheiratet mit Sebastian Roché?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sebastian_Roché> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Amy Landecker?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Amy Landecker?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Amy Landecker?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Amy Landecker?", "Wer wird gespielt von Persons verheiratet mit Amy Landecker?", "Wer wurde gespielt von Persons verheiratet mit Amy Landecker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Amy_Landecker> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Andrew Taylor (Künstler)?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Andrew Taylor (Künstler)?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Andrew Taylor (Künstler)?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Andrew Taylor (Künstler)?", "Wer wird gespielt von Persons verheiratet mit Andrew Taylor (Künstler)?", "Wer wurde gespielt von Persons verheiratet mit Andrew Taylor (Künstler)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Andrew_Taylor_(painter)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Angelina Jolie?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Angelina Jolie?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Angelina Jolie?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Angelina Jolie?", "Wer wird gespielt von Persons verheiratet mit Angelina Jolie?", "Wer wurde gespielt von Persons verheiratet mit Angelina Jolie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Angelina_Jolie> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Anthony Havelock-Allan?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Anthony Havelock-Allan?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Anthony Havelock-Allan?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Anthony Havelock-Allan?", "Wer wird gespielt von Persons verheiratet mit Anthony Havelock-Allan?", "Wer wurde gespielt von Persons verheiratet mit Anthony Havelock-Allan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Anthony_Havelock-Allan> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Aretha Franklin?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Aretha Franklin?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Aretha Franklin?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Aretha Franklin?", "Wer wird gespielt von Persons verheiratet mit Aretha Franklin?", "Wer wurde gespielt von Persons verheiratet mit Aretha Franklin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Aretha_Franklin> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Audrey Christie?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Audrey Christie?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Audrey Christie?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Audrey Christie?", "Wer wird gespielt von Persons verheiratet mit Audrey Christie?", "Wer wurde gespielt von Persons verheiratet mit Audrey Christie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Audrey_Christie> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Olga Schoberová?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Olga Schoberová?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Olga Schoberová?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Olga Schoberová?", "Wer wird gespielt von Persons verheiratet mit Olga Schoberová?", "Wer wurde gespielt von Persons verheiratet mit Olga Schoberová?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Olga_Schoberová> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Owain Yeoman?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Owain Yeoman?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Owain Yeoman?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Owain Yeoman?", "Wer wird gespielt von Persons verheiratet mit Owain Yeoman?", "Wer wurde gespielt von Persons verheiratet mit Owain Yeoman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Owain_Yeoman> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Rebecca Breeds?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Rebecca Breeds?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Rebecca Breeds?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Rebecca Breeds?", "Wer wird gespielt von Persons verheiratet mit Rebecca Breeds?", "Wer wurde gespielt von Persons verheiratet mit Rebecca Breeds?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rebecca_Breeds> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Adam Rayner?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Adam Rayner?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Adam Rayner?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Adam Rayner?", "Wer wird gespielt von Persons verheiratet mit Adam Rayner?", "Wer wurde gespielt von Persons verheiratet mit Adam Rayner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Adam_Rayner> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Bruce Paltrow?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Bruce Paltrow?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Bruce Paltrow?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Bruce Paltrow?", "Wer wird gespielt von Persons verheiratet mit Bruce Paltrow?", "Wer wurde gespielt von Persons verheiratet mit Bruce Paltrow?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bruce_Paltrow> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Corey Feldman?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Corey Feldman?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Corey Feldman?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Corey Feldman?", "Wer wird gespielt von Persons verheiratet mit Corey Feldman?", "Wer wurde gespielt von Persons verheiratet mit Corey Feldman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Corey_Feldman> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Courtney Ford?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Courtney Ford?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Courtney Ford?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Courtney Ford?", "Wer wird gespielt von Persons verheiratet mit Courtney Ford?", "Wer wurde gespielt von Persons verheiratet mit Courtney Ford?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Courtney_Ford> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Cynda Williams?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Cynda Williams?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Cynda Williams?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Cynda Williams?", "Wer wird gespielt von Persons verheiratet mit Cynda Williams?", "Wer wurde gespielt von Persons verheiratet mit Cynda Williams?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cynda_Williams> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Laurence Fox?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Laurence Fox?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Laurence Fox?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Laurence Fox?", "Wer wird gespielt von Persons verheiratet mit Laurence Fox?", "Wer wurde gespielt von Persons verheiratet mit Laurence Fox?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Laurence_Fox> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Daria Halprin?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Daria Halprin?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Daria Halprin?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Daria Halprin?", "Wer wird gespielt von Persons verheiratet mit Daria Halprin?", "Wer wurde gespielt von Persons verheiratet mit Daria Halprin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Daria_Halprin> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit David Walton (Schauspieler)?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit David Walton (Schauspieler)?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit David Walton (Schauspieler)?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit David Walton (Schauspieler)?", "Wer wird gespielt von Persons verheiratet mit David Walton (Schauspieler)?", "Wer wurde gespielt von Persons verheiratet mit David Walton (Schauspieler)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/David_Walton_(actor)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Dax Shepard?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Dax Shepard?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Dax Shepard?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Dax Shepard?", "Wer wird gespielt von Persons verheiratet mit Dax Shepard?", "Wer wurde gespielt von Persons verheiratet mit Dax Shepard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dax_Shepard> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Paul Wegener?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Paul Wegener?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Paul Wegener?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Paul Wegener?", "Wer wird gespielt von Persons verheiratet mit Paul Wegener?", "Wer wurde gespielt von Persons verheiratet mit Paul Wegener?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Paul_Wegener> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Peter Gilmore?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Peter Gilmore?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Peter Gilmore?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Peter Gilmore?", "Wer wird gespielt von Persons verheiratet mit Peter Gilmore?", "Wer wurde gespielt von Persons verheiratet mit Peter Gilmore?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Peter_Gilmore> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Peter Sarsgaard?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Peter Sarsgaard?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Peter Sarsgaard?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Peter Sarsgaard?", "Wer wird gespielt von Persons verheiratet mit Peter Sarsgaard?", "Wer wurde gespielt von Persons verheiratet mit Peter Sarsgaard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Peter_Sarsgaard> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Robert G. Tapert?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Robert G. Tapert?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Robert G. Tapert?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Robert G. Tapert?", "Wer wird gespielt von Persons verheiratet mit Robert G. Tapert?", "Wer wurde gespielt von Persons verheiratet mit Robert G. Tapert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Robert_Tapert> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Rose Leslie?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Rose Leslie?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Rose Leslie?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Rose Leslie?", "Wer wird gespielt von Persons verheiratet mit Rose Leslie?", "Wer wurde gespielt von Persons verheiratet mit Rose Leslie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rose_Leslie> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Sheila Gish?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Sheila Gish?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Sheila Gish?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Sheila Gish?", "Wer wird gespielt von Persons verheiratet mit Sheila Gish?", "Wer wurde gespielt von Persons verheiratet mit Sheila Gish?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sheila_Gish> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Silvana Gallardo?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Silvana Gallardo?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Silvana Gallardo?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Silvana Gallardo?", "Wer wird gespielt von Persons verheiratet mit Silvana Gallardo?", "Wer wurde gespielt von Persons verheiratet mit Silvana Gallardo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Silvana_Gallardo> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Susan Yeagley?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Susan Yeagley?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Susan Yeagley?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Susan Yeagley?", "Wer wird gespielt von Persons verheiratet mit Susan Yeagley?", "Wer wurde gespielt von Persons verheiratet mit Susan Yeagley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Susan_Yeagley> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Tamara Lees?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Tamara Lees?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Tamara Lees?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Tamara Lees?", "Wer wird gespielt von Persons verheiratet mit Tamara Lees?", "Wer wurde gespielt von Persons verheiratet mit Tamara Lees?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tamara_Lees> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Tatjana Jewgenjewna Samoilowa?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Tatjana Jewgenjewna Samoilowa?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Tatjana Jewgenjewna Samoilowa?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Tatjana Jewgenjewna Samoilowa?", "Wer wird gespielt von Persons verheiratet mit Tatjana Jewgenjewna Samoilowa?", "Wer wurde gespielt von Persons verheiratet mit Tatjana Jewgenjewna Samoilowa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tatiana_Samoilova> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Virginia McKenna?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Virginia McKenna?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Virginia McKenna?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Virginia McKenna?", "Wer wird gespielt von Persons verheiratet mit Virginia McKenna?", "Wer wurde gespielt von Persons verheiratet mit Virginia McKenna?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Virginia_McKenna> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Ethan Hawke?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Ethan Hawke?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Ethan Hawke?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Ethan Hawke?", "Wer wird gespielt von Persons verheiratet mit Ethan Hawke?", "Wer wurde gespielt von Persons verheiratet mit Ethan Hawke?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ethan_Hawke> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Nick Jonas?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Nick Jonas?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Nick Jonas?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Nick Jonas?", "Wer wird gespielt von Persons verheiratet mit Nick Jonas?", "Wer wurde gespielt von Persons verheiratet mit Nick Jonas?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nick_Jonas> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Phoebe Cates?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Phoebe Cates?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Phoebe Cates?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Phoebe Cates?", "Wer wird gespielt von Persons verheiratet mit Phoebe Cates?", "Wer wurde gespielt von Persons verheiratet mit Phoebe Cates?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Phoebe_Cates> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Phyllis Logan?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Phyllis Logan?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Phyllis Logan?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Phyllis Logan?", "Wer wird gespielt von Persons verheiratet mit Phyllis Logan?", "Wer wurde gespielt von Persons verheiratet mit Phyllis Logan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Phyllis_Logan> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Pollyanna McIntosh?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Pollyanna McIntosh?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Pollyanna McIntosh?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Pollyanna McIntosh?", "Wer wird gespielt von Persons verheiratet mit Pollyanna McIntosh?", "Wer wurde gespielt von Persons verheiratet mit Pollyanna McIntosh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Pollyanna_McIntosh> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Wayne Northrop?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Wayne Northrop?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Wayne Northrop?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Wayne Northrop?", "Wer wird gespielt von Persons verheiratet mit Wayne Northrop?", "Wer wurde gespielt von Persons verheiratet mit Wayne Northrop?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Wayne_Northrop> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Eleanor Powell?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Eleanor Powell?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Eleanor Powell?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Eleanor Powell?", "Wer wird gespielt von Persons verheiratet mit Eleanor Powell?", "Wer wurde gespielt von Persons verheiratet mit Eleanor Powell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Eleanor_Powell> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Eliza Taylor?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Eliza Taylor?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Eliza Taylor?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Eliza Taylor?", "Wer wird gespielt von Persons verheiratet mit Eliza Taylor?", "Wer wurde gespielt von Persons verheiratet mit Eliza Taylor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Eliza_Taylor> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Elizabeth Berridge?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Elizabeth Berridge?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Elizabeth Berridge?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Elizabeth Berridge?", "Wer wird gespielt von Persons verheiratet mit Elizabeth Berridge?", "Wer wurde gespielt von Persons verheiratet mit Elizabeth Berridge?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elizabeth_Berridge_(actress)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Elvis Presley?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Elvis Presley?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Elvis Presley?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Elvis Presley?", "Wer wird gespielt von Persons verheiratet mit Elvis Presley?", "Wer wurde gespielt von Persons verheiratet mit Elvis Presley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elvis_Presley> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Herbert Berghof?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Herbert Berghof?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Herbert Berghof?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Herbert Berghof?", "Wer wird gespielt von Persons verheiratet mit Herbert Berghof?", "Wer wurde gespielt von Persons verheiratet mit Herbert Berghof?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Herbert_Berghof> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit John Pankow?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit John Pankow?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit John Pankow?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit John Pankow?", "Wer wird gespielt von Persons verheiratet mit John Pankow?", "Wer wurde gespielt von Persons verheiratet mit John Pankow?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_Pankow> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit John Profumo?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit John Profumo?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit John Profumo?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit John Profumo?", "Wer wird gespielt von Persons verheiratet mit John Profumo?", "Wer wurde gespielt von Persons verheiratet mit John Profumo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_Profumo> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit José Ferrer?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit José Ferrer?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit José Ferrer?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit José Ferrer?", "Wer wird gespielt von Persons verheiratet mit José Ferrer?", "Wer wurde gespielt von Persons verheiratet mit José Ferrer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/José_Ferrer> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit June Allyson?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit June Allyson?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit June Allyson?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit June Allyson?", "Wer wird gespielt von Persons verheiratet mit June Allyson?", "Wer wurde gespielt von Persons verheiratet mit June Allyson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/June_Allyson> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Maurice Gibb?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Maurice Gibb?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Maurice Gibb?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Maurice Gibb?", "Wer wird gespielt von Persons verheiratet mit Maurice Gibb?", "Wer wurde gespielt von Persons verheiratet mit Maurice Gibb?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maurice_Gibb> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Melanie Griffith?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Melanie Griffith?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Melanie Griffith?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Melanie Griffith?", "Wer wird gespielt von Persons verheiratet mit Melanie Griffith?", "Wer wurde gespielt von Persons verheiratet mit Melanie Griffith?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Melanie_Griffith> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Melissa Benoist?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Melissa Benoist?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Melissa Benoist?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Melissa Benoist?", "Wer wird gespielt von Persons verheiratet mit Melissa Benoist?", "Wer wurde gespielt von Persons verheiratet mit Melissa Benoist?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Melissa_Benoist> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Michael Brandon (Schauspieler)?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Michael Brandon (Schauspieler)?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Michael Brandon (Schauspieler)?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Michael Brandon (Schauspieler)?", "Wer wird gespielt von Persons verheiratet mit Michael Brandon (Schauspieler)?", "Wer wurde gespielt von Persons verheiratet mit Michael Brandon (Schauspieler)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Michael_Brandon> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Marcy Walker?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Marcy Walker?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Marcy Walker?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Marcy Walker?", "Wer wird gespielt von Persons verheiratet mit Marcy Walker?", "Wer wurde gespielt von Persons verheiratet mit Marcy Walker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Marcy_Walker> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Margot Bennett (Schauspielerin)?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Margot Bennett (Schauspielerin)?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Margot Bennett (Schauspielerin)?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Margot Bennett (Schauspielerin)?", "Wer wird gespielt von Persons verheiratet mit Margot Bennett (Schauspielerin)?", "Wer wurde gespielt von Persons verheiratet mit Margot Bennett (Schauspielerin)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Margot_Bennett_(actress)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Martin Cummins?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Martin Cummins?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Martin Cummins?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Martin Cummins?", "Wer wird gespielt von Persons verheiratet mit Martin Cummins?", "Wer wurde gespielt von Persons verheiratet mit Martin Cummins?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Martin_Cummins> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Timothy West (Schauspieler)?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Timothy West (Schauspieler)?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Timothy West (Schauspieler)?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Timothy West (Schauspieler)?", "Wer wird gespielt von Persons verheiratet mit Timothy West (Schauspieler)?", "Wer wurde gespielt von Persons verheiratet mit Timothy West (Schauspieler)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Timothy_West> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Leticia Tish Cyrus?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Leticia Tish Cyrus?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Leticia Tish Cyrus?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Leticia Tish Cyrus?", "Wer wird gespielt von Persons verheiratet mit Leticia Tish Cyrus?", "Wer wurde gespielt von Persons verheiratet mit Leticia Tish Cyrus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tish_Cyrus> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit Tony Richardson?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit Tony Richardson?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit Tony Richardson?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit Tony Richardson?", "Wer wird gespielt von Persons verheiratet mit Tony Richardson?", "Wer wurde gespielt von Persons verheiratet mit Tony Richardson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tony_Richardson> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit http://dbpedia.org/resource/Luisa_Ranieri?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit http://dbpedia.org/resource/Luisa_Ranieri?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit http://dbpedia.org/resource/Luisa_Ranieri?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit http://dbpedia.org/resource/Luisa_Ranieri?", "Wer wird gespielt von Persons verheiratet mit http://dbpedia.org/resource/Luisa_Ranieri?", "Wer wurde gespielt von Persons verheiratet mit http://dbpedia.org/resource/Luisa_Ranieri?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luisa_Ranieri> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit http://dbpedia.org/resource/Gloria_Carrá?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit http://dbpedia.org/resource/Gloria_Carrá?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit http://dbpedia.org/resource/Gloria_Carrá?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit http://dbpedia.org/resource/Gloria_Carrá?", "Wer wird gespielt von Persons verheiratet mit http://dbpedia.org/resource/Gloria_Carrá?", "Wer wurde gespielt von Persons verheiratet mit http://dbpedia.org/resource/Gloria_Carrá?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gloria_Carrá> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit http://dbpedia.org/resource/Gary_Morton?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit http://dbpedia.org/resource/Gary_Morton?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit http://dbpedia.org/resource/Gary_Morton?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit http://dbpedia.org/resource/Gary_Morton?", "Wer wird gespielt von Persons verheiratet mit http://dbpedia.org/resource/Gary_Morton?", "Wer wurde gespielt von Persons verheiratet mit http://dbpedia.org/resource/Gary_Morton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gary_Morton> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit http://dbpedia.org/resource/Christopher_Horsey?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit http://dbpedia.org/resource/Christopher_Horsey?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit http://dbpedia.org/resource/Christopher_Horsey?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit http://dbpedia.org/resource/Christopher_Horsey?", "Wer wird gespielt von Persons verheiratet mit http://dbpedia.org/resource/Christopher_Horsey?", "Wer wurde gespielt von Persons verheiratet mit http://dbpedia.org/resource/Christopher_Horsey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Christopher_Horsey> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "53",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von Persons verheiratet mit http://dbpedia.org/resource/Mark_Bonnar?", "Welche fiktiver Charakters wurden gespielt von Persons verheiratet mit http://dbpedia.org/resource/Mark_Bonnar?", "Welcher fiktiver Charakter wird gespielt von Persons verheiratet mit http://dbpedia.org/resource/Mark_Bonnar?", "Welcher fiktiver Charakter wurde gespielt von Persons verheiratet mit http://dbpedia.org/resource/Mark_Bonnar?", "Wer wird gespielt von Persons verheiratet mit http://dbpedia.org/resource/Mark_Bonnar?", "Wer wurde gespielt von Persons verheiratet mit http://dbpedia.org/resource/Mark_Bonnar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mark_Bonnar> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "54",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Matt_Vogel_(puppeteer)?", "Welche fiktiver Charakters wurden gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Matt_Vogel_(puppeteer)?", "Welcher fiktiver Charakter wird gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Matt_Vogel_(puppeteer)?", "Welcher fiktiver Charakter wurde gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Matt_Vogel_(puppeteer)?", "Wer wird gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Matt_Vogel_(puppeteer)?", "Wer wurde gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Matt_Vogel_(puppeteer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Matt_Vogel_(puppeteer)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "54",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Steve_Whitmire?", "Welche fiktiver Charakters wurden gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Steve_Whitmire?", "Welcher fiktiver Charakter wird gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Steve_Whitmire?", "Welcher fiktiver Charakter wurde gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Steve_Whitmire?", "Wer wird gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Steve_Whitmire?", "Wer wurde gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Steve_Whitmire?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Steve_Whitmire>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "54",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von fiktiver Charakters gespielt von Madelaine Petsch?", "Welche fiktiver Charakters wurden gespielt von fiktiver Charakters gespielt von Madelaine Petsch?", "Welcher fiktiver Charakter wird gespielt von fiktiver Charakters gespielt von Madelaine Petsch?", "Welcher fiktiver Charakter wurde gespielt von fiktiver Charakters gespielt von Madelaine Petsch?", "Wer wird gespielt von fiktiver Charakters gespielt von Madelaine Petsch?", "Wer wurde gespielt von fiktiver Charakters gespielt von Madelaine Petsch?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Madelaine_Petsch>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "54",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von fiktiver Charakters gespielt von Es (2017)?", "Welche fiktiver Charakters wurden gespielt von fiktiver Charakters gespielt von Es (2017)?", "Welcher fiktiver Charakter wird gespielt von fiktiver Charakters gespielt von Es (2017)?", "Welcher fiktiver Charakter wurde gespielt von fiktiver Charakters gespielt von Es (2017)?", "Wer wird gespielt von fiktiver Charakters gespielt von Es (2017)?", "Wer wurde gespielt von fiktiver Charakters gespielt von Es (2017)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/It_(2017_film)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "54",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von fiktiver Charakters gespielt von Stephen Kings Es?", "Welche fiktiver Charakters wurden gespielt von fiktiver Charakters gespielt von Stephen Kings Es?", "Welcher fiktiver Charakter wird gespielt von fiktiver Charakters gespielt von Stephen Kings Es?", "Welcher fiktiver Charakter wurde gespielt von fiktiver Charakters gespielt von Stephen Kings Es?", "Wer wird gespielt von fiktiver Charakters gespielt von Stephen Kings Es?", "Wer wurde gespielt von fiktiver Charakters gespielt von Stephen Kings Es?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/It_(miniseries)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "54",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von fiktiver Charakters gespielt von Es Kapitel 2?", "Welche fiktiver Charakters wurden gespielt von fiktiver Charakters gespielt von Es Kapitel 2?", "Welcher fiktiver Charakter wird gespielt von fiktiver Charakters gespielt von Es Kapitel 2?", "Welcher fiktiver Charakter wurde gespielt von fiktiver Charakters gespielt von Es Kapitel 2?", "Wer wird gespielt von fiktiver Charakters gespielt von Es Kapitel 2?", "Wer wurde gespielt von fiktiver Charakters gespielt von Es Kapitel 2?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/It_Chapter_Two>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "54",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von fiktiver Charakters gespielt von Jackson Robert Scott?", "Welche fiktiver Charakters wurden gespielt von fiktiver Charakters gespielt von Jackson Robert Scott?", "Welcher fiktiver Charakter wird gespielt von fiktiver Charakters gespielt von Jackson Robert Scott?", "Welcher fiktiver Charakter wurde gespielt von fiktiver Charakters gespielt von Jackson Robert Scott?", "Wer wird gespielt von fiktiver Charakters gespielt von Jackson Robert Scott?", "Wer wurde gespielt von fiktiver Charakters gespielt von Jackson Robert Scott?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Jackson_Robert_Scott>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "54",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Tony_Dakota?", "Welche fiktiver Charakters wurden gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Tony_Dakota?", "Welcher fiktiver Charakter wird gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Tony_Dakota?", "Welcher fiktiver Charakter wurde gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Tony_Dakota?", "Wer wird gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Tony_Dakota?", "Wer wurde gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Tony_Dakota?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Tony_Dakota>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "54",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Akira_Ohashi?", "Welche fiktiver Charakters wurden gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Akira_Ohashi?", "Welcher fiktiver Charakter wird gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Akira_Ohashi?", "Welcher fiktiver Charakter wurde gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Akira_Ohashi?", "Wer wird gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Akira_Ohashi?", "Wer wurde gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Akira_Ohashi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Akira_Ohashi>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "54",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Hirofumi_Fukuzawa?", "Welche fiktiver Charakters wurden gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Hirofumi_Fukuzawa?", "Welcher fiktiver Charakter wird gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Hirofumi_Fukuzawa?", "Welcher fiktiver Charakter wurde gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Hirofumi_Fukuzawa?", "Wer wird gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Hirofumi_Fukuzawa?", "Wer wurde gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Hirofumi_Fukuzawa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Hirofumi_Fukuzawa>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "54",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Teruo_Aragaki?", "Welche fiktiver Charakters wurden gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Teruo_Aragaki?", "Welcher fiktiver Charakter wird gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Teruo_Aragaki?", "Welcher fiktiver Charakter wurde gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Teruo_Aragaki?", "Wer wird gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Teruo_Aragaki?", "Wer wurde gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Teruo_Aragaki?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Teruo_Aragaki>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "54",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Mary_Poppins_(character)?", "Welche fiktiver Charakters wurden gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Mary_Poppins_(character)?", "Welcher fiktiver Charakter wird gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Mary_Poppins_(character)?", "Welcher fiktiver Charakter wurde gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Mary_Poppins_(character)?", "Wer wird gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Mary_Poppins_(character)?", "Wer wurde gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Mary_Poppins_(character)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Mary_Poppins_(character)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "54",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Debi_Derryberry?", "Welche fiktiver Charakters wurden gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Debi_Derryberry?", "Welcher fiktiver Charakter wird gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Debi_Derryberry?", "Welcher fiktiver Charakter wurde gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Debi_Derryberry?", "Wer wird gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Debi_Derryberry?", "Wer wurde gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Debi_Derryberry?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Debi_Derryberry>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "54",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Emilija_Baranac?", "Welche fiktiver Charakters wurden gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Emilija_Baranac?", "Welcher fiktiver Charakter wird gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Emilija_Baranac?", "Welcher fiktiver Charakter wurde gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Emilija_Baranac?", "Wer wird gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Emilija_Baranac?", "Wer wurde gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Emilija_Baranac?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Emilija_Baranac>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "54",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von fiktiver Charakters gespielt von Kevin Clash?", "Welche fiktiver Charakters wurden gespielt von fiktiver Charakters gespielt von Kevin Clash?", "Welcher fiktiver Charakter wird gespielt von fiktiver Charakters gespielt von Kevin Clash?", "Welcher fiktiver Charakter wurde gespielt von fiktiver Charakters gespielt von Kevin Clash?", "Wer wird gespielt von fiktiver Charakters gespielt von Kevin Clash?", "Wer wurde gespielt von fiktiver Charakters gespielt von Kevin Clash?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Kevin_Clash>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "54",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von fiktiver Charakters gespielt von Elmo (Sesamstraße)?", "Welche fiktiver Charakters wurden gespielt von fiktiver Charakters gespielt von Elmo (Sesamstraße)?", "Welcher fiktiver Charakter wird gespielt von fiktiver Charakters gespielt von Elmo (Sesamstraße)?", "Welcher fiktiver Charakter wurde gespielt von fiktiver Charakters gespielt von Elmo (Sesamstraße)?", "Wer wird gespielt von fiktiver Charakters gespielt von Elmo (Sesamstraße)?", "Wer wurde gespielt von fiktiver Charakters gespielt von Elmo (Sesamstraße)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Elmo>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "54",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Ryan_Dillon?", "Welche fiktiver Charakters wurden gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Ryan_Dillon?", "Welcher fiktiver Charakter wird gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Ryan_Dillon?", "Welcher fiktiver Charakter wurde gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Ryan_Dillon?", "Wer wird gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Ryan_Dillon?", "Wer wurde gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Ryan_Dillon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Ryan_Dillon>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "54",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "Welche fiktiver Charakters werden gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Tonya_Williams?", "Welche fiktiver Charakters wurden gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Tonya_Williams?", "Welcher fiktiver Charakter wird gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Tonya_Williams?", "Welcher fiktiver Charakter wurde gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Tonya_Williams?", "Wer wird gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Tonya_Williams?", "Wer wurde gespielt von fiktiver Charakters gespielt von http://dbpedia.org/resource/Tonya_Williams?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Tonya_Williams>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  } ]
}