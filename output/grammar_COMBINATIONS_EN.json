{
  "grammarEntries" : [ {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "NPP",
    "sentences" : [ "Give me the source country of the left tributaries of $x?", "Give me the source country of the left tributary of $x?", "Tell me the source country of the left tributaries of $x?", "Tell me the source country of the left tributary of $x?", "What is the source country of the left tributaries of $x?", "What is the source country of the left tributary of $x?", "What was the source country of the left tributaries of $x?", "What was the source country of the left tributary of $x?", "Which country is the source country of the left tributaries of $x?", "Which country is the source country of the left tributary of $x?", "Which country was the source country of the left tributaries of $x?", "Which country was the source country of the left tributary of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/sourceCountry> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leftTributary> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "NPP",
    "sentences" : [ "Give me the source country of the right tributaries of $x?", "Give me the source country of the right tributary of $x?", "Tell me the source country of the right tributaries of $x?", "Tell me the source country of the right tributary of $x?", "What is the source country of the right tributaries of $x?", "What is the source country of the right tributary of $x?", "What was the source country of the right tributaries of $x?", "What was the source country of the right tributary of $x?", "Which country is the source country of the right tributaries of $x?", "Which country is the source country of the right tributary of $x?", "Which country was the source country of the right tributaries of $x?", "Which country was the source country of the right tributary of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/sourceCountry> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/rightTributary> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "NUMBER",
    "frameType" : "NPP",
    "sentences" : [ "Give me the discharge of the left tributaries of $x?", "Give me the discharge of the left tributary of $x?", "Tell me the discharge of the left tributaries of $x?", "Tell me the discharge of the left tributary of $x?", "What is the discharge of the left tributaries of $x?", "What is the discharge of the left tributary of $x?", "What was the discharge of the left tributaries of $x?", "What was the discharge of the left tributary of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/discharge> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leftTributary> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "113",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "NUMBER",
    "frameType" : "NPP",
    "sentences" : [ "Give me the discharge of the right tributaries of $x?", "Give me the discharge of the right tributary of $x?", "Tell me the discharge of the right tributaries of $x?", "Tell me the discharge of the right tributary of $x?", "What is the discharge of the right tributaries of $x?", "What is the discharge of the right tributary of $x?", "What was the discharge of the right tributaries of $x?", "What was the discharge of the right tributary of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/discharge> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/rightTributary> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "114",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "RIVER",
    "frameType" : "NPP",
    "sentences" : [ "Give me the left tributaries of the left tributaries of $x?", "Give me the left tributaries of the left tributary of $x?", "Give me the left tributary of the left tributaries of $x?", "Give me the left tributary of the left tributary of $x?", "List the left tributaries of the left tributaries of $x?", "List the left tributaries of the left tributary of $x?", "Tell me the left tributaries of the left tributaries of $x?", "Tell me the left tributaries of the left tributary of $x?", "Tell me the left tributary of the left tributaries of $x?", "Tell me the left tributary of the left tributary of $x?", "What are the left tributaries of the left tributaries of $x?", "What are the left tributaries of the left tributary of $x?", "What is the left tributary of the left tributaries of $x?", "What is the left tributary of the left tributary of $x?", "What was the left tributary of the left tributaries of $x?", "What was the left tributary of the left tributary of $x?", "What were the left tributaries of the left tributaries of $x?", "What were the left tributaries of the left tributary of $x?", "Which river is the left tributary of the left tributaries of $x?", "Which river is the left tributary of the left tributary of $x?", "Which river was the left tributary of the left tributaries of $x?", "Which river was the left tributary of the left tributary of $x?", "Which rivers are the left tributaries of the left tributaries of $x?", "Which rivers are the left tributaries of the left tributary of $x?", "Which rivers were the left tributaries of the left tributaries of $x?", "Which rivers were the left tributaries of the left tributary of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/leftTributary> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leftTributary> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "115",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "RIVER",
    "frameType" : "NPP",
    "sentences" : [ "Give me the left tributaries of the right tributaries of $x?", "Give me the left tributaries of the right tributary of $x?", "Give me the left tributary of the right tributaries of $x?", "Give me the left tributary of the right tributary of $x?", "List the left tributaries of the right tributaries of $x?", "List the left tributaries of the right tributary of $x?", "Tell me the left tributaries of the right tributaries of $x?", "Tell me the left tributaries of the right tributary of $x?", "Tell me the left tributary of the right tributaries of $x?", "Tell me the left tributary of the right tributary of $x?", "What are the left tributaries of the right tributaries of $x?", "What are the left tributaries of the right tributary of $x?", "What is the left tributary of the right tributaries of $x?", "What is the left tributary of the right tributary of $x?", "What was the left tributary of the right tributaries of $x?", "What was the left tributary of the right tributary of $x?", "What were the left tributaries of the right tributaries of $x?", "What were the left tributaries of the right tributary of $x?", "Which river is the left tributary of the right tributaries of $x?", "Which river is the left tributary of the right tributary of $x?", "Which river was the left tributary of the right tributaries of $x?", "Which river was the left tributary of the right tributary of $x?", "Which rivers are the left tributaries of the right tributaries of $x?", "Which rivers are the left tributaries of the right tributary of $x?", "Which rivers were the left tributaries of the right tributaries of $x?", "Which rivers were the left tributaries of the right tributary of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/leftTributary> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/rightTributary> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "116",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "NPP",
    "sentences" : [ "Give me the mouth country of the left tributaries of $x?", "Give me the mouth country of the left tributary of $x?", "Tell me the mouth country of the left tributaries of $x?", "Tell me the mouth country of the left tributary of $x?", "What is the mouth country of the left tributaries of $x?", "What is the mouth country of the left tributary of $x?", "What was the mouth country of the left tributaries of $x?", "What was the mouth country of the left tributary of $x?", "Which country is the mouth country of the left tributaries of $x?", "Which country is the mouth country of the left tributary of $x?", "Which country was the mouth country of the left tributaries of $x?", "Which country was the mouth country of the left tributary of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/mouthCountry> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leftTributary> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "117",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "COUNTRY",
    "frameType" : "NPP",
    "sentences" : [ "Give me the mouth country of the right tributaries of $x?", "Give me the mouth country of the right tributary of $x?", "Tell me the mouth country of the right tributaries of $x?", "Tell me the mouth country of the right tributary of $x?", "What is the mouth country of the right tributaries of $x?", "What is the mouth country of the right tributary of $x?", "What was the mouth country of the right tributaries of $x?", "What was the mouth country of the right tributary of $x?", "Which country is the mouth country of the right tributaries of $x?", "Which country is the mouth country of the right tributary of $x?", "Which country was the mouth country of the right tributaries of $x?", "Which country was the mouth country of the right tributary of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/mouthCountry> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/rightTributary> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "118",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian cleric?", "Give me the birth place of Belgian clerics?", "Tell me the birth place of a Belgian cleric?", "Tell me the birth place of Belgian clerics?", "What is the birth place of a Belgian cleric?", "What is the birth place of Belgian clerics?", "What was the birth place of a Belgian cleric?", "What was the birth place of Belgian clerics?", "Which place is the birth place of a Belgian cleric?", "Which place is the birth place of Belgian clerics?", "Which place was the birth place of a Belgian cleric?", "Which place was the birth place of Belgian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "119",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian office holder?", "Give me the birth place of Belgian office holders?", "Tell me the birth place of a Belgian office holder?", "Tell me the birth place of Belgian office holders?", "What is the birth place of a Belgian office holder?", "What is the birth place of Belgian office holders?", "What was the birth place of a Belgian office holder?", "What was the birth place of Belgian office holders?", "Which place is the birth place of a Belgian office holder?", "Which place is the birth place of Belgian office holders?", "Which place was the birth place of a Belgian office holder?", "Which place was the birth place of Belgian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "120",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian agent?", "Give me the birth place of Belgian agents?", "Tell me the birth place of a Belgian agent?", "Tell me the birth place of Belgian agents?", "What is the birth place of a Belgian agent?", "What is the birth place of Belgian agents?", "What was the birth place of a Belgian agent?", "What was the birth place of Belgian agents?", "Which place is the birth place of a Belgian agent?", "Which place is the birth place of Belgian agents?", "Which place was the birth place of a Belgian agent?", "Which place was the birth place of Belgian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "121",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian economist?", "Give me the birth place of Belgian economists?", "Tell me the birth place of a Belgian economist?", "Tell me the birth place of Belgian economists?", "What is the birth place of a Belgian economist?", "What is the birth place of Belgian economists?", "What was the birth place of a Belgian economist?", "What was the birth place of Belgian economists?", "Which place is the birth place of a Belgian economist?", "Which place is the birth place of Belgian economists?", "Which place was the birth place of a Belgian economist?", "Which place was the birth place of Belgian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "122",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian motorcycle rider?", "Give me the birth place of Belgian motorcycle riders?", "Tell me the birth place of a Belgian motorcycle rider?", "Tell me the birth place of Belgian motorcycle riders?", "What is the birth place of a Belgian motorcycle rider?", "What is the birth place of Belgian motorcycle riders?", "What was the birth place of a Belgian motorcycle rider?", "What was the birth place of Belgian motorcycle riders?", "Which place is the birth place of a Belgian motorcycle rider?", "Which place is the birth place of Belgian motorcycle riders?", "Which place was the birth place of a Belgian motorcycle rider?", "Which place was the birth place of Belgian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "123",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian artist?", "Give me the birth place of Belgian artists?", "Tell me the birth place of a Belgian artist?", "Tell me the birth place of Belgian artists?", "What is the birth place of a Belgian artist?", "What is the birth place of Belgian artists?", "What was the birth place of a Belgian artist?", "What was the birth place of Belgian artists?", "Which place is the birth place of a Belgian artist?", "Which place is the birth place of Belgian artists?", "Which place was the birth place of a Belgian artist?", "Which place was the birth place of Belgian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "124",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian athlete?", "Give me the birth place of Belgian athletes?", "Tell me the birth place of a Belgian athlete?", "Tell me the birth place of Belgian athletes?", "What is the birth place of a Belgian athlete?", "What is the birth place of Belgian athletes?", "What was the birth place of a Belgian athlete?", "What was the birth place of Belgian athletes?", "Which place is the birth place of a Belgian athlete?", "Which place is the birth place of Belgian athletes?", "Which place was the birth place of a Belgian athlete?", "Which place was the birth place of Belgian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "125",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian scientist?", "Give me the birth place of Belgian scientists?", "Tell me the birth place of a Belgian scientist?", "Tell me the birth place of Belgian scientists?", "What is the birth place of a Belgian scientist?", "What is the birth place of Belgian scientists?", "What was the birth place of a Belgian scientist?", "What was the birth place of Belgian scientists?", "Which place is the birth place of a Belgian scientist?", "Which place is the birth place of Belgian scientists?", "Which place was the birth place of a Belgian scientist?", "Which place was the birth place of Belgian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "126",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian architect?", "Give me the birth place of Belgian architects?", "Tell me the birth place of a Belgian architect?", "Tell me the birth place of Belgian architects?", "What is the birth place of a Belgian architect?", "What is the birth place of Belgian architects?", "What was the birth place of a Belgian architect?", "What was the birth place of Belgian architects?", "Which place is the birth place of a Belgian architect?", "Which place is the birth place of Belgian architects?", "Which place was the birth place of a Belgian architect?", "Which place was the birth place of Belgian architects?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "127",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian golf player?", "Give me the birth place of Belgian golf players?", "Tell me the birth place of a Belgian golf player?", "Tell me the birth place of Belgian golf players?", "What is the birth place of a Belgian golf player?", "What is the birth place of Belgian golf players?", "What was the birth place of a Belgian golf player?", "What was the birth place of Belgian golf players?", "Which place is the birth place of a Belgian golf player?", "Which place is the birth place of Belgian golf players?", "Which place was the birth place of a Belgian golf player?", "Which place was the birth place of Belgian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian racing driver?", "Give me the birth place of Belgian racing drivers?", "Tell me the birth place of a Belgian racing driver?", "Tell me the birth place of Belgian racing drivers?", "What is the birth place of a Belgian racing driver?", "What is the birth place of Belgian racing drivers?", "What was the birth place of a Belgian racing driver?", "What was the birth place of Belgian racing drivers?", "Which place is the birth place of a Belgian racing driver?", "Which place is the birth place of Belgian racing drivers?", "Which place was the birth place of a Belgian racing driver?", "Which place was the birth place of Belgian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian politician?", "Give me the birth place of Belgian politicians?", "Tell me the birth place of a Belgian politician?", "Tell me the birth place of Belgian politicians?", "What is the birth place of a Belgian politician?", "What is the birth place of Belgian politicians?", "What was the birth place of a Belgian politician?", "What was the birth place of Belgian politicians?", "Which place is the birth place of a Belgian politician?", "Which place is the birth place of Belgian politicians?", "Which place was the birth place of a Belgian politician?", "Which place was the birth place of Belgian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "130",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian swimmer?", "Give me the birth place of Belgian swimmers?", "Tell me the birth place of a Belgian swimmer?", "Tell me the birth place of Belgian swimmers?", "What is the birth place of a Belgian swimmer?", "What is the birth place of Belgian swimmers?", "What was the birth place of a Belgian swimmer?", "What was the birth place of Belgian swimmers?", "Which place is the birth place of a Belgian swimmer?", "Which place is the birth place of Belgian swimmers?", "Which place was the birth place of a Belgian swimmer?", "Which place was the birth place of Belgian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "131",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian volleyball player?", "Give me the birth place of Belgian volleyball players?", "Tell me the birth place of a Belgian volleyball player?", "Tell me the birth place of Belgian volleyball players?", "What is the birth place of a Belgian volleyball player?", "What is the birth place of Belgian volleyball players?", "What was the birth place of a Belgian volleyball player?", "What was the birth place of Belgian volleyball players?", "Which place is the birth place of a Belgian volleyball player?", "Which place is the birth place of Belgian volleyball players?", "Which place was the birth place of a Belgian volleyball player?", "Which place was the birth place of Belgian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian person?", "Give me the birth place of Belgian persons?", "Tell me the birth place of a Belgian person?", "Tell me the birth place of Belgian persons?", "What is the birth place of a Belgian person?", "What is the birth place of Belgian persons?", "What was the birth place of a Belgian person?", "What was the birth place of Belgian persons?", "Which place is the birth place of a Belgian person?", "Which place is the birth place of Belgian persons?", "Which place was the birth place of a Belgian person?", "Which place was the birth place of Belgian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian comics creator?", "Give me the birth place of Belgian comics creators?", "Tell me the birth place of a Belgian comics creator?", "Tell me the birth place of Belgian comics creators?", "What is the birth place of a Belgian comics creator?", "What is the birth place of Belgian comics creators?", "What was the birth place of a Belgian comics creator?", "What was the birth place of Belgian comics creators?", "Which place is the birth place of a Belgian comics creator?", "Which place is the birth place of Belgian comics creators?", "Which place was the birth place of a Belgian comics creator?", "Which place was the birth place of Belgian comics creators?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "134",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian writer?", "Give me the birth place of Belgian writers?", "Tell me the birth place of a Belgian writer?", "Tell me the birth place of Belgian writers?", "What is the birth place of a Belgian writer?", "What is the birth place of Belgian writers?", "What was the birth place of a Belgian writer?", "What was the birth place of Belgian writers?", "Which place is the birth place of a Belgian writer?", "Which place is the birth place of Belgian writers?", "Which place was the birth place of a Belgian writer?", "Which place was the birth place of Belgian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "135",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian motorsport racer?", "Give me the birth place of Belgian motorsport racers?", "Tell me the birth place of a Belgian motorsport racer?", "Tell me the birth place of Belgian motorsport racers?", "What is the birth place of a Belgian motorsport racer?", "What is the birth place of Belgian motorsport racers?", "What was the birth place of a Belgian motorsport racer?", "What was the birth place of Belgian motorsport racers?", "Which place is the birth place of a Belgian motorsport racer?", "Which place is the birth place of Belgian motorsport racers?", "Which place was the birth place of a Belgian motorsport racer?", "Which place was the birth place of Belgian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "136",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Greek boxer?", "Give me the birth place of Greek boxers?", "Tell me the birth place of a Greek boxer?", "Tell me the birth place of Greek boxers?", "What is the birth place of a Greek boxer?", "What is the birth place of Greek boxers?", "What was the birth place of a Greek boxer?", "What was the birth place of Greek boxers?", "Which place is the birth place of a Greek boxer?", "Which place is the birth place of Greek boxers?", "Which place was the birth place of a Greek boxer?", "Which place was the birth place of Greek boxers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Boxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "137",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Greek cleric?", "Give me the birth place of Greek clerics?", "Tell me the birth place of a Greek cleric?", "Tell me the birth place of Greek clerics?", "What is the birth place of a Greek cleric?", "What is the birth place of Greek clerics?", "What was the birth place of a Greek cleric?", "What was the birth place of Greek clerics?", "Which place is the birth place of a Greek cleric?", "Which place is the birth place of Greek clerics?", "Which place was the birth place of a Greek cleric?", "Which place was the birth place of Greek clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "138",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Greek office holder?", "Give me the birth place of Greek office holders?", "Tell me the birth place of a Greek office holder?", "Tell me the birth place of Greek office holders?", "What is the birth place of a Greek office holder?", "What is the birth place of Greek office holders?", "What was the birth place of a Greek office holder?", "What was the birth place of Greek office holders?", "Which place is the birth place of a Greek office holder?", "Which place is the birth place of Greek office holders?", "Which place was the birth place of a Greek office holder?", "Which place was the birth place of Greek office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "139",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Greek agent?", "Give me the birth place of Greek agents?", "Tell me the birth place of a Greek agent?", "Tell me the birth place of Greek agents?", "What is the birth place of a Greek agent?", "What is the birth place of Greek agents?", "What was the birth place of a Greek agent?", "What was the birth place of Greek agents?", "Which place is the birth place of a Greek agent?", "Which place is the birth place of Greek agents?", "Which place was the birth place of a Greek agent?", "Which place was the birth place of Greek agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "140",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Greek fictional character?", "Give me the birth place of Greek fictional characters?", "Tell me the birth place of a Greek fictional character?", "Tell me the birth place of Greek fictional characters?", "What is the birth place of a Greek fictional character?", "What is the birth place of Greek fictional characters?", "What was the birth place of a Greek fictional character?", "What was the birth place of Greek fictional characters?", "Which place is the birth place of a Greek fictional character?", "Which place is the birth place of Greek fictional characters?", "Which place was the birth place of a Greek fictional character?", "Which place was the birth place of Greek fictional characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "141",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Greek artist?", "Give me the birth place of Greek artists?", "Tell me the birth place of a Greek artist?", "Tell me the birth place of Greek artists?", "What is the birth place of a Greek artist?", "What is the birth place of Greek artists?", "What was the birth place of a Greek artist?", "What was the birth place of Greek artists?", "Which place is the birth place of a Greek artist?", "Which place is the birth place of Greek artists?", "Which place was the birth place of a Greek artist?", "Which place was the birth place of Greek artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "142",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Greek athlete?", "Give me the birth place of Greek athletes?", "Tell me the birth place of a Greek athlete?", "Tell me the birth place of Greek athletes?", "What is the birth place of a Greek athlete?", "What is the birth place of Greek athletes?", "What was the birth place of a Greek athlete?", "What was the birth place of Greek athletes?", "Which place is the birth place of a Greek athlete?", "Which place is the birth place of Greek athletes?", "Which place was the birth place of a Greek athlete?", "Which place was the birth place of Greek athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "143",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Greek scientist?", "Give me the birth place of Greek scientists?", "Tell me the birth place of a Greek scientist?", "Tell me the birth place of Greek scientists?", "What is the birth place of a Greek scientist?", "What is the birth place of Greek scientists?", "What was the birth place of a Greek scientist?", "What was the birth place of Greek scientists?", "Which place is the birth place of a Greek scientist?", "Which place is the birth place of Greek scientists?", "Which place was the birth place of a Greek scientist?", "Which place was the birth place of Greek scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "144",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Greek politician?", "Give me the birth place of Greek politicians?", "Tell me the birth place of a Greek politician?", "Tell me the birth place of Greek politicians?", "What is the birth place of a Greek politician?", "What is the birth place of Greek politicians?", "What was the birth place of a Greek politician?", "What was the birth place of Greek politicians?", "Which place is the birth place of a Greek politician?", "Which place is the birth place of Greek politicians?", "Which place was the birth place of a Greek politician?", "Which place was the birth place of Greek politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "145",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Greek swimmer?", "Give me the birth place of Greek swimmers?", "Tell me the birth place of a Greek swimmer?", "Tell me the birth place of Greek swimmers?", "What is the birth place of a Greek swimmer?", "What is the birth place of Greek swimmers?", "What was the birth place of a Greek swimmer?", "What was the birth place of Greek swimmers?", "Which place is the birth place of a Greek swimmer?", "Which place is the birth place of Greek swimmers?", "Which place was the birth place of a Greek swimmer?", "Which place was the birth place of Greek swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "146",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Greek volleyball player?", "Give me the birth place of Greek volleyball players?", "Tell me the birth place of a Greek volleyball player?", "Tell me the birth place of Greek volleyball players?", "What is the birth place of a Greek volleyball player?", "What is the birth place of Greek volleyball players?", "What was the birth place of a Greek volleyball player?", "What was the birth place of Greek volleyball players?", "Which place is the birth place of a Greek volleyball player?", "Which place is the birth place of Greek volleyball players?", "Which place was the birth place of a Greek volleyball player?", "Which place was the birth place of Greek volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Greek handball player?", "Give me the birth place of Greek handball players?", "Tell me the birth place of a Greek handball player?", "Tell me the birth place of Greek handball players?", "What is the birth place of a Greek handball player?", "What is the birth place of Greek handball players?", "What was the birth place of a Greek handball player?", "What was the birth place of Greek handball players?", "Which place is the birth place of a Greek handball player?", "Which place is the birth place of Greek handball players?", "Which place was the birth place of a Greek handball player?", "Which place was the birth place of Greek handball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HandballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Greek person?", "Give me the birth place of Greek persons?", "Tell me the birth place of a Greek person?", "Tell me the birth place of Greek persons?", "What is the birth place of a Greek person?", "What is the birth place of Greek persons?", "What was the birth place of a Greek person?", "What was the birth place of Greek persons?", "Which place is the birth place of a Greek person?", "Which place is the birth place of Greek persons?", "Which place was the birth place of a Greek person?", "Which place was the birth place of Greek persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "149",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Greek basketball player?", "Give me the birth place of Greek basketball players?", "Tell me the birth place of a Greek basketball player?", "Tell me the birth place of Greek basketball players?", "What is the birth place of a Greek basketball player?", "What is the birth place of Greek basketball players?", "What was the birth place of a Greek basketball player?", "What was the birth place of Greek basketball players?", "Which place is the birth place of a Greek basketball player?", "Which place is the birth place of Greek basketball players?", "Which place was the birth place of a Greek basketball player?", "Which place was the birth place of Greek basketball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "150",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Greek writer?", "Give me the birth place of Greek writers?", "Tell me the birth place of a Greek writer?", "Tell me the birth place of Greek writers?", "What is the birth place of a Greek writer?", "What is the birth place of Greek writers?", "What was the birth place of a Greek writer?", "What was the birth place of Greek writers?", "Which place is the birth place of a Greek writer?", "Which place is the birth place of Greek writers?", "Which place was the birth place of a Greek writer?", "Which place was the birth place of Greek writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "151",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born in $x?", "Tell me the birth place of persons born in $x?", "What is the birth place of persons born in $x?", "What was the birth place of persons born in $x?", "Which place is the birth place of persons born in $x?", "Which place was the birth place of persons born in $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Paul Noonan",
        "uri" : "http://dbpedia.org/resource/Paul_Noonan"
      }, {
        "label" : "Paul Conlin",
        "uri" : "http://dbpedia.org/resource/Paul_Conlin"
      }, {
        "label" : "Tom McKay (athlete)",
        "uri" : "http://dbpedia.org/resource/Tom_McKay_(athlete)"
      }, {
        "label" : "Juan Carlos Sistos",
        "uri" : "http://dbpedia.org/resource/Juan_Carlos_Sistos"
      }, {
        "label" : "Valampuri Somanathan",
        "uri" : "http://dbpedia.org/resource/Valampuri_Somanathan"
      }, {
        "label" : "Georgi Petrov (footballer, born 1974)",
        "uri" : "http://dbpedia.org/resource/Georgi_Petrov_(footballer,_born_1974)"
      }, {
        "label" : "Atanas Fidanin",
        "uri" : "http://dbpedia.org/resource/Atanas_Fidanin"
      }, {
        "label" : "Tsvetana Sotirova",
        "uri" : "http://dbpedia.org/resource/Tsvetana_Sotirova"
      }, {
        "label" : "Dame Stoykov",
        "uri" : "http://dbpedia.org/resource/Dame_Stoykov"
      }, {
        "label" : "Mario Metushev",
        "uri" : "http://dbpedia.org/resource/Mario_Metushev"
      }, {
        "label" : "Jorge Carrascosa",
        "uri" : "http://dbpedia.org/resource/Jorge_Carrascosa"
      }, {
        "label" : "Butterford Wong",
        "uri" : "http://dbpedia.org/resource/Butterford_Wong"
      }, {
        "label" : "Mauro Radaelli",
        "uri" : "http://dbpedia.org/resource/Mauro_Radaelli"
      }, {
        "label" : "Philip Louis, Duke of Schleswig-Holstein-Sonderburg-Wiesenburg",
        "uri" : "http://dbpedia.org/resource/Philip_Louis,_Duke_of_Schleswig-Holstein-Sonderburg-Wiesenburg"
      }, {
        "label" : "Kala Venkata Rao",
        "uri" : "http://dbpedia.org/resource/Kala_Venkata_Rao"
      }, {
        "label" : "Carlos Roberto Reina",
        "uri" : "http://dbpedia.org/resource/Carlos_Roberto_Reina"
      }, {
        "label" : "Ulises Torres",
        "uri" : "http://dbpedia.org/resource/Ulises_Torres"
      }, {
        "label" : "Alessandro Mori Nunes",
        "uri" : "http://dbpedia.org/resource/Alessandro_Mori_Nunes"
      }, {
        "label" : "João Paulo (footballer, born 1983)",
        "uri" : "http://dbpedia.org/resource/João_Paulo_(footballer,_born_1983)"
      }, {
        "label" : "Jorge Novak",
        "uri" : "http://dbpedia.org/resource/Jorge_Novak"
      }, {
        "label" : "Abdullahi Balarabe Salame",
        "uri" : "http://dbpedia.org/resource/Abdullahi_Balarabe_Salame"
      }, {
        "label" : "Jhonata de Lima Ferreira",
        "uri" : "http://dbpedia.org/resource/Jhonata_de_Lima_Ferreira"
      }, {
        "label" : "Jennifer Dickson",
        "uri" : "http://dbpedia.org/resource/Jennifer_Dickson"
      }, {
        "label" : "Steve Dodd",
        "uri" : "http://dbpedia.org/resource/Steve_Dodd"
      }, {
        "label" : "Isham Randolph of Dungeness",
        "uri" : "http://dbpedia.org/resource/Isham_Randolph_of_Dungeness"
      }, {
        "label" : "Rangel Valchanov",
        "uri" : "http://dbpedia.org/resource/Rangel_Valchanov"
      }, {
        "label" : "Eri Ogihara",
        "uri" : "http://dbpedia.org/resource/Eri_Ogihara"
      }, {
        "label" : "Heather Rankin (curler)",
        "uri" : "http://dbpedia.org/resource/Heather_Rankin_(curler)"
      }, {
        "label" : "Carolyn Rodrigues",
        "uri" : "http://dbpedia.org/resource/Carolyn_Rodrigues"
      }, {
        "label" : "Henry Augustine Tayloe",
        "uri" : "http://dbpedia.org/resource/Henry_Augustine_Tayloe"
      }, {
        "label" : "Perla Morones",
        "uri" : "http://dbpedia.org/resource/Perla_Morones"
      } ]
    },
    "combination" : true
  }, {
    "id" : "152",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "NUMBER",
    "frameType" : "NPP",
    "sentences" : [ "Give me the source elevation of the left tributaries of $x?", "Give me the source elevation of the left tributary of $x?", "Tell me the source elevation of the left tributaries of $x?", "Tell me the source elevation of the left tributary of $x?", "What is the source elevation of the left tributaries of $x?", "What is the source elevation of the left tributary of $x?", "What was the source elevation of the left tributaries of $x?", "What was the source elevation of the left tributary of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/sourceElevation> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leftTributary> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "153",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "NUMBER",
    "frameType" : "NPP",
    "sentences" : [ "Give me the source elevation of the right tributaries of $x?", "Give me the source elevation of the right tributary of $x?", "Tell me the source elevation of the right tributaries of $x?", "Tell me the source elevation of the right tributary of $x?", "What is the source elevation of the right tributaries of $x?", "What is the source elevation of the right tributary of $x?", "What was the source elevation of the right tributaries of $x?", "What was the source elevation of the right tributary of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/sourceElevation> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/rightTributary> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "RIVER",
    "frameType" : "NPP",
    "sentences" : [ "Give me the right tributaries of the left tributaries of $x?", "Give me the right tributaries of the left tributary of $x?", "Give me the right tributary of the left tributaries of $x?", "Give me the right tributary of the left tributary of $x?", "List the right tributaries of the left tributaries of $x?", "List the right tributaries of the left tributary of $x?", "Tell me the right tributaries of the left tributaries of $x?", "Tell me the right tributaries of the left tributary of $x?", "Tell me the right tributary of the left tributaries of $x?", "Tell me the right tributary of the left tributary of $x?", "What are the right tributaries of the left tributaries of $x?", "What are the right tributaries of the left tributary of $x?", "What is the right tributary of the left tributaries of $x?", "What is the right tributary of the left tributary of $x?", "What was the right tributary of the left tributaries of $x?", "What was the right tributary of the left tributary of $x?", "What were the right tributaries of the left tributaries of $x?", "What were the right tributaries of the left tributary of $x?", "Which river is the right tributary of the left tributaries of $x?", "Which river is the right tributary of the left tributary of $x?", "Which river was the right tributary of the left tributaries of $x?", "Which river was the right tributary of the left tributary of $x?", "Which rivers are the right tributaries of the left tributaries of $x?", "Which rivers are the right tributaries of the left tributary of $x?", "Which rivers were the right tributaries of the left tributaries of $x?", "Which rivers were the right tributaries of the left tributary of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/rightTributary> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leftTributary> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "RIVER",
    "frameType" : "NPP",
    "sentences" : [ "Give me the right tributaries of the right tributaries of $x?", "Give me the right tributaries of the right tributary of $x?", "Give me the right tributary of the right tributaries of $x?", "Give me the right tributary of the right tributary of $x?", "List the right tributaries of the right tributaries of $x?", "List the right tributaries of the right tributary of $x?", "Tell me the right tributaries of the right tributaries of $x?", "Tell me the right tributaries of the right tributary of $x?", "Tell me the right tributary of the right tributaries of $x?", "Tell me the right tributary of the right tributary of $x?", "What are the right tributaries of the right tributaries of $x?", "What are the right tributaries of the right tributary of $x?", "What is the right tributary of the right tributaries of $x?", "What is the right tributary of the right tributary of $x?", "What was the right tributary of the right tributaries of $x?", "What was the right tributary of the right tributary of $x?", "What were the right tributaries of the right tributaries of $x?", "What were the right tributaries of the right tributary of $x?", "Which river is the right tributary of the right tributaries of $x?", "Which river is the right tributary of the right tributary of $x?", "Which river was the right tributary of the right tributaries of $x?", "Which river was the right tributary of the right tributary of $x?", "Which rivers are the right tributaries of the right tributaries of $x?", "Which rivers are the right tributaries of the right tributary of $x?", "Which rivers were the right tributaries of the right tributaries of $x?", "Which rivers were the right tributaries of the right tributary of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/rightTributary> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/rightTributary> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "156",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "NUMBER",
    "frameType" : "NPP",
    "sentences" : [ "Give me the mouth elevation of the left tributaries of $x?", "Give me the mouth elevation of the left tributary of $x?", "Tell me the mouth elevation of the left tributaries of $x?", "Tell me the mouth elevation of the left tributary of $x?", "What is the mouth elevation of the left tributaries of $x?", "What is the mouth elevation of the left tributary of $x?", "What was the mouth elevation of the left tributaries of $x?", "What was the mouth elevation of the left tributary of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/mouthElevation> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leftTributary> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "157",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "NUMBER",
    "frameType" : "NPP",
    "sentences" : [ "Give me the mouth elevation of the right tributaries of $x?", "Give me the mouth elevation of the right tributary of $x?", "Tell me the mouth elevation of the right tributaries of $x?", "Tell me the mouth elevation of the right tributary of $x?", "What is the mouth elevation of the right tributaries of $x?", "What is the mouth elevation of the right tributary of $x?", "What was the mouth elevation of the right tributaries of $x?", "What was the mouth elevation of the right tributary of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/mouthElevation> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/rightTributary> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "158",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "NUMBER",
    "frameType" : "NPP",
    "sentences" : [ "Give me the length of the left tributaries of $x?", "Give me the length of the left tributary of $x?", "Tell me the length of the left tributaries of $x?", "Tell me the length of the left tributary of $x?", "What is the length of the left tributaries of $x?", "What is the length of the left tributary of $x?", "What was the length of the left tributaries of $x?", "What was the length of the left tributary of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/length> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leftTributary> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "159",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "NUMBER",
    "frameType" : "NPP",
    "sentences" : [ "Give me the length of the right tributaries of $x?", "Give me the length of the right tributary of $x?", "Tell me the length of the right tributaries of $x?", "Tell me the length of the right tributary of $x?", "What is the length of the right tributaries of $x?", "What is the length of the right tributary of $x?", "What was the length of the right tributaries of $x?", "What was the length of the right tributary of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/length> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/rightTributary> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "160",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which agent developed movies directed by $x?", "Which agent develops movies directed by $x?", "Who developed movies directed by $x?", "Who develops movies directed by $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfPropx)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Lucy Cousins",
        "uri" : "http://dbpedia.org/resource/Lucy_Cousins"
      }, {
        "label" : "Leonard Boyarsky",
        "uri" : "http://dbpedia.org/resource/Leonard_Boyarsky"
      }, {
        "label" : "Matthew Saville",
        "uri" : "http://dbpedia.org/resource/Matthew_Saville"
      }, {
        "label" : "Aaron Augenblick",
        "uri" : "http://dbpedia.org/resource/Aaron_Augenblick"
      }, {
        "label" : "Aaron Horvath",
        "uri" : "http://dbpedia.org/resource/Aaron_Horvath"
      }, {
        "label" : "Nobuyuki Inoue",
        "uri" : "http://dbpedia.org/resource/Nobuyuki_Inoue"
      }, {
        "label" : "Akitoshi Kawazu",
        "uri" : "http://dbpedia.org/resource/Akitoshi_Kawazu"
      }, {
        "label" : "Chet Forte",
        "uri" : "http://dbpedia.org/resource/Chet_Forte"
      }, {
        "label" : "Rieko Kodama",
        "uri" : "http://dbpedia.org/resource/Rieko_Kodama"
      }, {
        "label" : "Casey Alexander (cartoonist)",
        "uri" : "http://dbpedia.org/resource/Casey_Alexander_(cartoonist)"
      }, {
        "label" : "Chito S. Roño",
        "uri" : "http://dbpedia.org/resource/Chito_S._Roño"
      }, {
        "label" : "Gina Alajar",
        "uri" : "http://dbpedia.org/resource/Gina_Alajar"
      }, {
        "label" : "John Andreassen",
        "uri" : "http://dbpedia.org/resource/John_Andreassen"
      }, {
        "label" : "Haden Blackman",
        "uri" : "http://dbpedia.org/resource/Haden_Blackman"
      }, {
        "label" : "Mark Reyes",
        "uri" : "http://dbpedia.org/resource/Mark_Reyes"
      }, {
        "label" : "Paul Neurath",
        "uri" : "http://dbpedia.org/resource/Paul_Neurath"
      }, {
        "label" : "Katsura Hashino",
        "uri" : "http://dbpedia.org/resource/Katsura_Hashino"
      }, {
        "label" : "Mohammed Ehteshamuddin",
        "uri" : "http://dbpedia.org/resource/Mohammed_Ehteshamuddin"
      }, {
        "label" : "Ryukishi07",
        "uri" : "http://dbpedia.org/resource/Ryukishi07"
      }, {
        "label" : "Katsumi Yokota",
        "uri" : "http://dbpedia.org/resource/Katsumi_Yokota"
      }, {
        "label" : "Jason D. Anderson",
        "uri" : "http://dbpedia.org/resource/Jason_D._Anderson"
      }, {
        "label" : "Amy Hennig",
        "uri" : "http://dbpedia.org/resource/Amy_Hennig"
      }, {
        "label" : "Bruce Straley",
        "uri" : "http://dbpedia.org/resource/Bruce_Straley"
      }, {
        "label" : "Richard Garriott",
        "uri" : "http://dbpedia.org/resource/Richard_Garriott"
      }, {
        "label" : "Mike McShaffry",
        "uri" : "http://dbpedia.org/resource/Mike_McShaffry"
      }, {
        "label" : "Daniel Vávra",
        "uri" : "http://dbpedia.org/resource/Daniel_Vávra"
      }, {
        "label" : "Mike Tuviera",
        "uri" : "http://dbpedia.org/resource/Mike_Tuviera"
      }, {
        "label" : "Bucky Gunts",
        "uri" : "http://dbpedia.org/resource/Bucky_Gunts"
      }, {
        "label" : "Mike Young (game designer)",
        "uri" : "http://dbpedia.org/resource/Mike_Young_(game_designer)"
      }, {
        "label" : "David Nutter",
        "uri" : "http://dbpedia.org/resource/David_Nutter"
      }, {
        "label" : "Shinji Mikami",
        "uri" : "http://dbpedia.org/resource/Shinji_Mikami"
      }, {
        "label" : "Mac Alejandre",
        "uri" : "http://dbpedia.org/resource/Mac_Alejandre"
      }, {
        "label" : "Neil Druckmann",
        "uri" : "http://dbpedia.org/resource/Neil_Druckmann"
      }, {
        "label" : "William Reiss",
        "uri" : "http://dbpedia.org/resource/William_Reiss"
      }, {
        "label" : "Eric Quizon",
        "uri" : "http://dbpedia.org/resource/Eric_Quizon"
      }, {
        "label" : "Hideki Konno",
        "uri" : "http://dbpedia.org/resource/Hideki_Konno"
      }, {
        "label" : "Hidemaro Fujibayashi",
        "uri" : "http://dbpedia.org/resource/Hidemaro_Fujibayashi"
      }, {
        "label" : "Hiroshi Minagawa",
        "uri" : "http://dbpedia.org/resource/Hiroshi_Minagawa"
      }, {
        "label" : "Yoshiharu Gotanda",
        "uri" : "http://dbpedia.org/resource/Yoshiharu_Gotanda"
      }, {
        "label" : "Tim Hodge",
        "uri" : "http://dbpedia.org/resource/Tim_Hodge"
      }, {
        "label" : "Tim Minchin",
        "uri" : "http://dbpedia.org/resource/Tim_Minchin"
      }, {
        "label" : "Tokuro Fujiwara",
        "uri" : "http://dbpedia.org/resource/Tokuro_Fujiwara"
      }, {
        "label" : "Tom Hall",
        "uri" : "http://dbpedia.org/resource/Tom_Hall"
      }, {
        "label" : "Yasumi Matsuno",
        "uri" : "http://dbpedia.org/resource/Yasumi_Matsuno"
      }, {
        "label" : "Yoshiki Okamoto",
        "uri" : "http://dbpedia.org/resource/Yoshiki_Okamoto"
      }, {
        "label" : "http://dbpedia.org/resource/Hiroyuki_Naruhama",
        "uri" : "http://dbpedia.org/resource/Hiroyuki_Naruhama"
      }, {
        "label" : "http://dbpedia.org/resource/Katsuya_Watanabe",
        "uri" : "http://dbpedia.org/resource/Katsuya_Watanabe"
      }, {
        "label" : "http://dbpedia.org/resource/David_Stern_(director)",
        "uri" : "http://dbpedia.org/resource/David_Stern_(director)"
      }, {
        "label" : "http://dbpedia.org/resource/Nicolás_di_Blassi",
        "uri" : "http://dbpedia.org/resource/Nicolás_di_Blassi"
      }, {
        "label" : "http://dbpedia.org/resource/Jaime_Segura",
        "uri" : "http://dbpedia.org/resource/Jaime_Segura"
      }, {
        "label" : "http://dbpedia.org/resource/Carmen_Pérez",
        "uri" : "http://dbpedia.org/resource/Carmen_Pérez"
      }, {
        "label" : "http://dbpedia.org/resource/Abigail_Schaaff",
        "uri" : "http://dbpedia.org/resource/Abigail_Schaaff"
      }, {
        "label" : "http://dbpedia.org/resource/Ignasi_Tarruella",
        "uri" : "http://dbpedia.org/resource/Ignasi_Tarruella"
      }, {
        "label" : "Randy Myers (animator)",
        "uri" : "http://dbpedia.org/resource/Randy_Myers_(animator)"
      }, {
        "label" : "Bob Odenkirk",
        "uri" : "http://dbpedia.org/resource/Bob_Odenkirk"
      }, {
        "label" : "Brad McQuaid",
        "uri" : "http://dbpedia.org/resource/Brad_McQuaid"
      }, {
        "label" : "Denis Dyack",
        "uri" : "http://dbpedia.org/resource/Denis_Dyack"
      }, {
        "label" : "Hal Barwood",
        "uri" : "http://dbpedia.org/resource/Hal_Barwood"
      }, {
        "label" : "Al Lowe",
        "uri" : "http://dbpedia.org/resource/Al_Lowe"
      }, {
        "label" : "Sajid-Farhad",
        "uri" : "http://dbpedia.org/resource/Sajid-Farhad"
      }, {
        "label" : "Steve Jackson (UK game designer)",
        "uri" : "http://dbpedia.org/resource/Steve_Jackson_(UK_game_designer)"
      }, {
        "label" : "John Kricfalusi",
        "uri" : "http://dbpedia.org/resource/John_Kricfalusi"
      }, {
        "label" : "John Llewellyn Moxey",
        "uri" : "http://dbpedia.org/resource/John_Llewellyn_Moxey"
      }, {
        "label" : "Shun Nakamura",
        "uri" : "http://dbpedia.org/resource/Shun_Nakamura"
      }, {
        "label" : "Ben Tulfo",
        "uri" : "http://dbpedia.org/resource/Ben_Tulfo"
      }, {
        "label" : "Bill Davis (artist)",
        "uri" : "http://dbpedia.org/resource/Bill_Davis_(artist)"
      }, {
        "label" : "Ken Demarest",
        "uri" : "http://dbpedia.org/resource/Ken_Demarest"
      }, {
        "label" : "Ken Levine (game developer)",
        "uri" : "http://dbpedia.org/resource/Ken_Levine_(game_developer)"
      }, {
        "label" : "Leonard Horn",
        "uri" : "http://dbpedia.org/resource/Leonard_Horn"
      }, {
        "label" : "Russ Mayberry",
        "uri" : "http://dbpedia.org/resource/Russ_Mayberry"
      }, {
        "label" : "Yoshihisa Kishimoto",
        "uri" : "http://dbpedia.org/resource/Yoshihisa_Kishimoto"
      }, {
        "label" : "Luke Smith (writer)",
        "uri" : "http://dbpedia.org/resource/Luke_Smith_(writer)"
      }, {
        "label" : "Mark Brooks (director)",
        "uri" : "http://dbpedia.org/resource/Mark_Brooks_(director)"
      }, {
        "label" : "Jason Jones (programmer)",
        "uri" : "http://dbpedia.org/resource/Jason_Jones_(programmer)"
      }, {
        "label" : "Jon Burton",
        "uri" : "http://dbpedia.org/resource/Jon_Burton"
      }, {
        "label" : "John A. Garcia",
        "uri" : "http://dbpedia.org/resource/John_A._Garcia"
      }, {
        "label" : "Richie Mehta",
        "uri" : "http://dbpedia.org/resource/Richie_Mehta"
      }, {
        "label" : "Reinhard Schwabenitzky",
        "uri" : "http://dbpedia.org/resource/Reinhard_Schwabenitzky"
      }, {
        "label" : "Toshihiro Nagoshi",
        "uri" : "http://dbpedia.org/resource/Toshihiro_Nagoshi"
      }, {
        "label" : "Breehn Burns",
        "uri" : "http://dbpedia.org/resource/Breehn_Burns"
      }, {
        "label" : "Dan Hennessey",
        "uri" : "http://dbpedia.org/resource/Dan_Hennessey"
      }, {
        "label" : "Paul Krasny",
        "uri" : "http://dbpedia.org/resource/Paul_Krasny"
      }, {
        "label" : "Pendleton Ward",
        "uri" : "http://dbpedia.org/resource/Pendleton_Ward"
      }, {
        "label" : "Peter Lepeniotis",
        "uri" : "http://dbpedia.org/resource/Peter_Lepeniotis"
      }, {
        "label" : "Simon Viklund",
        "uri" : "http://dbpedia.org/resource/Simon_Viklund"
      }, {
        "label" : "Glen Schofield",
        "uri" : "http://dbpedia.org/resource/Glen_Schofield"
      }, {
        "label" : "Naoto Ohshima",
        "uri" : "http://dbpedia.org/resource/Naoto_Ohshima"
      }, {
        "label" : "Hidetaka Miyazaki",
        "uri" : "http://dbpedia.org/resource/Hidetaka_Miyazaki"
      }, {
        "label" : "Hironobu Sakaguchi",
        "uri" : "http://dbpedia.org/resource/Hironobu_Sakaguchi"
      }, {
        "label" : "Motomu Toriyama",
        "uri" : "http://dbpedia.org/resource/Motomu_Toriyama"
      }, {
        "label" : "Jon Schnepp",
        "uri" : "http://dbpedia.org/resource/Jon_Schnepp"
      }, {
        "label" : "Tim Rogers (journalist)",
        "uri" : "http://dbpedia.org/resource/Tim_Rogers_(journalist)"
      }, {
        "label" : "Yu Suzuki",
        "uri" : "http://dbpedia.org/resource/Yu_Suzuki"
      }, {
        "label" : "http://dbpedia.org/resource/Steve_Clover",
        "uri" : "http://dbpedia.org/resource/Steve_Clover"
      }, {
        "label" : "http://dbpedia.org/resource/Jed_Weintrob",
        "uri" : "http://dbpedia.org/resource/Jed_Weintrob"
      }, {
        "label" : "http://dbpedia.org/resource/Makoto_Tsuji",
        "uri" : "http://dbpedia.org/resource/Makoto_Tsuji"
      }, {
        "label" : "http://dbpedia.org/resource/Troy_Leavitt",
        "uri" : "http://dbpedia.org/resource/Troy_Leavitt"
      }, {
        "label" : "http://dbpedia.org/resource/Shigeki_Fujiwara",
        "uri" : "http://dbpedia.org/resource/Shigeki_Fujiwara"
      }, {
        "label" : "Daisuke Ishiwatari",
        "uri" : "http://dbpedia.org/resource/Daisuke_Ishiwatari"
      }, {
        "label" : "Sam Liu",
        "uri" : "http://dbpedia.org/resource/Sam_Liu"
      } ]
    },
    "combination" : true
  }, {
    "id" : "161",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Belgian cleric?", "Which person married Belgian clerics?", "Who married a Belgian cleric?", "Who married Belgian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "162",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Belgian office holder?", "Which person married Belgian office holders?", "Who married a Belgian office holder?", "Who married Belgian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "163",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Belgian agent?", "Which person married Belgian agents?", "Who married a Belgian agent?", "Who married Belgian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "164",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Belgian economist?", "Which person married Belgian economists?", "Who married a Belgian economist?", "Who married Belgian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Belgian motorcycle rider?", "Which person married Belgian motorcycle riders?", "Who married a Belgian motorcycle rider?", "Who married Belgian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Belgian artist?", "Which person married Belgian artists?", "Who married a Belgian artist?", "Who married Belgian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "167",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Belgian athlete?", "Which person married Belgian athletes?", "Who married a Belgian athlete?", "Who married Belgian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "168",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Belgian scientist?", "Which person married Belgian scientists?", "Who married a Belgian scientist?", "Who married Belgian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "169",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Belgian architect?", "Which person married Belgian architects?", "Who married a Belgian architect?", "Who married Belgian architects?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "170",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Belgian golf player?", "Which person married Belgian golf players?", "Who married a Belgian golf player?", "Who married Belgian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "171",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Belgian racing driver?", "Which person married Belgian racing drivers?", "Who married a Belgian racing driver?", "Who married Belgian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "172",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Belgian politician?", "Which person married Belgian politicians?", "Who married a Belgian politician?", "Who married Belgian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "173",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Belgian swimmer?", "Which person married Belgian swimmers?", "Who married a Belgian swimmer?", "Who married Belgian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "174",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Belgian volleyball player?", "Which person married Belgian volleyball players?", "Who married a Belgian volleyball player?", "Who married Belgian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "175",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Belgian person?", "Which person married Belgian persons?", "Who married a Belgian person?", "Who married Belgian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Belgian comics creator?", "Which person married Belgian comics creators?", "Who married a Belgian comics creator?", "Who married Belgian comics creators?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "177",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Belgian writer?", "Which person married Belgian writers?", "Who married a Belgian writer?", "Who married Belgian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "178",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Belgian motorsport racer?", "Which person married Belgian motorsport racers?", "Who married a Belgian motorsport racer?", "Who married Belgian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "179",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek boxer?", "Which person married Greek boxers?", "Who married a Greek boxer?", "Who married Greek boxers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Boxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "180",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek cleric?", "Which person married Greek clerics?", "Who married a Greek cleric?", "Who married Greek clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek office holder?", "Which person married Greek office holders?", "Who married a Greek office holder?", "Who married Greek office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "182",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek agent?", "Which person married Greek agents?", "Who married a Greek agent?", "Who married Greek agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "183",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek fictional character?", "Which person married Greek fictional characters?", "Who married a Greek fictional character?", "Who married Greek fictional characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "184",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek artist?", "Which person married Greek artists?", "Who married a Greek artist?", "Who married Greek artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "185",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek athlete?", "Which person married Greek athletes?", "Who married a Greek athlete?", "Who married Greek athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "186",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek scientist?", "Which person married Greek scientists?", "Who married a Greek scientist?", "Who married Greek scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "187",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek politician?", "Which person married Greek politicians?", "Who married a Greek politician?", "Who married Greek politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "188",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek swimmer?", "Which person married Greek swimmers?", "Who married a Greek swimmer?", "Who married Greek swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "189",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek volleyball player?", "Which person married Greek volleyball players?", "Who married a Greek volleyball player?", "Who married Greek volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "190",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek handball player?", "Which person married Greek handball players?", "Who married a Greek handball player?", "Who married Greek handball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HandballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "191",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek person?", "Which person married Greek persons?", "Who married a Greek person?", "Who married Greek persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "192",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek basketball player?", "Which person married Greek basketball players?", "Who married a Greek basketball player?", "Who married Greek basketball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "193",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married a Greek writer?", "Which person married Greek writers?", "Who married a Greek writer?", "Who married Greek writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "194",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person married persons born in $x?", "Who married persons born in $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "A.D.O.R.",
        "uri" : "http://dbpedia.org/resource/A.D.O.R."
      }, {
        "label" : "A.L. Monsohn Lithography",
        "uri" : "http://dbpedia.org/resource/A.L._Monsohn_Lithography"
      }, {
        "label" : "A. A. Khan (academic)",
        "uri" : "http://dbpedia.org/resource/A._A._Khan_(academic)"
      }, {
        "label" : "A. B. Lull",
        "uri" : "http://dbpedia.org/resource/A._B._Lull"
      }, {
        "label" : "A. C. Shanmugam",
        "uri" : "http://dbpedia.org/resource/A._C._Shanmugam"
      }, {
        "label" : "A. C. Wise",
        "uri" : "http://dbpedia.org/resource/A._C._Wise"
      }, {
        "label" : "A. G. K. Gokhale",
        "uri" : "http://dbpedia.org/resource/A._G._K._Gokhale"
      }, {
        "label" : "A. Ganeshkumar",
        "uri" : "http://dbpedia.org/resource/A._Ganeshkumar"
      }, {
        "label" : "A. J. Benza",
        "uri" : "http://dbpedia.org/resource/A._J._Benza"
      }, {
        "label" : "A. J. Bernheim Brush",
        "uri" : "http://dbpedia.org/resource/A._J._Bernheim_Brush"
      }, {
        "label" : "A. Johnkumar",
        "uri" : "http://dbpedia.org/resource/A._Johnkumar"
      }, {
        "label" : "A. K. Narain",
        "uri" : "http://dbpedia.org/resource/A._K._Narain"
      }, {
        "label" : "A. M. Mathai",
        "uri" : "http://dbpedia.org/resource/A._M._Mathai"
      }, {
        "label" : "A. N. Gopal",
        "uri" : "http://dbpedia.org/resource/A._N._Gopal"
      }, {
        "label" : "A. Rajagopal",
        "uri" : "http://dbpedia.org/resource/A._Rajagopal"
      }, {
        "label" : "A. Ranganadha Rao",
        "uri" : "http://dbpedia.org/resource/A._Ranganadha_Rao"
      }, {
        "label" : "A. Sheriff",
        "uri" : "http://dbpedia.org/resource/A._Sheriff"
      }, {
        "label" : "A. T. Smith",
        "uri" : "http://dbpedia.org/resource/A._T._Smith"
      }, {
        "label" : "A. V. Gurava Reddy",
        "uri" : "http://dbpedia.org/resource/A._V._Gurava_Reddy"
      }, {
        "label" : "A. Wess Mitchell",
        "uri" : "http://dbpedia.org/resource/A._Wess_Mitchell"
      }, {
        "label" : "Love Ablish",
        "uri" : "http://dbpedia.org/resource/Love_Ablish"
      }, {
        "label" : "Lovebug Starski",
        "uri" : "http://dbpedia.org/resource/Lovebug_Starski"
      }, {
        "label" : "Loveleen Kaur Sasan",
        "uri" : "http://dbpedia.org/resource/Loveleen_Kaur_Sasan"
      }, {
        "label" : "Lovemore Majaivana",
        "uri" : "http://dbpedia.org/resource/Lovemore_Majaivana"
      }, {
        "label" : "Lovemore Moyo",
        "uri" : "http://dbpedia.org/resource/Lovemore_Moyo"
      }, {
        "label" : "Lovepreet Singh",
        "uri" : "http://dbpedia.org/resource/Lovepreet_Singh"
      }, {
        "label" : "Lovie Simone",
        "uri" : "http://dbpedia.org/resource/Lovie_Simone"
      }, {
        "label" : "Low Ki",
        "uri" : "http://dbpedia.org/resource/Low_Ki"
      }, {
        "label" : "Lowell A. Reed Jr.",
        "uri" : "http://dbpedia.org/resource/Lowell_A._Reed_Jr."
      }, {
        "label" : "Lowell Bergman",
        "uri" : "http://dbpedia.org/resource/Lowell_Bergman"
      }, {
        "label" : "Lowell Blair Nesbitt",
        "uri" : "http://dbpedia.org/resource/Lowell_Blair_Nesbitt"
      }, {
        "label" : "Lowell Ganz",
        "uri" : "http://dbpedia.org/resource/Lowell_Ganz"
      }, {
        "label" : "Lowell George",
        "uri" : "http://dbpedia.org/resource/Lowell_George"
      }, {
        "label" : "Lowell Green",
        "uri" : "http://dbpedia.org/resource/Lowell_Green"
      }, {
        "label" : "Lowell McAdam",
        "uri" : "http://dbpedia.org/resource/Lowell_McAdam"
      }, {
        "label" : "Lowell Norland",
        "uri" : "http://dbpedia.org/resource/Lowell_Norland"
      }, {
        "label" : "Lowell Thomas",
        "uri" : "http://dbpedia.org/resource/Lowell_Thomas"
      }, {
        "label" : "Loyal Blaine Aldrich",
        "uri" : "http://dbpedia.org/resource/Loyal_Blaine_Aldrich"
      }, {
        "label" : "Loyce W. Turner",
        "uri" : "http://dbpedia.org/resource/Loyce_W._Turner"
      }, {
        "label" : "Loyd Gentry Jr.",
        "uri" : "http://dbpedia.org/resource/Loyd_Gentry_Jr."
      }, {
        "label" : "Loyd Grossman",
        "uri" : "http://dbpedia.org/resource/Loyd_Grossman"
      }, {
        "label" : "Loyd Lewis",
        "uri" : "http://dbpedia.org/resource/Loyd_Lewis"
      }, {
        "label" : "Loïc Dufau",
        "uri" : "http://dbpedia.org/resource/Loïc_Dufau"
      }, {
        "label" : "Loïc Meillard",
        "uri" : "http://dbpedia.org/resource/Loïc_Meillard"
      }, {
        "label" : "LuAnn Tafoya",
        "uri" : "http://dbpedia.org/resource/LuAnn_Tafoya"
      }, {
        "label" : "Luana Anders",
        "uri" : "http://dbpedia.org/resource/Luana_Anders"
      }, {
        "label" : "Luana Bühler",
        "uri" : "http://dbpedia.org/resource/Luana_Bühler"
      }, {
        "label" : "Luba (singer)",
        "uri" : "http://dbpedia.org/resource/Luba_(singer)"
      }, {
        "label" : "Luc-Normand Tellier",
        "uri" : "http://dbpedia.org/resource/Luc-Normand_Tellier"
      }, {
        "label" : "Luc Beausoleil",
        "uri" : "http://dbpedia.org/resource/Luc_Beausoleil"
      }, {
        "label" : "Luc Borrelli",
        "uri" : "http://dbpedia.org/resource/Luc_Borrelli"
      }, {
        "label" : "Luc Cartillier",
        "uri" : "http://dbpedia.org/resource/Luc_Cartillier"
      }, {
        "label" : "Luc Chatel",
        "uri" : "http://dbpedia.org/resource/Luc_Chatel"
      }, {
        "label" : "Luc Lafortune",
        "uri" : "http://dbpedia.org/resource/Luc_Lafortune"
      }, {
        "label" : "Luc Poirier",
        "uri" : "http://dbpedia.org/resource/Luc_Poirier"
      }, {
        "label" : "Luc Robitaille",
        "uri" : "http://dbpedia.org/resource/Luc_Robitaille"
      }, {
        "label" : "Luc Rocheleau",
        "uri" : "http://dbpedia.org/resource/Luc_Rocheleau"
      }, {
        "label" : "Luc Salvas",
        "uri" : "http://dbpedia.org/resource/Luc_Salvas"
      }, {
        "label" : "Luc Thériault",
        "uri" : "http://dbpedia.org/resource/Luc_Thériault"
      }, {
        "label" : "Luc Vinet",
        "uri" : "http://dbpedia.org/resource/Luc_Vinet"
      }, {
        "label" : "Luca Aerni",
        "uri" : "http://dbpedia.org/resource/Luca_Aerni"
      }, {
        "label" : "Luca Caputi",
        "uri" : "http://dbpedia.org/resource/Luca_Caputi"
      }, {
        "label" : "Luca Cereda",
        "uri" : "http://dbpedia.org/resource/Luca_Cereda"
      }, {
        "label" : "Luca Denicolà",
        "uri" : "http://dbpedia.org/resource/Luca_Denicolà"
      }, {
        "label" : "Luca Fazzini",
        "uri" : "http://dbpedia.org/resource/Luca_Fazzini"
      }, {
        "label" : "Luca Forte (footballer)",
        "uri" : "http://dbpedia.org/resource/Luca_Forte_(footballer)"
      }, {
        "label" : "Luca Hollenstein",
        "uri" : "http://dbpedia.org/resource/Luca_Hollenstein"
      }, {
        "label" : "Luca Hänni",
        "uri" : "http://dbpedia.org/resource/Luca_Hänni"
      }, {
        "label" : "Luca Ladner",
        "uri" : "http://dbpedia.org/resource/Luca_Ladner"
      }, {
        "label" : "Luca Lewis",
        "uri" : "http://dbpedia.org/resource/Luca_Lewis"
      }, {
        "label" : "Luca Petrasso",
        "uri" : "http://dbpedia.org/resource/Luca_Petrasso"
      }, {
        "label" : "Luca Turilli",
        "uri" : "http://dbpedia.org/resource/Luca_Turilli"
      }, {
        "label" : "Luca Zidane",
        "uri" : "http://dbpedia.org/resource/Luca_Zidane"
      }, {
        "label" : "Luca de la Torre",
        "uri" : "http://dbpedia.org/resource/Luca_de_la_Torre"
      }, {
        "label" : "Lucas Arzán",
        "uri" : "http://dbpedia.org/resource/Lucas_Arzán"
      }, {
        "label" : "Lucas Auer",
        "uri" : "http://dbpedia.org/resource/Lucas_Auer"
      }, {
        "label" : "Lucas Brunner",
        "uri" : "http://dbpedia.org/resource/Lucas_Brunner"
      }, {
        "label" : "Lucas Cavallini",
        "uri" : "http://dbpedia.org/resource/Lucas_Cavallini"
      }, {
        "label" : "Lucas De Rossi",
        "uri" : "http://dbpedia.org/resource/Lucas_De_Rossi"
      }, {
        "label" : "Lucas Eberle",
        "uri" : "http://dbpedia.org/resource/Lucas_Eberle"
      }, {
        "label" : "Lucas Elliot Eberl",
        "uri" : "http://dbpedia.org/resource/Lucas_Elliot_Eberl"
      }, {
        "label" : "Lucas Giolito",
        "uri" : "http://dbpedia.org/resource/Lucas_Giolito"
      }, {
        "label" : "Lucas Hernandez",
        "uri" : "http://dbpedia.org/resource/Lucas_Hernandez"
      }, {
        "label" : "Lucas Martin",
        "uri" : "http://dbpedia.org/resource/Lucas_Martin"
      }, {
        "label" : "Lucas Perrin",
        "uri" : "http://dbpedia.org/resource/Lucas_Perrin"
      }, {
        "label" : "Lucas Prata",
        "uri" : "http://dbpedia.org/resource/Lucas_Prata"
      }, {
        "label" : "Lucas Rastello",
        "uri" : "http://dbpedia.org/resource/Lucas_Rastello"
      }, {
        "label" : "Lucas Reiner",
        "uri" : "http://dbpedia.org/resource/Lucas_Reiner"
      }, {
        "label" : "Lucas Till",
        "uri" : "http://dbpedia.org/resource/Lucas_Till"
      }, {
        "label" : "Lucia Romanov-Stark",
        "uri" : "http://dbpedia.org/resource/Lucia_Romanov-Stark"
      }, {
        "label" : "Lucia Toader",
        "uri" : "http://dbpedia.org/resource/Lucia_Toader"
      }, {
        "label" : "Lucian Asanache",
        "uri" : "http://dbpedia.org/resource/Lucian_Asanache"
      }, {
        "label" : "Lucian Blaga",
        "uri" : "http://dbpedia.org/resource/Lucian_Blaga"
      }, {
        "label" : "Lucian Boia",
        "uri" : "http://dbpedia.org/resource/Lucian_Boia"
      }, {
        "label" : "Lucian Bot",
        "uri" : "http://dbpedia.org/resource/Lucian_Bot"
      }, {
        "label" : "Lucian Bratu",
        "uri" : "http://dbpedia.org/resource/Lucian_Bratu"
      }, {
        "label" : "Lucian Burchel",
        "uri" : "http://dbpedia.org/resource/Lucian_Burchel"
      }, {
        "label" : "Lucian Burdujan",
        "uri" : "http://dbpedia.org/resource/Lucian_Burdujan"
      }, {
        "label" : "Lucian Bute",
        "uri" : "http://dbpedia.org/resource/Lucian_Bute"
      }, {
        "label" : "Lucian Buzan",
        "uri" : "http://dbpedia.org/resource/Lucian_Buzan"
      } ]
    },
    "combination" : true
  }, {
    "id" : "195",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person composed movies directed by $x?", "Which person composes movies directed by $x?", "Who composed movies directed by $x?", "Who composes movies directed by $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfPropx)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "A. L. Vijay",
        "uri" : "http://dbpedia.org/resource/A._L._Vijay"
      }, {
        "label" : "A. Venkatesh (director)",
        "uri" : "http://dbpedia.org/resource/A._Venkatesh_(director)"
      }, {
        "label" : "Luc Besson",
        "uri" : "http://dbpedia.org/resource/Luc_Besson"
      }, {
        "label" : "Luis César Amadori",
        "uri" : "http://dbpedia.org/resource/Luis_César_Amadori"
      }, {
        "label" : "Lupino Lane",
        "uri" : "http://dbpedia.org/resource/Lupino_Lane"
      }, {
        "label" : "Léo Joannon",
        "uri" : "http://dbpedia.org/resource/Léo_Joannon"
      }, {
        "label" : "Léonce Perret",
        "uri" : "http://dbpedia.org/resource/Léonce_Perret"
      }, {
        "label" : "M. Blash",
        "uri" : "http://dbpedia.org/resource/M._Blash"
      }, {
        "label" : "M. G. Ramachandran",
        "uri" : "http://dbpedia.org/resource/M._G._Ramachandran"
      }, {
        "label" : "M. Krishnan Nair (director)",
        "uri" : "http://dbpedia.org/resource/M._Krishnan_Nair_(director)"
      }, {
        "label" : "Madhu Kaithapram",
        "uri" : "http://dbpedia.org/resource/Madhu_Kaithapram"
      }, {
        "label" : "Mahesh Bhatt",
        "uri" : "http://dbpedia.org/resource/Mahesh_Bhatt"
      }, {
        "label" : "Uberto Pasolini",
        "uri" : "http://dbpedia.org/resource/Uberto_Pasolini"
      }, {
        "label" : "Upendra Madhav",
        "uri" : "http://dbpedia.org/resource/Upendra_Madhav"
      }, {
        "label" : "Vamshi Paidipally",
        "uri" : "http://dbpedia.org/resource/Vamshi_Paidipally"
      }, {
        "label" : "Vamsy",
        "uri" : "http://dbpedia.org/resource/Vamsy"
      }, {
        "label" : "Cătălin Mitulescu",
        "uri" : "http://dbpedia.org/resource/Cătălin_Mitulescu"
      }, {
        "label" : "Dale Launer",
        "uri" : "http://dbpedia.org/resource/Dale_Launer"
      }, {
        "label" : "Elda Tattoli",
        "uri" : "http://dbpedia.org/resource/Elda_Tattoli"
      }, {
        "label" : "J. Sasikumar",
        "uri" : "http://dbpedia.org/resource/J._Sasikumar"
      }, {
        "label" : "S. Ramanathan (film director)",
        "uri" : "http://dbpedia.org/resource/S._Ramanathan_(film_director)"
      }, {
        "label" : "Lawrence D'Souza",
        "uri" : "http://dbpedia.org/resource/Lawrence_D'Souza"
      }, {
        "label" : "Riingo Banerjee",
        "uri" : "http://dbpedia.org/resource/Riingo_Banerjee"
      }, {
        "label" : "Tom Ropelewski",
        "uri" : "http://dbpedia.org/resource/Tom_Ropelewski"
      }, {
        "label" : "Robert Land",
        "uri" : "http://dbpedia.org/resource/Robert_Land"
      }, {
        "label" : "Pierre Houle",
        "uri" : "http://dbpedia.org/resource/Pierre_Houle"
      }, {
        "label" : "Billy Wilder",
        "uri" : "http://dbpedia.org/resource/Billy_Wilder"
      }, {
        "label" : "Bimal Roy",
        "uri" : "http://dbpedia.org/resource/Bimal_Roy"
      }, {
        "label" : "Abbas–Mustan",
        "uri" : "http://dbpedia.org/resource/Abbas–Mustan"
      }, {
        "label" : "Delbert Mann",
        "uri" : "http://dbpedia.org/resource/Delbert_Mann"
      }, {
        "label" : "Derick Martini",
        "uri" : "http://dbpedia.org/resource/Derick_Martini"
      }, {
        "label" : "Dermot Mulroney",
        "uri" : "http://dbpedia.org/resource/Dermot_Mulroney"
      }, {
        "label" : "Dev Anand",
        "uri" : "http://dbpedia.org/resource/Dev_Anand"
      }, {
        "label" : "Dharmesh Tiwari",
        "uri" : "http://dbpedia.org/resource/Dharmesh_Tiwari"
      }, {
        "label" : "Dhyan Sreenivasan",
        "uri" : "http://dbpedia.org/resource/Dhyan_Sreenivasan"
      }, {
        "label" : "Dibakar Banerjee",
        "uri" : "http://dbpedia.org/resource/Dibakar_Banerjee"
      }, {
        "label" : "Dileesh Pothan",
        "uri" : "http://dbpedia.org/resource/Dileesh_Pothan"
      }, {
        "label" : "Dinesh D'Souza",
        "uri" : "http://dbpedia.org/resource/Dinesh_D'Souza"
      }, {
        "label" : "Dino Risi",
        "uri" : "http://dbpedia.org/resource/Dino_Risi"
      }, {
        "label" : "Doe Ching",
        "uri" : "http://dbpedia.org/resource/Doe_Ching"
      }, {
        "label" : "Don Siegel",
        "uri" : "http://dbpedia.org/resource/Don_Siegel"
      }, {
        "label" : "Goutam Ghose",
        "uri" : "http://dbpedia.org/resource/Goutam_Ghose"
      }, {
        "label" : "Greg Berlanti",
        "uri" : "http://dbpedia.org/resource/Greg_Berlanti"
      }, {
        "label" : "Gregorio Fernandez",
        "uri" : "http://dbpedia.org/resource/Gregorio_Fernandez"
      }, {
        "label" : "Kevin Bacon",
        "uri" : "http://dbpedia.org/resource/Kevin_Bacon"
      }, {
        "label" : "Kevin Sullivan (producer)",
        "uri" : "http://dbpedia.org/resource/Kevin_Sullivan_(producer)"
      }, {
        "label" : "Kodi Ramakrishna",
        "uri" : "http://dbpedia.org/resource/Kodi_Ramakrishna"
      }, {
        "label" : "Koichi Chigira",
        "uri" : "http://dbpedia.org/resource/Koichi_Chigira"
      }, {
        "label" : "Krishna Vamsi",
        "uri" : "http://dbpedia.org/resource/Krishna_Vamsi"
      }, {
        "label" : "Kristine Peterson",
        "uri" : "http://dbpedia.org/resource/Kristine_Peterson"
      }, {
        "label" : "Prithviraj Sukumaran",
        "uri" : "http://dbpedia.org/resource/Prithviraj_Sukumaran"
      }, {
        "label" : "Pupi Avati",
        "uri" : "http://dbpedia.org/resource/Pupi_Avati"
      }, {
        "label" : "Puttanna Kanagal",
        "uri" : "http://dbpedia.org/resource/Puttanna_Kanagal"
      }, {
        "label" : "Pyotr Todorovsky",
        "uri" : "http://dbpedia.org/resource/Pyotr_Todorovsky"
      }, {
        "label" : "R. N. R. Manohar",
        "uri" : "http://dbpedia.org/resource/R._N._R._Manohar"
      }, {
        "label" : "RZA",
        "uri" : "http://dbpedia.org/resource/RZA"
      }, {
        "label" : "Rahul Rawail",
        "uri" : "http://dbpedia.org/resource/Rahul_Rawail"
      }, {
        "label" : "Rajendra Singh Babu",
        "uri" : "http://dbpedia.org/resource/Rajendra_Singh_Babu"
      }, {
        "label" : "Hariharan (director)",
        "uri" : "http://dbpedia.org/resource/Hariharan_(director)"
      }, {
        "label" : "Sam Irvin",
        "uri" : "http://dbpedia.org/resource/Sam_Irvin"
      }, {
        "label" : "M. A. Thirumugam",
        "uri" : "http://dbpedia.org/resource/M._A._Thirumugam"
      }, {
        "label" : "Nandha Periyasamy",
        "uri" : "http://dbpedia.org/resource/Nandha_Periyasamy"
      }, {
        "label" : "Dennis Law Sau-Yiu",
        "uri" : "http://dbpedia.org/resource/Dennis_Law_Sau-Yiu"
      }, {
        "label" : "Akira Kurosawa",
        "uri" : "http://dbpedia.org/resource/Akira_Kurosawa"
      }, {
        "label" : "Aku Louhimies",
        "uri" : "http://dbpedia.org/resource/Aku_Louhimies"
      }, {
        "label" : "Alain Berliner",
        "uri" : "http://dbpedia.org/resource/Alain_Berliner"
      }, {
        "label" : "Alain Jessua",
        "uri" : "http://dbpedia.org/resource/Alain_Jessua"
      }, {
        "label" : "Alain Resnais",
        "uri" : "http://dbpedia.org/resource/Alain_Resnais"
      }, {
        "label" : "Alan Clarke",
        "uri" : "http://dbpedia.org/resource/Alan_Clarke"
      }, {
        "label" : "Alan J. Pakula",
        "uri" : "http://dbpedia.org/resource/Alan_J._Pakula"
      }, {
        "label" : "Alan Rudolph",
        "uri" : "http://dbpedia.org/resource/Alan_Rudolph"
      }, {
        "label" : "Alberto Lattuada",
        "uri" : "http://dbpedia.org/resource/Alberto_Lattuada"
      }, {
        "label" : "Alek Keshishian",
        "uri" : "http://dbpedia.org/resource/Alek_Keshishian"
      }, {
        "label" : "Alessandro Blasetti",
        "uri" : "http://dbpedia.org/resource/Alessandro_Blasetti"
      }, {
        "label" : "Alexander Korda",
        "uri" : "http://dbpedia.org/resource/Alexander_Korda"
      }, {
        "label" : "Alexander Singer",
        "uri" : "http://dbpedia.org/resource/Alexander_Singer"
      }, {
        "label" : "Alfred L. Werker",
        "uri" : "http://dbpedia.org/resource/Alfred_L._Werker"
      }, {
        "label" : "Alfred Vohrer",
        "uri" : "http://dbpedia.org/resource/Alfred_Vohrer"
      }, {
        "label" : "Cesare Zavattini",
        "uri" : "http://dbpedia.org/resource/Cesare_Zavattini"
      }, {
        "label" : "Chandra Siddhartha",
        "uri" : "http://dbpedia.org/resource/Chandra_Siddhartha"
      }, {
        "label" : "Chang Cheh",
        "uri" : "http://dbpedia.org/resource/Chang_Cheh"
      }, {
        "label" : "Charles C. Wilson (actor)",
        "uri" : "http://dbpedia.org/resource/Charles_C._Wilson_(actor)"
      }, {
        "label" : "Charles Vidor",
        "uri" : "http://dbpedia.org/resource/Charles_Vidor"
      }, {
        "label" : "Flavio Mogherini",
        "uri" : "http://dbpedia.org/resource/Flavio_Mogherini"
      }, {
        "label" : "Amit Sharma (director)",
        "uri" : "http://dbpedia.org/resource/Amit_Sharma_(director)"
      }, {
        "label" : "Anand Tiwari",
        "uri" : "http://dbpedia.org/resource/Anand_Tiwari"
      }, {
        "label" : "Nigel Cole",
        "uri" : "http://dbpedia.org/resource/Nigel_Cole"
      }, {
        "label" : "Nikolai van der Heyde",
        "uri" : "http://dbpedia.org/resource/Nikolai_van_der_Heyde"
      }, {
        "label" : "Nishikant Kamat",
        "uri" : "http://dbpedia.org/resource/Nishikant_Kamat"
      }, {
        "label" : "Noah Hawley",
        "uri" : "http://dbpedia.org/resource/Noah_Hawley"
      }, {
        "label" : "Noboru Ishiguro",
        "uri" : "http://dbpedia.org/resource/Noboru_Ishiguro"
      }, {
        "label" : "Nora Ephron",
        "uri" : "http://dbpedia.org/resource/Nora_Ephron"
      }, {
        "label" : "Norman Mailer",
        "uri" : "http://dbpedia.org/resource/Norman_Mailer"
      }, {
        "label" : "Norman Taurog",
        "uri" : "http://dbpedia.org/resource/Norman_Taurog"
      }, {
        "label" : "Shomu Mukherjee",
        "uri" : "http://dbpedia.org/resource/Shomu_Mukherjee"
      }, {
        "label" : "Siva Nageswara Rao",
        "uri" : "http://dbpedia.org/resource/Siva_Nageswara_Rao"
      }, {
        "label" : "Sundar Rao Nadkarni",
        "uri" : "http://dbpedia.org/resource/Sundar_Rao_Nadkarni"
      }, {
        "label" : "Richard Compton",
        "uri" : "http://dbpedia.org/resource/Richard_Compton"
      }, {
        "label" : "Shoojit Sircar",
        "uri" : "http://dbpedia.org/resource/Shoojit_Sircar"
      }, {
        "label" : "B. Jaya",
        "uri" : "http://dbpedia.org/resource/B._Jaya"
      } ]
    },
    "combination" : true
  }, {
    "id" : "196",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "Which person directed movies directed by $x?", "Which person directs movies directed by $x?", "Who directed movies directed by $x?", "Who directs movies directed by $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfPropx)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Love You Baba",
        "uri" : "http://dbpedia.org/resource/Love_You_Baba"
      }, {
        "label" : "Luc Besson",
        "uri" : "http://dbpedia.org/resource/Luc_Besson"
      }, {
        "label" : "Luchino Visconti",
        "uri" : "http://dbpedia.org/resource/Luchino_Visconti"
      }, {
        "label" : "Luis César Amadori",
        "uri" : "http://dbpedia.org/resource/Luis_César_Amadori"
      }, {
        "label" : "Luke Matheny",
        "uri" : "http://dbpedia.org/resource/Luke_Matheny"
      }, {
        "label" : "Lupino Lane",
        "uri" : "http://dbpedia.org/resource/Lupino_Lane"
      }, {
        "label" : "Léo Joannon",
        "uri" : "http://dbpedia.org/resource/Léo_Joannon"
      }, {
        "label" : "Mai Zetterling",
        "uri" : "http://dbpedia.org/resource/Mai_Zetterling"
      }, {
        "label" : "Ujwal Ghimire",
        "uri" : "http://dbpedia.org/resource/Ujwal_Ghimire"
      }, {
        "label" : "Umetsugu Inoue",
        "uri" : "http://dbpedia.org/resource/Umetsugu_Inoue"
      }, {
        "label" : "Usama Mukwaya",
        "uri" : "http://dbpedia.org/resource/Usama_Mukwaya"
      }, {
        "label" : "Cătălin Mitulescu",
        "uri" : "http://dbpedia.org/resource/Cătălin_Mitulescu"
      }, {
        "label" : "Dale Launer",
        "uri" : "http://dbpedia.org/resource/Dale_Launer"
      }, {
        "label" : "Elda Tattoli",
        "uri" : "http://dbpedia.org/resource/Elda_Tattoli"
      }, {
        "label" : "J. Sasikumar",
        "uri" : "http://dbpedia.org/resource/J._Sasikumar"
      }, {
        "label" : "S. Ramanathan (film director)",
        "uri" : "http://dbpedia.org/resource/S._Ramanathan_(film_director)"
      }, {
        "label" : "Sean Garrity (director)",
        "uri" : "http://dbpedia.org/resource/Sean_Garrity_(director)"
      }, {
        "label" : "Simon Staho",
        "uri" : "http://dbpedia.org/resource/Simon_Staho"
      }, {
        "label" : "Riingo Banerjee",
        "uri" : "http://dbpedia.org/resource/Riingo_Banerjee"
      }, {
        "label" : "Robert Land",
        "uri" : "http://dbpedia.org/resource/Robert_Land"
      }, {
        "label" : "Robert Péguy",
        "uri" : "http://dbpedia.org/resource/Robert_Péguy"
      }, {
        "label" : "Thornton Freeland",
        "uri" : "http://dbpedia.org/resource/Thornton_Freeland"
      }, {
        "label" : "Billy Wilder",
        "uri" : "http://dbpedia.org/resource/Billy_Wilder"
      }, {
        "label" : "Blaine Thurier",
        "uri" : "http://dbpedia.org/resource/Blaine_Thurier"
      }, {
        "label" : "Bo Widerberg",
        "uri" : "http://dbpedia.org/resource/Bo_Widerberg"
      }, {
        "label" : "Bobby Burns",
        "uri" : "http://dbpedia.org/resource/Bobby_Burns"
      }, {
        "label" : "Brad Armstrong (director)",
        "uri" : "http://dbpedia.org/resource/Brad_Armstrong_(director)"
      }, {
        "label" : "Delbert Mann",
        "uri" : "http://dbpedia.org/resource/Delbert_Mann"
      }, {
        "label" : "Dennis Dugan",
        "uri" : "http://dbpedia.org/resource/Dennis_Dugan"
      }, {
        "label" : "Dermot Mulroney",
        "uri" : "http://dbpedia.org/resource/Dermot_Mulroney"
      }, {
        "label" : "Dev Anand",
        "uri" : "http://dbpedia.org/resource/Dev_Anand"
      }, {
        "label" : "Dhyan Sreenivasan",
        "uri" : "http://dbpedia.org/resource/Dhyan_Sreenivasan"
      }, {
        "label" : "Diane Kurys",
        "uri" : "http://dbpedia.org/resource/Diane_Kurys"
      }, {
        "label" : "Dibakar Banerjee",
        "uri" : "http://dbpedia.org/resource/Dibakar_Banerjee"
      }, {
        "label" : "Dinesh D'Souza",
        "uri" : "http://dbpedia.org/resource/Dinesh_D'Souza"
      }, {
        "label" : "Dino Risi",
        "uri" : "http://dbpedia.org/resource/Dino_Risi"
      }, {
        "label" : "Dipendra K Khanal",
        "uri" : "http://dbpedia.org/resource/Dipendra_K_Khanal"
      }, {
        "label" : "Doe Ching",
        "uri" : "http://dbpedia.org/resource/Doe_Ching"
      }, {
        "label" : "Donald Crisp",
        "uri" : "http://dbpedia.org/resource/Donald_Crisp"
      }, {
        "label" : "Glenn Jordan",
        "uri" : "http://dbpedia.org/resource/Glenn_Jordan"
      }, {
        "label" : "Greg Berlanti",
        "uri" : "http://dbpedia.org/resource/Greg_Berlanti"
      }, {
        "label" : "Greg Carter (filmmaker)",
        "uri" : "http://dbpedia.org/resource/Greg_Carter_(filmmaker)"
      }, {
        "label" : "Gu Changwei",
        "uri" : "http://dbpedia.org/resource/Gu_Changwei"
      }, {
        "label" : "Kevin Bacon",
        "uri" : "http://dbpedia.org/resource/Kevin_Bacon"
      }, {
        "label" : "Kim Ki-young",
        "uri" : "http://dbpedia.org/resource/Kim_Ki-young"
      }, {
        "label" : "Kim Kyu-tae",
        "uri" : "http://dbpedia.org/resource/Kim_Kyu-tae"
      }, {
        "label" : "King Baggot",
        "uri" : "http://dbpedia.org/resource/King_Baggot"
      }, {
        "label" : "King Vidor",
        "uri" : "http://dbpedia.org/resource/King_Vidor"
      }, {
        "label" : "Kinuyo Tanaka",
        "uri" : "http://dbpedia.org/resource/Kinuyo_Tanaka"
      }, {
        "label" : "Koichi Chigira",
        "uri" : "http://dbpedia.org/resource/Koichi_Chigira"
      }, {
        "label" : "Kranthi Kumar",
        "uri" : "http://dbpedia.org/resource/Kranthi_Kumar"
      }, {
        "label" : "Kristine Peterson",
        "uri" : "http://dbpedia.org/resource/Kristine_Peterson"
      }, {
        "label" : "Kriv Stenders",
        "uri" : "http://dbpedia.org/resource/Kriv_Stenders"
      }, {
        "label" : "Prithviraj Sukumaran",
        "uri" : "http://dbpedia.org/resource/Prithviraj_Sukumaran"
      }, {
        "label" : "RZA",
        "uri" : "http://dbpedia.org/resource/RZA"
      }, {
        "label" : "Rafi Mecartin",
        "uri" : "http://dbpedia.org/resource/Rafi_Mecartin"
      }, {
        "label" : "Rahul Rawail",
        "uri" : "http://dbpedia.org/resource/Rahul_Rawail"
      }, {
        "label" : "Rajendra Singh Babu",
        "uri" : "http://dbpedia.org/resource/Rajendra_Singh_Babu"
      }, {
        "label" : "Ralph Ince",
        "uri" : "http://dbpedia.org/resource/Ralph_Ince"
      }, {
        "label" : "Gordon Anderson (director)",
        "uri" : "http://dbpedia.org/resource/Gordon_Anderson_(director)"
      }, {
        "label" : "Hans-Jürgen Syberberg",
        "uri" : "http://dbpedia.org/resource/Hans-Jürgen_Syberberg"
      }, {
        "label" : "Hariharan (director)",
        "uri" : "http://dbpedia.org/resource/Hariharan_(director)"
      }, {
        "label" : "Everett Lewis",
        "uri" : "http://dbpedia.org/resource/Everett_Lewis"
      }, {
        "label" : "Oscar Whitbread",
        "uri" : "http://dbpedia.org/resource/Oscar_Whitbread"
      }, {
        "label" : "Dennis Law Sau-Yiu",
        "uri" : "http://dbpedia.org/resource/Dennis_Law_Sau-Yiu"
      }, {
        "label" : "Aisling Walsh",
        "uri" : "http://dbpedia.org/resource/Aisling_Walsh"
      }, {
        "label" : "Aku Louhimies",
        "uri" : "http://dbpedia.org/resource/Aku_Louhimies"
      }, {
        "label" : "Alain Corneau",
        "uri" : "http://dbpedia.org/resource/Alain_Corneau"
      }, {
        "label" : "Alain Resnais",
        "uri" : "http://dbpedia.org/resource/Alain_Resnais"
      }, {
        "label" : "Alan J. Pakula",
        "uri" : "http://dbpedia.org/resource/Alan_J._Pakula"
      }, {
        "label" : "Alan James",
        "uri" : "http://dbpedia.org/resource/Alan_James"
      }, {
        "label" : "Alan Rudolph",
        "uri" : "http://dbpedia.org/resource/Alan_Rudolph"
      }, {
        "label" : "Albert Ray",
        "uri" : "http://dbpedia.org/resource/Albert_Ray"
      }, {
        "label" : "Alberto Lattuada",
        "uri" : "http://dbpedia.org/resource/Alberto_Lattuada"
      }, {
        "label" : "Alek Keshishian",
        "uri" : "http://dbpedia.org/resource/Alek_Keshishian"
      }, {
        "label" : "Alessandro Blasetti",
        "uri" : "http://dbpedia.org/resource/Alessandro_Blasetti"
      }, {
        "label" : "Alexander Singer",
        "uri" : "http://dbpedia.org/resource/Alexander_Singer"
      }, {
        "label" : "Alfred Cheung",
        "uri" : "http://dbpedia.org/resource/Alfred_Cheung"
      }, {
        "label" : "Alfred L. Werker",
        "uri" : "http://dbpedia.org/resource/Alfred_L._Werker"
      }, {
        "label" : "Alfred Vohrer",
        "uri" : "http://dbpedia.org/resource/Alfred_Vohrer"
      }, {
        "label" : "Cesare Zavattini",
        "uri" : "http://dbpedia.org/resource/Cesare_Zavattini"
      }, {
        "label" : "Chang Cheh",
        "uri" : "http://dbpedia.org/resource/Chang_Cheh"
      }, {
        "label" : "Charles Barton (director)",
        "uri" : "http://dbpedia.org/resource/Charles_Barton_(director)"
      }, {
        "label" : "Charles C. Wilson (actor)",
        "uri" : "http://dbpedia.org/resource/Charles_C._Wilson_(actor)"
      }, {
        "label" : "Charles Lamont",
        "uri" : "http://dbpedia.org/resource/Charles_Lamont"
      }, {
        "label" : "Charles Vidor",
        "uri" : "http://dbpedia.org/resource/Charles_Vidor"
      }, {
        "label" : "Anand Tiwari",
        "uri" : "http://dbpedia.org/resource/Anand_Tiwari"
      }, {
        "label" : "Nikolai van der Heyde",
        "uri" : "http://dbpedia.org/resource/Nikolai_van_der_Heyde"
      }, {
        "label" : "Noah Hawley",
        "uri" : "http://dbpedia.org/resource/Noah_Hawley"
      }, {
        "label" : "Nora Ephron",
        "uri" : "http://dbpedia.org/resource/Nora_Ephron"
      }, {
        "label" : "Norman Taurog",
        "uri" : "http://dbpedia.org/resource/Norman_Taurog"
      }, {
        "label" : "Oddvar Bull Tuhus",
        "uri" : "http://dbpedia.org/resource/Oddvar_Bull_Tuhus"
      }, {
        "label" : "Shomu Mukherjee",
        "uri" : "http://dbpedia.org/resource/Shomu_Mukherjee"
      }, {
        "label" : "Siva Nageswara Rao",
        "uri" : "http://dbpedia.org/resource/Siva_Nageswara_Rao"
      }, {
        "label" : "Roger Young (director)",
        "uri" : "http://dbpedia.org/resource/Roger_Young_(director)"
      }, {
        "label" : "Heidi Ewing",
        "uri" : "http://dbpedia.org/resource/Heidi_Ewing"
      }, {
        "label" : "Malcolm Marmorstein",
        "uri" : "http://dbpedia.org/resource/Malcolm_Marmorstein"
      }, {
        "label" : "B. Jaya",
        "uri" : "http://dbpedia.org/resource/B._Jaya"
      }, {
        "label" : "Barra Grant",
        "uri" : "http://dbpedia.org/resource/Barra_Grant"
      }, {
        "label" : "Basil Dean",
        "uri" : "http://dbpedia.org/resource/Basil_Dean"
      } ]
    },
    "combination" : true
  }, {
    "id" : "197",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian cleric?", "What is directed by Belgian clerics?", "What was directed by a Belgian cleric?", "What was directed by Belgian clerics?", "Which movie is directed by a Belgian cleric?", "Which movie is directed by Belgian clerics?", "Which movie was directed by a Belgian cleric?", "Which movie was directed by Belgian clerics?", "Which movies are directed by a Belgian cleric?", "Which movies are directed by Belgian clerics?", "Which movies were directed by a Belgian cleric?", "Which movies were directed by Belgian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "198",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian office holder?", "What is directed by Belgian office holders?", "What was directed by a Belgian office holder?", "What was directed by Belgian office holders?", "Which movie is directed by a Belgian office holder?", "Which movie is directed by Belgian office holders?", "Which movie was directed by a Belgian office holder?", "Which movie was directed by Belgian office holders?", "Which movies are directed by a Belgian office holder?", "Which movies are directed by Belgian office holders?", "Which movies were directed by a Belgian office holder?", "Which movies were directed by Belgian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "199",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian agent?", "What is directed by Belgian agents?", "What was directed by a Belgian agent?", "What was directed by Belgian agents?", "Which movie is directed by a Belgian agent?", "Which movie is directed by Belgian agents?", "Which movie was directed by a Belgian agent?", "Which movie was directed by Belgian agents?", "Which movies are directed by a Belgian agent?", "Which movies are directed by Belgian agents?", "Which movies were directed by a Belgian agent?", "Which movies were directed by Belgian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "200",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian economist?", "What is directed by Belgian economists?", "What was directed by a Belgian economist?", "What was directed by Belgian economists?", "Which movie is directed by a Belgian economist?", "Which movie is directed by Belgian economists?", "Which movie was directed by a Belgian economist?", "Which movie was directed by Belgian economists?", "Which movies are directed by a Belgian economist?", "Which movies are directed by Belgian economists?", "Which movies were directed by a Belgian economist?", "Which movies were directed by Belgian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "201",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian motorcycle rider?", "What is directed by Belgian motorcycle riders?", "What was directed by a Belgian motorcycle rider?", "What was directed by Belgian motorcycle riders?", "Which movie is directed by a Belgian motorcycle rider?", "Which movie is directed by Belgian motorcycle riders?", "Which movie was directed by a Belgian motorcycle rider?", "Which movie was directed by Belgian motorcycle riders?", "Which movies are directed by a Belgian motorcycle rider?", "Which movies are directed by Belgian motorcycle riders?", "Which movies were directed by a Belgian motorcycle rider?", "Which movies were directed by Belgian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian artist?", "What is directed by Belgian artists?", "What was directed by a Belgian artist?", "What was directed by Belgian artists?", "Which movie is directed by a Belgian artist?", "Which movie is directed by Belgian artists?", "Which movie was directed by a Belgian artist?", "Which movie was directed by Belgian artists?", "Which movies are directed by a Belgian artist?", "Which movies are directed by Belgian artists?", "Which movies were directed by a Belgian artist?", "Which movies were directed by Belgian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian athlete?", "What is directed by Belgian athletes?", "What was directed by a Belgian athlete?", "What was directed by Belgian athletes?", "Which movie is directed by a Belgian athlete?", "Which movie is directed by Belgian athletes?", "Which movie was directed by a Belgian athlete?", "Which movie was directed by Belgian athletes?", "Which movies are directed by a Belgian athlete?", "Which movies are directed by Belgian athletes?", "Which movies were directed by a Belgian athlete?", "Which movies were directed by Belgian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian scientist?", "What is directed by Belgian scientists?", "What was directed by a Belgian scientist?", "What was directed by Belgian scientists?", "Which movie is directed by a Belgian scientist?", "Which movie is directed by Belgian scientists?", "Which movie was directed by a Belgian scientist?", "Which movie was directed by Belgian scientists?", "Which movies are directed by a Belgian scientist?", "Which movies are directed by Belgian scientists?", "Which movies were directed by a Belgian scientist?", "Which movies were directed by Belgian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "205",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian architect?", "What is directed by Belgian architects?", "What was directed by a Belgian architect?", "What was directed by Belgian architects?", "Which movie is directed by a Belgian architect?", "Which movie is directed by Belgian architects?", "Which movie was directed by a Belgian architect?", "Which movie was directed by Belgian architects?", "Which movies are directed by a Belgian architect?", "Which movies are directed by Belgian architects?", "Which movies were directed by a Belgian architect?", "Which movies were directed by Belgian architects?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "206",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian golf player?", "What is directed by Belgian golf players?", "What was directed by a Belgian golf player?", "What was directed by Belgian golf players?", "Which movie is directed by a Belgian golf player?", "Which movie is directed by Belgian golf players?", "Which movie was directed by a Belgian golf player?", "Which movie was directed by Belgian golf players?", "Which movies are directed by a Belgian golf player?", "Which movies are directed by Belgian golf players?", "Which movies were directed by a Belgian golf player?", "Which movies were directed by Belgian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "207",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian racing driver?", "What is directed by Belgian racing drivers?", "What was directed by a Belgian racing driver?", "What was directed by Belgian racing drivers?", "Which movie is directed by a Belgian racing driver?", "Which movie is directed by Belgian racing drivers?", "Which movie was directed by a Belgian racing driver?", "Which movie was directed by Belgian racing drivers?", "Which movies are directed by a Belgian racing driver?", "Which movies are directed by Belgian racing drivers?", "Which movies were directed by a Belgian racing driver?", "Which movies were directed by Belgian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "208",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian politician?", "What is directed by Belgian politicians?", "What was directed by a Belgian politician?", "What was directed by Belgian politicians?", "Which movie is directed by a Belgian politician?", "Which movie is directed by Belgian politicians?", "Which movie was directed by a Belgian politician?", "Which movie was directed by Belgian politicians?", "Which movies are directed by a Belgian politician?", "Which movies are directed by Belgian politicians?", "Which movies were directed by a Belgian politician?", "Which movies were directed by Belgian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "209",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian swimmer?", "What is directed by Belgian swimmers?", "What was directed by a Belgian swimmer?", "What was directed by Belgian swimmers?", "Which movie is directed by a Belgian swimmer?", "Which movie is directed by Belgian swimmers?", "Which movie was directed by a Belgian swimmer?", "Which movie was directed by Belgian swimmers?", "Which movies are directed by a Belgian swimmer?", "Which movies are directed by Belgian swimmers?", "Which movies were directed by a Belgian swimmer?", "Which movies were directed by Belgian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "210",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian volleyball player?", "What is directed by Belgian volleyball players?", "What was directed by a Belgian volleyball player?", "What was directed by Belgian volleyball players?", "Which movie is directed by a Belgian volleyball player?", "Which movie is directed by Belgian volleyball players?", "Which movie was directed by a Belgian volleyball player?", "Which movie was directed by Belgian volleyball players?", "Which movies are directed by a Belgian volleyball player?", "Which movies are directed by Belgian volleyball players?", "Which movies were directed by a Belgian volleyball player?", "Which movies were directed by Belgian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "211",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian person?", "What is directed by Belgian persons?", "What was directed by a Belgian person?", "What was directed by Belgian persons?", "Which movie is directed by a Belgian person?", "Which movie is directed by Belgian persons?", "Which movie was directed by a Belgian person?", "Which movie was directed by Belgian persons?", "Which movies are directed by a Belgian person?", "Which movies are directed by Belgian persons?", "Which movies were directed by a Belgian person?", "Which movies were directed by Belgian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "212",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian comics creator?", "What is directed by Belgian comics creators?", "What was directed by a Belgian comics creator?", "What was directed by Belgian comics creators?", "Which movie is directed by a Belgian comics creator?", "Which movie is directed by Belgian comics creators?", "Which movie was directed by a Belgian comics creator?", "Which movie was directed by Belgian comics creators?", "Which movies are directed by a Belgian comics creator?", "Which movies are directed by Belgian comics creators?", "Which movies were directed by a Belgian comics creator?", "Which movies were directed by Belgian comics creators?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "213",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian writer?", "What is directed by Belgian writers?", "What was directed by a Belgian writer?", "What was directed by Belgian writers?", "Which movie is directed by a Belgian writer?", "Which movie is directed by Belgian writers?", "Which movie was directed by a Belgian writer?", "Which movie was directed by Belgian writers?", "Which movies are directed by a Belgian writer?", "Which movies are directed by Belgian writers?", "Which movies were directed by a Belgian writer?", "Which movies were directed by Belgian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "214",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian motorsport racer?", "What is directed by Belgian motorsport racers?", "What was directed by a Belgian motorsport racer?", "What was directed by Belgian motorsport racers?", "Which movie is directed by a Belgian motorsport racer?", "Which movie is directed by Belgian motorsport racers?", "Which movie was directed by a Belgian motorsport racer?", "Which movie was directed by Belgian motorsport racers?", "Which movies are directed by a Belgian motorsport racer?", "Which movies are directed by Belgian motorsport racers?", "Which movies were directed by a Belgian motorsport racer?", "Which movies were directed by Belgian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "215",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Greek boxer?", "What is directed by Greek boxers?", "What was directed by a Greek boxer?", "What was directed by Greek boxers?", "Which movie is directed by a Greek boxer?", "Which movie is directed by Greek boxers?", "Which movie was directed by a Greek boxer?", "Which movie was directed by Greek boxers?", "Which movies are directed by a Greek boxer?", "Which movies are directed by Greek boxers?", "Which movies were directed by a Greek boxer?", "Which movies were directed by Greek boxers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Boxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "216",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Greek cleric?", "What is directed by Greek clerics?", "What was directed by a Greek cleric?", "What was directed by Greek clerics?", "Which movie is directed by a Greek cleric?", "Which movie is directed by Greek clerics?", "Which movie was directed by a Greek cleric?", "Which movie was directed by Greek clerics?", "Which movies are directed by a Greek cleric?", "Which movies are directed by Greek clerics?", "Which movies were directed by a Greek cleric?", "Which movies were directed by Greek clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "217",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Greek office holder?", "What is directed by Greek office holders?", "What was directed by a Greek office holder?", "What was directed by Greek office holders?", "Which movie is directed by a Greek office holder?", "Which movie is directed by Greek office holders?", "Which movie was directed by a Greek office holder?", "Which movie was directed by Greek office holders?", "Which movies are directed by a Greek office holder?", "Which movies are directed by Greek office holders?", "Which movies were directed by a Greek office holder?", "Which movies were directed by Greek office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "218",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Greek agent?", "What is directed by Greek agents?", "What was directed by a Greek agent?", "What was directed by Greek agents?", "Which movie is directed by a Greek agent?", "Which movie is directed by Greek agents?", "Which movie was directed by a Greek agent?", "Which movie was directed by Greek agents?", "Which movies are directed by a Greek agent?", "Which movies are directed by Greek agents?", "Which movies were directed by a Greek agent?", "Which movies were directed by Greek agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "219",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Greek fictional character?", "What is directed by Greek fictional characters?", "What was directed by a Greek fictional character?", "What was directed by Greek fictional characters?", "Which movie is directed by a Greek fictional character?", "Which movie is directed by Greek fictional characters?", "Which movie was directed by a Greek fictional character?", "Which movie was directed by Greek fictional characters?", "Which movies are directed by a Greek fictional character?", "Which movies are directed by Greek fictional characters?", "Which movies were directed by a Greek fictional character?", "Which movies were directed by Greek fictional characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "220",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Greek artist?", "What is directed by Greek artists?", "What was directed by a Greek artist?", "What was directed by Greek artists?", "Which movie is directed by a Greek artist?", "Which movie is directed by Greek artists?", "Which movie was directed by a Greek artist?", "Which movie was directed by Greek artists?", "Which movies are directed by a Greek artist?", "Which movies are directed by Greek artists?", "Which movies were directed by a Greek artist?", "Which movies were directed by Greek artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "221",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Greek athlete?", "What is directed by Greek athletes?", "What was directed by a Greek athlete?", "What was directed by Greek athletes?", "Which movie is directed by a Greek athlete?", "Which movie is directed by Greek athletes?", "Which movie was directed by a Greek athlete?", "Which movie was directed by Greek athletes?", "Which movies are directed by a Greek athlete?", "Which movies are directed by Greek athletes?", "Which movies were directed by a Greek athlete?", "Which movies were directed by Greek athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "222",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Greek scientist?", "What is directed by Greek scientists?", "What was directed by a Greek scientist?", "What was directed by Greek scientists?", "Which movie is directed by a Greek scientist?", "Which movie is directed by Greek scientists?", "Which movie was directed by a Greek scientist?", "Which movie was directed by Greek scientists?", "Which movies are directed by a Greek scientist?", "Which movies are directed by Greek scientists?", "Which movies were directed by a Greek scientist?", "Which movies were directed by Greek scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "223",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Greek politician?", "What is directed by Greek politicians?", "What was directed by a Greek politician?", "What was directed by Greek politicians?", "Which movie is directed by a Greek politician?", "Which movie is directed by Greek politicians?", "Which movie was directed by a Greek politician?", "Which movie was directed by Greek politicians?", "Which movies are directed by a Greek politician?", "Which movies are directed by Greek politicians?", "Which movies were directed by a Greek politician?", "Which movies were directed by Greek politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "224",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Greek swimmer?", "What is directed by Greek swimmers?", "What was directed by a Greek swimmer?", "What was directed by Greek swimmers?", "Which movie is directed by a Greek swimmer?", "Which movie is directed by Greek swimmers?", "Which movie was directed by a Greek swimmer?", "Which movie was directed by Greek swimmers?", "Which movies are directed by a Greek swimmer?", "Which movies are directed by Greek swimmers?", "Which movies were directed by a Greek swimmer?", "Which movies were directed by Greek swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Greek volleyball player?", "What is directed by Greek volleyball players?", "What was directed by a Greek volleyball player?", "What was directed by Greek volleyball players?", "Which movie is directed by a Greek volleyball player?", "Which movie is directed by Greek volleyball players?", "Which movie was directed by a Greek volleyball player?", "Which movie was directed by Greek volleyball players?", "Which movies are directed by a Greek volleyball player?", "Which movies are directed by Greek volleyball players?", "Which movies were directed by a Greek volleyball player?", "Which movies were directed by Greek volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Greek handball player?", "What is directed by Greek handball players?", "What was directed by a Greek handball player?", "What was directed by Greek handball players?", "Which movie is directed by a Greek handball player?", "Which movie is directed by Greek handball players?", "Which movie was directed by a Greek handball player?", "Which movie was directed by Greek handball players?", "Which movies are directed by a Greek handball player?", "Which movies are directed by Greek handball players?", "Which movies were directed by a Greek handball player?", "Which movies were directed by Greek handball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HandballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "227",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Greek person?", "What is directed by Greek persons?", "What was directed by a Greek person?", "What was directed by Greek persons?", "Which movie is directed by a Greek person?", "Which movie is directed by Greek persons?", "Which movie was directed by a Greek person?", "Which movie was directed by Greek persons?", "Which movies are directed by a Greek person?", "Which movies are directed by Greek persons?", "Which movies were directed by a Greek person?", "Which movies were directed by Greek persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "228",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Greek basketball player?", "What is directed by Greek basketball players?", "What was directed by a Greek basketball player?", "What was directed by Greek basketball players?", "Which movie is directed by a Greek basketball player?", "Which movie is directed by Greek basketball players?", "Which movie was directed by a Greek basketball player?", "Which movie was directed by Greek basketball players?", "Which movies are directed by a Greek basketball player?", "Which movies are directed by Greek basketball players?", "Which movies were directed by a Greek basketball player?", "Which movies were directed by Greek basketball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "229",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Greek writer?", "What is directed by Greek writers?", "What was directed by a Greek writer?", "What was directed by Greek writers?", "Which movie is directed by a Greek writer?", "Which movie is directed by Greek writers?", "Which movie was directed by a Greek writer?", "Which movie was directed by Greek writers?", "Which movies are directed by a Greek writer?", "Which movies are directed by Greek writers?", "Which movies were directed by a Greek writer?", "Which movies were directed by Greek writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "230",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born in $x?", "What was directed by persons born in $x?", "Which movie is directed by persons born in $x?", "Which movie was directed by persons born in $x?", "Which movies are directed by persons born in $x?", "Which movies were directed by persons born in $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "A. J. Bernheim Brush",
        "uri" : "http://dbpedia.org/resource/A._J._Bernheim_Brush"
      }, {
        "label" : "A. T. Smith",
        "uri" : "http://dbpedia.org/resource/A._T._Smith"
      }, {
        "label" : "Low Ki",
        "uri" : "http://dbpedia.org/resource/Low_Ki"
      }, {
        "label" : "Lowell Blair Nesbitt",
        "uri" : "http://dbpedia.org/resource/Lowell_Blair_Nesbitt"
      }, {
        "label" : "Lowell Green",
        "uri" : "http://dbpedia.org/resource/Lowell_Green"
      }, {
        "label" : "Lowell McAdam",
        "uri" : "http://dbpedia.org/resource/Lowell_McAdam"
      }, {
        "label" : "Lowell Norland",
        "uri" : "http://dbpedia.org/resource/Lowell_Norland"
      }, {
        "label" : "Lowell Thomas",
        "uri" : "http://dbpedia.org/resource/Lowell_Thomas"
      }, {
        "label" : "Loyal Blaine Aldrich",
        "uri" : "http://dbpedia.org/resource/Loyal_Blaine_Aldrich"
      }, {
        "label" : "Loyce W. Turner",
        "uri" : "http://dbpedia.org/resource/Loyce_W._Turner"
      }, {
        "label" : "Loyd Gentry Jr.",
        "uri" : "http://dbpedia.org/resource/Loyd_Gentry_Jr."
      }, {
        "label" : "LuAnn Tafoya",
        "uri" : "http://dbpedia.org/resource/LuAnn_Tafoya"
      }, {
        "label" : "Luc Chatel",
        "uri" : "http://dbpedia.org/resource/Luc_Chatel"
      }, {
        "label" : "Luca Lewis",
        "uri" : "http://dbpedia.org/resource/Luca_Lewis"
      }, {
        "label" : "Lucas Elliot Eberl",
        "uri" : "http://dbpedia.org/resource/Lucas_Elliot_Eberl"
      }, {
        "label" : "Lucas Martin",
        "uri" : "http://dbpedia.org/resource/Lucas_Martin"
      }, {
        "label" : "Lucas Prata",
        "uri" : "http://dbpedia.org/resource/Lucas_Prata"
      }, {
        "label" : "Lucien Keith",
        "uri" : "http://dbpedia.org/resource/Lucien_Keith"
      }, {
        "label" : "Lucien Shaw",
        "uri" : "http://dbpedia.org/resource/Lucien_Shaw"
      }, {
        "label" : "Lucien Stephen Crandall",
        "uri" : "http://dbpedia.org/resource/Lucien_Stephen_Crandall"
      }, {
        "label" : "Lucille Hegamin",
        "uri" : "http://dbpedia.org/resource/Lucille_Hegamin"
      }, {
        "label" : "Lucius Horatio Stockton",
        "uri" : "http://dbpedia.org/resource/Lucius_Horatio_Stockton"
      }, {
        "label" : "Lucy Ann Johnson",
        "uri" : "http://dbpedia.org/resource/Lucy_Ann_Johnson"
      }, {
        "label" : "Lucy Flores",
        "uri" : "http://dbpedia.org/resource/Lucy_Flores"
      }, {
        "label" : "Lucy Tyler-Sharman",
        "uri" : "http://dbpedia.org/resource/Lucy_Tyler-Sharman"
      }, {
        "label" : "Luigi Fioravanti",
        "uri" : "http://dbpedia.org/resource/Luigi_Fioravanti"
      }, {
        "label" : "Luigi Waites",
        "uri" : "http://dbpedia.org/resource/Luigi_Waites"
      }, {
        "label" : "Luigi Zaninelli",
        "uri" : "http://dbpedia.org/resource/Luigi_Zaninelli"
      }, {
        "label" : "Luis Alberto Moreno",
        "uri" : "http://dbpedia.org/resource/Luis_Alberto_Moreno"
      }, {
        "label" : "Luis Beza",
        "uri" : "http://dbpedia.org/resource/Luis_Beza"
      }, {
        "label" : "Luis Cálix",
        "uri" : "http://dbpedia.org/resource/Luis_Cálix"
      }, {
        "label" : "Luis Dubuc",
        "uri" : "http://dbpedia.org/resource/Luis_Dubuc"
      }, {
        "label" : "Luis Felipe Fernandes",
        "uri" : "http://dbpedia.org/resource/Luis_Felipe_Fernandes"
      }, {
        "label" : "Luis Moscoso",
        "uri" : "http://dbpedia.org/resource/Luis_Moscoso"
      }, {
        "label" : "Luis Resto (musician)",
        "uri" : "http://dbpedia.org/resource/Luis_Resto_(musician)"
      }, {
        "label" : "Luis Zamudio",
        "uri" : "http://dbpedia.org/resource/Luis_Zamudio"
      }, {
        "label" : "Luise Clayborn Kaish",
        "uri" : "http://dbpedia.org/resource/Luise_Clayborn_Kaish"
      }, {
        "label" : "Luke \"Long Gone\" Miles",
        "uri" : "http://dbpedia.org/resource/Luke_%22Long_Gone%22_Miles"
      }, {
        "label" : "Luke Caudillo",
        "uri" : "http://dbpedia.org/resource/Luke_Caudillo"
      }, {
        "label" : "Luke Chueh",
        "uri" : "http://dbpedia.org/resource/Luke_Chueh"
      }, {
        "label" : "Luke Cummo",
        "uri" : "http://dbpedia.org/resource/Luke_Cummo"
      }, {
        "label" : "Luke Edward Wright",
        "uri" : "http://dbpedia.org/resource/Luke_Edward_Wright"
      }, {
        "label" : "Luke Hauswirth",
        "uri" : "http://dbpedia.org/resource/Luke_Hauswirth"
      }, {
        "label" : "Luke Jordan",
        "uri" : "http://dbpedia.org/resource/Luke_Jordan"
      }, {
        "label" : "Luke Stewart",
        "uri" : "http://dbpedia.org/resource/Luke_Stewart"
      }, {
        "label" : "Luke Winters",
        "uri" : "http://dbpedia.org/resource/Luke_Winters"
      }, {
        "label" : "Lumumba Sayers",
        "uri" : "http://dbpedia.org/resource/Lumumba_Sayers"
      }, {
        "label" : "Luques Curtis",
        "uri" : "http://dbpedia.org/resource/Luques_Curtis"
      }, {
        "label" : "Luria Petrucci",
        "uri" : "http://dbpedia.org/resource/Luria_Petrucci"
      }, {
        "label" : "Lurrie Bell",
        "uri" : "http://dbpedia.org/resource/Lurrie_Bell"
      }, {
        "label" : "Luther Blount",
        "uri" : "http://dbpedia.org/resource/Luther_Blount"
      }, {
        "label" : "Luther Reigns",
        "uri" : "http://dbpedia.org/resource/Luther_Reigns"
      }, {
        "label" : "Luther S. Dixon",
        "uri" : "http://dbpedia.org/resource/Luther_S._Dixon"
      }, {
        "label" : "Luther Tucker",
        "uri" : "http://dbpedia.org/resource/Luther_Tucker"
      }, {
        "label" : "Luther Whiting Mason",
        "uri" : "http://dbpedia.org/resource/Luther_Whiting_Mason"
      }, {
        "label" : "Lydia Jordan",
        "uri" : "http://dbpedia.org/resource/Lydia_Jordan"
      }, {
        "label" : "Lydia Kay Griggsby",
        "uri" : "http://dbpedia.org/resource/Lydia_Kay_Griggsby"
      }, {
        "label" : "Lydia Polgreen",
        "uri" : "http://dbpedia.org/resource/Lydia_Polgreen"
      }, {
        "label" : "Lyle Beerbohm",
        "uri" : "http://dbpedia.org/resource/Lyle_Beerbohm"
      }, {
        "label" : "Lyle Blackburn",
        "uri" : "http://dbpedia.org/resource/Lyle_Blackburn"
      }, {
        "label" : "Lyle Yorks",
        "uri" : "http://dbpedia.org/resource/Lyle_Yorks"
      }, {
        "label" : "Lyman Cornelius Smith",
        "uri" : "http://dbpedia.org/resource/Lyman_Cornelius_Smith"
      }, {
        "label" : "Lyman Drake",
        "uri" : "http://dbpedia.org/resource/Lyman_Drake"
      }, {
        "label" : "Lyman Ogilby",
        "uri" : "http://dbpedia.org/resource/Lyman_Ogilby"
      }, {
        "label" : "Lyman Stewart",
        "uri" : "http://dbpedia.org/resource/Lyman_Stewart"
      }, {
        "label" : "Lyn-Genet Recitas",
        "uri" : "http://dbpedia.org/resource/Lyn-Genet_Recitas"
      }, {
        "label" : "Lynch Davidson",
        "uri" : "http://dbpedia.org/resource/Lynch_Davidson"
      }, {
        "label" : "Lynda Baquero",
        "uri" : "http://dbpedia.org/resource/Lynda_Baquero"
      }, {
        "label" : "Lynda Goodfriend",
        "uri" : "http://dbpedia.org/resource/Lynda_Goodfriend"
      }, {
        "label" : "Lyndsay Meyer",
        "uri" : "http://dbpedia.org/resource/Lyndsay_Meyer"
      }, {
        "label" : "Lyndsay Petruny",
        "uri" : "http://dbpedia.org/resource/Lyndsay_Petruny"
      }, {
        "label" : "Lyndsay Wall",
        "uri" : "http://dbpedia.org/resource/Lyndsay_Wall"
      }, {
        "label" : "Lynn Conkwright",
        "uri" : "http://dbpedia.org/resource/Lynn_Conkwright"
      }, {
        "label" : "Lynn Davis (photographer)",
        "uri" : "http://dbpedia.org/resource/Lynn_Davis_(photographer)"
      }, {
        "label" : "Lynn Fitch",
        "uri" : "http://dbpedia.org/resource/Lynn_Fitch"
      }, {
        "label" : "Lynn Hauldren",
        "uri" : "http://dbpedia.org/resource/Lynn_Hauldren"
      }, {
        "label" : "Lynn J. Bush",
        "uri" : "http://dbpedia.org/resource/Lynn_J._Bush"
      }, {
        "label" : "Lynn Nakamoto",
        "uri" : "http://dbpedia.org/resource/Lynn_Nakamoto"
      }, {
        "label" : "Lynn Povich",
        "uri" : "http://dbpedia.org/resource/Lynn_Povich"
      }, {
        "label" : "Lynn Seidemann",
        "uri" : "http://dbpedia.org/resource/Lynn_Seidemann"
      }, {
        "label" : "Lynn Shores",
        "uri" : "http://dbpedia.org/resource/Lynn_Shores"
      }, {
        "label" : "Lynn Turner (murderer)",
        "uri" : "http://dbpedia.org/resource/Lynn_Turner_(murderer)"
      }, {
        "label" : "Lynn Venable",
        "uri" : "http://dbpedia.org/resource/Lynn_Venable"
      }, {
        "label" : "Lynn Woolsey",
        "uri" : "http://dbpedia.org/resource/Lynn_Woolsey"
      }, {
        "label" : "Lynn Wyatt",
        "uri" : "http://dbpedia.org/resource/Lynn_Wyatt"
      }, {
        "label" : "Lynn Yeakel",
        "uri" : "http://dbpedia.org/resource/Lynn_Yeakel"
      }, {
        "label" : "Lynne Arvon",
        "uri" : "http://dbpedia.org/resource/Lynne_Arvon"
      }, {
        "label" : "Lynne Austin",
        "uri" : "http://dbpedia.org/resource/Lynne_Austin"
      }, {
        "label" : "Lynnette Cole",
        "uri" : "http://dbpedia.org/resource/Lynnette_Cole"
      }, {
        "label" : "Lynwood Slim",
        "uri" : "http://dbpedia.org/resource/Lynwood_Slim"
      }, {
        "label" : "Lysander Spooner",
        "uri" : "http://dbpedia.org/resource/Lysander_Spooner"
      }, {
        "label" : "Léonie Adams",
        "uri" : "http://dbpedia.org/resource/Léonie_Adams"
      }, {
        "label" : "M. C. A. Hogarth",
        "uri" : "http://dbpedia.org/resource/M._C._A._Hogarth"
      }, {
        "label" : "M. Caldwell Butler",
        "uri" : "http://dbpedia.org/resource/M._Caldwell_Butler"
      }, {
        "label" : "M. Edward Fawcett",
        "uri" : "http://dbpedia.org/resource/M._Edward_Fawcett"
      }, {
        "label" : "M. Evelina Galang",
        "uri" : "http://dbpedia.org/resource/M._Evelina_Galang"
      }, {
        "label" : "M. George Henry",
        "uri" : "http://dbpedia.org/resource/M._George_Henry"
      }, {
        "label" : "M. Hoke Smith",
        "uri" : "http://dbpedia.org/resource/M._Hoke_Smith"
      }, {
        "label" : "M. Jane Brady",
        "uri" : "http://dbpedia.org/resource/M._Jane_Brady"
      }, {
        "label" : "M. Jerome Diamond",
        "uri" : "http://dbpedia.org/resource/M._Jerome_Diamond"
      } ]
    },
    "combination" : true
  }, {
    "id" : "231",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born in the birth place of $x?", "What was born in the birth place of $x?", "Which person is born in the birth place of $x?", "Which person was born in the birth place of $x?", "Which persons are born in the birth place of $x?", "Which persons were born in the birth place of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Paul Noonan",
        "uri" : "http://dbpedia.org/resource/Paul_Noonan"
      }, {
        "label" : "Paul Conlin",
        "uri" : "http://dbpedia.org/resource/Paul_Conlin"
      }, {
        "label" : "Tom McKay (athlete)",
        "uri" : "http://dbpedia.org/resource/Tom_McKay_(athlete)"
      }, {
        "label" : "Juan Carlos Sistos",
        "uri" : "http://dbpedia.org/resource/Juan_Carlos_Sistos"
      }, {
        "label" : "Valampuri Somanathan",
        "uri" : "http://dbpedia.org/resource/Valampuri_Somanathan"
      }, {
        "label" : "Georgi Petrov (footballer, born 1974)",
        "uri" : "http://dbpedia.org/resource/Georgi_Petrov_(footballer,_born_1974)"
      }, {
        "label" : "Atanas Fidanin",
        "uri" : "http://dbpedia.org/resource/Atanas_Fidanin"
      }, {
        "label" : "Tsvetana Sotirova",
        "uri" : "http://dbpedia.org/resource/Tsvetana_Sotirova"
      }, {
        "label" : "Dame Stoykov",
        "uri" : "http://dbpedia.org/resource/Dame_Stoykov"
      }, {
        "label" : "Mario Metushev",
        "uri" : "http://dbpedia.org/resource/Mario_Metushev"
      }, {
        "label" : "Jorge Carrascosa",
        "uri" : "http://dbpedia.org/resource/Jorge_Carrascosa"
      }, {
        "label" : "Butterford Wong",
        "uri" : "http://dbpedia.org/resource/Butterford_Wong"
      }, {
        "label" : "Mauro Radaelli",
        "uri" : "http://dbpedia.org/resource/Mauro_Radaelli"
      }, {
        "label" : "Philip Louis, Duke of Schleswig-Holstein-Sonderburg-Wiesenburg",
        "uri" : "http://dbpedia.org/resource/Philip_Louis,_Duke_of_Schleswig-Holstein-Sonderburg-Wiesenburg"
      }, {
        "label" : "Kala Venkata Rao",
        "uri" : "http://dbpedia.org/resource/Kala_Venkata_Rao"
      }, {
        "label" : "Carlos Roberto Reina",
        "uri" : "http://dbpedia.org/resource/Carlos_Roberto_Reina"
      }, {
        "label" : "Ulises Torres",
        "uri" : "http://dbpedia.org/resource/Ulises_Torres"
      }, {
        "label" : "Alessandro Mori Nunes",
        "uri" : "http://dbpedia.org/resource/Alessandro_Mori_Nunes"
      }, {
        "label" : "João Paulo (footballer, born 1983)",
        "uri" : "http://dbpedia.org/resource/João_Paulo_(footballer,_born_1983)"
      }, {
        "label" : "Jorge Novak",
        "uri" : "http://dbpedia.org/resource/Jorge_Novak"
      }, {
        "label" : "Abdullahi Balarabe Salame",
        "uri" : "http://dbpedia.org/resource/Abdullahi_Balarabe_Salame"
      }, {
        "label" : "Jhonata de Lima Ferreira",
        "uri" : "http://dbpedia.org/resource/Jhonata_de_Lima_Ferreira"
      }, {
        "label" : "Jennifer Dickson",
        "uri" : "http://dbpedia.org/resource/Jennifer_Dickson"
      }, {
        "label" : "Steve Dodd",
        "uri" : "http://dbpedia.org/resource/Steve_Dodd"
      }, {
        "label" : "Isham Randolph of Dungeness",
        "uri" : "http://dbpedia.org/resource/Isham_Randolph_of_Dungeness"
      }, {
        "label" : "Rangel Valchanov",
        "uri" : "http://dbpedia.org/resource/Rangel_Valchanov"
      }, {
        "label" : "Eri Ogihara",
        "uri" : "http://dbpedia.org/resource/Eri_Ogihara"
      }, {
        "label" : "Heather Rankin (curler)",
        "uri" : "http://dbpedia.org/resource/Heather_Rankin_(curler)"
      }, {
        "label" : "Carolyn Rodrigues",
        "uri" : "http://dbpedia.org/resource/Carolyn_Rodrigues"
      }, {
        "label" : "Henry Augustine Tayloe",
        "uri" : "http://dbpedia.org/resource/Henry_Augustine_Tayloe"
      }, {
        "label" : "Perla Morones",
        "uri" : "http://dbpedia.org/resource/Perla_Morones"
      } ]
    },
    "combination" : true
  }, {
    "id" : "232",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Belgian cleric?", "What is born in Belgian clerics?", "What was born in a Belgian cleric?", "What was born in Belgian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "233",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Belgian office holder?", "What is born in Belgian office holders?", "What was born in a Belgian office holder?", "What was born in Belgian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "234",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Belgian agent?", "What is born in Belgian agents?", "What was born in a Belgian agent?", "What was born in Belgian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "235",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Belgian economist?", "What is born in Belgian economists?", "What was born in a Belgian economist?", "What was born in Belgian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "236",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Belgian motorcycle rider?", "What is born in Belgian motorcycle riders?", "What was born in a Belgian motorcycle rider?", "What was born in Belgian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "237",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Belgian artist?", "What is born in Belgian artists?", "What was born in a Belgian artist?", "What was born in Belgian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "238",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Belgian athlete?", "What is born in Belgian athletes?", "What was born in a Belgian athlete?", "What was born in Belgian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "239",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Belgian scientist?", "What is born in Belgian scientists?", "What was born in a Belgian scientist?", "What was born in Belgian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "240",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Belgian architect?", "What is born in Belgian architects?", "What was born in a Belgian architect?", "What was born in Belgian architects?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "241",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Belgian golf player?", "What is born in Belgian golf players?", "What was born in a Belgian golf player?", "What was born in Belgian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "242",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Belgian racing driver?", "What is born in Belgian racing drivers?", "What was born in a Belgian racing driver?", "What was born in Belgian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "243",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Belgian politician?", "What is born in Belgian politicians?", "What was born in a Belgian politician?", "What was born in Belgian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "244",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Belgian swimmer?", "What is born in Belgian swimmers?", "What was born in a Belgian swimmer?", "What was born in Belgian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "245",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Belgian volleyball player?", "What is born in Belgian volleyball players?", "What was born in a Belgian volleyball player?", "What was born in Belgian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "246",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Belgian person?", "What is born in Belgian persons?", "What was born in a Belgian person?", "What was born in Belgian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "247",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Belgian comics creator?", "What is born in Belgian comics creators?", "What was born in a Belgian comics creator?", "What was born in Belgian comics creators?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "248",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Belgian writer?", "What is born in Belgian writers?", "What was born in a Belgian writer?", "What was born in Belgian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "249",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Belgian motorsport racer?", "What is born in Belgian motorsport racers?", "What was born in a Belgian motorsport racer?", "What was born in Belgian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "250",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek boxer?", "What is born in Greek boxers?", "What was born in a Greek boxer?", "What was born in Greek boxers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Boxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "251",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek cleric?", "What is born in Greek clerics?", "What was born in a Greek cleric?", "What was born in Greek clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "252",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek office holder?", "What is born in Greek office holders?", "What was born in a Greek office holder?", "What was born in Greek office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "253",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek agent?", "What is born in Greek agents?", "What was born in a Greek agent?", "What was born in Greek agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "254",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek fictional character?", "What is born in Greek fictional characters?", "What was born in a Greek fictional character?", "What was born in Greek fictional characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "255",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek artist?", "What is born in Greek artists?", "What was born in a Greek artist?", "What was born in Greek artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "256",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek athlete?", "What is born in Greek athletes?", "What was born in a Greek athlete?", "What was born in Greek athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "257",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek scientist?", "What is born in Greek scientists?", "What was born in a Greek scientist?", "What was born in Greek scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "258",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek politician?", "What is born in Greek politicians?", "What was born in a Greek politician?", "What was born in Greek politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "259",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek swimmer?", "What is born in Greek swimmers?", "What was born in a Greek swimmer?", "What was born in Greek swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "260",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek volleyball player?", "What is born in Greek volleyball players?", "What was born in a Greek volleyball player?", "What was born in Greek volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "261",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek handball player?", "What is born in Greek handball players?", "What was born in a Greek handball player?", "What was born in Greek handball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HandballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "262",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek person?", "What is born in Greek persons?", "What was born in a Greek person?", "What was born in Greek persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "263",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek basketball player?", "What is born in Greek basketball players?", "What was born in a Greek basketball player?", "What was born in Greek basketball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "264",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in a Greek writer?", "What is born in Greek writers?", "What was born in a Greek writer?", "What was born in Greek writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "DATE",
    "frameType" : "APP",
    "sentences" : [ "What is born in persons born in $x?", "What was born in persons born in $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Paul Noonan",
        "uri" : "http://dbpedia.org/resource/Paul_Noonan"
      }, {
        "label" : "Paul Conlin",
        "uri" : "http://dbpedia.org/resource/Paul_Conlin"
      }, {
        "label" : "Tom McKay (athlete)",
        "uri" : "http://dbpedia.org/resource/Tom_McKay_(athlete)"
      }, {
        "label" : "Juan Carlos Sistos",
        "uri" : "http://dbpedia.org/resource/Juan_Carlos_Sistos"
      }, {
        "label" : "Georgi Petrov (footballer, born 1974)",
        "uri" : "http://dbpedia.org/resource/Georgi_Petrov_(footballer,_born_1974)"
      }, {
        "label" : "Atanas Fidanin",
        "uri" : "http://dbpedia.org/resource/Atanas_Fidanin"
      }, {
        "label" : "Tsvetana Sotirova",
        "uri" : "http://dbpedia.org/resource/Tsvetana_Sotirova"
      }, {
        "label" : "Dame Stoykov",
        "uri" : "http://dbpedia.org/resource/Dame_Stoykov"
      }, {
        "label" : "Mario Metushev",
        "uri" : "http://dbpedia.org/resource/Mario_Metushev"
      }, {
        "label" : "Mauro Radaelli",
        "uri" : "http://dbpedia.org/resource/Mauro_Radaelli"
      }, {
        "label" : "Philip Louis, Duke of Schleswig-Holstein-Sonderburg-Wiesenburg",
        "uri" : "http://dbpedia.org/resource/Philip_Louis,_Duke_of_Schleswig-Holstein-Sonderburg-Wiesenburg"
      }, {
        "label" : "Carlos Roberto Reina",
        "uri" : "http://dbpedia.org/resource/Carlos_Roberto_Reina"
      }, {
        "label" : "Ulises Torres",
        "uri" : "http://dbpedia.org/resource/Ulises_Torres"
      }, {
        "label" : "Alessandro Mori Nunes",
        "uri" : "http://dbpedia.org/resource/Alessandro_Mori_Nunes"
      }, {
        "label" : "João Paulo (footballer, born 1983)",
        "uri" : "http://dbpedia.org/resource/João_Paulo_(footballer,_born_1983)"
      }, {
        "label" : "Jorge Novak",
        "uri" : "http://dbpedia.org/resource/Jorge_Novak"
      }, {
        "label" : "Abdullahi Balarabe Salame",
        "uri" : "http://dbpedia.org/resource/Abdullahi_Balarabe_Salame"
      }, {
        "label" : "Jhonata de Lima Ferreira",
        "uri" : "http://dbpedia.org/resource/Jhonata_de_Lima_Ferreira"
      }, {
        "label" : "Jennifer Dickson",
        "uri" : "http://dbpedia.org/resource/Jennifer_Dickson"
      }, {
        "label" : "Steve Dodd",
        "uri" : "http://dbpedia.org/resource/Steve_Dodd"
      }, {
        "label" : "Rangel Valchanov",
        "uri" : "http://dbpedia.org/resource/Rangel_Valchanov"
      }, {
        "label" : "Eri Ogihara",
        "uri" : "http://dbpedia.org/resource/Eri_Ogihara"
      }, {
        "label" : "Heather Rankin (curler)",
        "uri" : "http://dbpedia.org/resource/Heather_Rankin_(curler)"
      }, {
        "label" : "Carolyn Rodrigues",
        "uri" : "http://dbpedia.org/resource/Carolyn_Rodrigues"
      }, {
        "label" : "Henry Augustine Tayloe",
        "uri" : "http://dbpedia.org/resource/Henry_Augustine_Tayloe"
      }, {
        "label" : "Perla Morones",
        "uri" : "http://dbpedia.org/resource/Perla_Morones"
      } ]
    },
    "combination" : true
  }, {
    "id" : "266",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian cleric died?", "When was the Belgian clerics died?", "When was the a Belgian cleric dies?", "When was the Belgian clerics dies?", "When were the a Belgian cleric died?", "When were the Belgian clerics died?", "When were the a Belgian cleric dies?", "When were the Belgian clerics dies?", "Which place was the a Belgian cleric died?", "Which place was the Belgian clerics died?", "Which place was the a Belgian cleric dies?", "Which place was the Belgian clerics dies?", "Which place were the a Belgian cleric died?", "Which place were the Belgian clerics died?", "Which place were the a Belgian cleric dies?", "Which place were the Belgian clerics dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "267",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian office holder died?", "When was the Belgian office holders died?", "When was the a Belgian office holder dies?", "When was the Belgian office holders dies?", "When were the a Belgian office holder died?", "When were the Belgian office holders died?", "When were the a Belgian office holder dies?", "When were the Belgian office holders dies?", "Which place was the a Belgian office holder died?", "Which place was the Belgian office holders died?", "Which place was the a Belgian office holder dies?", "Which place was the Belgian office holders dies?", "Which place were the a Belgian office holder died?", "Which place were the Belgian office holders died?", "Which place were the a Belgian office holder dies?", "Which place were the Belgian office holders dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "268",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian agent died?", "When was the Belgian agents died?", "When was the a Belgian agent dies?", "When was the Belgian agents dies?", "When were the a Belgian agent died?", "When were the Belgian agents died?", "When were the a Belgian agent dies?", "When were the Belgian agents dies?", "Which place was the a Belgian agent died?", "Which place was the Belgian agents died?", "Which place was the a Belgian agent dies?", "Which place was the Belgian agents dies?", "Which place were the a Belgian agent died?", "Which place were the Belgian agents died?", "Which place were the a Belgian agent dies?", "Which place were the Belgian agents dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "269",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian economist died?", "When was the Belgian economists died?", "When was the a Belgian economist dies?", "When was the Belgian economists dies?", "When were the a Belgian economist died?", "When were the Belgian economists died?", "When were the a Belgian economist dies?", "When were the Belgian economists dies?", "Which place was the a Belgian economist died?", "Which place was the Belgian economists died?", "Which place was the a Belgian economist dies?", "Which place was the Belgian economists dies?", "Which place were the a Belgian economist died?", "Which place were the Belgian economists died?", "Which place were the a Belgian economist dies?", "Which place were the Belgian economists dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "270",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian motorcycle rider died?", "When was the Belgian motorcycle riders died?", "When was the a Belgian motorcycle rider dies?", "When was the Belgian motorcycle riders dies?", "When were the a Belgian motorcycle rider died?", "When were the Belgian motorcycle riders died?", "When were the a Belgian motorcycle rider dies?", "When were the Belgian motorcycle riders dies?", "Which place was the a Belgian motorcycle rider died?", "Which place was the Belgian motorcycle riders died?", "Which place was the a Belgian motorcycle rider dies?", "Which place was the Belgian motorcycle riders dies?", "Which place were the a Belgian motorcycle rider died?", "Which place were the Belgian motorcycle riders died?", "Which place were the a Belgian motorcycle rider dies?", "Which place were the Belgian motorcycle riders dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "271",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian artist died?", "When was the Belgian artists died?", "When was the a Belgian artist dies?", "When was the Belgian artists dies?", "When were the a Belgian artist died?", "When were the Belgian artists died?", "When were the a Belgian artist dies?", "When were the Belgian artists dies?", "Which place was the a Belgian artist died?", "Which place was the Belgian artists died?", "Which place was the a Belgian artist dies?", "Which place was the Belgian artists dies?", "Which place were the a Belgian artist died?", "Which place were the Belgian artists died?", "Which place were the a Belgian artist dies?", "Which place were the Belgian artists dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "272",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian athlete died?", "When was the Belgian athletes died?", "When was the a Belgian athlete dies?", "When was the Belgian athletes dies?", "When were the a Belgian athlete died?", "When were the Belgian athletes died?", "When were the a Belgian athlete dies?", "When were the Belgian athletes dies?", "Which place was the a Belgian athlete died?", "Which place was the Belgian athletes died?", "Which place was the a Belgian athlete dies?", "Which place was the Belgian athletes dies?", "Which place were the a Belgian athlete died?", "Which place were the Belgian athletes died?", "Which place were the a Belgian athlete dies?", "Which place were the Belgian athletes dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "273",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian scientist died?", "When was the Belgian scientists died?", "When was the a Belgian scientist dies?", "When was the Belgian scientists dies?", "When were the a Belgian scientist died?", "When were the Belgian scientists died?", "When were the a Belgian scientist dies?", "When were the Belgian scientists dies?", "Which place was the a Belgian scientist died?", "Which place was the Belgian scientists died?", "Which place was the a Belgian scientist dies?", "Which place was the Belgian scientists dies?", "Which place were the a Belgian scientist died?", "Which place were the Belgian scientists died?", "Which place were the a Belgian scientist dies?", "Which place were the Belgian scientists dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "274",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian architect died?", "When was the Belgian architects died?", "When was the a Belgian architect dies?", "When was the Belgian architects dies?", "When were the a Belgian architect died?", "When were the Belgian architects died?", "When were the a Belgian architect dies?", "When were the Belgian architects dies?", "Which place was the a Belgian architect died?", "Which place was the Belgian architects died?", "Which place was the a Belgian architect dies?", "Which place was the Belgian architects dies?", "Which place were the a Belgian architect died?", "Which place were the Belgian architects died?", "Which place were the a Belgian architect dies?", "Which place were the Belgian architects dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "275",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian golf player died?", "When was the Belgian golf players died?", "When was the a Belgian golf player dies?", "When was the Belgian golf players dies?", "When were the a Belgian golf player died?", "When were the Belgian golf players died?", "When were the a Belgian golf player dies?", "When were the Belgian golf players dies?", "Which place was the a Belgian golf player died?", "Which place was the Belgian golf players died?", "Which place was the a Belgian golf player dies?", "Which place was the Belgian golf players dies?", "Which place were the a Belgian golf player died?", "Which place were the Belgian golf players died?", "Which place were the a Belgian golf player dies?", "Which place were the Belgian golf players dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "276",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian racing driver died?", "When was the Belgian racing drivers died?", "When was the a Belgian racing driver dies?", "When was the Belgian racing drivers dies?", "When were the a Belgian racing driver died?", "When were the Belgian racing drivers died?", "When were the a Belgian racing driver dies?", "When were the Belgian racing drivers dies?", "Which place was the a Belgian racing driver died?", "Which place was the Belgian racing drivers died?", "Which place was the a Belgian racing driver dies?", "Which place was the Belgian racing drivers dies?", "Which place were the a Belgian racing driver died?", "Which place were the Belgian racing drivers died?", "Which place were the a Belgian racing driver dies?", "Which place were the Belgian racing drivers dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "277",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian politician died?", "When was the Belgian politicians died?", "When was the a Belgian politician dies?", "When was the Belgian politicians dies?", "When were the a Belgian politician died?", "When were the Belgian politicians died?", "When were the a Belgian politician dies?", "When were the Belgian politicians dies?", "Which place was the a Belgian politician died?", "Which place was the Belgian politicians died?", "Which place was the a Belgian politician dies?", "Which place was the Belgian politicians dies?", "Which place were the a Belgian politician died?", "Which place were the Belgian politicians died?", "Which place were the a Belgian politician dies?", "Which place were the Belgian politicians dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "278",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian swimmer died?", "When was the Belgian swimmers died?", "When was the a Belgian swimmer dies?", "When was the Belgian swimmers dies?", "When were the a Belgian swimmer died?", "When were the Belgian swimmers died?", "When were the a Belgian swimmer dies?", "When were the Belgian swimmers dies?", "Which place was the a Belgian swimmer died?", "Which place was the Belgian swimmers died?", "Which place was the a Belgian swimmer dies?", "Which place was the Belgian swimmers dies?", "Which place were the a Belgian swimmer died?", "Which place were the Belgian swimmers died?", "Which place were the a Belgian swimmer dies?", "Which place were the Belgian swimmers dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "279",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian volleyball player died?", "When was the Belgian volleyball players died?", "When was the a Belgian volleyball player dies?", "When was the Belgian volleyball players dies?", "When were the a Belgian volleyball player died?", "When were the Belgian volleyball players died?", "When were the a Belgian volleyball player dies?", "When were the Belgian volleyball players dies?", "Which place was the a Belgian volleyball player died?", "Which place was the Belgian volleyball players died?", "Which place was the a Belgian volleyball player dies?", "Which place was the Belgian volleyball players dies?", "Which place were the a Belgian volleyball player died?", "Which place were the Belgian volleyball players died?", "Which place were the a Belgian volleyball player dies?", "Which place were the Belgian volleyball players dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "280",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian person died?", "When was the Belgian persons died?", "When was the a Belgian person dies?", "When was the Belgian persons dies?", "When were the a Belgian person died?", "When were the Belgian persons died?", "When were the a Belgian person dies?", "When were the Belgian persons dies?", "Which place was the a Belgian person died?", "Which place was the Belgian persons died?", "Which place was the a Belgian person dies?", "Which place was the Belgian persons dies?", "Which place were the a Belgian person died?", "Which place were the Belgian persons died?", "Which place were the a Belgian person dies?", "Which place were the Belgian persons dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian comics creator died?", "When was the Belgian comics creators died?", "When was the a Belgian comics creator dies?", "When was the Belgian comics creators dies?", "When were the a Belgian comics creator died?", "When were the Belgian comics creators died?", "When were the a Belgian comics creator dies?", "When were the Belgian comics creators dies?", "Which place was the a Belgian comics creator died?", "Which place was the Belgian comics creators died?", "Which place was the a Belgian comics creator dies?", "Which place was the Belgian comics creators dies?", "Which place were the a Belgian comics creator died?", "Which place were the Belgian comics creators died?", "Which place were the a Belgian comics creator dies?", "Which place were the Belgian comics creators dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "282",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian writer died?", "When was the Belgian writers died?", "When was the a Belgian writer dies?", "When was the Belgian writers dies?", "When were the a Belgian writer died?", "When were the Belgian writers died?", "When were the a Belgian writer dies?", "When were the Belgian writers dies?", "Which place was the a Belgian writer died?", "Which place was the Belgian writers died?", "Which place was the a Belgian writer dies?", "Which place was the Belgian writers dies?", "Which place were the a Belgian writer died?", "Which place were the Belgian writers died?", "Which place were the a Belgian writer dies?", "Which place were the Belgian writers dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "283",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian motorsport racer died?", "When was the Belgian motorsport racers died?", "When was the a Belgian motorsport racer dies?", "When was the Belgian motorsport racers dies?", "When were the a Belgian motorsport racer died?", "When were the Belgian motorsport racers died?", "When were the a Belgian motorsport racer dies?", "When were the Belgian motorsport racers dies?", "Which place was the a Belgian motorsport racer died?", "Which place was the Belgian motorsport racers died?", "Which place was the a Belgian motorsport racer dies?", "Which place was the Belgian motorsport racers dies?", "Which place were the a Belgian motorsport racer died?", "Which place were the Belgian motorsport racers died?", "Which place were the a Belgian motorsport racer dies?", "Which place were the Belgian motorsport racers dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "284",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek boxer died?", "When was the Greek boxers died?", "When was the a Greek boxer dies?", "When was the Greek boxers dies?", "When were the a Greek boxer died?", "When were the Greek boxers died?", "When were the a Greek boxer dies?", "When were the Greek boxers dies?", "Which place was the a Greek boxer died?", "Which place was the Greek boxers died?", "Which place was the a Greek boxer dies?", "Which place was the Greek boxers dies?", "Which place were the a Greek boxer died?", "Which place were the Greek boxers died?", "Which place were the a Greek boxer dies?", "Which place were the Greek boxers dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Boxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "285",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek cleric died?", "When was the Greek clerics died?", "When was the a Greek cleric dies?", "When was the Greek clerics dies?", "When were the a Greek cleric died?", "When were the Greek clerics died?", "When were the a Greek cleric dies?", "When were the Greek clerics dies?", "Which place was the a Greek cleric died?", "Which place was the Greek clerics died?", "Which place was the a Greek cleric dies?", "Which place was the Greek clerics dies?", "Which place were the a Greek cleric died?", "Which place were the Greek clerics died?", "Which place were the a Greek cleric dies?", "Which place were the Greek clerics dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "286",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek office holder died?", "When was the Greek office holders died?", "When was the a Greek office holder dies?", "When was the Greek office holders dies?", "When were the a Greek office holder died?", "When were the Greek office holders died?", "When were the a Greek office holder dies?", "When were the Greek office holders dies?", "Which place was the a Greek office holder died?", "Which place was the Greek office holders died?", "Which place was the a Greek office holder dies?", "Which place was the Greek office holders dies?", "Which place were the a Greek office holder died?", "Which place were the Greek office holders died?", "Which place were the a Greek office holder dies?", "Which place were the Greek office holders dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "287",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek agent died?", "When was the Greek agents died?", "When was the a Greek agent dies?", "When was the Greek agents dies?", "When were the a Greek agent died?", "When were the Greek agents died?", "When were the a Greek agent dies?", "When were the Greek agents dies?", "Which place was the a Greek agent died?", "Which place was the Greek agents died?", "Which place was the a Greek agent dies?", "Which place was the Greek agents dies?", "Which place were the a Greek agent died?", "Which place were the Greek agents died?", "Which place were the a Greek agent dies?", "Which place were the Greek agents dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "288",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek fictional character died?", "When was the Greek fictional characters died?", "When was the a Greek fictional character dies?", "When was the Greek fictional characters dies?", "When were the a Greek fictional character died?", "When were the Greek fictional characters died?", "When were the a Greek fictional character dies?", "When were the Greek fictional characters dies?", "Which place was the a Greek fictional character died?", "Which place was the Greek fictional characters died?", "Which place was the a Greek fictional character dies?", "Which place was the Greek fictional characters dies?", "Which place were the a Greek fictional character died?", "Which place were the Greek fictional characters died?", "Which place were the a Greek fictional character dies?", "Which place were the Greek fictional characters dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "289",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek artist died?", "When was the Greek artists died?", "When was the a Greek artist dies?", "When was the Greek artists dies?", "When were the a Greek artist died?", "When were the Greek artists died?", "When were the a Greek artist dies?", "When were the Greek artists dies?", "Which place was the a Greek artist died?", "Which place was the Greek artists died?", "Which place was the a Greek artist dies?", "Which place was the Greek artists dies?", "Which place were the a Greek artist died?", "Which place were the Greek artists died?", "Which place were the a Greek artist dies?", "Which place were the Greek artists dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "290",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek athlete died?", "When was the Greek athletes died?", "When was the a Greek athlete dies?", "When was the Greek athletes dies?", "When were the a Greek athlete died?", "When were the Greek athletes died?", "When were the a Greek athlete dies?", "When were the Greek athletes dies?", "Which place was the a Greek athlete died?", "Which place was the Greek athletes died?", "Which place was the a Greek athlete dies?", "Which place was the Greek athletes dies?", "Which place were the a Greek athlete died?", "Which place were the Greek athletes died?", "Which place were the a Greek athlete dies?", "Which place were the Greek athletes dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "291",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek scientist died?", "When was the Greek scientists died?", "When was the a Greek scientist dies?", "When was the Greek scientists dies?", "When were the a Greek scientist died?", "When were the Greek scientists died?", "When were the a Greek scientist dies?", "When were the Greek scientists dies?", "Which place was the a Greek scientist died?", "Which place was the Greek scientists died?", "Which place was the a Greek scientist dies?", "Which place was the Greek scientists dies?", "Which place were the a Greek scientist died?", "Which place were the Greek scientists died?", "Which place were the a Greek scientist dies?", "Which place were the Greek scientists dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "292",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek politician died?", "When was the Greek politicians died?", "When was the a Greek politician dies?", "When was the Greek politicians dies?", "When were the a Greek politician died?", "When were the Greek politicians died?", "When were the a Greek politician dies?", "When were the Greek politicians dies?", "Which place was the a Greek politician died?", "Which place was the Greek politicians died?", "Which place was the a Greek politician dies?", "Which place was the Greek politicians dies?", "Which place were the a Greek politician died?", "Which place were the Greek politicians died?", "Which place were the a Greek politician dies?", "Which place were the Greek politicians dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "293",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek swimmer died?", "When was the Greek swimmers died?", "When was the a Greek swimmer dies?", "When was the Greek swimmers dies?", "When were the a Greek swimmer died?", "When were the Greek swimmers died?", "When were the a Greek swimmer dies?", "When were the Greek swimmers dies?", "Which place was the a Greek swimmer died?", "Which place was the Greek swimmers died?", "Which place was the a Greek swimmer dies?", "Which place was the Greek swimmers dies?", "Which place were the a Greek swimmer died?", "Which place were the Greek swimmers died?", "Which place were the a Greek swimmer dies?", "Which place were the Greek swimmers dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "294",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek volleyball player died?", "When was the Greek volleyball players died?", "When was the a Greek volleyball player dies?", "When was the Greek volleyball players dies?", "When were the a Greek volleyball player died?", "When were the Greek volleyball players died?", "When were the a Greek volleyball player dies?", "When were the Greek volleyball players dies?", "Which place was the a Greek volleyball player died?", "Which place was the Greek volleyball players died?", "Which place was the a Greek volleyball player dies?", "Which place was the Greek volleyball players dies?", "Which place were the a Greek volleyball player died?", "Which place were the Greek volleyball players died?", "Which place were the a Greek volleyball player dies?", "Which place were the Greek volleyball players dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "295",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek handball player died?", "When was the Greek handball players died?", "When was the a Greek handball player dies?", "When was the Greek handball players dies?", "When were the a Greek handball player died?", "When were the Greek handball players died?", "When were the a Greek handball player dies?", "When were the Greek handball players dies?", "Which place was the a Greek handball player died?", "Which place was the Greek handball players died?", "Which place was the a Greek handball player dies?", "Which place was the Greek handball players dies?", "Which place were the a Greek handball player died?", "Which place were the Greek handball players died?", "Which place were the a Greek handball player dies?", "Which place were the Greek handball players dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HandballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "296",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek person died?", "When was the Greek persons died?", "When was the a Greek person dies?", "When was the Greek persons dies?", "When were the a Greek person died?", "When were the Greek persons died?", "When were the a Greek person dies?", "When were the Greek persons dies?", "Which place was the a Greek person died?", "Which place was the Greek persons died?", "Which place was the a Greek person dies?", "Which place was the Greek persons dies?", "Which place were the a Greek person died?", "Which place were the Greek persons died?", "Which place were the a Greek person dies?", "Which place were the Greek persons dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "297",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek basketball player died?", "When was the Greek basketball players died?", "When was the a Greek basketball player dies?", "When was the Greek basketball players dies?", "When were the a Greek basketball player died?", "When were the Greek basketball players died?", "When were the a Greek basketball player dies?", "When were the Greek basketball players dies?", "Which place was the a Greek basketball player died?", "Which place was the Greek basketball players died?", "Which place was the a Greek basketball player dies?", "Which place was the Greek basketball players dies?", "Which place were the a Greek basketball player died?", "Which place were the Greek basketball players died?", "Which place were the a Greek basketball player dies?", "Which place were the Greek basketball players dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "298",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek writer died?", "When was the Greek writers died?", "When was the a Greek writer dies?", "When was the Greek writers dies?", "When were the a Greek writer died?", "When were the Greek writers died?", "When were the a Greek writer dies?", "When were the Greek writers dies?", "Which place was the a Greek writer died?", "Which place was the Greek writers died?", "Which place was the a Greek writer dies?", "Which place was the Greek writers dies?", "Which place were the a Greek writer died?", "Which place were the Greek writers died?", "Which place were the a Greek writer dies?", "Which place were the Greek writers dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "299",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "LOCATION",
    "frameType" : "IPP",
    "sentences" : [ "When was the persons born in $x died?", "When was the persons born in $x dies?", "When were the persons born in $x died?", "When were the persons born in $x dies?", "Which place was the persons born in $x died?", "Which place was the persons born in $x dies?", "Which place were the persons born in $x died?", "Which place were the persons born in $x dies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Juan Carlos Sistos",
        "uri" : "http://dbpedia.org/resource/Juan_Carlos_Sistos"
      }, {
        "label" : "Valampuri Somanathan",
        "uri" : "http://dbpedia.org/resource/Valampuri_Somanathan"
      }, {
        "label" : "Georgi Petrov (footballer, born 1974)",
        "uri" : "http://dbpedia.org/resource/Georgi_Petrov_(footballer,_born_1974)"
      }, {
        "label" : "Atanas Fidanin",
        "uri" : "http://dbpedia.org/resource/Atanas_Fidanin"
      }, {
        "label" : "Tsvetana Sotirova",
        "uri" : "http://dbpedia.org/resource/Tsvetana_Sotirova"
      }, {
        "label" : "Dame Stoykov",
        "uri" : "http://dbpedia.org/resource/Dame_Stoykov"
      }, {
        "label" : "Mario Metushev",
        "uri" : "http://dbpedia.org/resource/Mario_Metushev"
      }, {
        "label" : "Jorge Carrascosa",
        "uri" : "http://dbpedia.org/resource/Jorge_Carrascosa"
      }, {
        "label" : "Mauro Radaelli",
        "uri" : "http://dbpedia.org/resource/Mauro_Radaelli"
      }, {
        "label" : "Carlos Roberto Reina",
        "uri" : "http://dbpedia.org/resource/Carlos_Roberto_Reina"
      }, {
        "label" : "Ulises Torres",
        "uri" : "http://dbpedia.org/resource/Ulises_Torres"
      }, {
        "label" : "Alessandro Mori Nunes",
        "uri" : "http://dbpedia.org/resource/Alessandro_Mori_Nunes"
      }, {
        "label" : "João Paulo (footballer, born 1983)",
        "uri" : "http://dbpedia.org/resource/João_Paulo_(footballer,_born_1983)"
      }, {
        "label" : "Jorge Novak",
        "uri" : "http://dbpedia.org/resource/Jorge_Novak"
      }, {
        "label" : "Joan Cowick",
        "uri" : "http://dbpedia.org/resource/Joan_Cowick"
      }, {
        "label" : "Jhonata de Lima Ferreira",
        "uri" : "http://dbpedia.org/resource/Jhonata_de_Lima_Ferreira"
      }, {
        "label" : "Jennifer Dickson",
        "uri" : "http://dbpedia.org/resource/Jennifer_Dickson"
      }, {
        "label" : "Steve Dodd",
        "uri" : "http://dbpedia.org/resource/Steve_Dodd"
      }, {
        "label" : "Isham Randolph of Dungeness",
        "uri" : "http://dbpedia.org/resource/Isham_Randolph_of_Dungeness"
      }, {
        "label" : "Rangel Valchanov",
        "uri" : "http://dbpedia.org/resource/Rangel_Valchanov"
      }, {
        "label" : "Carolyn Rodrigues",
        "uri" : "http://dbpedia.org/resource/Carolyn_Rodrigues"
      }, {
        "label" : "Henry Augustine Tayloe",
        "uri" : "http://dbpedia.org/resource/Henry_Augustine_Tayloe"
      }, {
        "label" : "Perla Morones",
        "uri" : "http://dbpedia.org/resource/Perla_Morones"
      } ]
    },
    "combination" : true
  }, {
    "id" : "300",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian cleric buried?", "When was the Belgian clerics buried?", "When was the a Belgian cleric buries?", "When was the Belgian clerics buries?", "When were the a Belgian cleric buried?", "When were the Belgian clerics buried?", "When were the a Belgian cleric buries?", "When were the Belgian clerics buries?", "Which city was the a Belgian cleric buried?", "Which city was the Belgian clerics buried?", "Which city was the a Belgian cleric buries?", "Which city was the Belgian clerics buries?", "Which city were the a Belgian cleric buried?", "Which city were the Belgian clerics buried?", "Which city were the a Belgian cleric buries?", "Which city were the Belgian clerics buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "301",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian office holder buried?", "When was the Belgian office holders buried?", "When was the a Belgian office holder buries?", "When was the Belgian office holders buries?", "When were the a Belgian office holder buried?", "When were the Belgian office holders buried?", "When were the a Belgian office holder buries?", "When were the Belgian office holders buries?", "Which city was the a Belgian office holder buried?", "Which city was the Belgian office holders buried?", "Which city was the a Belgian office holder buries?", "Which city was the Belgian office holders buries?", "Which city were the a Belgian office holder buried?", "Which city were the Belgian office holders buried?", "Which city were the a Belgian office holder buries?", "Which city were the Belgian office holders buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "302",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian agent buried?", "When was the Belgian agents buried?", "When was the a Belgian agent buries?", "When was the Belgian agents buries?", "When were the a Belgian agent buried?", "When were the Belgian agents buried?", "When were the a Belgian agent buries?", "When were the Belgian agents buries?", "Which city was the a Belgian agent buried?", "Which city was the Belgian agents buried?", "Which city was the a Belgian agent buries?", "Which city was the Belgian agents buries?", "Which city were the a Belgian agent buried?", "Which city were the Belgian agents buried?", "Which city were the a Belgian agent buries?", "Which city were the Belgian agents buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "303",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian economist buried?", "When was the Belgian economists buried?", "When was the a Belgian economist buries?", "When was the Belgian economists buries?", "When were the a Belgian economist buried?", "When were the Belgian economists buried?", "When were the a Belgian economist buries?", "When were the Belgian economists buries?", "Which city was the a Belgian economist buried?", "Which city was the Belgian economists buried?", "Which city was the a Belgian economist buries?", "Which city was the Belgian economists buries?", "Which city were the a Belgian economist buried?", "Which city were the Belgian economists buried?", "Which city were the a Belgian economist buries?", "Which city were the Belgian economists buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "304",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian motorcycle rider buried?", "When was the Belgian motorcycle riders buried?", "When was the a Belgian motorcycle rider buries?", "When was the Belgian motorcycle riders buries?", "When were the a Belgian motorcycle rider buried?", "When were the Belgian motorcycle riders buried?", "When were the a Belgian motorcycle rider buries?", "When were the Belgian motorcycle riders buries?", "Which city was the a Belgian motorcycle rider buried?", "Which city was the Belgian motorcycle riders buried?", "Which city was the a Belgian motorcycle rider buries?", "Which city was the Belgian motorcycle riders buries?", "Which city were the a Belgian motorcycle rider buried?", "Which city were the Belgian motorcycle riders buried?", "Which city were the a Belgian motorcycle rider buries?", "Which city were the Belgian motorcycle riders buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "305",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian artist buried?", "When was the Belgian artists buried?", "When was the a Belgian artist buries?", "When was the Belgian artists buries?", "When were the a Belgian artist buried?", "When were the Belgian artists buried?", "When were the a Belgian artist buries?", "When were the Belgian artists buries?", "Which city was the a Belgian artist buried?", "Which city was the Belgian artists buried?", "Which city was the a Belgian artist buries?", "Which city was the Belgian artists buries?", "Which city were the a Belgian artist buried?", "Which city were the Belgian artists buried?", "Which city were the a Belgian artist buries?", "Which city were the Belgian artists buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "306",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian athlete buried?", "When was the Belgian athletes buried?", "When was the a Belgian athlete buries?", "When was the Belgian athletes buries?", "When were the a Belgian athlete buried?", "When were the Belgian athletes buried?", "When were the a Belgian athlete buries?", "When were the Belgian athletes buries?", "Which city was the a Belgian athlete buried?", "Which city was the Belgian athletes buried?", "Which city was the a Belgian athlete buries?", "Which city was the Belgian athletes buries?", "Which city were the a Belgian athlete buried?", "Which city were the Belgian athletes buried?", "Which city were the a Belgian athlete buries?", "Which city were the Belgian athletes buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "307",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian scientist buried?", "When was the Belgian scientists buried?", "When was the a Belgian scientist buries?", "When was the Belgian scientists buries?", "When were the a Belgian scientist buried?", "When were the Belgian scientists buried?", "When were the a Belgian scientist buries?", "When were the Belgian scientists buries?", "Which city was the a Belgian scientist buried?", "Which city was the Belgian scientists buried?", "Which city was the a Belgian scientist buries?", "Which city was the Belgian scientists buries?", "Which city were the a Belgian scientist buried?", "Which city were the Belgian scientists buried?", "Which city were the a Belgian scientist buries?", "Which city were the Belgian scientists buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "308",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian architect buried?", "When was the Belgian architects buried?", "When was the a Belgian architect buries?", "When was the Belgian architects buries?", "When were the a Belgian architect buried?", "When were the Belgian architects buried?", "When were the a Belgian architect buries?", "When were the Belgian architects buries?", "Which city was the a Belgian architect buried?", "Which city was the Belgian architects buried?", "Which city was the a Belgian architect buries?", "Which city was the Belgian architects buries?", "Which city were the a Belgian architect buried?", "Which city were the Belgian architects buried?", "Which city were the a Belgian architect buries?", "Which city were the Belgian architects buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "309",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian golf player buried?", "When was the Belgian golf players buried?", "When was the a Belgian golf player buries?", "When was the Belgian golf players buries?", "When were the a Belgian golf player buried?", "When were the Belgian golf players buried?", "When were the a Belgian golf player buries?", "When were the Belgian golf players buries?", "Which city was the a Belgian golf player buried?", "Which city was the Belgian golf players buried?", "Which city was the a Belgian golf player buries?", "Which city was the Belgian golf players buries?", "Which city were the a Belgian golf player buried?", "Which city were the Belgian golf players buried?", "Which city were the a Belgian golf player buries?", "Which city were the Belgian golf players buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "310",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian racing driver buried?", "When was the Belgian racing drivers buried?", "When was the a Belgian racing driver buries?", "When was the Belgian racing drivers buries?", "When were the a Belgian racing driver buried?", "When were the Belgian racing drivers buried?", "When were the a Belgian racing driver buries?", "When were the Belgian racing drivers buries?", "Which city was the a Belgian racing driver buried?", "Which city was the Belgian racing drivers buried?", "Which city was the a Belgian racing driver buries?", "Which city was the Belgian racing drivers buries?", "Which city were the a Belgian racing driver buried?", "Which city were the Belgian racing drivers buried?", "Which city were the a Belgian racing driver buries?", "Which city were the Belgian racing drivers buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "311",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian politician buried?", "When was the Belgian politicians buried?", "When was the a Belgian politician buries?", "When was the Belgian politicians buries?", "When were the a Belgian politician buried?", "When were the Belgian politicians buried?", "When were the a Belgian politician buries?", "When were the Belgian politicians buries?", "Which city was the a Belgian politician buried?", "Which city was the Belgian politicians buried?", "Which city was the a Belgian politician buries?", "Which city was the Belgian politicians buries?", "Which city were the a Belgian politician buried?", "Which city were the Belgian politicians buried?", "Which city were the a Belgian politician buries?", "Which city were the Belgian politicians buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "312",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian swimmer buried?", "When was the Belgian swimmers buried?", "When was the a Belgian swimmer buries?", "When was the Belgian swimmers buries?", "When were the a Belgian swimmer buried?", "When were the Belgian swimmers buried?", "When were the a Belgian swimmer buries?", "When were the Belgian swimmers buries?", "Which city was the a Belgian swimmer buried?", "Which city was the Belgian swimmers buried?", "Which city was the a Belgian swimmer buries?", "Which city was the Belgian swimmers buries?", "Which city were the a Belgian swimmer buried?", "Which city were the Belgian swimmers buried?", "Which city were the a Belgian swimmer buries?", "Which city were the Belgian swimmers buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "313",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian volleyball player buried?", "When was the Belgian volleyball players buried?", "When was the a Belgian volleyball player buries?", "When was the Belgian volleyball players buries?", "When were the a Belgian volleyball player buried?", "When were the Belgian volleyball players buried?", "When were the a Belgian volleyball player buries?", "When were the Belgian volleyball players buries?", "Which city was the a Belgian volleyball player buried?", "Which city was the Belgian volleyball players buried?", "Which city was the a Belgian volleyball player buries?", "Which city was the Belgian volleyball players buries?", "Which city were the a Belgian volleyball player buried?", "Which city were the Belgian volleyball players buried?", "Which city were the a Belgian volleyball player buries?", "Which city were the Belgian volleyball players buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "314",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian person buried?", "When was the Belgian persons buried?", "When was the a Belgian person buries?", "When was the Belgian persons buries?", "When were the a Belgian person buried?", "When were the Belgian persons buried?", "When were the a Belgian person buries?", "When were the Belgian persons buries?", "Which city was the a Belgian person buried?", "Which city was the Belgian persons buried?", "Which city was the a Belgian person buries?", "Which city was the Belgian persons buries?", "Which city were the a Belgian person buried?", "Which city were the Belgian persons buried?", "Which city were the a Belgian person buries?", "Which city were the Belgian persons buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "315",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian comics creator buried?", "When was the Belgian comics creators buried?", "When was the a Belgian comics creator buries?", "When was the Belgian comics creators buries?", "When were the a Belgian comics creator buried?", "When were the Belgian comics creators buried?", "When were the a Belgian comics creator buries?", "When were the Belgian comics creators buries?", "Which city was the a Belgian comics creator buried?", "Which city was the Belgian comics creators buried?", "Which city was the a Belgian comics creator buries?", "Which city was the Belgian comics creators buries?", "Which city were the a Belgian comics creator buried?", "Which city were the Belgian comics creators buried?", "Which city were the a Belgian comics creator buries?", "Which city were the Belgian comics creators buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "316",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian writer buried?", "When was the Belgian writers buried?", "When was the a Belgian writer buries?", "When was the Belgian writers buries?", "When were the a Belgian writer buried?", "When were the Belgian writers buried?", "When were the a Belgian writer buries?", "When were the Belgian writers buries?", "Which city was the a Belgian writer buried?", "Which city was the Belgian writers buried?", "Which city was the a Belgian writer buries?", "Which city was the Belgian writers buries?", "Which city were the a Belgian writer buried?", "Which city were the Belgian writers buried?", "Which city were the a Belgian writer buries?", "Which city were the Belgian writers buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "317",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian motorsport racer buried?", "When was the Belgian motorsport racers buried?", "When was the a Belgian motorsport racer buries?", "When was the Belgian motorsport racers buries?", "When were the a Belgian motorsport racer buried?", "When were the Belgian motorsport racers buried?", "When were the a Belgian motorsport racer buries?", "When were the Belgian motorsport racers buries?", "Which city was the a Belgian motorsport racer buried?", "Which city was the Belgian motorsport racers buried?", "Which city was the a Belgian motorsport racer buries?", "Which city was the Belgian motorsport racers buries?", "Which city were the a Belgian motorsport racer buried?", "Which city were the Belgian motorsport racers buried?", "Which city were the a Belgian motorsport racer buries?", "Which city were the Belgian motorsport racers buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "318",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek boxer buried?", "When was the Greek boxers buried?", "When was the a Greek boxer buries?", "When was the Greek boxers buries?", "When were the a Greek boxer buried?", "When were the Greek boxers buried?", "When were the a Greek boxer buries?", "When were the Greek boxers buries?", "Which city was the a Greek boxer buried?", "Which city was the Greek boxers buried?", "Which city was the a Greek boxer buries?", "Which city was the Greek boxers buries?", "Which city were the a Greek boxer buried?", "Which city were the Greek boxers buried?", "Which city were the a Greek boxer buries?", "Which city were the Greek boxers buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Boxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "319",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek cleric buried?", "When was the Greek clerics buried?", "When was the a Greek cleric buries?", "When was the Greek clerics buries?", "When were the a Greek cleric buried?", "When were the Greek clerics buried?", "When were the a Greek cleric buries?", "When were the Greek clerics buries?", "Which city was the a Greek cleric buried?", "Which city was the Greek clerics buried?", "Which city was the a Greek cleric buries?", "Which city was the Greek clerics buries?", "Which city were the a Greek cleric buried?", "Which city were the Greek clerics buried?", "Which city were the a Greek cleric buries?", "Which city were the Greek clerics buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "320",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek office holder buried?", "When was the Greek office holders buried?", "When was the a Greek office holder buries?", "When was the Greek office holders buries?", "When were the a Greek office holder buried?", "When were the Greek office holders buried?", "When were the a Greek office holder buries?", "When were the Greek office holders buries?", "Which city was the a Greek office holder buried?", "Which city was the Greek office holders buried?", "Which city was the a Greek office holder buries?", "Which city was the Greek office holders buries?", "Which city were the a Greek office holder buried?", "Which city were the Greek office holders buried?", "Which city were the a Greek office holder buries?", "Which city were the Greek office holders buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "321",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek agent buried?", "When was the Greek agents buried?", "When was the a Greek agent buries?", "When was the Greek agents buries?", "When were the a Greek agent buried?", "When were the Greek agents buried?", "When were the a Greek agent buries?", "When were the Greek agents buries?", "Which city was the a Greek agent buried?", "Which city was the Greek agents buried?", "Which city was the a Greek agent buries?", "Which city was the Greek agents buries?", "Which city were the a Greek agent buried?", "Which city were the Greek agents buried?", "Which city were the a Greek agent buries?", "Which city were the Greek agents buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "322",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek fictional character buried?", "When was the Greek fictional characters buried?", "When was the a Greek fictional character buries?", "When was the Greek fictional characters buries?", "When were the a Greek fictional character buried?", "When were the Greek fictional characters buried?", "When were the a Greek fictional character buries?", "When were the Greek fictional characters buries?", "Which city was the a Greek fictional character buried?", "Which city was the Greek fictional characters buried?", "Which city was the a Greek fictional character buries?", "Which city was the Greek fictional characters buries?", "Which city were the a Greek fictional character buried?", "Which city were the Greek fictional characters buried?", "Which city were the a Greek fictional character buries?", "Which city were the Greek fictional characters buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "323",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek artist buried?", "When was the Greek artists buried?", "When was the a Greek artist buries?", "When was the Greek artists buries?", "When were the a Greek artist buried?", "When were the Greek artists buried?", "When were the a Greek artist buries?", "When were the Greek artists buries?", "Which city was the a Greek artist buried?", "Which city was the Greek artists buried?", "Which city was the a Greek artist buries?", "Which city was the Greek artists buries?", "Which city were the a Greek artist buried?", "Which city were the Greek artists buried?", "Which city were the a Greek artist buries?", "Which city were the Greek artists buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "324",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek athlete buried?", "When was the Greek athletes buried?", "When was the a Greek athlete buries?", "When was the Greek athletes buries?", "When were the a Greek athlete buried?", "When were the Greek athletes buried?", "When were the a Greek athlete buries?", "When were the Greek athletes buries?", "Which city was the a Greek athlete buried?", "Which city was the Greek athletes buried?", "Which city was the a Greek athlete buries?", "Which city was the Greek athletes buries?", "Which city were the a Greek athlete buried?", "Which city were the Greek athletes buried?", "Which city were the a Greek athlete buries?", "Which city were the Greek athletes buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "325",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek scientist buried?", "When was the Greek scientists buried?", "When was the a Greek scientist buries?", "When was the Greek scientists buries?", "When were the a Greek scientist buried?", "When were the Greek scientists buried?", "When were the a Greek scientist buries?", "When were the Greek scientists buries?", "Which city was the a Greek scientist buried?", "Which city was the Greek scientists buried?", "Which city was the a Greek scientist buries?", "Which city was the Greek scientists buries?", "Which city were the a Greek scientist buried?", "Which city were the Greek scientists buried?", "Which city were the a Greek scientist buries?", "Which city were the Greek scientists buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "326",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek politician buried?", "When was the Greek politicians buried?", "When was the a Greek politician buries?", "When was the Greek politicians buries?", "When were the a Greek politician buried?", "When were the Greek politicians buried?", "When were the a Greek politician buries?", "When were the Greek politicians buries?", "Which city was the a Greek politician buried?", "Which city was the Greek politicians buried?", "Which city was the a Greek politician buries?", "Which city was the Greek politicians buries?", "Which city were the a Greek politician buried?", "Which city were the Greek politicians buried?", "Which city were the a Greek politician buries?", "Which city were the Greek politicians buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "327",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek swimmer buried?", "When was the Greek swimmers buried?", "When was the a Greek swimmer buries?", "When was the Greek swimmers buries?", "When were the a Greek swimmer buried?", "When were the Greek swimmers buried?", "When were the a Greek swimmer buries?", "When were the Greek swimmers buries?", "Which city was the a Greek swimmer buried?", "Which city was the Greek swimmers buried?", "Which city was the a Greek swimmer buries?", "Which city was the Greek swimmers buries?", "Which city were the a Greek swimmer buried?", "Which city were the Greek swimmers buried?", "Which city were the a Greek swimmer buries?", "Which city were the Greek swimmers buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "328",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek volleyball player buried?", "When was the Greek volleyball players buried?", "When was the a Greek volleyball player buries?", "When was the Greek volleyball players buries?", "When were the a Greek volleyball player buried?", "When were the Greek volleyball players buried?", "When were the a Greek volleyball player buries?", "When were the Greek volleyball players buries?", "Which city was the a Greek volleyball player buried?", "Which city was the Greek volleyball players buried?", "Which city was the a Greek volleyball player buries?", "Which city was the Greek volleyball players buries?", "Which city were the a Greek volleyball player buried?", "Which city were the Greek volleyball players buried?", "Which city were the a Greek volleyball player buries?", "Which city were the Greek volleyball players buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "329",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek handball player buried?", "When was the Greek handball players buried?", "When was the a Greek handball player buries?", "When was the Greek handball players buries?", "When were the a Greek handball player buried?", "When were the Greek handball players buried?", "When were the a Greek handball player buries?", "When were the Greek handball players buries?", "Which city was the a Greek handball player buried?", "Which city was the Greek handball players buried?", "Which city was the a Greek handball player buries?", "Which city was the Greek handball players buries?", "Which city were the a Greek handball player buried?", "Which city were the Greek handball players buried?", "Which city were the a Greek handball player buries?", "Which city were the Greek handball players buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HandballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "330",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek person buried?", "When was the Greek persons buried?", "When was the a Greek person buries?", "When was the Greek persons buries?", "When were the a Greek person buried?", "When were the Greek persons buried?", "When were the a Greek person buries?", "When were the Greek persons buries?", "Which city was the a Greek person buried?", "Which city was the Greek persons buried?", "Which city was the a Greek person buries?", "Which city was the Greek persons buries?", "Which city were the a Greek person buried?", "Which city were the Greek persons buried?", "Which city were the a Greek person buries?", "Which city were the Greek persons buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "331",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek basketball player buried?", "When was the Greek basketball players buried?", "When was the a Greek basketball player buries?", "When was the Greek basketball players buries?", "When were the a Greek basketball player buried?", "When were the Greek basketball players buried?", "When were the a Greek basketball player buries?", "When were the Greek basketball players buries?", "Which city was the a Greek basketball player buried?", "Which city was the Greek basketball players buried?", "Which city was the a Greek basketball player buries?", "Which city was the Greek basketball players buries?", "Which city were the a Greek basketball player buried?", "Which city were the Greek basketball players buried?", "Which city were the a Greek basketball player buries?", "Which city were the Greek basketball players buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "332",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Greek writer buried?", "When was the Greek writers buried?", "When was the a Greek writer buries?", "When was the Greek writers buries?", "When were the a Greek writer buried?", "When were the Greek writers buried?", "When were the a Greek writer buries?", "When were the Greek writers buries?", "Which city was the a Greek writer buried?", "Which city was the Greek writers buried?", "Which city was the a Greek writer buries?", "Which city was the Greek writers buries?", "Which city were the a Greek writer buried?", "Which city were the Greek writers buried?", "Which city were the a Greek writer buries?", "Which city were the Greek writers buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "333",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "CITY",
    "returnType" : "CITY",
    "frameType" : "IPP",
    "sentences" : [ "When was the persons born in $x buried?", "When was the persons born in $x buries?", "When were the persons born in $x buried?", "When were the persons born in $x buries?", "Which city was the persons born in $x buried?", "Which city was the persons born in $x buries?", "Which city were the persons born in $x buried?", "Which city were the persons born in $x buries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Charles E. King",
        "uri" : "http://dbpedia.org/resource/Charles_E._King"
      }, {
        "label" : "Félix Manuel Pérez Miyares",
        "uri" : "http://dbpedia.org/resource/Félix_Manuel_Pérez_Miyares"
      }, {
        "label" : "Roland de Velville",
        "uri" : "http://dbpedia.org/resource/Roland_de_Velville"
      } ]
    },
    "combination" : true
  }, {
    "id" : "334",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the the source country of $x dissolved?", "When was the the source country of $x dissolves?", "When were the the source country of $x dissolved?", "When were the the source country of $x dissolves?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/sourceCountry> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "335",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the the mouth country of $x dissolved?", "When was the the mouth country of $x dissolves?", "When were the the mouth country of $x dissolved?", "When were the the mouth country of $x dissolves?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mouthCountry> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "336",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "DATE",
    "frameType" : "IPP",
    "sentences" : [ "When was the the birth place of $x dissolved?", "When was the the birth place of $x dissolves?", "When were the the birth place of $x dissolved?", "When were the the birth place of $x dissolves?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "2016 shooting of Almaty police officers",
        "uri" : "http://dbpedia.org/resource/2016_shooting_of_Almaty_police_officers"
      }, {
        "label" : "2017 New York City truck attack",
        "uri" : "http://dbpedia.org/resource/2017_New_York_City_truck_attack"
      }, {
        "label" : "A. V. Rama Rao",
        "uri" : "http://dbpedia.org/resource/A._V._Rama_Rao"
      }, {
        "label" : "Lovell Wooldridge",
        "uri" : "http://dbpedia.org/resource/Lovell_Wooldridge"
      }, {
        "label" : "Lowell Lo",
        "uri" : "http://dbpedia.org/resource/Lowell_Lo"
      }, {
        "label" : "Lu Jeu Sham",
        "uri" : "http://dbpedia.org/resource/Lu_Jeu_Sham"
      }, {
        "label" : "Lu Yonggen",
        "uri" : "http://dbpedia.org/resource/Lu_Yonggen"
      }, {
        "label" : "Luba Golovina",
        "uri" : "http://dbpedia.org/resource/Luba_Golovina"
      }, {
        "label" : "Lubomyr Ivansky",
        "uri" : "http://dbpedia.org/resource/Lubomyr_Ivansky"
      }, {
        "label" : "Luc Jouret",
        "uri" : "http://dbpedia.org/resource/Luc_Jouret"
      }, {
        "label" : "Lucan",
        "uri" : "http://dbpedia.org/resource/Lucan"
      }, {
        "label" : "Lucas Bögl",
        "uri" : "http://dbpedia.org/resource/Lucas_Bögl"
      }, {
        "label" : "Lucas Jakubczyk",
        "uri" : "http://dbpedia.org/resource/Lucas_Jakubczyk"
      }, {
        "label" : "Lucette Destouches",
        "uri" : "http://dbpedia.org/resource/Lucette_Destouches"
      }, {
        "label" : "Luchino Visconti",
        "uri" : "http://dbpedia.org/resource/Luchino_Visconti"
      }, {
        "label" : "Lucia Siposová",
        "uri" : "http://dbpedia.org/resource/Lucia_Siposová"
      }, {
        "label" : "Lucian",
        "uri" : "http://dbpedia.org/resource/Lucian"
      }, {
        "label" : "Lucian Blaga",
        "uri" : "http://dbpedia.org/resource/Lucian_Blaga"
      }, {
        "label" : "Luciana Paluzzi",
        "uri" : "http://dbpedia.org/resource/Luciana_Paluzzi"
      }, {
        "label" : "Luciano Ceri",
        "uri" : "http://dbpedia.org/resource/Luciano_Ceri"
      }, {
        "label" : "Luciano Guerzoni (born 1938)",
        "uri" : "http://dbpedia.org/resource/Luciano_Guerzoni_(born_1938)"
      }, {
        "label" : "Luciano Pavarotti",
        "uri" : "http://dbpedia.org/resource/Luciano_Pavarotti"
      }, {
        "label" : "Luciano Salce",
        "uri" : "http://dbpedia.org/resource/Luciano_Salce"
      }, {
        "label" : "Luciano Tovoli",
        "uri" : "http://dbpedia.org/resource/Luciano_Tovoli"
      }, {
        "label" : "Luciano Velardi",
        "uri" : "http://dbpedia.org/resource/Luciano_Velardi"
      }, {
        "label" : "Luciano Vincenzoni",
        "uri" : "http://dbpedia.org/resource/Luciano_Vincenzoni"
      }, {
        "label" : "Lucidio Sentimenti",
        "uri" : "http://dbpedia.org/resource/Lucidio_Sentimenti"
      }, {
        "label" : "Lucie Bílá",
        "uri" : "http://dbpedia.org/resource/Lucie_Bílá"
      }, {
        "label" : "Lucie Cheng",
        "uri" : "http://dbpedia.org/resource/Lucie_Cheng"
      }, {
        "label" : "Lucie Chroustovská",
        "uri" : "http://dbpedia.org/resource/Lucie_Chroustovská"
      }, {
        "label" : "Lucien-Anatole Prévost-Paradol",
        "uri" : "http://dbpedia.org/resource/Lucien-Anatole_Prévost-Paradol"
      }, {
        "label" : "Lucien Hervé",
        "uri" : "http://dbpedia.org/resource/Lucien_Hervé"
      }, {
        "label" : "Lucien Xavier Michel-Andrianarahinjaka",
        "uri" : "http://dbpedia.org/resource/Lucien_Xavier_Michel-Andrianarahinjaka"
      }, {
        "label" : "Lucija Mori",
        "uri" : "http://dbpedia.org/resource/Lucija_Mori"
      }, {
        "label" : "Lucija Zaninović",
        "uri" : "http://dbpedia.org/resource/Lucija_Zaninović"
      }, {
        "label" : "Lucija Šerbedžija",
        "uri" : "http://dbpedia.org/resource/Lucija_Šerbedžija"
      }, {
        "label" : "Lucius Aemilius Paullus Macedonicus",
        "uri" : "http://dbpedia.org/resource/Lucius_Aemilius_Paullus_Macedonicus"
      }, {
        "label" : "Lucius Richard O'Brien",
        "uri" : "http://dbpedia.org/resource/Lucius_Richard_O'Brien"
      }, {
        "label" : "Lucjan Żeligowski",
        "uri" : "http://dbpedia.org/resource/Lucjan_Żeligowski"
      }, {
        "label" : "Lucky Luciano",
        "uri" : "http://dbpedia.org/resource/Lucky_Luciano"
      }, {
        "label" : "Lucy Dudko",
        "uri" : "http://dbpedia.org/resource/Lucy_Dudko"
      }, {
        "label" : "Lucy Lawless",
        "uri" : "http://dbpedia.org/resource/Lucy_Lawless"
      }, {
        "label" : "Lucy Rahman",
        "uri" : "http://dbpedia.org/resource/Lucy_Rahman"
      }, {
        "label" : "Ludmila Aslanian",
        "uri" : "http://dbpedia.org/resource/Ludmila_Aslanian"
      }, {
        "label" : "Ludmila Savelyeva",
        "uri" : "http://dbpedia.org/resource/Ludmila_Savelyeva"
      }, {
        "label" : "Ludmila Tsukanova",
        "uri" : "http://dbpedia.org/resource/Ludmila_Tsukanova"
      }, {
        "label" : "Ludmilla Radchenko",
        "uri" : "http://dbpedia.org/resource/Ludmilla_Radchenko"
      }, {
        "label" : "Ludmilla Tourischeva",
        "uri" : "http://dbpedia.org/resource/Ludmilla_Tourischeva"
      }, {
        "label" : "Ludvig Faddeev",
        "uri" : "http://dbpedia.org/resource/Ludvig_Faddeev"
      }, {
        "label" : "Ludwig Alberto",
        "uri" : "http://dbpedia.org/resource/Ludwig_Alberto"
      }, {
        "label" : "Ludwig Aschoff",
        "uri" : "http://dbpedia.org/resource/Ludwig_Aschoff"
      }, {
        "label" : "Ludwig Boltzmann",
        "uri" : "http://dbpedia.org/resource/Ludwig_Boltzmann"
      }, {
        "label" : "Ludwig Fahrenkrog",
        "uri" : "http://dbpedia.org/resource/Ludwig_Fahrenkrog"
      }, {
        "label" : "Ludwig Hans Fischer",
        "uri" : "http://dbpedia.org/resource/Ludwig_Hans_Fischer"
      }, {
        "label" : "Ludwig Jahn",
        "uri" : "http://dbpedia.org/resource/Ludwig_Jahn"
      }, {
        "label" : "Ludwig Kalisch",
        "uri" : "http://dbpedia.org/resource/Ludwig_Kalisch"
      }, {
        "label" : "Ludwig Kögl",
        "uri" : "http://dbpedia.org/resource/Ludwig_Kögl"
      }, {
        "label" : "Ludwig Müller (footballer)",
        "uri" : "http://dbpedia.org/resource/Ludwig_Müller_(footballer)"
      }, {
        "label" : "Ludwig Preis",
        "uri" : "http://dbpedia.org/resource/Ludwig_Preis"
      }, {
        "label" : "Ludwig Tessnow",
        "uri" : "http://dbpedia.org/resource/Ludwig_Tessnow"
      }, {
        "label" : "Ludwig Trepte",
        "uri" : "http://dbpedia.org/resource/Ludwig_Trepte"
      }, {
        "label" : "Ludwig Wolff",
        "uri" : "http://dbpedia.org/resource/Ludwig_Wolff"
      }, {
        "label" : "Ludwig von Graff",
        "uri" : "http://dbpedia.org/resource/Ludwig_von_Graff"
      }, {
        "label" : "Ludwig von Hagemeister",
        "uri" : "http://dbpedia.org/resource/Ludwig_von_Hagemeister"
      }, {
        "label" : "Ludwig von Mises",
        "uri" : "http://dbpedia.org/resource/Ludwig_von_Mises"
      }, {
        "label" : "Ludwig zu Sayn-Wittgenstein-Berleburg",
        "uri" : "http://dbpedia.org/resource/Ludwig_zu_Sayn-Wittgenstein-Berleburg"
      }, {
        "label" : "Ludwik Czachowski",
        "uri" : "http://dbpedia.org/resource/Ludwik_Czachowski"
      }, {
        "label" : "Ludwik Fritsche",
        "uri" : "http://dbpedia.org/resource/Ludwik_Fritsche"
      }, {
        "label" : "Ludwik Turowski",
        "uri" : "http://dbpedia.org/resource/Ludwik_Turowski"
      }, {
        "label" : "Ludwik Łoś",
        "uri" : "http://dbpedia.org/resource/Ludwik_Łoś"
      }, {
        "label" : "Lui Chi Hing",
        "uri" : "http://dbpedia.org/resource/Lui_Chi_Hing"
      }, {
        "label" : "Lui Kit Ming",
        "uri" : "http://dbpedia.org/resource/Lui_Kit_Ming"
      }, {
        "label" : "Lui Man Tik",
        "uri" : "http://dbpedia.org/resource/Lui_Man_Tik"
      }, {
        "label" : "Lui Temelkovski",
        "uri" : "http://dbpedia.org/resource/Lui_Temelkovski"
      }, {
        "label" : "Luidjino Hoyer",
        "uri" : "http://dbpedia.org/resource/Luidjino_Hoyer"
      }, {
        "label" : "Luigi Barbesino",
        "uri" : "http://dbpedia.org/resource/Luigi_Barbesino"
      }, {
        "label" : "Luigi Barzini Jr.",
        "uri" : "http://dbpedia.org/resource/Luigi_Barzini_Jr."
      }, {
        "label" : "Luigi Barzini Sr.",
        "uri" : "http://dbpedia.org/resource/Luigi_Barzini_Sr."
      }, {
        "label" : "Luigi Beltrame Quattrocchi and Maria Corsini",
        "uri" : "http://dbpedia.org/resource/Luigi_Beltrame_Quattrocchi_and_Maria_Corsini"
      }, {
        "label" : "Luigi Boccardo",
        "uri" : "http://dbpedia.org/resource/Luigi_Boccardo"
      }, {
        "label" : "Luigi Bordino",
        "uri" : "http://dbpedia.org/resource/Luigi_Bordino"
      }, {
        "label" : "Luigi Burlando",
        "uri" : "http://dbpedia.org/resource/Luigi_Burlando"
      }, {
        "label" : "Luigi Cennamo",
        "uri" : "http://dbpedia.org/resource/Luigi_Cennamo"
      }, {
        "label" : "Luigi Corioni",
        "uri" : "http://dbpedia.org/resource/Luigi_Corioni"
      }, {
        "label" : "Luigi Cremona",
        "uri" : "http://dbpedia.org/resource/Luigi_Cremona"
      }, {
        "label" : "Luigi Dadaglio",
        "uri" : "http://dbpedia.org/resource/Luigi_Dadaglio"
      }, {
        "label" : "Luigi Efisio Marras",
        "uri" : "http://dbpedia.org/resource/Luigi_Efisio_Marras"
      }, {
        "label" : "Luigi Einaudi",
        "uri" : "http://dbpedia.org/resource/Luigi_Einaudi"
      }, {
        "label" : "Luigi Fabbri",
        "uri" : "http://dbpedia.org/resource/Luigi_Fabbri"
      }, {
        "label" : "Luigi Facta",
        "uri" : "http://dbpedia.org/resource/Luigi_Facta"
      }, {
        "label" : "Luigi Ferraris (footballer)",
        "uri" : "http://dbpedia.org/resource/Luigi_Ferraris_(footballer)"
      }, {
        "label" : "Luigi Lavitrano",
        "uri" : "http://dbpedia.org/resource/Luigi_Lavitrano"
      }, {
        "label" : "Luigi Longo",
        "uri" : "http://dbpedia.org/resource/Luigi_Longo"
      }, {
        "label" : "Luigi Luca Cavalli-Sforza",
        "uri" : "http://dbpedia.org/resource/Luigi_Luca_Cavalli-Sforza"
      }, {
        "label" : "Luigi Lucheni",
        "uri" : "http://dbpedia.org/resource/Luigi_Lucheni"
      }, {
        "label" : "Luigi Luzzatti",
        "uri" : "http://dbpedia.org/resource/Luigi_Luzzatti"
      }, {
        "label" : "Luigi Maglione",
        "uri" : "http://dbpedia.org/resource/Luigi_Maglione"
      }, {
        "label" : "Luigi Menti",
        "uri" : "http://dbpedia.org/resource/Luigi_Menti"
      }, {
        "label" : "Luigi Monza",
        "uri" : "http://dbpedia.org/resource/Luigi_Monza"
      }, {
        "label" : "Luigi Moretti",
        "uri" : "http://dbpedia.org/resource/Luigi_Moretti"
      } ]
    },
    "combination" : true
  }, {
    "id" : "337",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the the source country of $x flows?", "When were the the source country of $x flows?", "Which river was the the source country of $x flows?", "Which river were the the source country of $x flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/sourceCountry> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "338",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RIVER",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the the mouth country of $x flows?", "When were the the mouth country of $x flows?", "Which river was the the mouth country of $x flows?", "Which river were the the mouth country of $x flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mouthCountry> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "339",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the the birth place of $x flows?", "When were the the birth place of $x flows?", "Which river was the the birth place of $x flows?", "Which river were the the birth place of $x flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Luc-Hyacinthe Masson",
        "uri" : "http://dbpedia.org/resource/Luc-Hyacinthe_Masson"
      }, {
        "label" : "Lucius Seth Huntington",
        "uri" : "http://dbpedia.org/resource/Lucius_Seth_Huntington"
      }, {
        "label" : "Lucy Redler",
        "uri" : "http://dbpedia.org/resource/Lucy_Redler"
      }, {
        "label" : "Ludwig Meinardus",
        "uri" : "http://dbpedia.org/resource/Ludwig_Meinardus"
      }, {
        "label" : "Léandre Dumouchel",
        "uri" : "http://dbpedia.org/resource/Léandre_Dumouchel"
      }, {
        "label" : "Léon-Charles Clément",
        "uri" : "http://dbpedia.org/resource/Léon-Charles_Clément"
      }, {
        "label" : "Léon Gingras",
        "uri" : "http://dbpedia.org/resource/Léon_Gingras"
      }, {
        "label" : "Malachy Bowes Daly",
        "uri" : "http://dbpedia.org/resource/Malachy_Bowes_Daly"
      }, {
        "label" : "Malcolm Cameron (Canadian politician)",
        "uri" : "http://dbpedia.org/resource/Malcolm_Cameron_(Canadian_politician)"
      }, {
        "label" : "Uli Stein (artist)",
        "uri" : "http://dbpedia.org/resource/Uli_Stein_(artist)"
      }, {
        "label" : "Ulrike Rodust",
        "uri" : "http://dbpedia.org/resource/Ulrike_Rodust"
      }, {
        "label" : "Uwe Schünemann",
        "uri" : "http://dbpedia.org/resource/Uwe_Schünemann"
      }, {
        "label" : "Vanessa Hegelmaier",
        "uri" : "http://dbpedia.org/resource/Vanessa_Hegelmaier"
      }, {
        "label" : "Birte Steven",
        "uri" : "http://dbpedia.org/resource/Birte_Steven"
      }, {
        "label" : "Bodo Ramelow",
        "uri" : "http://dbpedia.org/resource/Bodo_Ramelow"
      }, {
        "label" : "Boris Herrmann",
        "uri" : "http://dbpedia.org/resource/Boris_Herrmann"
      }, {
        "label" : "Denis-Benjamin Papineau",
        "uri" : "http://dbpedia.org/resource/Denis-Benjamin_Papineau"
      }, {
        "label" : "Denis-Benjamin Viger",
        "uri" : "http://dbpedia.org/resource/Denis-Benjamin_Viger"
      }, {
        "label" : "Dianne Hayter",
        "uri" : "http://dbpedia.org/resource/Dianne_Hayter"
      }, {
        "label" : "Dietrich Borchardt",
        "uri" : "http://dbpedia.org/resource/Dietrich_Borchardt"
      }, {
        "label" : "Dirk Fischer (politician)",
        "uri" : "http://dbpedia.org/resource/Dirk_Fischer_(politician)"
      }, {
        "label" : "Dominique-Amable Coutlée",
        "uri" : "http://dbpedia.org/resource/Dominique-Amable_Coutlée"
      }, {
        "label" : "Dominique-Ceslas Gonthier",
        "uri" : "http://dbpedia.org/resource/Dominique-Ceslas_Gonthier"
      }, {
        "label" : "Dominique Racine",
        "uri" : "http://dbpedia.org/resource/Dominique_Racine"
      }, {
        "label" : "Guillaume Amyot",
        "uri" : "http://dbpedia.org/resource/Guillaume_Amyot"
      }, {
        "label" : "Guillaume Bresse",
        "uri" : "http://dbpedia.org/resource/Guillaume_Bresse"
      }, {
        "label" : "Kirsten Lühmann",
        "uri" : "http://dbpedia.org/resource/Kirsten_Lühmann"
      }, {
        "label" : "Éraste d'Odet d'Orsonnens",
        "uri" : "http://dbpedia.org/resource/Éraste_d'Odet_d'Orsonnens"
      }, {
        "label" : "Alexander Walker Ogilvie",
        "uri" : "http://dbpedia.org/resource/Alexander_Walker_Ogilvie"
      }, {
        "label" : "Alexandre-Antonin Taché",
        "uri" : "http://dbpedia.org/resource/Alexandre-Antonin_Taché"
      }, {
        "label" : "Alexis Lesieur Desaulniers",
        "uri" : "http://dbpedia.org/resource/Alexis_Lesieur_Desaulniers"
      }, {
        "label" : "Catherine Aurelia Caouette",
        "uri" : "http://dbpedia.org/resource/Catherine_Aurelia_Caouette"
      }, {
        "label" : "Charles-Christophe Malhiot",
        "uri" : "http://dbpedia.org/resource/Charles-Christophe_Malhiot"
      }, {
        "label" : "Charles-Eugène Panet",
        "uri" : "http://dbpedia.org/resource/Charles-Eugène_Panet"
      }, {
        "label" : "Charles-Eusèbe Casgrain",
        "uri" : "http://dbpedia.org/resource/Charles-Eusèbe_Casgrain"
      }, {
        "label" : "Charles-François Baillargeon",
        "uri" : "http://dbpedia.org/resource/Charles-François_Baillargeon"
      }, {
        "label" : "Charles-Félix Cazeau",
        "uri" : "http://dbpedia.org/resource/Charles-Félix_Cazeau"
      }, {
        "label" : "Charles-Séraphin Rodier (mayor)",
        "uri" : "http://dbpedia.org/resource/Charles-Séraphin_Rodier_(mayor)"
      }, {
        "label" : "Charles-Séraphin Rodier Jr",
        "uri" : "http://dbpedia.org/resource/Charles-Séraphin_Rodier_Jr"
      }, {
        "label" : "Charles-Édouard Houde",
        "uri" : "http://dbpedia.org/resource/Charles-Édouard_Houde"
      }, {
        "label" : "Charles Alphonse Pantaléon Pelletier",
        "uri" : "http://dbpedia.org/resource/Charles_Alphonse_Pantaléon_Pelletier"
      }, {
        "label" : "Charles Bertrand (politician)",
        "uri" : "http://dbpedia.org/resource/Charles_Bertrand_(politician)"
      }, {
        "label" : "Charles Boucher de Boucherville",
        "uri" : "http://dbpedia.org/resource/Charles_Boucher_de_Boucherville"
      }, {
        "label" : "Charles Champagne (MLA for Deux-Montagnes)",
        "uri" : "http://dbpedia.org/resource/Charles_Champagne_(MLA_for_Deux-Montagnes)"
      }, {
        "label" : "Charles Cormier",
        "uri" : "http://dbpedia.org/resource/Charles_Cormier"
      }, {
        "label" : "Charles Eusèbe Casgrain",
        "uri" : "http://dbpedia.org/resource/Charles_Eusèbe_Casgrain"
      }, {
        "label" : "Charles Gérin-Lajoie",
        "uri" : "http://dbpedia.org/resource/Charles_Gérin-Lajoie"
      }, {
        "label" : "Charles Hosmer",
        "uri" : "http://dbpedia.org/resource/Charles_Hosmer"
      }, {
        "label" : "Charles La Rocque",
        "uri" : "http://dbpedia.org/resource/Charles_La_Rocque"
      }, {
        "label" : "Charles Langelier",
        "uri" : "http://dbpedia.org/resource/Charles_Langelier"
      }, {
        "label" : "Charles McClary",
        "uri" : "http://dbpedia.org/resource/Charles_McClary"
      }, {
        "label" : "Charles Wilson (Canadian politician)",
        "uri" : "http://dbpedia.org/resource/Charles_Wilson_(Canadian_politician)"
      }, {
        "label" : "Firmin Dugas",
        "uri" : "http://dbpedia.org/resource/Firmin_Dugas"
      }, {
        "label" : "Némèse Garneau",
        "uri" : "http://dbpedia.org/resource/Némèse_Garneau"
      }, {
        "label" : "Octave Magnan",
        "uri" : "http://dbpedia.org/resource/Octave_Magnan"
      }, {
        "label" : "Azariah Boody",
        "uri" : "http://dbpedia.org/resource/Azariah_Boody"
      }, {
        "label" : "Louis-Adélard Senécal",
        "uri" : "http://dbpedia.org/resource/Louis-Adélard_Senécal"
      }, {
        "label" : "Louis-Alphonse Boyer",
        "uri" : "http://dbpedia.org/resource/Louis-Alphonse_Boyer"
      }, {
        "label" : "Louis-Amable Jetté",
        "uri" : "http://dbpedia.org/resource/Louis-Amable_Jetté"
      }, {
        "label" : "Louis-Charles Boucher de Niverville",
        "uri" : "http://dbpedia.org/resource/Louis-Charles_Boucher_de_Niverville"
      }, {
        "label" : "Louis-François Richer Laflèche",
        "uri" : "http://dbpedia.org/resource/Louis-François_Richer_Laflèche"
      }, {
        "label" : "Louis-Henri Blais",
        "uri" : "http://dbpedia.org/resource/Louis-Henri_Blais"
      }, {
        "label" : "Louis-Hippolyte Lafontaine",
        "uri" : "http://dbpedia.org/resource/Louis-Hippolyte_Lafontaine"
      }, {
        "label" : "Louis-Honoré Fréchette",
        "uri" : "http://dbpedia.org/resource/Louis-Honoré_Fréchette"
      }, {
        "label" : "Louis-Joseph Moll",
        "uri" : "http://dbpedia.org/resource/Louis-Joseph_Moll"
      }, {
        "label" : "Louis-Léon Lesieur Désaulniers",
        "uri" : "http://dbpedia.org/resource/Louis-Léon_Lesieur_Désaulniers"
      }, {
        "label" : "Louis-Napoléon Larochelle",
        "uri" : "http://dbpedia.org/resource/Louis-Napoléon_Larochelle"
      }, {
        "label" : "Louis-Olivier Taillon",
        "uri" : "http://dbpedia.org/resource/Louis-Olivier_Taillon"
      }, {
        "label" : "Louis-Onésime Loranger",
        "uri" : "http://dbpedia.org/resource/Louis-Onésime_Loranger"
      }, {
        "label" : "Louis-Ovide Brunet",
        "uri" : "http://dbpedia.org/resource/Louis-Ovide_Brunet"
      }, {
        "label" : "Louis-Philippe Pelletier",
        "uri" : "http://dbpedia.org/resource/Louis-Philippe_Pelletier"
      }, {
        "label" : "Louis-Pierre-Paul Cardin",
        "uri" : "http://dbpedia.org/resource/Louis-Pierre-Paul_Cardin"
      }, {
        "label" : "Louis-Rodrigue Masson",
        "uri" : "http://dbpedia.org/resource/Louis-Rodrigue_Masson"
      }, {
        "label" : "Louis-Trefflé Dorais",
        "uri" : "http://dbpedia.org/resource/Louis-Trefflé_Dorais"
      }, {
        "label" : "Louis-Victor Sicotte",
        "uri" : "http://dbpedia.org/resource/Louis-Victor_Sicotte"
      }, {
        "label" : "Louis-Zéphirin Joncas",
        "uri" : "http://dbpedia.org/resource/Louis-Zéphirin_Joncas"
      }, {
        "label" : "Louis-Zéphirin Moreau",
        "uri" : "http://dbpedia.org/resource/Louis-Zéphirin_Moreau"
      }, {
        "label" : "Louis Archambeault",
        "uri" : "http://dbpedia.org/resource/Louis_Archambeault"
      }, {
        "label" : "Louis Auguste Olivier",
        "uri" : "http://dbpedia.org/resource/Louis_Auguste_Olivier"
      }, {
        "label" : "Louis Beaubien",
        "uri" : "http://dbpedia.org/resource/Louis_Beaubien"
      }, {
        "label" : "Louis Lacoste",
        "uri" : "http://dbpedia.org/resource/Louis_Lacoste"
      }, {
        "label" : "Louis Lagueux",
        "uri" : "http://dbpedia.org/resource/Louis_Lagueux"
      }, {
        "label" : "Louis Molleur",
        "uri" : "http://dbpedia.org/resource/Louis_Molleur"
      }, {
        "label" : "Louis Panet",
        "uri" : "http://dbpedia.org/resource/Louis_Panet"
      }, {
        "label" : "Louis Renaud",
        "uri" : "http://dbpedia.org/resource/Louis_Renaud"
      }, {
        "label" : "Louis Richard (politician)",
        "uri" : "http://dbpedia.org/resource/Louis_Richard_(politician)"
      }, {
        "label" : "Louis Robitaille (politician)",
        "uri" : "http://dbpedia.org/resource/Louis_Robitaille_(politician)"
      }, {
        "label" : "Louis Sylvestre",
        "uri" : "http://dbpedia.org/resource/Louis_Sylvestre"
      }, {
        "label" : "Louis Tourville",
        "uri" : "http://dbpedia.org/resource/Louis_Tourville"
      }, {
        "label" : "Louisa Goddard Frothingham Molson",
        "uri" : "http://dbpedia.org/resource/Louisa_Goddard_Frothingham_Molson"
      }, {
        "label" : "Daniel McLachlin",
        "uri" : "http://dbpedia.org/resource/Daniel_McLachlin"
      }, {
        "label" : "Joseph Brunet",
        "uri" : "http://dbpedia.org/resource/Joseph_Brunet"
      }, {
        "label" : "Caroline Louisa Daly",
        "uri" : "http://dbpedia.org/resource/Caroline_Louisa_Daly"
      }, {
        "label" : "Christian Pozer",
        "uri" : "http://dbpedia.org/resource/Christian_Pozer"
      }, {
        "label" : "Clarence Hamilton",
        "uri" : "http://dbpedia.org/resource/Clarence_Hamilton"
      }, {
        "label" : "Clément-Charles Sabrevois de Bleury",
        "uri" : "http://dbpedia.org/resource/Clément-Charles_Sabrevois_de_Bleury"
      }, {
        "label" : "Gardner Green Stevens",
        "uri" : "http://dbpedia.org/resource/Gardner_Green_Stevens"
      }, {
        "label" : "George-Frédéric-Théophile Baillairgé",
        "uri" : "http://dbpedia.org/resource/George-Frédéric-Théophile_Baillairgé"
      }, {
        "label" : "George-Paschal Desbarats",
        "uri" : "http://dbpedia.org/resource/George-Paschal_Desbarats"
      }, {
        "label" : "George Barnard Baker",
        "uri" : "http://dbpedia.org/resource/George_Barnard_Baker"
      } ]
    },
    "combination" : true
  }, {
    "id" : "340",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "RIVER",
    "frameType" : "IPP",
    "sentences" : [ "When was the the birth place of $x flows?", "When were the the birth place of $x flows?", "Which river was the the birth place of $x flows?", "Which river were the the birth place of $x flows?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/city> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Madison Young",
        "uri" : "http://dbpedia.org/resource/Madison_Young"
      }, {
        "label" : "Vasil Radoslavov",
        "uri" : "http://dbpedia.org/resource/Vasil_Radoslavov"
      }, {
        "label" : "Vassilios Giavis",
        "uri" : "http://dbpedia.org/resource/Vassilios_Giavis"
      }, {
        "label" : "George T. Ashe",
        "uri" : "http://dbpedia.org/resource/George_T._Ashe"
      }, {
        "label" : "Billy Sullivan (American football)",
        "uri" : "http://dbpedia.org/resource/Billy_Sullivan_(American_football)"
      }, {
        "label" : "Blanche Ames Ames",
        "uri" : "http://dbpedia.org/resource/Blanche_Ames_Ames"
      }, {
        "label" : "Bob Bachelder",
        "uri" : "http://dbpedia.org/resource/Bob_Bachelder"
      }, {
        "label" : "Bob Ganley",
        "uri" : "http://dbpedia.org/resource/Bob_Ganley"
      }, {
        "label" : "Bob Harstad",
        "uri" : "http://dbpedia.org/resource/Bob_Harstad"
      }, {
        "label" : "Boney James",
        "uri" : "http://dbpedia.org/resource/Boney_James"
      }, {
        "label" : "Brad Moore",
        "uri" : "http://dbpedia.org/resource/Brad_Moore"
      }, {
        "label" : "Denny Driscoll",
        "uri" : "http://dbpedia.org/resource/Denny_Driscoll"
      }, {
        "label" : "Dick Conway",
        "uri" : "http://dbpedia.org/resource/Dick_Conway"
      }, {
        "label" : "Dicky Eklund",
        "uri" : "http://dbpedia.org/resource/Dicky_Eklund"
      }, {
        "label" : "Grant Noel",
        "uri" : "http://dbpedia.org/resource/Grant_Noel"
      }, {
        "label" : "Grisha Ganchev",
        "uri" : "http://dbpedia.org/resource/Grisha_Ganchev"
      }, {
        "label" : "R. Ray Peterson",
        "uri" : "http://dbpedia.org/resource/R._Ray_Peterson"
      }, {
        "label" : "Radoslav Dimitrov",
        "uri" : "http://dbpedia.org/resource/Radoslav_Dimitrov"
      }, {
        "label" : "Alan Bible",
        "uri" : "http://dbpedia.org/resource/Alan_Bible"
      }, {
        "label" : "Alec Hansen",
        "uri" : "http://dbpedia.org/resource/Alec_Hansen"
      }, {
        "label" : "Alex Oriakhi",
        "uri" : "http://dbpedia.org/resource/Alex_Oriakhi"
      }, {
        "label" : "Alican Karadağ",
        "uri" : "http://dbpedia.org/resource/Alican_Karadağ"
      }, {
        "label" : "Alice Esty (soprano)",
        "uri" : "http://dbpedia.org/resource/Alice_Esty_(soprano)"
      }, {
        "label" : "Allen Hobbs",
        "uri" : "http://dbpedia.org/resource/Allen_Hobbs"
      }, {
        "label" : "Charles Billich",
        "uri" : "http://dbpedia.org/resource/Charles_Billich"
      }, {
        "label" : "Charles F. Bowman",
        "uri" : "http://dbpedia.org/resource/Charles_F._Bowman"
      }, {
        "label" : "Charles H. Russell",
        "uri" : "http://dbpedia.org/resource/Charles_H._Russell"
      }, {
        "label" : "Charles Harrelson",
        "uri" : "http://dbpedia.org/resource/Charles_Harrelson"
      }, {
        "label" : "Charles Herbert Allen",
        "uri" : "http://dbpedia.org/resource/Charles_Herbert_Allen"
      }, {
        "label" : "Charles Jasper Glidden",
        "uri" : "http://dbpedia.org/resource/Charles_Jasper_Glidden"
      }, {
        "label" : "Charles Lederer (cartoonist)",
        "uri" : "http://dbpedia.org/resource/Charles_Lederer_(cartoonist)"
      }, {
        "label" : "Charles S. Murkland",
        "uri" : "http://dbpedia.org/resource/Charles_S._Murkland"
      }, {
        "label" : "Charlie Snow",
        "uri" : "http://dbpedia.org/resource/Charlie_Snow"
      }, {
        "label" : "Filip Filipov",
        "uri" : "http://dbpedia.org/resource/Filip_Filipov"
      }, {
        "label" : "Florence Luscomb",
        "uri" : "http://dbpedia.org/resource/Florence_Luscomb"
      }, {
        "label" : "Norihito Kaneto",
        "uri" : "http://dbpedia.org/resource/Norihito_Kaneto"
      }, {
        "label" : "B. Joseph Tully",
        "uri" : "http://dbpedia.org/resource/B._Joseph_Tully"
      }, {
        "label" : "Bantcho Bantchevsky",
        "uri" : "http://dbpedia.org/resource/Bantcho_Bantchevsky"
      }, {
        "label" : "Basil James",
        "uri" : "http://dbpedia.org/resource/Basil_James"
      }, {
        "label" : "Art Mooney",
        "uri" : "http://dbpedia.org/resource/Art_Mooney"
      }, {
        "label" : "Lori Trahan",
        "uri" : "http://dbpedia.org/resource/Lori_Trahan"
      }, {
        "label" : "Louis Phillips (author)",
        "uri" : "http://dbpedia.org/resource/Louis_Phillips_(author)"
      }, {
        "label" : "Frederick W. Farnham",
        "uri" : "http://dbpedia.org/resource/Frederick_W._Farnham"
      }, {
        "label" : "Clarence Clifton Young",
        "uri" : "http://dbpedia.org/resource/Clarence_Clifton_Young"
      }, {
        "label" : "Clarence Edwin Ayres",
        "uri" : "http://dbpedia.org/resource/Clarence_Edwin_Ayres"
      }, {
        "label" : "Clarence Maddern",
        "uri" : "http://dbpedia.org/resource/Clarence_Maddern"
      }, {
        "label" : "Colleen Garry",
        "uri" : "http://dbpedia.org/resource/Colleen_Garry"
      }, {
        "label" : "Gary Hoey",
        "uri" : "http://dbpedia.org/resource/Gary_Hoey"
      }, {
        "label" : "Gary LaBranche",
        "uri" : "http://dbpedia.org/resource/Gary_LaBranche"
      }, {
        "label" : "Gene Lusk",
        "uri" : "http://dbpedia.org/resource/Gene_Lusk"
      }, {
        "label" : "George D. Behrakis",
        "uri" : "http://dbpedia.org/resource/George_D._Behrakis"
      }, {
        "label" : "Georgi Denev",
        "uri" : "http://dbpedia.org/resource/Georgi_Denev"
      }, {
        "label" : "Georgi Ivanov (cosmonaut)",
        "uri" : "http://dbpedia.org/resource/Georgi_Ivanov_(cosmonaut)"
      }, {
        "label" : "Jeremiah Henry Murphy",
        "uri" : "http://dbpedia.org/resource/Jeremiah_Henry_Murphy"
      }, {
        "label" : "Jeremy Bloom",
        "uri" : "http://dbpedia.org/resource/Jeremy_Bloom"
      }, {
        "label" : "Jim Crowley (American football coach, born 1930)",
        "uri" : "http://dbpedia.org/resource/Jim_Crowley_(American_football_coach,_born_1930)"
      }, {
        "label" : "Jo Anne Worley",
        "uri" : "http://dbpedia.org/resource/Jo_Anne_Worley"
      }, {
        "label" : "John Firth (baseball)",
        "uri" : "http://dbpedia.org/resource/John_Firth_(baseball)"
      }, {
        "label" : "John Galvin (American football)",
        "uri" : "http://dbpedia.org/resource/John_Galvin_(American_football)"
      }, {
        "label" : "John J. Pickman",
        "uri" : "http://dbpedia.org/resource/John_J._Pickman"
      }, {
        "label" : "John Jacob Rogers",
        "uri" : "http://dbpedia.org/resource/John_Jacob_Rogers"
      }, {
        "label" : "John Kellette",
        "uri" : "http://dbpedia.org/resource/John_Kellette"
      }, {
        "label" : "John Kirby (cricketer)",
        "uri" : "http://dbpedia.org/resource/John_Kirby_(cricketer)"
      }, {
        "label" : "Ben Glover",
        "uri" : "http://dbpedia.org/resource/Ben_Glover"
      }, {
        "label" : "Bette Davis",
        "uri" : "http://dbpedia.org/resource/Bette_Davis"
      }, {
        "label" : "Bill Conway (baseball)",
        "uri" : "http://dbpedia.org/resource/Bill_Conway_(baseball)"
      }, {
        "label" : "Bill Merritt (baseball)",
        "uri" : "http://dbpedia.org/resource/Bill_Merritt_(baseball)"
      }, {
        "label" : "Bill Schickel",
        "uri" : "http://dbpedia.org/resource/Bill_Schickel"
      }, {
        "label" : "Ken Earl",
        "uri" : "http://dbpedia.org/resource/Ken_Earl"
      }, {
        "label" : "Kenneth Beck",
        "uri" : "http://dbpedia.org/resource/Kenneth_Beck"
      }, {
        "label" : "Lee Grodzins",
        "uri" : "http://dbpedia.org/resource/Lee_Grodzins"
      }, {
        "label" : "Lee Harrington",
        "uri" : "http://dbpedia.org/resource/Lee_Harrington"
      }, {
        "label" : "Leo Roy",
        "uri" : "http://dbpedia.org/resource/Leo_Roy"
      }, {
        "label" : "Henry Beaudry",
        "uri" : "http://dbpedia.org/resource/Henry_Beaudry"
      }, {
        "label" : "Leo J. Farley",
        "uri" : "http://dbpedia.org/resource/Leo_J._Farley"
      }, {
        "label" : "Bill Cooke",
        "uri" : "http://dbpedia.org/resource/Bill_Cooke"
      }, {
        "label" : "Michael Sundin",
        "uri" : "http://dbpedia.org/resource/Michael_Sundin"
      }, {
        "label" : "Micky Ward",
        "uri" : "http://dbpedia.org/resource/Micky_Ward"
      }, {
        "label" : "Mike Balas",
        "uri" : "http://dbpedia.org/resource/Mike_Balas"
      }, {
        "label" : "Mike Mastrullo",
        "uri" : "http://dbpedia.org/resource/Mike_Mastrullo"
      }, {
        "label" : "Milton Selzer",
        "uri" : "http://dbpedia.org/resource/Milton_Selzer"
      }, {
        "label" : "Minnie Cumnock Blodgett",
        "uri" : "http://dbpedia.org/resource/Minnie_Cumnock_Blodgett"
      }, {
        "label" : "Molly Bloom (author)",
        "uri" : "http://dbpedia.org/resource/Molly_Bloom_(author)"
      }, {
        "label" : "Jerry Mahoney (umpire)",
        "uri" : "http://dbpedia.org/resource/Jerry_Mahoney_(umpire)"
      }, {
        "label" : "Skippy Roberge",
        "uri" : "http://dbpedia.org/resource/Skippy_Roberge"
      }, {
        "label" : "Soner Dikmen",
        "uri" : "http://dbpedia.org/resource/Soner_Dikmen"
      }, {
        "label" : "James J. Bruin",
        "uri" : "http://dbpedia.org/resource/James_J._Bruin"
      }, {
        "label" : "James Theodore Harahan",
        "uri" : "http://dbpedia.org/resource/James_Theodore_Harahan"
      }, {
        "label" : "Ed Davis (police commissioner)",
        "uri" : "http://dbpedia.org/resource/Ed_Davis_(police_commissioner)"
      }, {
        "label" : "Ed Flanagan (baseball)",
        "uri" : "http://dbpedia.org/resource/Ed_Flanagan_(baseball)"
      }, {
        "label" : "Edward Avedisian",
        "uri" : "http://dbpedia.org/resource/Edward_Avedisian"
      }, {
        "label" : "Edward B. Teague III",
        "uri" : "http://dbpedia.org/resource/Edward_B._Teague_III"
      }, {
        "label" : "Frank Bonner (baseball)",
        "uri" : "http://dbpedia.org/resource/Frank_Bonner_(baseball)"
      }, {
        "label" : "Frank McLaughlin (baseball)",
        "uri" : "http://dbpedia.org/resource/Frank_McLaughlin_(baseball)"
      }, {
        "label" : "Frederic Cameron Church Jr.",
        "uri" : "http://dbpedia.org/resource/Frederic_Cameron_Church_Jr."
      }, {
        "label" : "Frederick Stark Pearson",
        "uri" : "http://dbpedia.org/resource/Frederick_Stark_Pearson"
      }, {
        "label" : "Harold Saxton Burr",
        "uri" : "http://dbpedia.org/resource/Harold_Saxton_Burr"
      }, {
        "label" : "Harry V. Gates",
        "uri" : "http://dbpedia.org/resource/Harry_V._Gates"
      }, {
        "label" : "Hristo Dimitrov (wrestler)",
        "uri" : "http://dbpedia.org/resource/Hristo_Dimitrov_(wrestler)"
      }, {
        "label" : "Ivaylo Petev",
        "uri" : "http://dbpedia.org/resource/Ivaylo_Petev"
      } ]
    },
    "combination" : true
  } ]
}